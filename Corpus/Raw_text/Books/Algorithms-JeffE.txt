TableofContents
6Search
225
6.1PreorderandPostorder
.........................227
ClassifyingVerticesandEdges
6.2DetectingCycles
..............................231
6.3TopologicalSort
..............................232
ImplicitTopologicalSort
6.4MemoizationandDynamicProgramming
..............234
DynamicProgramminginDags
6.5StrongConnectivity
...........................237
6.6StrongComponentsinLinearTime
..................238
KosarajuandSharir'sAlgorithm
‹
ª
Tarjan'sAlgorithm
Exercises
......................................244
7MinimumSpanningTrees
257
7.1DistinctEdgeWeights
..........................257
7.2TheOnlyMinimumSpanningTreeAlgorithm
...........259
7.3Bor·vka'sAlgorithm
...........................261
ThisistheMSTAlgorithmYouWant
7.4Jarník'sAlgorithm
......................263
ª
ImprovingJarník'sAlgorithm
7.5Kruskal'sAlgorithm
............................265
Exercises
......................................268
8ShortestPaths
273
8.1ShortestPathTrees
............................274
8.2
ª
NegativeEdges
..............................274
8.3TheOnlySSSPAlgorithm
........................276
8.4UnweightedGraphs:Search
..............278
8.5DirectedAcyclicGraphs:Search
............282
8.6Dijkstra'sAlgorithm
.....................284
NoNegativeEdges
‹
ª
NegativeEdges
8.7RelaxALLtheEdges:ord
..................289
Moore'sImprovement
‹
DynamicProgrammingFormulation
Exercises
......................................297
9airsShortestPaths
309
9.1Introduction
................................309
9.2LotsofSingleSources
..........................310
9.3Reweighting
................................311
9.4Johnson'sAlgorithm
...........................312
9.5DynamicProgramming
.........................313
9.6DivideandConquer
...........................315
xii

TableofContents
9.7FunnyMatrixMultiplication
......................316
9.8(KleenWarsha
..............318
Exercises
......................................320
10MaximumFlows&MinimumCuts
327
10.1Flows
....................................328
10.2Cuts
.....................................329
10.3TheMax˛ocutTheorem
.....................331
10.4FordandFulkerson'saalgorithm
.........334
ª
IrrationalCapacities
10.5CombiningandDecomposingFlows
.................336
10.6EdmondsandKarp'sAlgorithms
....................340
FattestAugmentingPaths
‹
ShortestAugmentingPaths
10.7FurtherProgress
.............................343
Exercises
......................................344
11ApplicationsofFlowsandCuts
353
11.1intPaths
............................353
11.2VertexCapacitiesandVintPaths
.............354
11.3BipartiteMatching
............................355
11.4TupleSelection
..............................357
ExamScheduling
11.5DisjoathCovers
...........................360
MinimalFacultyHiring
11.6BaseballElimination
...........................363
11.7ProjectSelection
.............................366
Exercises
......................................368
12ardness
379
12.1AGameYouCan'tWin
..........................379
12.2PversusNP
.................................381
12.3sy,andmplete
..................382
12.4
ª
FormalDe˝nitions(
HCSVNTDRACONES
)
.............384
12.5Reductionsand
Sat
............................385
12.6
3Sat
(from
CircuitSat
)
.........................388
12.7MaximumIndependentSet(from
3Sat
)
...............390
12.8TheGeneralPattern
...........................392
12.9CliqueandVertexCover(fromIndependentSet)
.........394
12.10GraphColoring(from
3Sat
)
......................395
12.11HamiltonianCycle
............................398
FromVertexCover
‹
From
3Sat
‹
VariantsandExtensions
12.12SubsetSum(fromVertexCover)
....................402
xiii

TableofContents
CaveatReductor!
12.13OtherUsefulProblems
....................404
12.14ChoosingtheRightProblem
......................407
12.15AFrivolousReaWorldExample
....................408
12.16
ª
OnBeyondZebra
............................412
PolynomialSpace
‹
ExponentialTime
‹
Excelsior!
Exercises
......................................415
Index
442
IndexofPeople
446
IndexofPseudocode
449
ImageCredits
451
Colophon
453
xiv

Hincincipitalgorismus.
Haecalgorismusarspraesensdiciturinqua
talibusindorumfruimurbisquinque˙guris0.9.8.7.6.5.4.3.2.1.
FriarAlexanderdeVillaDei,
CarmendeAlgorismo
(c.1220)
Youarerighttodemandthatanartistengagehisworkconsciously,
butyouconfusetwodifferentthings:
solvingtheproblemandcorrectlyposingthequestion.
AntonChekhov,inalettertoA.S.Suvorin(October27,1888)
Themorewereduceourselvestomachinesinthelowerthings,
themoreforceweshallsetfreetouseinthehigher.
AnnaC.Brackett,
TheTechniqueofRest
(1892)
AndhereIamat2:30a.m.writingabouttechnique,inspiteofastrongconviction
thatthemomentamanbeginstotalkabouttechniquethat'sproofthatheisfresh
outofideas.
RaymondChandler,lettertoErleStanleyGardner(May5,1939)
Goodmendon'tneedrules.
Todayisnotthedayto˙ndoutwhyIhavesomany,
TheDoctor[MattSmith],AGoodManGoestoWar
DoctorWho
(2011)
0
Introduction
0.1Whatisanalgorithm?
Analgorithmisanexplicit,precise,unambiguous,mechanicaable
sequenceofelementaryinstructions,usuallyintendedtoaccomplishaspeci˝c
purpose.Forexample,hereisanalgorithmforsingingthatannoyingsong
BottlesofBeerontheWaforarbitraryvaluesof99:
BottlesOfBeer
(
n
)
:
For
i
 
n
downto
1
Sing
i
bottlesofbeeronthewall,
i
bottlesofbeer,

Sing
Takeonedown,passitaround,
i

1
bottlesofbeeronthewall.

Sing
Nobottlesofbeeronthewall,nobottlesofbeer,

Sing
Gotothestore,buysomemore,
n
bottlesofbeeronthewall.

Theworddoes
not
derive,asalgorithmophobicclassicistsmight
guess,fromtheGreekroots
arithmos
(
‹rijmìc
),meaningand
algos
1

0.Introduction
(
−lgoc
),meaningRather,itisacorruptionofthenameofthe9thcentury
PersianscholarMu
h
.
ammadibnM

us

aa

arizm

ˇ.
1


arizm

ˇisperhaps
bestknownasthewriterofthetreatise


abaukhta
s
.
arf

ˇh

ˇs

ab
abr
wuq

abala
,
2
fromwhichthemodernword
algebra
derives.Inadi˙erent
treatise,a

arizm

ˇdescribedthemoderndecimalsystemforwritingand
manipulatingnparticular,theuseofasmallcircleor
s
.
ifr
torepresent
amissingquantitchhadbeendevelopedinIndiaseveralcenturiesearlier.
Themethodsdescribedinthislattertreatise,usingeitherwritten˝guresor
countingstones,becameknowninEnglishas
algorism
or
augrym
,andits˝gures
becameknowninEnglishas
ciphers
.
Althoughbothplaluenotationanda

arizm

ˇ'sworkswerealready
knownbysomeEuropeanscholars,therabinumericsystemwas
popularizedinEuropebythemedievalItalianmathematicianandtradesman
LeonardoofPisa,betterknownasFibonacci.Thanksinparttohis1202book
LiberAbaci
,
3
written˝guresbegantoreplacethecountingtable(thenknownas
an
abacus
)and˝ngerarithmetic
4
asthepreferredplatformforcalculation
5
in
Europeinthe13th
not
becausewrittendecimal˝gureswereeasierto
learnoruse,butbecausetheyprovidedanaudittrail.Ciphersbecamecommon
inWesternEuropeonlywiththeadventofmovabletype,andtrulyubiquitous
onlyaftercheappaperbecameplentifulintheearly19thcentury.
Eventuallytheword
algorism
evolvedintothemodern
algorithm
,viafolk
etymologyfromtheGreek
arithmos
(andperhapsthepreviouslymentioned
algos
).
6
Thus,untilveryrecently,theword
algorithm
referredexclusively
1
fatherofAdbdulla,sonofMoses,theKw

arizmiKw

arizmisanancient
city,nowcalledKhiva,intheKhorezmProvinceofUzbekistan.
2
CompendiousBookonCalculationbyCompletionandBalan
3
Whileitistemptingtotranslatethetitle
LiberAbaci
asBookoftheAbacuamore
accuratetranslationisBookofCalculatioBothbeforeandafterFibonacci,theItalian
word
abaco
wasusedtodescribeanythingrelatedtonumericalcalculatioces,methods,
schools,books,andsoouchinthesamewaythatmputerscienisusedtodayin
English,orastheChinesephraseforonstranslatesliterallyasstudyof
usingcounting
4
+
Reckoningwith
digits
!
+
5
Theword
calculate
derivesfromtheLatinword
calculus
,meaningllreferringto
thestonesonacountingtable,orasChaucercalledthem,
augrymstones
.In440
bce
,Herodotus
wroteinhis
Histories
thatGreekswriteandcalculate(
logÐzesjaiy€foic
,literally`reckon
withpebbles')fromlefttoright;theEgyptiansdotheopposite.Yettheysaythattheirwayof
writingistowardtheright,andtheGreekwaytowardthel(Herodotusisstrangelysilenton
whichendoftheeggtheEgyptiansate˝rst.)
6
SomemedievalsourcesclaimthattheGreekpre˝xmeansoructio
OthersclaimthatalgorithmswereinventedbyaGreekphilosopher,orakingofIndia,orperhaps
akingofSpain,namedAlguororArguAfew,possiblyincludingDanteAlighieri,
evenidenti˝edtheinventorwiththemythologicalGreekshipbuilderandeponymousargonaut.
It'sunclearwhetheranyoftheserisibleclaimswereintendedtobehistoricallyaccurate,or
merelymnemonic.
2

0.2.Multiplication
tomechanicaltechniquesforplaluearithmeticusingArabinumerals.
Peopletrainedinthefastandreliableexecutionoftheseprocedureswerecalled
algorists
or
computators
,ormoresimply,
computers
.
0.2Multiplication
Althoughtheyhavebeenatopicofformalacademicstudyforonlyafewdecades,
algorithmshavebeenwithussincethedawnofcivilization.Descriptionsof
arithmeticcomputationareamongtheearliestexamplesofwritten
humanlanguage,longpredatingtheexpositionsbyFibonaccianda

arizm

ˇ,
oreventheplaluenotationtheypopularized.
LatticeMultiplication
Themostfamiliarmethodformultiplyinglargenumbers,atleastforAmerican
students,isthe
latticealgorithm
.ThisalgorithmwaspopularizedbyFibonacci
in
LiberAbaci
,wholearneditfromArabicsourcesincludinga

arizm

ˇ,who
inturnlearneditfromIndiansourcesincludingBrahmagupta's
treatise
Br

ahmasphu
t
.
asiddh

anta
,whomayhavelearneditfromChinesesources.
Theoldestsurvivingdescriptionsofthealgorithmappearin
TheMathematical
ClassicofSunzi
,writteninChinabetweenthe3rdand5thcenturies,andin
EutociusofAscalon'scommentariesonArchimedes'
MeasurementoftheCircle
,
writtenaround500
ce
,butthereisevidencethatthealgorithmwasknownmuch
earlier.EutociuscreditsthemethodtoalosttreatiseofApolloniusofPerga,
wholivedaround300
bce
,entitled
Okytokion
(
>Wkutìkion
).
7
TheSumerians
recordedmultiplicationtablesonclaytabletsasearlyas2600
bce
,suggesting
thattheymayhaveusedthelatticealgorithm.
8
Thelatticealgorithmassumesthattheinputnumbersarerepresentedas
explicitstringsofdigits;I'llassumeherethatwe'reworkinginbaseten,butthe
algorithmgeneralizesimmediatelytoanyotherbase.Tosimplifynotation,
9
the
7
LiterallycinethatpromotesquickandeasychildPappusofAlexandria
ducedseveralexcerptsof
Okytokion
about200yearsbeforeEutocius,buthisdescriptionofthe
latticemultiplicationalgorithm(ifhegaveone)is
also
lost.
8
ThereisampleevidencethatancientSumerianscalculatedaccuratelywithextremely
largenumbersusingtheirbaplaluenumericalsystem,butIamnotawareofany
survivingrecordoftheactualmethodstheyused.Inadditiontostandardmultiplication
andreciprocaltables,tableslistingthesquaresofintegersfrom
1
to
59
havebeenfound,
leadingsomemathhistorianstoconjecturethatBabyloniansmultipliedusinganidentitylike
xy
=((
x
+
y
)
2

x
2

y
2
)
=
2
.Butthistrickonlyworkswhen
x
+
y
<
60
;historyissilentonhow
theBabyloniansmighthavecomputed
x
2
when
x

60
.
9
butattheriskofin˛amingthehistoricalenmitybetweenGreeceandEgypt,orLilliputand
Blefuscu,orMacsandPCs,orpeoplewhothinkzeroisanaturalnumberandpeoplewhoare
wrong
3

0.Introduction
inputconsistsofapairofarrays
X
[
0..
m

1
]
and
Y
[
0..
n

1
]
,representingthe
numbers
x
=
m

1
X
i
=
0
X
[
i
]

10
i
and
y
=
n

1
X
j
=
0
Y
[
j
]

10
j
,
andsimilarly,theoutputconsistsofasinglearray
Z
[
0..
m
+
n

1
]
,representing
theproduct
z
=
x

y
=
m
+
n

1
X
k
=
0
Z
[
k
]

10
k
.
Thealgorithmusesadditionand
singl
multiplicationasprimitive
tions.Additioncanbeperformedusingasimplefoop.Inpractice,singl
multiplicationisperformedusingalookuptable,eithercarvedintoclaytablets,
paintedonstripsofwoodorbamboo,writtenonpaper,storedinnly
memory,ormemorizedbythecomputator.Theentirelatticealgorithmcanbe
summarizedbytheformula
x

y
=
m

1
X
i
=
0
n

1
X
j
=
0

X
[
i
]

Y
[
j
]

10
i
+
j

.
Di˙erentvariantsofthelatticealgorithmevaluatethepartialproducts
X
[
i
]

Y
[
j
]

10
i
+
j
indi˙erentordersandusedi˙erentstrategiesforcomputingtheir
sum.Forexample,in
LiberAbaco
,Fibonaccidescribesavariantthatconsiders
the
mn
partialproductsinincreasingorderofsigni˝cance,asshowninmodern
pseudocodebelow.
FibonacciMultiply
(
X
[
0..
m

1
]
,
Y
[
0..
n

1
])
:
hold
 
0
for
k
 
0
to
n
+
m

1
forall
i
and
j
suchthat
i
+
j
=
k
hold
 
hold
+
X
[
i
]

Y
[
j
]
Z
[
k
]
 
hold
mod10
hold
 b
hold
=
10
c
return
Z
[
0..
m
+
n

1
]
Fibonacci'salgorithmisoftenexecutedbystoringallthepartialproductsina
twonaltable(oftencalledaableaororattiandthen
summingalongthediagonalswithappropriatecarries,asshownontherightin
Figure
0.1
.Americanelementstudentsaretaughttomultiplyone
factor(theultiplibyeachdigitintheotherfactor(theultipli
writingdownallthemultipliproductsbeforeaddingthemup,as
shownontheleftinFigure
0.1
.ThiswasalsothemethoddescribedbyEutocius,
althoughhe˝ttinglyconsideredthemultiplierdigitsfromlefttoright,asshown
4

0.2.Multiplication
inFigure
0.2
.Bothofthesevariants(andseveralothers)aredescribedand
illustratedsidebysideintheanonymous1458textbook
L'Artedell'Abbaco
,also
knownasthe
TrevisoArithmetic
,the˝rst
printed
mathematicsbookintheWest.
Figure0.1.
Computing934

314
=
293276usingmultiplication(witherror-checkingbycasting
outnines)and"multiplication,from
L'Artedell'Abbaco
(1458).(See
ImageCredits
attheendof
thebook.)
Figure0.2.
Eutocius's6th-centurycalculationof1172
1
8

1172
1
8
=
1373877
1
64
,inhiscommentaryon
Archimedes'
MeasurementoftheCircle
,transcribed(left)andtranslatedintomodernnotation(right)by
JohanHeiberg(1891).(See
ImageCredits
attheendofthebook.)
Allofthesevariantsofthelatticeaothersimilarvariants
describedbySunzi,a

arizm

ˇ,Fibonacci,
L'Artedell'Abbaco
,andmanyother
somputetheproductofany
m
numberandany
n
number
in
O
(
mn
)
time
;therunningtimeofeveryvariantisdominatedbythenumber
ofsinglmultiplications.
DuplationandMediation
Thelatticealgorithmisnottheoldestmultiplicationalgorithmforwhichwe
havedirectrecordedevidence.Anevenolderandarguablysimpleralgorithm,
whichdoesnotrelyonplaluenotation,issometimescalled
Russianpeasant
multiplication
,
Ethiopianpeasantmultiplication
,orjust
peasantmultiplication
.A
5

0.Introduction
variantofthisalgorithmwascopiedintotheRhindpapyrusbytheEgyptian
scribeAhmesaround1650
bce
,fromadocumentheclaimedwas(then)about
350yearsold.
10
ThisalgorithmwasstilltaughtinelementaryschoolsinEastern
Europeinthelate20thcentury;itwasalsocommonlyusedbyearlydigital
computersthatdidnotimplementintegermultiplicationdirectlyinhardware.
Thepeasantmultiplicationalgorithmreducesthedi˚culttaskofmultiplying
arbitrarynumberstoasequenceoffoursimpleroperations:(1)determining
parity(evenorodd),(2)addition,(3)
duplation
(doublinganumber),and(4)
mediation
(halvinganumber,roundingdown).
PeasantMultiply
(
x
,
y
)
:
prod
 
0
while
x
>
0
if
x
isodd
prod
 
prod
+
y
x
 b
x
=
2
c
y
 
y
+
y
return
prod
xy
prod
0
123
+
456
=
456
61
+
912
=
1368
30
1824
15
+
3648
=
5016
7
+
7296
=
12312
3
+
14592
=
26904
1
+
29184
=
56088
Figure0.3.
Multiplicationbyduplationandmediation
Thecorrectnessofthisalgorithmfollowsbyinductionfromthefollowing
recursiveidentity,whichholdsforallnoegativeintegers
x
and
y
:
x

y
=
8
>
<
>
:
0
if
x
=
0
b
x
=
2
c
(
y
+
y
)
if
x
iseven
b
x
=
2
c
(
y
+
y
)+
y
if
x
isodd
Arguably,thisrecurrence
is
thepeasantmultiplicationalgorithm.Don'tletthe
iterativepseudocodefoolyou;thealgorithmisfundamentallyrecursive!
Asstated,
PeasantMultiply
performs
O
(
log
x
)
parity,addition,andmedi
tionoperations,butwecanimprovethisboundto
O
(
logmin
f
x
,
y
g
)
byswapping
thetwoargumentswhen
x
>
y
.Assumingthenumbersarerepresentedu
inganyreasonableplaluenotation(likebinary,decimal,Babylonian
hexagesimal,Egyptianduodecimal,Romannumeral,Chinesecountingrods,
beadpositionsonanabacus,andsoon),eachoperationrequiresatmost
O
(
log
(
xy
))=
O
(
logmax
f
x
,
y
g
)
singloperations,sotheoverallrunning
timeofthealgorithmis
O
(
logmin
f
x
,
y
g
logmax
f
x
,
y
g
)=
O
(
log
x

log
y
)
.
10
TheversionofthisalgorithmactuallyusedinancientEgyptdoesnotusemediationor
parity,butitdoesusecomparisons.Toavoidhalving,thealgorithmmputestwotables
byrepeateddoubling:onecontainingallthepowersof
2
notexceeding
x
,theothercontaining
thesamepowersof
2
multipliedby
y
.Thepowersof
2
thatsumto
x
arethenfoundbygreedy
subtraction,andthecorrespondingentriesintheothertableareaddedtogethertoformthe
product.
6

0.2.Multiplication
Inotherwords,thisalgorithmrequires
O
(
mn
)
time
tomultiplyan
m

numberbyan
n
number;uptoconstantfactors,thisisthesamerunning
timeasthelatticealgorithm.Thisalgorithmrequires(aconstantfactor!)more
paperworktoexecutebyhandthanthelatticealgorithm,butthenecessary
primitiveoperationsarearguablyeasierforhumanstoperform.Infact,thetwo
algorithmsareequivalentwhennumbersarerepresentedinbinary.
CompassandStraightedge
ClassicalGreekgeometersidenti˝ednumbers(ormoreaccurately,
magnitudes
)
withlinesegmentsoftheappropriatelength,whichtheymanipulatedusingtwo
simplemechanicaltcompassandtheersionsofwhich
hadalreadybeenincommonusebysurveyors,architects,andotherartisansfor
centuries.Using
only
thesetwotools,thesescholarsreducedseveralcomplex
geometricconstructionstothefollowingprimitiveoperations,startingwithone
ormoreidenti˝edreferencepoints.
‹
Drawtheuniquelinepassingthroughtwodistinctidenti˝edpoints.
‹
Drawtheuniquecirclecenteredatoneidenti˝edpointandpassingthrough
another.
‹
Identifytheintersectionpoint(ifany)oftwolines.
‹
Identifytheintersectionpoints(ifany)ofalineandacircle.
‹
Identifytheintersectionpoints(ifany)oftwocircles.
Inpractice,Greekgeometrystudentsalmostcertainlydrewtheirconstructions
onan
abax
(
−bax
),atablecoveredindustorsand.
11
Centuriesearlier,Egyptian
surveyorscarriedoutmanyofthesameconstructionsusingropestodetermine
straightlinesandcirclesontheground.
12
However,EuclidandotherGreek
geometerspresentedcompassandstraightedgeconstructionsasprecise
matical
abstractions
intsare
ideal
points;linesare
ideal
lines;andcircles
are
ideal
circles.
Figure
0.4
showsanalgorithm,describedinEuclid's
Elements
about2500
yearsago,formultiplyingordividingtwomagnitudes.Theinputconsistsof
fourdistinctpoints
A
,
B
,
C
,and
D
,andthegoalistoconstructapoint
Z
such
that
j
AZ
j
=
j
AC
jj
AD
j
=
j
AB
j
.Inparticular,ifwede˝ne
j
AB
j
tobeourunitof
length,thenthealgorithmcomputestheproductof
j
AC
j
and
j
AD
j
.
NoticethatEuclid˝rstde˝nesanewprimitiveoperation
RightAngle
by
(asmodernprogrammerswouldphraseit)writingasubroutine.Thecorrectness
11
Thewrittennumerals1through9wereknowninEuropeatleasttwocenturiesbefore
Fibonacci's
LiberAbaci
asnumerafromtheArabicword
ghub

ar
meaningdust,ultimately
referringtotheIndianpracticeofperformingarithmeticontablescoveredwithsand.TheGreek
word
−bax
istheoriginoftheLatin
abacus
,whichalsooriginallyreferredtoasandtable.
12
Rememberwhatmeans?DemocrituswouldlaterrefertotheseEgyptian
surveyors,somewhatderisively,as
arpedonaptai
(
‡rpedon‹ptai
),meaningasten
7

0.Introduction
hh
Constructthelineperpendicularto
`
passingthrough
P
.
ii
RightAngle
(
`
,
P
)
:
Chooseapoint
A
2
`
A
,
B
 
Intersect
(
Circle
(
P
,
A
)
,
`
)
C
,
D
 
Intersect
(
Circle
(
A
,
B
)
,
Circle
(
B
,
A
))
return
Line
(
C
,
D
)
hh
Constructapoint
Z
suchthat
j
AZ
j
=
j
AC
jj
AD
j
=
j
AB
j
.
ii
MultiplyOrDivide
(
A
,
B
,
C
,
D
)
:

 
RightAngle
(
Line
(
A
,
C
)
,
A
)
E
 
Intersect
(
Circle
(
A
,
B
)
,

)
F
 
Intersect
(
Circle
(
A
,
D
)
,

)

 
RightAngle
(
Line
(
E
,
C
)
,
F
)

 
RightAngle
(

,
F
)
return
Intersect
(

,
Line
(
A
,
C
))
Figure0.4.
Multiplicationbycompassandstraightedge.
ofthealgorithmfollowsfromtheobservationthattriangles
ACE
and
AZF
aresimilar.Thesecondandthirdlinesofthemainalgorithmareambiguous,
because

intersectsanycirclecenteredat
A
at
two
distinctpoints,butthe
algorithmisactuallycorrectnomatterwhichintersectionpointsarechosen
for
E
and
F
.
Euclid'salgorithmreducestheproblemofmultiplyingtwomagnitudes
(lengths)toaseriesofprimitivecompaoperations.These
operationsaredi˚culttoimplementpreciselyonamoderndigitalcomputer,but
Euclid'salgorithmwasn't
designed
foradigitalcomputer.Itwasdesignedforthe
PlatonicIdealGeometer,wieldingthePlatonicIdealCompassandthePlatonic
IdealStraightedge,whocouldexecuteeachoperationperfectlyinconstanttime
byde˝nition
.Inthismodelofcomputation,
MultiplyOrDivide
runsin
O
(
1
)
time!
0.3CongressionalApportionment
Hereisanotherreaorldexampleofanalgorithmofsigni˝cantpolitical
importance.ArticleI,Section2oftheUnitedStatesConstitutionrequiresthat
RepresentativesanddirectTaxesshallbeapportionedamongtheseveral
StateswhichmaybeincludedwithinthisUnion,accordingtotheirrespective
Numbers....TheNumberofRepresentativesshallnotexceedoneforevery
thirtyThousand,buteachStateshallhaveatLeastoneRepresentative....
Becausethereareonlya˝nitenumberofseatsintheHouseofRepresentatives,
exact
proportionalrepresentationrequireseithersharedorfractional
tatives,neitherofwhicharelegal.Asaresult,overthenextseveraldecades,
manydi˙erentapportionmentalgorithmswereproposedandusedtoround
theidealfractionalsolutionfairly.Thealgorithmactuallyusedtoday,called
8

0.3.CongressionalApportionment
the
Huntingtomethod
orthe
methodofequalproportions
,was˝rst
suggestedbyCensusBureaustatisticianJosephHillin1911,re˝nedbyHarvard
mathematicianEdwardHuntingtonin1920,adoptedintoFederallaw(
2U.S.C.

)in1941,andsurvivedaSupremeCourtchallengein1992.
13
TheHuntingtomethodallocatesrepresentativestostatesoneata
time.First,inapreprocessingstage,eachstateisallocatedonerepresentative.
Thenineachiterationofthemainloop,thenextrepresentativeisassigned
tothestatewiththehighest
priority
.Thepriorityofeachstateisde˝ned
tobe
P
=
p
r
(
r
+
1
)
,where
P
isthestate'spopulationand
r
isthenumberof
representativesalreadyallocatedtothatstate.
ThealgorithmisdescribedinpseudocodeinFigure
0.5
.Theinputconsistsof
anarray
Pop
[
1..
n
]
storingthepopulationsofthe
n
statesandaninteger
R
equal
tothetotalnumberofrepresentatives;thealgorithmassumes
R

n
.(Currently,
intheUnitedStates,
n
=
50
and
R
=
435
.)Theoutputarray
Rep
[
1..
n
]
records
thenumberofrepresentativesallocatedtoeachstate.
ApportionCongress
(
Pop
[
1..
n
]
,
R
)
:
PQ
 
NewPriorityQueue
hh
Giveeverystateits˙rstrepresentative
ii
for
s
 
1
to
n
Rep
[
s
]
 
1
Insert

PQ
,
s
,
Pop
[
i
]
=
p
2

hh
Allocatetheremaining
n

R
representatives
ii
for
i
 
1
to
n

R
s
 
ExtractMax
(
PQ
)
Rep
[
s
]
 
Rep
[
s
]+
1
priority
 
Pop
[
s
]

p
Rep
[
s
](
Rep
[
s
]+
1
)
Insert
(
PQ
,
s
,
priority
)
return
Rep
[
1..
n
]
Figure0.5.
TheHuntington-Hillapportionmentalgorithm
ThisimplementationofHuntingtousesapriorityqueuethatsupports
theoperations
NewPriorityQueue
,
Insert
,and
ExtractMax
.(Theactual
lawdoesn'tsayanythingaboutpriorityqueues,ofcourse.)Theoutputofthe
algorithm,andthereforeitscorrectness,doesnotdepend
atall
onhowthis
13
Overrulinganearlierrulingbyafederaldistrictcourt,theSupremeCourtunanimously
heldthat
any
apportionmentmethodadoptedingoodfaithbyCongressisconstitutional(
United
StatesDepartmentofCommercev.Montana
).Thecurrentcongressionalapportionmentalgorithm
isdescribedingruesomedetailattheU.S.CensusDepartmentwebsite
http://www.census.gov/
topics/publisector/congressionaapportionment.html
.Agoodhistoryoftheapportionment
problemcanbefoundat
http://www.thirtthousand.org/pages/Apportionment.htm
.Areport
bytheCongressionalResearchServicedescribingvariousapportionmentmethodsisavailableat
http://www.fas.org/sgp/crs/misc/R41382.pdf
.
9

0.Introduction
priorityqueueisimplemented.TheCensusBureauusesasortedarray,stored
inasinglecolumnofanExcelspreadsheet,whichisrecalculatedfromscratch
ateveryiteration.You(shouldhave)learnedamoree˚cientimplementation
inyourundergraduatedatastructuresclass.
Similarapportionmentalgorithmsareusedinmyparliamentary
electionsaroundtheworld,wherethenumberofseatsallocatedtoeachparty
issupposedtobeproportionaltothenumberofvotesthatpartyreceives.The
twomostcommonarethe
D'Hondtmethod
14
andthe
Websteraguë
method
,
15
whichrespectivelyusepriorities
P
=
(
r
+
1
)
and
P
=
(
2
r
+
1
)
inplaceof
thesquexpressioninHuntingtoTheHuntingtomethodis
essentiallyuniquetotheUnitedStatesHouseofRepresentatives,thanksinpart
totheconstitutionalrequirementthateachstatemustbeallocatedatleastone
representative.
0.4ABadExample
Asaprototypicalexampleofasequenceofinstructionsthatis
not
actuallyan
algorithm,consider"Martin'sa
16
BeAMillionaireAndNeverPayTaxes
()
:
Getamilliondollars.
Ifthetaxmancomestoyourdoorandsays,
Youhaveneverpaidtaxes!

Say
Iforgot.

Prettysimple,exceptforthat˝rststep;it'sadoozy!AgroupofbillionaireCEOs,
SiliconValleyventurecapitalists,orNewYorkCityreaatehustlersmight
considerthisanalgorithm,becauseforthemthe˝rststepisbothunambiguous
andtrivial,
17
butfortherestofuspoorslobs,Martin'sprocedureistoovagueto
beconsideredanactualalgorithm.Ontheotherhand,thisisaperfectexample
ofa
reduction

reduces
theproblemofbeingamillionaireandneverpaying
taxestothesiproblemofacquiringamilliondollars.We'llseereductions
overandoveragaininthisbook.Ashundredsofbusinessmenandpoliticians
havedemonstrated,ifyouknowhowtosolvetheeasierproblem,areduction
tellsyouhowtosolvetheharderone.
14
developedbyThomasJe˙ersonin1792,usedforU.S.Congressionalapportionmentfrom
1792to1832,rediscoveredbyBelgianmathematicianVictorD'Hondtin1878,andre˝nedbySwiss
physicistEduardH˙in1888.
15
developedbyDanielWebsterin1832,usedforU.S.Congressionalapportionmentfrom1842
to1911,rediscoveredbyFrenchmathematicianAndréaguëin1910,andrediscovered
againbyGermanphysicistHansSchepersin1980.
16
SteveMartin,ouCanBeAMillion
SaturdayNightLive
,January21,1978.Also
appearson
ComedyIsNotPretty
,WarnerBros.Records,1979.
17
Somethingsomethingsecurequantumblockchainearningsomething.
10

0.5.DescribingAlgorithms
Martin'salgorithm,likesomeofourpreviousexamples,isnotthekind
ofalgorithmthatcomputerscientistsareusedtothinkingabout,becauseit
isphrasedintermsofoperationsthataredi˚cultforcomputerstoperform.
Thisbookfocuses(almost!)exclusivelyonalgorithmsthatcanbereasonably
implementedonastandarddigitalcomputer.Eachstepinthesealgorithms
iseitherdirectlysupportedbycommonprogramminglanguages(suchas
arithmetic,assignments,loops,orrecursion)orsomethingthatyou'vealready
learnedhowtodo(likesorting,binarysearch,treetraversal,orsinging
n
BottlesofBeerontheWa
0.5DescribingAlgorithms
Theskillsrequiredtoe˙ectively
designandanalyze
algorithmsareentangled
withtheskillsrequiredtoe˙ectively
describe
algorithms.Atleastinmyclasses,
acompletedescriptionofanyalgorithmhasfourcomponents:
‹
What:
Aprecisespeci˝cationoftheproblemthatthealgorithmsolves.
‹
How:
Aprecisedescriptionofthealgorithmitself.
‹
Why:
Aproofthatthealgorithmsolvestheproblemitissupposedtosolve.
‹
Howfast:
Ananalysisoftherunningtimeofthealgorithm.
Itisnotnecessary(orevenadvisable)to
develop
thesefourcomponentsinthis
particularorder.Problemspeci˝cations,algorithmdescriptions,correctness
proofs,andtimeanalysesusuallyevolvesimultaneously,withthedevelopment
ofeachcomponentinformingthedevelopmentoftheothers.Forexample,
wemayneedtotweaktheproblemdescriptiontosupportafasteralgorithm,
ormodifythealgorithmtohandleatrickycaseintheproofofcorrectness.
Nevertheless,
presenting
thesecomponentsseparatelyisusuallyclearestforthe
reader.
Aswithanywriting,it'simportanttoaimyourdescriptionsattheright
audience;Irecommendwritingforacompetentbutskepticalprogrammer
who
isnotascleverasyouare
.Thinkofyourselfsixmonthsago.Asyoudevelopany
newalgorithm,youwillnaturallybuilduplotsofintuitionabouttheproblem
andabouthowyouralgorithmsolvesit,andyourinformalreasoningwillbe
guidedbythatintuition.Butanyone
reading
youralgorithmlater,orthecode
youderivefromit,won'tshareyourintuitionorexperience.Neitherwillyour
compiler.Neitherwillyousixmonthsfromnow.Alltheywillhaveisyour
writtendescription.
Evenifyouneverhavetoexplainyouralgorithmstoanyoneelse,it'sstill
importanttodevelopthemwithanaudienceinmind.Tryingtocommunicate
clearlyforcesyouto
think
moreclearly.Inparticular,writingfora
novice
audience,whowillinterpretyourwords
exactly
aswritten,forcesyoutowork
11

0.Introduction
through˝nedetails,nomatterhowouorvyourevelideas
mayseematthemoment.Similarly,writingfora
skeptical
audienceforcesyou
todeveloprobustargumentsforcorrectnessande˚ciency,insteadoftrusting
yourintuitionoryourintelligence.
18
Icannotemphasizethispointenough:
Yourprimaryjobasanalgorithm
designeris
teachingotherpeople
howandwhyyouralgorithmswork.
If
youcan'tcommunicateyourideastootherhumanbeings,theymayaswell
notexist.Producingcorrectande˚cientexecutablecodeisanimportant
butsecondarygoal.Convincingyourself,yourprofessors,your(prospective)
employers,yourcolleagues,oryourstudentsthatyouaresmartisatbesta
distantthird.
SpecifyingtheProblem
Beforewecanevenstartdevelopinganewalgorithm,wehavetoagreeonwhat
problemouralgorithmissupposedtosolve.Similarly,beforewecanevenstart
describing
analgorithm,wehaveto
describe
theproblemthatthealgorithmis
supposedtosolve.
AlgorithmicproblemsareoftenpresentedusingstandardEnglish,interms
ofreaorldobjects.It'suptous,thealgorithmdesigners,torestatethese
problemsintermsofformal,abstract,
mathematical
umbers,arrays,
lists,graphs,trees,andsoowecanreasonaboutformally.Wemustalso
determineiftheproblemstatementcarriesanyhiddenassumptions,andstate
thoseassumptionsexplicitly.(Forexample,inthesong
n
BottlesofBeeronthe
Wa
n
isalwaysanoegativeinteger.
19
)
Wemayneedtore˝neourspeci˝cationaswedevelopthealgorithm.For
example,ouralgorithmmayrequireaparticularinputrepresentation,or
produceaparticularoutputrepresentation,thatwasleftunspeci˝edinthe
originalinformalproblemdescription.Orouralgorithmmightactuallysolvea
moregeneral
problemthanwewereoriginallyaskedtosolve.(Thisisacommon
featureofrecursivealgorithms.)
Thespeci˝cationshouldincludejustenoughdetailthatsomeoneelsecould
use
ouralgorithmasablackbox,withoutknowinghoworwhythealgorithm
actuallyworks.Inparticular,wemustdescribethetype
andmeaning
ofeach
inputparameter,andexactlyhowtheeventualoutputdependsontheinput
parameters.Ontheotherhand,ourspeci˝cationshould
deliberatelyhide
any
detailsthatare
not
necessarytousethealgorithmasablackbox.Letthatwhich
doesnotmattertrulyslide.
18
Inparticular,Iassumethat
you
areaskepticalnovice!
19
I'veneverheardanyonesing
p
2
BottlesofBeerontheWaOccasionallyI
have
heardset
theoristssinging
@
0
bottlesofbeeronthewabutforsomereasontheyalwaysgaveupbefore
thesongwasover.
12

0.5.DescribingAlgorithms
Forexample,thelatticeandduplatioationalgorithmsbothsolve
thesameproblem:Giventwonoegativeintegers
x
and
y
,eachrepresented
asanarrayofdigits,computetheproduct
x

y
,alsorepresentedasanarrayof
digits.Tosomeone
using
thesealgorithms,thechoiceofalgorithmiscompletely
irrelevant.Ontheotherhand,theGreekmpassalgorithm
solvesa
di˙erentproblem
,becausetheinputandoutputvaluesarerepresented
bylinesegmentsinsteadofarraysofdigits.
DescribingtheAlgorithm
Computerprogramsareconcreterepresentationsofalgorithms,butalgorithms
are
not
programs.Rather,algorithmsareabstractmechanicalprocedures
thatcanbeimplementedin
any
programminglanguage
thatsupportsthe
underlyingprimitiveoperations.Theidiosyncraticsyntacticdetailsofyour
favoriteprogramminglanguageareutterlyirrelevant;focusingonthesewill
onlydistractyou(andyourreaders)fromwhat's
really
goingon.
20
Agood
algorithmdescriptionisclosertowhatweshouldwriteinthe
comments
ofa
realprogramthanthecodeitself.Codeisapoormediumforstorytelling.
Ontheotherhand,aplainEnglishprosedescriptionisusuallynotagoodidea
either.Algorithmshavelotsofidiomaticstrupeciallyconditionals,loops,
functioncalls,andrecursioarefartooeasilyhiddenbyunstructured
prose.ColloquialEnglishisfullofambiguitiesandshadesofmeaning,but
algorithmsmustbedescribedasunambiguouslyaspossible.Proseisapoor
mediumforprecision.
Inmyopinion,theclearestwaytopresentanalgorithmisusingacombination
of
pseudo
codeandstructuredEnglish.Pseudocodeusesthe
structure
offormal
programminglanguagesandmathematicstobreakalgorithmsintoprimitive
steps;theprimitivestepsthemselvescanbewrittenusingmathematicalnotation,
pureEnglish,oranappropriatemixtureofthetwo,
whateverisclearest
.W
writtenpseudocoderevealstheinternalstructureofthealgorithmbuthides
irrelevantimplementationdetails,makingthealgorithmeasiertounderstand,
analyze,debug,andimplement.
20
Thisis,ofcourse,amatterofreligiousconviction.Armchairlinguistsargueincessantlyover
the
SapirWhorfhypothesis
,whichstates(moreorless)thatpeoplethinkonlyinthecategories
imposedbytheirlanguages.Accordingtoanextremeformulationofthisprinciple,someconcepts
inonelanguagesimplycannotbeunderstoodbyspeakersofotherlanguages,notjustbecauseof
technologicaladvanowwouldyoutranslatethesorortnite
intoAramaiutbecauseofinherentstructuraldi˙erencesbetweenlanguagesandcultures.
Foramoreskepticalview,seeStevenPinker's
TheLanguageInstinct
.Thereisadmittedlysome
strengthtothisideawhenappliedtodi˙erentprogrammingparadigms.(What'stheYcombinator,
again?Howdotemplateswork?What'sanAbstractFactory?)Fortunately,thosedi˙erencesare
toosubtletohaveanyimpactonthematerialin
this
book.Foracompellingcounterexample,see
ChrisOkasaki'smonograph
FunctionalDataStructures
andits
morerecentdescendants
.
13

0.Introduction
Wheneverwedescribeanalgorithm,ourdescriptionshouldincludeevery
detailnecessarytofullyspecifythealgorithm,proveitscorrectness,andanalyze
itsrunningtime.Atthesametime,itshould
exclude
anydetailsthatare
not
necessarytofullyspecifythealgorithm,proveitscorrectness,andanalyzeits
runningtime.(Slide.)Atamorepracticallevel,ourdescriptionshouldallow
acompetentbutskepticalprogrammer
whohasnotreadthisbook
toquickly
andcorrectlyimplementthealgorithmin
their
favoriteprogramminglanguage,
withoutunderstandingwhyitworks
.
Idon'twanttoboreyouwiththerulesIfollowforwritingpseudocode,but
Imustcautionagainstoneespeciallypernicioushabit.
Never
describerepeated
operationsinformally,asin[this]˝rst,thendo[that]second,
andsoon
or
epeat
thisprocess
until[soAsanyonewhohastakenoneofthose
frustrating
comesnextinthissequen
testsalreadyknows,describing
the˝rstfewstepsofanalgorithmsayslittleornothingaboutwhathappens
inlatersteps.Ifyouralgorithmhasaloop,writeitasaloop,andexplicitly
describewhathappensinan
arbitrary
iteration.Similarly,ifyouralgorithmis
recursive,writeitrecursively,andexplicitlydescribethecaseboundariesand
whathappensineachcase.
0.6AnalyzingAlgorithms
It'snotenoughjusttowritedownanalgorithmandsayWemustalso
convinceouraudience(andourselves!)thatthealgorithmactuallydoeswhat
it'ssupposedtodo,andthatitdoessoe˚ciently.
Correctness
Insomeapplicationsettings,itisacceptableforprogramstobehavecorrectly
mostofthetime,onallsonablinputs.Notinthisbook;werequire
algorithmsthatare
always
correct,for
allpossible
inputs.Moreover,wemust
prove
thatouralgorithmsarecorrect;trustingourinstincts,ortryingafewtest
cases,isn'tgoodenough.Sometimescorrectnessistrulyobvious,especially
foralgorithmsyou'veseeninearliercourses.Ontheotherhand,ou
isalltoooftenasynonymforMostofthealgorithmswediscussin
thiscourserequirerealworktoprovecorrect.Inparticular,correctnessproofs
usuallyinvolveinduction.We
like
induction.Inductionisour
friend
.
21
Ofcourse,beforewecanformallyprovethatouralgorithmdoeswhatit's
supposedtodo,wehavetoformallydescribewhatit'ssupposedtodo!
21
Ifinductionis
not
yourfriend,youwillhaveahardtimewiththisbook.
14

0.6.AnalyzingAlgorithms
RunningTime
Themostcommonwayofrankingdi˙erentalgorithmsforthesameproblemis
byhowquicklytheyrun.Ideally,wewantthefastestpossiblealgorithmforany
particularproblem.Inmanyapplicationsettings,itisacceptableforprograms
torune˚cientlymostofthetime,onallsonablinputs.Notinthisbook;
werequirealgorithmsthat
always
rune˚ciently,evenintheworstcase.
Buthowdowemeasurerunningtime?Asaspeci˝cexample,howlongdoes
ittaketosingthesong
BottlesOfBeer
(
n
)
?Thisisobviouslyafunctionofthe
inputvalue
n
,butitalsodependsonhowquicklyyoucansing.Somesingers
mighttaketensecondstosingaverse;othersmighttaketwenty.Technology
widensthepossibilitiesevenfurther.Dictatingthesongoveratelegraphusing
Morsecodemighttakeafullminuteperverse.Downloadinganmp3over
theWebmighttakeatenthofasecondperverse.Duplicatingthemp3ina
computer'smainmemorymighttakeonlyafewmicrosecondsperverse.
What'simportanthereishowthesingingtimechangesas
n
grows.Singing
BottlesOfBeer
(
2
n
)
requiresabouttwicemuchtimeassinging
BottlesO
Beer
(
n
)
,nomatterwhattechnologyisbeingused.Thisisre˛ectedinthe
asymptoticsingingtime

(
n
)
.
Wecanmeasuretimebycountinghowmanytimesthealgorithmexecutesa
certaininstructionorreachesacertainmilestoneintheForexample,
wemightnoticethattheword
beer
issungthreetimesineveryverseof
BottlesOfBeer
,sothenumberoftimesyousing
beer
isagoodindication
ofthetotalsingingtime.Forthisquestion,wecangiveanexactanswer:
BottlesOfBeer
(
n
)
mentions
beer
exactly
3
n
+
3
times.
Incidentally,thereare
lots
ofsongswithquadraticsingingtime.Thisoneis
probablyfamiliartomostEnglispeakers:
NDaysOfChristmas
(
gifts
[
2..
n
])
:
for
i
 
1
to
n
Sing
Onthe
i
thdayofChristmas,mytruelovegavetome

for
j
 
i
downto
2
Sing
jgifts
[
j
]
,

if
i
>
1
Sing
and

Sing
apartridgeinapeartree.

Theinputto
NDaysOfChristmas
isalistof
n

1
gifts,representedhereas
anarray.It'squiteeasytoshowthatthesingingtimeis

(
n
2
)
;inparticular,
thesingermentionsthenameofagift
P
n
i
=
1
i
=
n
(
n
+
1
)
=
2
times(countingthe
partridgeinthepeartree).It'salsoeasytoseethatduringthe˝rst
n
daysof
Christmas,mytruelovegavetomeexactly
P
n
i
=
1
P
i
j
=
1
j
=
n
(
n
+
1
)(
n
+
2
)
=
6
=

(
n
3
)
gifts.
15

0.Introduction
OtherquadratisongsincludeMacDonaldHadaF
WasanOldLadyWhoSwallowedaoleintheBottomoftheS
GrowtheRushesORattlin'CourtOfKingCaractacu
BarlIWereNotUpontheStarTrekkin'dasnicht
einSchnitz
22
PulcinoPiíhænsnakofanchad
MiYand
Tokokor‹ki
Formoreexamples,consultyourfavorite
preschooler.
Alouette
(
lapart
[
1..
n
])
:
Chantez
Alouette,gentillealouette,alouette,jeteplumerai.
pourtout
i
de
1
à
n
Chantez
Jeteplumerai
lapart
[
i
]
.Jeteplumerai
lapart
[
i
]
.
pourtout
j
de
i
à
1
hh
àrebours
ii
Chantez
Et
lapart
[
j
]
!Et
lapart
[
j
]
!
Chantez
Alouette!Alouette!Aaaaaa...
Chantez
...alouette,gentilleallouette,alouette,jeteplumerai.
Afewsongshaveevenmorebizarresingingtimes.Afairlymodernexample
isTELNETSobyGuySteele,whichactuallytakes

(
2
n
)
timetosing
the˝rst
n
verses;Steelerecommended
n
=
4
.Finally,therearesomesongsthat
never
end.
23
ExceptforTELNETSoallofthesesongsaremostnaturally
expressedasasmallsetofnestedloops,sotheir
running
singingtimescanbe
computedusingnestedsummations.Therunningtimeofa
recursive
algorithmis
moreeasilyexpressedasarecurrence.Forexample,thepeasantmultiplication
algorithmcanbeexpressedrecursivelyasfollows:
x

y
=
8
>
<
>
:
0
if
x
=
0
b
x
=
2
c
(
y
+
y
)
if
x
iseven
b
x
=
2
c
(
y
+
y
)+
y
if
x
isodd
Let
T
(
x
,
y
)
denotethenumberofparity,addition,andmediationoperations
requiredtocompute
x

y
.Thisfunctionsatis˝estherecursiveinequality
T
(
x
,
y
)

T
(
b
x
=
2
c
,2
y
)+
2
withbasecase
T
(
0,
y
)=
0
.Techniquesdescribed
inthenextchapterimplytheupperbound
T
(
x
,
y
)=
O
(
log
x
)
.
Sometimestherunningtimeofanalgorithmdependsonaparticular
implementationofsomeunderlyingdatastructureofsubroutine.Forexample,
theHuntingtoapportionmentalgorithm
ApportionCongress
runsin
O
(
N
+
RI
+(
R

n
)
E
)
time,where
N
denotestherunningtimeof
NewPrior
Queue
,
I
denotestherunningtimeof
Insert
,and
E
denotestherunningtime
22
Ja,dasistOttovonSchnitzelpusskrankengescheitmeyer!
23
Theyjustgoonandon,myfriend.
16

Exercises
of
ExtractMax
.Underthereasonableassumptionthat
R

2
n
(onaverage,
eachstategetsatleasttworepresentatives),wecansimplifythisboundto
O
(
N
+
R
(
I
+
E
))
.Thepreciserunningtimedependsontheimplementation
oftheunderlyingpriorityqueue.TheCensusBureauimplementsthepriority
queueasanunsortedarray,whichgivesus
N
=
I
=

(
1
)
and
E
=

(
n
)
,sothe
CensusBureau'simplementationof
ApportionCongress
runsin
O
(
Rn
)
time
.
However,ifweimplementthepriorityqueueasabinaryheaporahea
array,wehave
N
=

(
1
)
and
I
=
E
=
O
(
log
n
)
,sotheoverallalgorithmrunsin
O
(
R
log
n
)
time.
Finally,sometimesweareinterestedincomputationalresourcesotherthan
time,suchasspace,numberofcoin˛ips,numberofcacheorpagefaults,number
ofmessages,orthenumberofgiftsmytruelovegavetome.These
resourcescanbeanalyzedusingthesametechniquesusedtoanalyzerunning
time.Forexample,latticemultiplicationoftwo
n
numbersrequires
O
(
n
2
)
spaceifwewritedownallthepartialproductsbeforeaddingthem,butonly
O
(
n
)
spaceifweaddthemonthe˛y.
Exercises
0.
Describeandanalyzeane˚cientalgorithmthatdetermines,givenalegal
arrangementofstandardpiecesonastandardchessboard,whichplayerwill
winatchessfromthegivenstartingpositionifbothplayersplayperfectly.
[Hint:Thereisatrivialonesolution!]
ª
1.
(a)
Identify(orwrite)asongthatrequires

(
n
3
)
timetosingthe˝rst
n
verses.
(b)
Identify(orwrite)asongthatrequires

(
n
log
n
)
timetosingthe˝rst
n
verses.
(c)
Identify(orwrite)asongthatrequiressomeotherweirdamountof
timetosingthe˝rst
n
verses.
2.
Carefulreadersmightcomplainthatouranalysisofsongslike
n
Bottlesof
BeerontheWaor
n
DaysofChristmaisoverlysimplistic,because
largernumberstakelongertosingthanshorternumbers.Moregenerally,
becausethereareonlysomanywordsofagivenlength,largersetsofwords
necessarilycontainlongerwords.
24
Wecanmoreaccuratelyestimatesinging
timebycountingthenumberof
syllables
sung,ratherthanthenumberof
words
.
(a)
Howlongdoesittaketosingtheinteger
n
?
24
Ja,dasistdasSubatomarteilchenbeschleunigungsnaturmäÿigkeitsuntersuchungsmaschine!
17

0.Introduction
(b)
Howlongdoesittaketosing
n
BottlesofBeerontheWa
(c)
Howlongdoesittaketosing
n
DaysofChristma
Asusual,expressyouranswersintheform
O
(
f
(
n
))
forsomefunction
f
.
3.
Thecumulativedrinkingsong
TheBarleyMow
hasbeensungthroughout
theBritishIslesforcenturies.Thesonghasmanyvariants;Figure
0.6
containspseudolyricsfor
oneversiontraditionallysunginDevonand
Cornwall
,where
vessel
[
i
]
isthenameofavesselthatholds
2
i
ouncesof
beer.
25
BarleyMow
(
n
)
:
e'sahealthtothebarley-mow,mybraveboys,
e'sahealthtothebarle
e'lldrinkitoutofthejollybrownbowl,
e'sahealthtothebarle
e'sahealthtothebarley-mow,mybraveboys,
e'sahealthtothebarle
for
i
 
1
to
n
e'lldrinkitoutofthe
vessel
[
i
]
,boys,
e'sahealthtothebarle
for
j
 
i
downto
1

vessel
[
j
]
,
Andthejollybrown
e'sahealthtothebarle
e'sahealthtothebarley-mow,mybraveboys,
e'sahealthtothebarle
Figure0.6.
Barley
(a)
Supposeeachname
vessel
[
i
]
isasingleword,andyoucansingfour
wordsasecond.Howlongwouldittakeyoutosing
BarleyMow
(
n
)
?
(Giveatightasymptoticbound.)
(b)
Ifyouwanttosingthissongforarbitrarilylargevaluesof
n
,you'llhave
tomakeupyourownvesselnames.Toavoidrepetition,thesenames
mustbecomeprogressivelylongeras
n
increases.Suppose
vessel
[
n
]
has
25
Inpractice,thesongusessomesubsetofthefollowingvessels;nipperkin,qu
halfgill,quhalfpint,quart,pottle,gallon,half,anker,˝rkin,
halfbarrel,hogshead,pipe/butt,tun,well,river,andocean.Withafew
exceptions(especiallyattheend),everyvesselinthislisthastwicethevolumeofitspredecessor.
IrishandScottishversionsofthesonghaveslightlydi˙erentlyrics,andtheyusuallyswitchto
people(barmaid,landlord,drayer,andsoon)afterllo
Anearlyversionofthesongentitledveusonceaappearsintheplay
JackDrum's
Entertainment(ortheComedieofPasquillandKatherine)
writtenbyJohnMarstonaround1600.
evsonceadrinkeforandtheblackbole.SinggentleButler
ballymoy
Thereissome
disagreementwhetherMarstonwrotetheDutchSospeci˝callyfortheplay,whether
llymisa
mondegreen
foreymoorviceversa,orwhetherit'sactuallythesame
songatall.Thesediscussionsarebesthadover
n
bottlesofbeer.
18

Exercises

(
log
n
)
syllables,andyoucansingsixsyllablespersecond.Nowhow
longwouldittakeyoutosing
BarleyMow
(
n
)
?(Giveatightasymptotic
bound.)
(c)
Supposeeachtimeyoumentionthenameofavessel,youactuallydrink
thecorrespondingamountofbeer:oneounceforthejollybrownbowl,
and
2
i
ouncesforeach
vessel
[
i
]
.Assumingforpurposesofthisproblem
thatyouareatleast21yearsold,
exactly
howmanyouncesofbeerwould
youdrinkifyousang
BarleyMow
(
n
)
?(Givean
exact
answer,notjust
anasymptoticbound.)
4.
RecallthattheinputtotheHuntingtoalgorithm
ApportionCongress
isanarray
Pop
[
1..
n
]
,where
Pop
[
i
]
isthepopulationofthe
i
thstate,andan
integer
R
,thetotalnumberofrepresentativestobeallotted.Theoutputis
anarray
Rep
[
1..
n
]
,where
Rep
[
i
]
isthenumberofrepresentativesallotted
tothe
i
thstatebythealgorithm.
TheHuntingtoalgorithmissometimesdescribedinawaythat
avoidstheuseofpriorityqueuesentirely.Thetevelalgorithm
apositiverealnumber
D
,calledthe
divisor
,andthenrunsthefollowing
subroutinetocomputeanapportionment.Thevariable
q
istheideal
quota
ofrepresentativesallocatedtoastateforthegivendivisor
D
;theactual
numberofrepresentativesallocatedisalwayseither
d
q
e
or
b
q
c
.
HHGuess
(
Pop
[
1..
n
]
,
R
,
D
)
:
reps
 
0
for
i
 
1
to
n
q
 
Pop
[
i
]
=
D
if
q

q
<
d
q
eb
q
c
Rep
[
i
]
 b
q
c
else
Rep
[
i
]
 d
q
e
reps
 
reps
+
Rep
[
i
]
return
reps
Therearethreepossibilitiesforthe˝nalreturnvalue
reps
.If
reps
<
R
,
wedidnotallocateenoughrepresentatives,which(atleastintuitively)
meansourdivisor
D
wastoosmall.If
reps
>
R
,weallocatedtoomany
representatives,which(atleastintuitively)meansourdivisor
D
wastoo
large.Finally,if
reps
=
R
,wecanreturnthearray
Rep
[
1..
n
]
asthe˝nal
apportionment.Inpractice,wecancomputeavalidapportionment(with
reps
=
R
)bycalling
HHGuess
withasmallnumberofintegerdivisorsclose
tothe
standard
divisor
D
=
P
=
R
.
Inthefollowingproblems,let
P
=
P
n
i
=
1
Pop
[
i
]
denotethetotalpopul
tionofall
n
states,andassumethat
n

R

P
.
19

0.Introduction
(a)
Showthatcalling
HHGuess
withthestandarddivisor
D
=
P
=
R
does
not
necessarilyyieldavalidapportionment.
(b)
Provethatif
HHGuess
returnsthesamevalueof
reps
fortwodi˙erent
divisors
D
and
D
0
,italsocomputesthesameallocation
Rep
[
1..
n
]
for
bothofthosedivisors.
(c)
Provethatif
HHGuess
returnsthecorrectvalue
R
,itcomputesthesame
allocation
Rep
[
1..
n
]
asourearlieralgorithm
ApportionCongress
.
(d)
Provethatadivisor
D
doesnotnecessarilyexist!Thatis,
describeinputs
Pop
[
1..
n
]
and
R
,where
n

R

P
,suchthatfor
every
realnumber
D
>
0
,thenumberofrepresentativesallocatedby
HHGuess
isnotequalto
R
.
[Hint:Whathappensifwechange
<
to

inthe
fourthlineof
HHGuess
?]
20

Thecontrolofalargeforceisthesameprincipleasthecontrolofafewmen:
itismerelyaquestionofdividinguptheirnumbers.
SunZi,
TheArtofWar
(c.400
ce
),translatedbyLionelGiles(1910)
Ourlifeisfritteredawaybydetail....Simplify,simplify.
HenryDavidThoreau,
Walden
(1854)
Now,don'taskmewhatVoomis.Ineverwillknow.
But,boy!Letmetellyou,itDOEScleanupsnow!
Dr.Seuss[TheodorSeussGeisel],
TheCatintheHatComesBack
(1958)
Dothehardjobs˙rst.Theeasyjobswilltakecareofthemselves.
attributedtoDaleCarnegie
1
Recursion
1.1Reductions
Reduction
isthesinglemostcommontechniqueusedindesigningalgorithms.
Reducingoneproblem
X
toanotherproblem
Y
meanstowriteanalgorithm
for
X
thatusesanalgorithmfor
Y
asablackboxorsubroutine.Crucially,the
correctnessoftheresultingalgorithmfor
X
cannotdependinanywayon
how
thealgorithmfor
Y
works.Theonlythingwecanassumeisthattheblackbox
solves
Y
correctly.Theinnerworkingsoftheblackboxaresimply
noneofour
business
;they'resomebodyelse'sproblem.It'softenbesttoliterallythinkofthe
blackboxasfunctioningpurelybymagic.
Forexample,thepeasantmultiplicationalgorithmdescribedintheprevious
chapterreducestheproblemofmultiplyingtwoarbitrarypositiveintegersto
threesimplerproblems:addition,mediation(halving),andparitThe
algorithmreliesonanabstractsitivedatatypethatsupportsthose
threeoperations,butthecorrectnessofthemultiplicationalgorithmdoesnot
21

1.Recursion
dependontheprecisedatarepresentation(tallymarks,claytokens,Babylonian
hexagesimal,quipu,countingrods,Romannumerals,˝ngerpositions,augrym
stones,gobarnumerals,binary,negabinary,Graycode,balancedternary,phinary,
quary,...),oronthepreciseimplementationsofthoseoperations.
Ofcourse,the
runningtime
ofthemultiplicationalgorithmdependsonthe
runningtime
oftheaddition,mediation,andparityoperations,butthat's
aseparateissuefrom
correctness
.Mostimportantly,wecancreateamore
e˚cientmultiplicationalgorithmjustbyswitchingtoamoree˚cientnumber
representation(fromtallymarkstoplaluenotation,forexample).
Similarly,theHuntingtoalgorithmreducestheproblemofapportioning
Congresstotheproblemofmaintainingapriorityqueuethatsupportsthe
operations
Insert
and
ExtractMax
.Theabstractdatatypeorityqueuis
ablackbox;thecorrectnessoftheapportionmentalgorithmdoesnotdepend
onanyspeci˝cpriorityqueuedatastructure.Ofcourse,the
runningtime
of
theapportionmentalgorithmdependsonthe
runningtime
ofthe
Insert
and
ExtractMax
algorithms,butthat'saseparateissuefromthe
correctness
ofthe
algorithm.Thebeautyofthereductionisthatwecancreateamoree˚cient
apportionmentalgorithmbysimplyswappinginanewpriorityqueuedata
structure.Moreover,thedesignerofthatdatastructuredoesnotneedtoknow
orcarethatitwillbeusedtoapportionCongress.
Whenwedesignalgorithms,wemaynotknowexactlyhowthebasicbuilding
blocksweuseareimplemented,orhowouralgorithmsmightbeusedasbuilding
blockstosolveevenbiggerproblems.Thatignoranceisuncomfortableformany
beginners,butitisbothunavoidableandextremelyuseful.Evenwhenyou
doknowpreciselyhowyourcomponentswork,itisoften
extremely
helpfulto
pretendthatyoudon't.
1.2SimplifyandDelegate
Recursion
isaparticularlypowerfulkindofreduction,whichcanbedescribed
looselyasfollows:
‹
Ifthegiveninstanceoftheproblemcanbesolveddirectly,solveitdirectly.
‹
Otherwise,reduceittooneormore
simplerinstancesofthesameproblem
.
Iftheselferenceisconfusing,itmaybehelpfultoimaginethatsomeoneelse
isgoingtosolvethesimplerproblems,justasyouwouldassumeforothertypes
ofreductions.Iliketocallthatsomeoneelsethe
RecursionFairy
.Your
only
taskisto
simplify
theoriginalproblem,ortosolveitdirectlywhensimpli˝cation
iseitherunnecessaryorimpossible;theRecursionFairywillsolveallthesimpler
subproblemsforyou,usingMethodsThatAreNoneOfYourBusinessSo
Butt
22

1.2.SimplifyandDelegate
Out
.
1
MathematicallysophisticatedreadersmightrecognizetheRecursionFairy
byitsmoreformalname:the
InductionHypothesis
.
Thereisonemildtechnicalconditionthatmustbesatis˝edinorderfor
anyrecursivemethodtoworkcorrectly:Theremustbenoin˝nitesequenceof
reductionstosimplerandsimplerinstances.Eventually,therecursivereductions
mustleadtoanelementary
basecase
thatcanbesolvedbysomeothermethod;
otherwise,therecursivealgorithmwillloopforever.Themostcommonway
tosatisfythisconditionistoreducetooneormore
smaller
instancesofthe
sameproblem.Forexample,iftheoriginalinputisaskreeblewith
n
glurps,the
inputtoeachrecursivecallshouldbeaskreeblewithstrictlylessthan
n
glurps.
Ofcoursethisisimpossibleiftheskreeblehasnoglurpsataoucan'thave
negativeglurps;thatwouldbeinthatcasewemustgrindleblo˙the
skreebleusingsomeothermethod.
We'vealreadyseenoneinstanceofthispatterninthepeasantmultiplication
algorithm,whichisbaseddirectlyonthefollowingrecursiveidentity.
x

y
=
8
>
<
>
:
0
if
x
=
0
b
x
=
2
c
(
y
+
y
)
if
x
iseven
b
x
=
2
c
(
y
+
y
)+
y
if
x
isodd
Thesamerecurrencecanbeexpressedalgorithmicallyasfollows:
PeasantMultiply
(
x
,
y
)
:
if
x
=
0
return
0
else
x
0
 b
x
=
2
c
y
0
 
y
+
y
prod
 
PeasantMultiply
(
x
0
,
y
0
)
hh
Recurse!
ii
if
x
isodd
prod
 
prod
+
y
return
prod
AlazyEgyptianscribecouldexecutethisalgorithmbycomputing
x
0
and
y
0
,
askingamorejuniorscribetomultiply
x
0
and
y
0
,andthenpossiblyadding
y
tothejuniorscribe'sresponse.Thejuniorscribe'sproblemissimplerbecause
x
0
<
x
,andrepeatedlydecreasingapositiveintegereventuallyleadsto
0
.How
thejuniorscribeactuallycomputes
x
0

y
0
isnoneoftheseniorscribe'sbusiness
(andit'snoneofyourbusiness,either).
1
WhenIwasanundergraduate,IattributedrecursiontoinsteadoftheRecursionFairy,
referringtotheBrothersGrimmstoryaboutanoldshoemakerwholeaveshisworkun˝nished
whenhegoestobed,onlytodiscoveruponwakingthatelvesichtelmännhave˝nished
everythingovernight.SomeonemoreentheogenicallyexperiencedthanImightrecognizethese
RekursionswichtelmännerasTerenceMcKenna'sormingmachineelv
23

1.Recursion
1.3TowerofHanoi
TheTowerofHanoipuzzlewas˝rstpublissanactualphysicalpuzzl
theFrenchteacherandrecreationalmathematicianÉdouardLucasin1883,
2
underthepseudonym.Claus(deSi(ananagramofcasd'Ami
Thefollowingyear,HenrideParvilledescribedthepuzzlewiththefollowing
remarkablestory:
3
InthegreattempleatBenares
4
...beneaththedomewhichmarksthecentreof
theworld,restsabrassplateinwhichare˙xedthreediamondneedles,each
acubithighandasthickasthebodyofabee.Ononeoftheseneedles,atthe
creation,Godplacedsixty-fourdiscsofpuregold,thelargestdiscrestingonthe
brassplate,andtheothersgettingsmallerandsmalleruptothetopone.Thisis
theTowerofBramah.Dayandnightunceasinglytheprieststransferthediscs
fromonediamondneedletoanotheraccordingtothe˙xedandimmutable
lawsofBramah,whichrequirethatthepriestondutymustnotmovemore
thanonediscatatimeandthathemustplacethisdisconaneedlesothat
thereisnosmallerdiscbelowit.Whenthesixty-fourdiscsshallhavebeenthus
transferredfromtheneedleonwhichatthecreationGodplacedthemtoone
oftheotherneedles,tower,temple,andBrahminsalikewillcrumbleintodust,
andwithathunderclaptheworldwillvanish.
Figure1.1.
The(8-disk)TowerofHanoipuzzle
Ofcourse,asgoodcomputerscientists,our˝rstinstinctonreadingthis
storyistosubstitutethevariable
n
forthehardwiredconstant
64
.Andbecause
mostphysicalinstancesofthepuzzlearemadeofwoodinsteadofdiamonds
andgold,Iwillcallthethreepossiblelocationsforthedisksinsteadof
2
Lucaslaterclaimedtohaveinventedthepuzzlein1876.
3
ThisEnglishtranslationistakenfromW.W.RouseBall's1892book
MathematicalRecreations
andEssays
.
4
ThetempleatBenisalmostcertainlytheKashiVishvanathTempleinVaranasi,
UttarPradesh,India,locatedapproximately2400kmwestofHàN
ô
.
i,Vi
ê
.
tNam,where
the˝ctionalN.Claussupposedlyresided.Coincidentally,theFrenchArmyinvadedHanoiin1883,
thesameyearLucasreleasedhispuzzle,ultimatelyleadingtoitsestablishmentasthecapitalof
FrenchIndochina.
24

1.3.TowerofHanoi
eedlHowcanwemoveatowerof
n
disksfromonepegtoanother,usinga
thirdsparepegasanoccasionalplaceholder,withouteverplacingadiskontop
ofasmallerdisk?
AsN.Claus(deSiam)pointedoutinthepamphletincludedwithhispuzzle,
thesecrettosolvingthispuzzleistothinkrecursively.Insteadoftryingtosolve
theentirepuzzleatonce,let'sconcentrateonmovingjustthelargestdisk.We
can'tmoveitatthebeginning,becausealltheotherdisksareintheway.So
˝rstwehavetomovethose
n

1
smallerdiskstothesparepeg.Oncethat's
done,wecanmovethelargestdiskdirectlytoitsdestination.Finally,to˝nish
thepuzzle,wehavetomovethe
n

1
smallerdisksfromthesparepegtotheir
destination.
Figure1.2.
TheTowerofHanoialgorithm;ignoreeverythingbutthebottomdisk.
Sonowallwehaveto˝gureoutishowt
NO!!STOP!!
That'sit!We'redone!We'vesuccessfullyreducedthe
n
kTowerofHanoi
problemtotwoinstancesofthe
(
n

1
)
kTowerofHanoiproblem,which
wecangleefullyhando˙totheRecursionFtocarryLucas'smetaphor
further,tothejuniormonksatthetemple.
Our
jobis˝nished.Ifwedidn'ttrust
thejuniormonks,wewouldn'thavehiredthem;letthemdotheirjobinpeace.
Ourreductiondoesmakeonesubtlebutextremelyimportantassumption:
Thereisalargestdisk
.Ourrecursivealgorithmworksforany
positive
number
ofdisks,butitbreaksdownwhen
n
=
0
.Wemusthandlethatcaseusinga
di˙erentmethod.Fortunately,themonksatBenares,beinggoodBuddhists,are
quiteadeptatmovingzerodisksfromonepegtoanotherinnotimeatall,by
doingnothing.
Figure1.3.
ThevacuousbasecasefortheTowerofHanoialgorithm.Thereisnospoon.
25

1.Recursion
Itmaybetemptingtothinkabouthowallthosesmallerdisksmovearo
ormoregenerally,
whathappenswhentherecursionisunrolled
utreally,
don'tdoit.Formostrecursivealgorithms,unrollingtherecursionisneither
necessarynorhelpful.Our
only
taskistoreducetheprobleminstancewe're
giventooneormoresimplerinstances,ortosolvetheproblemdirectlyifsuch
areductionisimpossible.OurrecursiveTowerofHanoialgorithmistrivially
correctwhen
n
=
0
.Forany
n

1
,theRecursionFairycorrectlymovesthetop
n

1
disks(moreformally,theInductiveHypothesisimpliesthatourrecursive
algorithmcorrectlymovesthetop
n

1
disks)soouralgorithmiscorrect.
TherecursiveHanoialgorithmisexpressedinpseudocodeinFigure
1.4
.
Thealgorithmmovesastackof
n
disksfromasourcepeg(
src
)toadestination
peg(
dst
)usingathirdtemporarypeg(
tmp
)asaplaceholder.Noticethatthe
algorithmcorrectlydoesnothingatallwhen
n
=
0
.
Hanoi
(
n
,
src
,
dst
,
tmp
)
:
if
n
>
0
Hanoi
(
n

1,
src
,
tmp
,
dst
)
hh
Recurse!
ii
movedisk
n
from
src
to
dst
Hanoi
(
n

1,
tmp
,
dst
,
src
)
hh
Recurse!
ii
Figure1.4.
ArecursivealgorithmtosolvetheTowerofHanoi
Let
T
(
n
)
denotethenumberofmovesrequiredtotransfer
n
dis
runningtimeofouralgorithm.Ourvacuousbasecaseimpliesthat
T
(
0
)=
0
,
andthemoregeneralrecursivealgorithmimpliesthat
T
(
n
)=
2
T
(
n

1
)+
1
forany
n

1
.Bywritingoutthe˝rstseveralvaluesof
T
(
n
)
,wecaneasily
guessthat
T
(
n
)=
2
n

1
;astraightforwardinductionproofimpliesthatthis
guessiscorrect.Inparticular,movingatowerof64disksrequires
2
64

1
=
18,446,744,073,709,551,615individualmoves.Thus,evenattheimpressiverate
ofonemovepersecond,themonksatBenareswillbeatworkforapproximately
585billionyearssde
cinqmilliardsdesiècles
beforetower,temple,and
Brahminsalikewillcrumbleintodust,andwithathunderclaptheworldwill
vanish.
1.4Mergesort
Mergesortisoneoftheearliestalgorithmsdesignedforgenerasest
programcomputers.ThealgorithmwasdevelopedbyJohnvonNeumannin
1945,anddescribedindetailinapublicationwithHermanGoldstinein1947,as
oneofthe˝rstnoumericalprogramsfortheEDVAC.
5
5
GoldstineandvonNeumannactuallydescribedannovevariantnowusuallycalled
bottomergesort.Atthetime,largedatasetsweresortedbyspeciasemachin
almostallbuiltbyImanipulatedpunchedcardsusingvariantsofbinaryradixsort.Von
26

1.4.Mergesort
1.
Dividetheinputarrayintotwosubarraysofroughlyequalsize.
2.
Recursivelymergesorteachofthesubarrays.
3.
Mergethensubarraysintoasinglesortedarray.
Input:
SORTINGEXAMPL
Divide:
SORTINGEXAMPL
RecurseLeft:
INORSTGEXAMPL
RecurseRight:
INORSTAEGLMPX
Merge:
AEGILMNOPRSTX
Figure1.5.
Amergesortexample.
The˝rststepiscompletelytriviastdividethearraysizebytw
wecandelegatethesecondsteptotheRecursionFairy.Alltherealworkis
doneinthe˝nalmergestep.Acompletedescriptionofthealgorithmisgivenin
Figure
1.6
;tokeeptherecursivestructureclear,I'veextractedthemergestep
intoanindependentsubroutine.Themergealgorithmisalsorecursivy
the˝rstelementoftheoutputarray,andthenrecursivelymergetherestofthe
inputarrays.
MergeSort
(
A
[
1..
n
])
:
if
n
>
1
m
 b
n
=
2
c
MergeSort
(
A
[
1..
m
])
hh
Recurse!
ii
MergeSort
(
A
[
m
+
1..
n
])
hh
Recurse!
ii
Merge
(
A
[
1..
n
]
,
m
)
Merge
(
A
[
1..
n
]
,
m
)
:
i
 
1
;
j
 
m
+
1
for
k
 
1
to
n
if
j
>
n
B
[
k
]
 
A
[
i
]
;
i
 
i
+
1
elseif
i
>
m
B
[
k
]
 
A
[
j
]
;
j
 
j
+
1
elseif
A
[
i
]
<
A
[
j
]
B
[
k
]
 
A
[
i
]
;
i
 
i
+
1
else
B
[
k
]
 
A
[
j
]
;
j
 
j
+
1
for
k
 
1
to
n
A
[
k
]
 
B
[
k
]
Figure1.6.
Mergesort
Correctness
Toprovethatthisalgorithmiscorrect,weapplyouroldfriendinductiontwice,
˝rsttothe
Merge
subroutinethentothetevel
Mergesort
algorithm.
Lemma1.1.
Merge
correctlymergesthesubarrays
A
[
1..
m
]
and
A
[
m
+
1..
n
]
,
assumingthosesubarraysaresortedintheinput.
Neumannargued(successfully!)thatbecausetheEDVACcouldsortfasterthanIBM'sdedicated
sorters,uthumaninterventionorneedforadditionaltheEDVACwasanll
purpomachine,andspeciasesortingmachineswerenolongernecessary.
27

1.Recursion
Proof:
Let
A
[
1..
n
]
beanyarrayand
m
anyintegersuchthatthesubarrays
A
[
1..
m
]
and
A
[
m
+
1..
n
]
aresorted.Weprovethatforall
k
from
0
to
n
,thelast
n

k

1
iterationsofthemainloopcorrectlymerge
A
[
i
..
m
]
and
A
[
j
..
n
]
into
B
[
k
..
n
]
.Theproofproceedsbyinductionon
n

k
+
1
,thenumberofelements
remainingtobemerged.
If
k
>
n
,thealgorithmcorrectlymergesthetwoemptysubarraysbydoing
absolutelynothing.(Thisisthebasecaseoftheinductiveproof.)Otherwise,
therearefourcasestoconsiderforthe
k
thiterationofthemainloop.
‹
If
j
>
n
,thensubarray
A
[
j
..
n
]
isempty,so
min

A
[
i
..
m
]
[
A
[
j
..
n
]

=
A
[
i
]
.
‹
If
i
>
m
,thensubarray
A
[
i
..
m
]
isempty,so
min

A
[
i
..
m
]
[
A
[
j
..
n
]

=
A
[
j
]
.
‹
Otherwise,if
A
[
i
]
<
A
[
j
]
,then
min

A
[
i
..
m
]
[
A
[
j
..
n
]

=
A
[
i
]
.
‹
Otherwise,wemusthave
A
[
i
]

A
[
j
]
,and
min

A
[
i
..
m
]
[
A
[
j
..
n
]

=
A
[
j
]
.
Inallfourcases,
B
[
k
]
iscorrectlyassignedthesmallestelementof
A
[
i
..
m
]
[
A
[
j
..
n
]
.Inthetwocaseswiththeassignment
B
[
k
]
 
A
[
i
]
,theRecursionFairy
correctly,ImeantheInductionHypothesisimpliesthatthelast
n

k
iterationsofthemainloopcorrectlymerge
A
[
i
+
1..
m
]
and
A
[
j
..
n
]
into
B
[
k
+
1..
n
]
.Similarly,intheothertwocases,theRecursionFairyalsocorrectly
mergestherestofthesubarrays.
…
Theorem1.2.
MergeSort
correctlysortsanyinputarray
A
[
1..
n
]
.
Proof:
Weprovethetheorembyinductionon
n
.If
n

1
,thealgorithm
correctlydoesnothing.Otherwise,theRecursionFairycorrectly,I
meantheinductionhypothesisimpliesthatouralgorithmcorrectlysortsthe
twosmallersubarrays
A
[
1..
m
]
and
A
[
m
+
1..
n
]
,afterwhichtheyarecorrectly
Merge
dintoasinglesortedarray(byLemma
1.1
).
…
Analysis
Becausethe
MergeSort
algorithmisrecursive,itsrunningtimeisnaturally
expressedasarecurrence.
Merge
clearlytakes
O
(
n
)
time,becauseit'sasimple
foopwithconstantworkperiteration.Weimmediatelyobtainthefollowing
recurrencefor
MergeSort
:
T
(
n
)=
T

d
n
=
2
e

+
T

b
n
=
2
c

+
O
(
n
)
.
Asinmostdinquerrecurrences,wecansafelystripoutthe˛oors
andceilings(usingatechniquecalled
domaintransformations
describedlater
inthischapter),givingusthesimplerrecurrence
T
(
n
)=
2
T
(
n
=
2
)+
O
(
n
)
.The
lllevelsequacaseoftherecursiontreemethod(alsodescribedlaterinthis
chapter)immediatelyimpliesthecloormsolution
T
(
n
)=
O
(
n
log
n
)
.Even
ifyouarenot(yet)familiarwithrecursiontrees,youcanverifythesolution
T
(
n
)=
O
(
n
log
n
)
byinduction.
28

1.5.Quicksort
1.5Quicksort
Quicksortisanotherrecursivesortingalgorithm,discoveredbyTonyHoarein
1959and˝rstpublishedin1961.Inthisalgorithm,thehardworkissplitting
thearrayintosmallersubarrays
before
recursion,sothatmergingthesorted
subarraysistrivial.
1.
Choosea
pivot
elementfromthearray.
2.
Partitionthearrayintothreesubarrayscontainingtheelementssmaller
thanthepivot,thepivotelementitself,andtheelementslargerthanthe
pivot.
3.
Recursivelyquicksortthe˝rstandlastsubarrays.
Input:
SORTINGEXAMPL
Chooseapivot:
SORTINGEXAM
P
L
Partition:
AGOEINLM
P
TXSR
RecurseLeft:
AEGILMNO
P
TXSR
RecurseRight:
AEGILMNO
P
RSTX
Figure1.7.
Aquicksortexample.
MoredetailedpseudocodeisgiveninFigure
1.8
.Inthe
Partition
subroutine,
theinputparameter
p
istheindexofthepivotelementintheunsortedarray;
thesubroutinepartitionsthearrayandreturnsthenewindexofthepivot
element.Therearemanydi˙erente˚cientpartitioningalgorithms;theone
I'mpresentinghereisattributedtoNicoLomuto.
6
Thevariable
`
countsthe
numberofitemsinthearraythatare
`
essthanthepivotelement.
QuickSort
(
A
[
1..
n
])
:
if
(
n
>
1
)
Chooseapivotelement
A
[
p
]
r
 
Partition
(
A
,
p
)
QuickSort
(
A
[
1..
r

1
])
hh
Recurse!
ii
QuickSort
(
A
[
r
+
1..
n
])
hh
Recurse!
ii
Partition
(
A
[
1..
n
]
,
p
)
:
swap
A
[
p
]
$
A
[
n
]
`
 
0
hh
#items
<
pivot
ii
for
i
 
1
to
n

1
if
A
[
i
]
<
A
[
n
]
`
 
`
+
1
swap
A
[
`
]
$
A
[
i
]
swap
A
[
n
]
$
A
[
`
+
1
]
return
`
+
1
Figure1.8.
Quicksort
Correctness
Justlikemergesort,provingthat
QuickSort
iscorrectrequirestwoseparate
inductionproofs:onetoprovethat
Partition
correctlypartitionsthearray,and
6
Hoareproposedamorecomplicatedwapartitioningalgorithmthathassome
practicaladvantagesoverLomuto'salgorithm.Ontheotherhand,Hoare'spartitioningalgorithm
isoneoftheplaceso˙neerrorsgotodie.
29

1.Recursion
theothertoprovethat
QuickSort
correctlysorts
assuming
Partition
iscorrect.
Toprove
Partition
iscorrect,weneedtoprovethefollowingloopinvariant:At
theendofeachiterationofthemainloop,everythinginthesubarray
A
[
1..
`
]
is
`
essthan
A
[
n
]
,andnothinginthesubarray
A
[
`
+
1..
i
]
islessthan
A
[
n
]
.
I'llleavetheremainingstraightforwardbuttediousdetailsasexercisesforthe
reader.
Analysis
Theanalysisofquicksortisalsosimilartothatofmergesort.
Partition
clearly
runsin
O
(
n
)
time,becauseit'sasimplefoopwithconstantworkperiteration.
For
QuickSort
,wegetarecurrencethatdependson
r
,the
rank
ofthechosen
pivotelement:
T
(
n
)=
T
(
r

1
)+
T
(
n

r
)+
O
(
n
)
Ifwecouldsomehowalwaysmagicallychoosethepivottobethe
median
element
ofthearray
A
,wewouldhave
r
=
d
n
=
2
e
,thetwosubproblemswouldbeasclose
tothesamesizeaspossible,therecurrencewouldbecome
T
(
n
)=
T

d
n
=
2
e
1

+
T

b
n
=
2
c

+
O
(
n
)

2
T
(
n
=
2
)+
O
(
n
)
,
andwe'dhave
T
(
n
)=
O
(
n
log
n
)
usingeithertherecursiontreemethodor
theevensimpleryeah,wealreadysolvedthatrecurrencefor
method.
Infact,aswewillseelaterinthischapter,we
can
actuallylocatethe
medianelementinanunsortedarrayinlineartime,butthealgorithmisfairly
complicated,andthehiddenconstantinthe
O
(

)
notationislargeenoughto
maketheresultingsortingalgorithmimpractical.Inpractice,mostprogrammers
settleforsomethingsimple,likechoosingthe˝rstorlastelementofthearray.
Inthiscase,
r
cantakeanyvaluebetween
1
and
n
,sowehave
T
(
n
)=
max
1

r

n

T
(
r

1
)+
T
(
n

r
)+
O
(
n
)

.
Intheworstcase,thetwosubproblemsarecompletelyunbalan
r
=
1
or
r
=
n
therecurrencebecomes
T
(
n
)

T
(
n

1
)+
O
(
n
)
.Thesolutionis
T
(
n
)=
O
(
n
2
)
.
Anothercommonheuristiciscalledanofsethree
ements(usuallyatthebeginning,middle,andendofthearray),andtake
themedianofthosethreeelementsasthepivot.Althoughthisheuristicis
somewhatmoree˚cientinpracticethanjustchoosingoneelement,especially
whenthearrayisalready(nearly)sorted,wecanstillhave
r
=
2
or
r
=
n

1
intheworstcase.Withthemedifheuristic,therecurrencebecomes
T
(
n
)

T
(
1
)+
T
(
n

2
)+
O
(
n
)
,whosesolutionisstill
T
(
n
)=
O
(
n
2
)
.
30

1.6.ThePattern
Intuitively,thepivotelementshouldsuafallsomewhereinthemiddleof
thearray,saywithrankbetween
n
=
10
and
9
n
=
10
.Thisobservationsuggeststhat
thevrunningtimeshouldbe
O
(
n
log
n
)
.Althoughthisintuition
canbeformalized,themostcommonformalizationmakesthecompletely
unrealisticassumptionthatallpermutationsoftheinputarrayareequallylikely.
Realworlddata
may
berandom,butitisnotrandominanywaythatwecan
predictinadvance,anditis
certainly
notuniform!
7
Occasionallypeoplealsoconsidercarunningtimeforsomereason.
Wewon't.
1.6ThePattern
Bothmergesortandquicksortfollowageneralpatterncalled
divide
andconquer
:
1.
Divide
thegiveninstanceoftheproblemintoseveral
independentsmaller
instancesof
exactly
thesameproblem.
2.
Delegate
eachsmallerinstancetotheRecursionFairy.
3.
Combine
thesolutionsforthesmallerinstancesintothe˝nalsolution
forthegiveninstance.
Ifthesizeofanyinstancefallsbelowsomeconstantthreshold,weabandon
recursionandsolvetheproblemdirectly,bybruteforce,inconstanttime.
Provingadinqueralgorithmcorrectalmostalwaysrequires
induction.Analyzingtherunningtimerequiressettingupandsolvinga
recurrence,whichusually(butunfortunatelynotalways!)canbesolvedusing
recursiontrees.
1.7RecursionTrees
SowhataretheseonIkeeptalkingabout?Recursiontreesare
asimple,general,pictorialtoolforsolvingdinquerrecurrences.A
recursiontreeisarootedtreewithonenodeforeachrecursivesubproblem.The
value
ofeachnodeistheamountoftimespentonthecorrespondingsubproblem
excluding
recursivecalls.Thus,theoverallrunningtimeofthealgorithmisthe
sumofthevaluesofallnodesinthetree.
Tomakethisideamoreconcrete,imagineadinqueralgorithm
thatspends
O
(
f
(
n
))
timeonnovework,andthenmakes
r
recursive
7
Ontheotherhand,ifwechoosethepivotindex
p
uniformlyatrandom,then
Quicksort
runs
in
O
(
n
log
n
)
time
withhighprobability
,for
every
possibleinputarray.Thekeydi˙erenceisthat
therandomnessiscontrolledbyouralgorithm,notbytheowerfulMaliciousAdversarywho
givesusinputdataafterreadingourcode.Theanalysisofrandomizedquicksortisunfortunately
outsidethescopeofthisbook,butyoucan˝ndrelevantlecturenotesat
http://algorithms.wtf/
.
31

1.Recursion
calls,eachonaproblemofsize
n
=
c
.Uptoconstantfactors(whichwecan
hideinthe
O
()
notation),therunningtimeofthisalgorithmisgovernedbythe
recurrence
T
(
n
)=
rT
(
n
=
c
)+
f
(
n
)
.
Therootoftherecursiontreefor
T
(
n
)
hasvalue
f
(
n
)
and
r
children,
eachofwhichistherootofa(recursivelyde˝ned)recursiontreefor
T
(
n
=
c
)
.
Equivalently,arecursiontreeisacomplete
r
treewhereeachnodeatdepth
d
containsthevalue
f
(
n
=
c
d
)
.(Feelfreetoassumethat
n
isanintegerpowerof
c
,
sothat
n
=
c
d
isalwaysaninteger,althoughinfactthisdoesn'tmatter.)
Inpractice,Irecommenddrawingoutthe˝rsttwoorthreelevelsofthe
tree,asinFigure
1.9
.
Figure1.9.
Arecursiontreefortherecurrence
T
(
n
)=
rT
(
n
=
c
)+
f
(
n
)
Theleavesoftherecursiontreecorrespondtothebasecase(s)ofthe
recurrence.Becausewe'reonlylookingforasymptoticbounds,theprecisebase
casedoesn'tactuallymatter;wecansafelyassume
T
(
n
)=
1
forall
n

n
0
,
where
n
0
isanarbitrarypositiveconstant.Inparticular,wecanchoosewhatever
valueof
n
0
ismostconvenientforouranalysis.Forthisexample,I'llchoose
n
0
=
1
.
Now
T
(
n
)
isthesumofallvaluesintherecursiontree;wecanevaluatethis
sumbyconsideringthetreelevevel.Foreachinteger
i
,the
i
thlevelof
thetreehasexactly
r
i
nodes,eachwithvalue
f
(
n
=
c
i
)
.Thus,
T
(
n
)=
L
X
i
=
0
r
i

f
(
n
=
c
i
)
(

)
where
L
isthedepthofthetree.Ourbasecase
n
0
=
1
immediatelyimplies
L
=
log
c
n
,because
n
=
c
L
=
n
0
=
1
.Itfollowsthatthenumberofleavesin
32

1.7.RecursionTrees
therecursiontreeisexactly
r
L
=
r
log
c
n
=
n
log
c
r
.Thus,thelastterminthe
levevelsum(

)is
n
log
c
r

f
(
1
)=
O
(
n
log
c
r
)
,because
f
(
1
)=
O
(
1
)
.
Therearethreecommoncaseswherethelevevelseries
(

)
isespecially
easytoevaluate:
‹
Decreasing:
Iftheseries
decaysexponentially
erytermisaconstant
factorsmallerthantheprevious
T
(
n
)=
O
(
f
(
n
))
.Inthiscase,
thesumisdominatedbythevalueattherootoftherecursiontree.
‹
Equal:
Ifalltermsintheseriesareequal,weimmediatelyhave
T
(
n
)=
O
(
f
(
n
)

L
)=
O
(
f
(
n
)
log
n
)
.(Theconstant
c
vanishesintothe
O
()
notation.)
‹
Increasing:
Iftheseries
growsexponentially
erytermisaconstantfactor
largerthantheprevious
T
(
n
)=
O
(
n
log
c
r
)
.Inthiscase,thesum
isdominatedbythenumberofleavesintherecursiontree.
Inthe˝rstandthirdcases,onlythelargestterminthegeometricseriesmatters;
allothertermsareswallowedupbythe
O
(

)
notation.Inthedecreasingcase,
wedon'tevenhavetocompute
L
;theasymptoticupperboundwouldstillhold
iftherecursiontreewerein˝nite!
Asanelementaryexample,ifwedrawoutthe˝rstfewlevelsoftherecursion
treeforthe(simpli˝ed)mergesortrecurrence
T
(
n
)=
2
T
(
n
=
2
)+
O
(
n
)
,we
discoverthatalllevelsareequal,whichimmediatelyimplies
T
(
n
)=
O
(
n
log
n
)
.
Figure1.10.
Therecursiontreeformergesort
Therecursiontreetechniquecanalsobeusedforalgorithmswherethe
recursivesubproblemshavedi˙erentsizes.Forexample,ifwecouldsomehow
implementquicksortsothatthepivot
always
landsinthemiddlethirdofthe
sortedarray,thewserunningtimewouldsatisfytherecurrence
T
(
n
)

T
(
n
=
3
)+
T
(
2
n
=
3
)+
O
(
n
)
.
Thisrecurrencemightlookscary,butit'sactuallyprettytame.Ifwedraw
outafewlevelsoftheresultingrecursiontree,wequicklyrealizethatthe
sumofvaluesonanylevelis
atmost
n
levelsmightbemissingsome
ntheentiretreehasdepth
log
3
=
2
n
=
O
(
log
n
)
.Itimmediatelyfollows
that
T
(
n
)=
O
(
n
log
n
)
.(Moreover,thenumberof
full
levelsintherecursion
33

1.Recursion
treeis
log
3
n
=

(
log
n
)
,sothisconservativeanalysiscanbeimprovedbyat
mostaconstantfactor,whichforourpurposesmeansnotatall.)Thefactthat
therecursiontreeisunbalancedsimplydoesn'tmatter.
Asamoreextremeexample,thewserecurrenceforquicksort
T
(
n
)=
T
(
n

1
)+
T
(
1
)+
O
(
n
)
givesusacompletelyunbalancedrecursiontree,where
onechildofeachinternalnodeisaleaf.Thelevevelsumdoesn'tfall
intoanyofourthreedefaultcategories,butwecanstillderivethesolution
T
(
n
)=
O
(
n
2
)
byobservingthateverylevelvalueisatmost
n
andthereareat
most
n
levels.(Again,thisconservativeanalysisistight,because
n
=
2
levelseach
havevalueatleast
n
=
2
.)
Figure1.11.
Recursiontreesforquicksortwithgoodpivots(left)andwithworst-casepivots(right)
ª
IgnoringFloorsandCeilingsIsOkay,Honest
Carefulreadersmightobjectthatouranalysisbrushesanimportantdetailunder
therug.Therunningtimeofmergesortdoesn't
really
obeytherecurrence
T
(
n
)=
2
T
(
n
=
2
)+
O
(
n
)
;afterall,theinputsize
n
mightbeodd,andwhatcould
itpossiblymeantosortanarrayofsize
42
1
2
or
17
7
8
?Theactualmergesort
recurrenceissomewhatmessier:
T
(
n
)=
T

d
n
=
2
e

+
T

b
n
=
2
c

+
O
(
n
)
.
Sure,wecouldcheckthat
T
(
n
)=
O
(
n
log
n
)
usinginduction,butthenecessary
calculationswouldbeawful.Fortunately,thereisasimpletechniquefor
removing˛oorsandceilingsfromrecurrences,called
domaintransformation
.
‹
First,becausewearederivinganupperbound,wecansafelyoverestimate
T
(
n
)
,oncebypretendingthatthetwosubproblemsizesareequal,and
againtoeliminatetheceiling:
8
T
(
n
)

2
T

d
n
=
2
e

+
n

2
T
(
n
=
2
+
1
)+
n
.
8
Formally,wearetreating
T
asafunctionoverthe
reals
,notjustovertheintegers,that
satis˝esthegivenrecurrencewiththebasecase
T
(
n
)=
C
forall
n

n
0
,forsomerealnumbers
C

0
and
n
0
>
0
whosevaluesdon'tmatter.If
n
happenstobeaninteger,then
T
(
n
)
coincides
withtherunningtimeofanalgorithmonaninputofsize
n
,butthatdoesn'tmatter,either.
34

ª
1.8.Linear-TimeSelection
‹
Second,wede˝neanewfunction
S
(
n
)=
T
(
n
+

)
,choosingtheconstant

sothat
S
(
n
)
satis˝esthesimplerrecurrence
S
(
n
)

2
S
(
n
=
2
)+
O
(
n
)
.To
˝ndthecorrectconstant

,wederivearecurrencefor
S
fromourgiven
recurrencefor
T
:
S
(
n
)=
T
(
n
+

)
[de˝nitionof
S
]

2
T
(
n
=
2
+

2
+
1
)+
n
+

[recurrencefor
T
]
=
2
S
(
n
=
2


2
+
1
)+
n
+

[de˝nitionof
S
]
Setting

=
2
simpli˝esthisrecurrenceto
S
(
n
)

2
S
(
n
=
2
)+
n
+
2
,whichis
exactlywhatwewanted.
‹
Finally,therecursiontreemethodimplies
S
(
n
)=
O
(
n
log
n
)
,andtherefore
T
(
n
)=
S
(
n

2
)=
O
((
n

2
)
log
(
n

2
))=
O
(
n
log
n
)
,
exactlyaspromised.
Similardomaintransformationscanbeusedtoremove˛oors,ceilings,andeven
lowerordertermsfrom
any
divideandconquerrecurrence.Butnowthatwe
realizethis,wedon'tneedtobothergrindingthroughthedetailseveragain!
Fromnowon,facedwithanydinquerrecurrence,Iwillsilently
brush˛oorsandceilingsandlowtermsundertherug,andIencourage
youtodothesame.
ª
1.8Linear-TimeSelection
Duringourdiscussionofquicksort,Iclaimedinpassingthatwecan˝ndthe
medianofanunsortedarrayinlineartime.The˝rstsuchalgorithmwas
discoveredbyManuelBlum,BobFloyd,VaughanPratt,RonRivest,andBob
Tarjanintheearly1970s.Theiralgorithmactuallysolvesthemoregeneral
problemofselectingthe
k
thsmallestelementinan
n
ementarray,giventhe
arrayandtheinteger
k
asinput,usingavariantofanalgorithmcalled
quickselect
or
onquicksort
.Quickselectwas˝rstdescribedbyTonyHoarein1961,
literallyonthesamepagewherehe˝rstpublishedquicksort.
Quickselect
Thegenericquickselectalgorithmchoosesapivotelement,partitionsthearray
usingthesame
Partition
subroutineas
QuickSort
,andthenrecursively
searches
onlyone
ofthetwosubarrays,speci˝cally,theonethatcontainsthe
k
thsmallestelementoftheoriginalinputarray.Pseudocodeforquickselectis
giveninFigure
1.12
.
35

1.Recursion
QuickSelect
(
A
[
1..
n
]
,
k
)
:
if
n
=
1
returnA[1]
else
Chooseapivotelement
A
[
p
]
r
 
Partition
(
A
[
1..
n
]
,
p
)
if
k
<
r
return
QuickSelect
(
A
[
1..
r

1
]
,
k
)
elseif
k
>
r
return
QuickSelect
(
A
[
r
+
1..
n
]
,
k

r
)
else
return
A
[
r
]
Figure1.12.
Quickselect,orone-armedquicksort
Thisalgorithmhastwoimportantfeatures.First,justlikequicksort,the
correctnessofquickselectdoesnotdependonhowthepivotischosen.Second,
evenifwereallyonlycareaboutselecting
medians
(thespecialcase
k
=
n
=
2
),
Hoare'srecursivestrategyrequiresustoconsiderthemoregeneralselection
problem;themedianoftheinputarray
A
[
1..
n
]
isalmostneverthemedianof
eitherofthetwosmallersubarrays
A
[
1..
r

1
]
or
A
[
r
+
1..
n
]
.
Thewserunningtimeof
QuickSelect
obeysarecurrencesimilarto
QuickSort
.Wedon'tknowthevalueof
r
,orwhichofthetwosubarrayswe'll
recursivelysearch,sowehavetoassumetheworst.
T
(
n
)

max
1

r

n
max
f
T
(
r

1
)
,
T
(
n

r
)
g
+
O
(
n
)
Wecansimplifytherecurrenceslightlybyletting
`
denotethelengthofthe
recursivesubproblem:
T
(
n
)

max
0

`

n

1
T
(
`
)+
O
(
n
)
Ifthechosenpivotelementisalwayseitherthesmallestorlargestelementin
thearray,therecurrencesimpli˝esto
T
(
n
)=
T
(
n

1
)+
O
(
n
)
,whichimplies
T
(
n
)=
O
(
n
2
)
.(Therecursiontreeforthisrecurrenceisjustasimplepath.)
Goodpivots
Wecouldavoidthisquadraticwsebehaviorifwecould
somehow
magically
choosea
good
pivot,meaning
`


n
forsomeconstant
<
1
.Inthiscase,the
recurrencewouldsimplifyto
T
(
n
)

T
(

n
)+
O
(
n
)
.
36

ª
1.8.Linear-TimeSelection
Thisrecurrenceexpandsintoadecreasinggeometricseries,whichisdominated
byitslargestterm,so
T
(
n
)=
O
(
n
)
.(Again,therecursiontreeisjustasimple
path.Theconstantinthe
O
(
n
)
runningtimedependsontheconstant

.)
Inotherwords,ifwecouldsomehowquickly˝ndanelementthat'seven
close
tothemedianinlineartime,wecould˝ndthe
exact
medianinlinear
time.SonowallweneedisanApproximateMedianFairy.The
vTarjanalgorithmchoosesagoodquickselectpivotby
recursively
computingthemedianofacarefsensubsetoftheinputarray.The
ApproximateMedianFairyisjusttheRecursionFairyindisguise!
Speci˝cally,wedividetheinputarrayinto
d
n
=
5
e
blocks
,eachcontaining
exactly
5
elements,exceptpossiblythelast.(Ifthelastblockisn'tfull,justthrow
inafew
1
s.)Wecomputethemedianofeachblockbybruteforce,collect
thosemediansintoanewarray
M
[
1..
d
n
=
5
e
]
,andthen
recursively
compute
themedianofthisnewarray.Finally,weusethemedianoftheblockmedians
(called
mom
inthepseudocodebelow)asthequickselectpivot.
MomSelect
(
A
[
1..
n
]
,
k
)
:
if
n

25
hh
orwhatever
ii
usebruteforce
else
m
 d
n
=
5
e
for
i
 
1
to
m
M
[
i
]
 
MedianOfFive
(
A
[
5
i

4..5
i
])
hh
Bruteforce!
ii
mom
 
MomSelect
(
M
[
1..
m
]
,
b
m
=
2
c
)
hh
Recursion!
ii
r
 
Partition
(
A
[
1..
n
]
,
mom
)
if
k
<
r
return
MomSelect
(
A
[
1..
r

1
]
,
k
)
hh
Recursion!
ii
elseif
k
>
r
return
MomSelect
(
A
[
r
+
1..
n
]
,
k

r
)
hh
Recursion!
ii
else
return
mom
MomSelect
usesrecursionfortwodi˙erentpurposes;the˝rsttimeto
chooseapivotelement(
mom
),andthesecondtimetosearchthroughthe
entriesononesideofthatpivot.
Analysis
Butwhyisthisfast?The˝rstkeyinsightisthat
themedianofmediansisa
goodpivot
.Momislargerthan

d
n
=
5
e
=
2


1
ˇ
n
=
10
blockmedians,andeach
blockmedianislargerthantwootherelementsinitsblock.Thus,momisbigger
thanatleast
3
n
=
10
elementsintheinputarray;symmetrically,momissmaller
thanatleast
3
n
=
10
elements.Thus,intheworstcase,thesecondrecursivecall
searchesanarrayofsizeatmost
7
n
=
10
.
37

1.Recursion
Wecanvisualizethealgorithm'sbehaviorbydrawingtheinputarrayasa
5
d
n
=
5
e
grid,whicheachcolumnrepresents˝veconsecutiveelements.For
purposesofillustration,imaginethatwesorteverycolumnfromtopdown,and
thenwesortthecolumnsbytheirmiddleelement.(Letmeemphasizethat
the
algorithmdoesnotactuallydothis!
)Inthisarrangement,themedifans
istheelementclosesttothecenterofthegrid.
Thelefthalfofthe˝rstthreerowsofthegridcontains
3
n
=
10
elements,each
ofwhichissmallerthanmom.Iftheelementwe'relookingforislargerthan
mom,ouralgorithmwillthrowaway
everything
smallerthanmom,including
those
3
n
=
10
elements,beforerecursing.Thus,theinputtotherecursive
subproblemcontainsatmost
7
n
=
10
elements.Asymmetricargumentimplies
thatifourtargetelementissmallerthanmom,wediscardatleast
3
n
=
10
elementslargerthanmom,sotheinputtoourrecursivesubproblemhasatmost
7
n
=
10
elements.
Okay,somomisagoodpivot,butouralgorithmstillmakes
two
recursive
callsinsteadofjustone;howdoweprovelineartime?Thesecondkeyinsightis
thatthe
total
sizeofthetworecursivesubproblemsisaconstantfactorsmaller
thanthesizeoftheoriginalinputarray.Thewserunningtimeofthe
algorithmobeystherecurrence
T
(
n
)

T
(
n
=
5
)+
T
(
7
n
=
10
)+
O
(
n
)
.
Ifwedrawouttherecursiontreeforthisrecurrence,weobservethatthetotal
workateachleveloftherecursiontreeisatmost
9
=
10
thetotalworkatthe
previouslevel.Thus,thelevelsumsdecayexponentially,givingusthesolution
T
(
n
)=
O
(
n
)
.(Again,thefactthattherecursiontreeisunbalancediscompletely
immaterial.)Hooray!Thanks,Mom!
38

ª
1.8.Linear-TimeSelection
Figure1.13.
Therecursiontreesfor
MomSelect
andasimilarselectionalgorithmwithblocksofsize3
SanityChecking
Atthispoint,manystudentsaskaboutthatmagicconstant
5
.Whydidwe
choosethatparticularblocksize?Theansweristhat
5
isthesmallestodd
blocksizethatgivesusexponentialdecayintherecursioanalysis!(Even
blocksizesintroduceadditionalcomplications.)Ifwehadusedblocksofsize
3
instead,therecurrencewouldbe
T
(
n
)

T
(
n
=
3
)+
T
(
2
n
=
3
)+
O
(
n
)
.
We'veseenthisrecurrencebefore!Everyleveloftherecursiontreehastotal
value
atmost
n
,andthedepthoftherecursiontreeis
log
3
=
2
n
=
O
(
log
n
)
,so
thesolutiontothisrecurrenceis
T
(
n
)

O
(
n
log
n
)
.(Moreover,thisanalysisis
tight,becausetherecursiontreehas
log
3
n
completelevels.)Medifans
selectionusing
3
ementblocksisnofasterthansorting.
Fineranalysisrevealsthattheconstanthiddenbythe
O
()
notationisquite
large,evenifwecountonlycomparisons.Selectingthemedianof
5
elements
requires
atmost
6
comparisons
,soweneedatmost
6
n
=
5
comparisonstoset
uptherecursivesubproblem.Naïvelypartitioningthearrayaftertherecursive
callwouldrequire
n

1
comparisons,butwealreadyknow
3
n
=
10
elements
largerthanthepivotand
3
n
=
10
elementssmallerthanthepivot,sopartitioning
actuallyrequiresonly
2
n
=
5
additionalcomparisons.Thus,amoreprecise
recurrenceforthewsenumberofcomparisonsis
T
(
n
)

T
(
n
=
5
)+
T
(
7
n
=
10
)+
8
n
=
5.
Therecursiontreemethodimpliestheupperbound
T
(
n
)

8
n
5
X
i

0
†
9
10
‰
i
=
8
n
5

10
=
16
n
.
Inpractice,medifansselectionisnotasslowasthiswseanalysis
prediawsepivotateverylevelofrecursionisincredibly
utitisstillslowerthansortingforevenmoderatelylargearrays.
9
9
Infact,therightwaytochoosethepivotelementinpracticeistochooseit
uniformlyat
random
.Thentheexpectednumberofcomparisonsrequiredto˝ndthemedianisatmost
4
n
.
Seemyrandomizedalgorithmslecturenotesat
http://algorithms.wtf
formoredetails.
39

1.Recursion
1.9FastMultiplication
Inthepreviouschapter,wesawtwoancientalgorithmsformultiplyingtwo
n
numbersin
O
(
n
2
)
time:thelatticealgorithmandthe
Egyptianpeasantalgorithm.
Maybewecangetamoree˚cientalgorithmbysplittingthedigitarraysin
halfandexploitingthefollowingidentity:
(
10
m
a
+
b
)(
10
m
c
+
d
)=
10
2
m
ac
+
10
m
(
bc
+
ad
)+
bd
Thisrecurrenceimmediatelysuggeststhefollowingdinquera
rithmtomultiplytwo
n
numbers
x
and
y
.Eachofthefouructs
ac
,
bc
,
ad
,and
bd
iscomputedrecursively,butthemultiplicationsinthelast
lineare
not
recursive,becausewecanmultiplybyapoweroftenbyshiftingthe
digitstotheleftand˝llinginthecorrectnumberofzeros,allin
O
(
n
)
time.
SplitMultiply
(
x
,
y
,
n
)
:
if
n
=
1
return
x

y
else
m
 d
n
=
2
e
a
 b
x
=
10
m
c
;
b
 
x
mod10
m
hh
x
=
10
m
a
+
b
ii
c
 b
y
=
10
m
c
;
d
 
y
mod10
m
hh
y
=
10
m
c
+
d
ii
e
 
SplitMultiply
(
a
,
c
,
m
)
f
 
SplitMultiply
(
b
,
d
,
m
)
g
 
SplitMultiply
(
b
,
c
,
m
)
h
 
SplitMultiply
(
a
,
d
,
m
)
return
10
2
m
e
+
10
m
(
g
+
h
)+
f
Correctnessofthisalgorithmfollowseasilybyinduction.Therunningtimefor
thisalgorithmfollowstherecurrence
T
(
n
)=
4
T
(
d
n
=
2
e
)+
O
(
n
)
.
Therecursiontreemethodtransformsthisrecurrenceintoan
increasing

metricseries,whichimplies
T
(
n
)=
O
(
n
log
2
4
)=
O
(
n
2
)
.Infact,thisalgorithm
multiplieseachdigitof
x
witheachdigitof
y
,justlikethelatticealgorithm.
SoIguessthatdidn'twork.Toobad.Itwasaniceidea.
IntheAndreiKolmogorov,oneofthegiantsof20thcentury
mathematics,publiclyconjecturedthatthereis
no
algorithmtomultiplytwo
n
numbersinsubquadratictime.Kolmogorovorganizedaseminarat
MoscowUniversityin1960,whereherestatedhis
n
2
coandposed
severalrelatedproblemsthatheplannedtodiscussatfuturemeetings.Almost
exactlyaweeklater,astudentnamedAnatoli

ˇKaratsubapresented
Kolmogorovwitharemarkablecounterexample.AccordingtoKaratsubahimself,
40

1.9.FastMultiplication
Figure1.14.
Therecursiontreefornaïvedivide-and-conquermultiplication
AftertheseminarItoldKolmogorovaboutthenewalgorithmandaboutthe
disproofofthe
n
2
conjecture.Kolmogorovwasveryagitatedbecausethis
contradictedhisveryplausibleconjecture.Atthenextmeetingofthesemi-
nar,Kolmogorovhimselftoldtheparticipantsaboutmymethod,andatthat
pointtheseminarwasterminated.
Karatsubaobservedthatthemiddlecoe˚cient
bc
+
ad
canbecomputedfromthe
othertwocoe˚cients
ac
and
bd
usingonly
one
morerecursivemultiplication,
viathefollowingalgebraicidentity:
ac
+
bd

(
a

b
)(
c

d
)=
bc
+
ad
Thistrickletsusreplacethefourrecursivecallsinthepreviousalgorithmwith
onlythreerecursivecalls,asshownbelow:
FastMultiply
(
x
,
y
,
n
)
:
if
n
=
1
return
x

y
else
m
 d
n
=
2
e
a
 b
x
=
10
m
c
;
b
 
x
mod10
m
hh
x
=
10
m
a
+
b
ii
c
 b
y
=
10
m
c
;
d
 
y
mod10
m
hh
y
=
10
m
c
+
d
ii
e
 
FastMultiply
(
a
,
c
,
m
)
f
 
FastMultiply
(
b
,
d
,
m
)
g
 
FastMultiply
(
a

b
,
c

d
,
m
)
return
10
2
m
e
+
10
m
(
e
+
f

g
)+
f
TherunningtimeofKaratsuba's
FastMultiply
algorithmfollowstherecurrence
T
(
n
)

3
T
(
d
n
=
2
e
)+
O
(
n
)
Onceagain,therecursiontreemethodtransformsthisrecurrenceintoan
increasinggeometricseries,butthenewsolutionisonly
T
(
n
)=
O
(
n
log
2
3
)=
O
(
n
1.58496
)
,asigni˝cantimprovementoverourearlierquadratictimebound.
10
10
Mypresentationsimpli˝estheactualhistoryslightly.Infact,Karatsubaproposedan
algorithmbasedontheformula
(
a
+
b
)(
c
+
d
)

ac

bd
=
bc
+
ad
.Thisalgorithmalsoruns
in
O
(
n
lg3
)
time,buttheactualrecurrenceisslightlymessier:
a

b
and
c

d
arestill
m

numbers,but
a
+
b
and
c
+
d
mighteachhave
m
+
1
digits.Thesimpli˝cationpresentedhereis
duetoDonaldKnuth.
41

1.Recursion
Karatsuba'salgorithmarguablylaunchedthedesignandanalysisofalgorithms
asaformal˝eldofstudy.
Figure1.15.
TherecursiontreeforKaratsuba'sdivide-and-conquermultiplicationalgorithm
WecantakeKaratsuba'sideaevenfurther,splittingthenumbersinto
morepiecesandcombiningtheminmorecomplicatedways,toobtaineven
fastermultiplicationalgorithms.AndreiToomdiscoveredanin˝nitefamily
ofalgorithmsthatsplitanyintegerinto
k
parts,eachwith
n
=
k
digits,and
thencomputetheproductusingonly
2
k

1
recursivemultiplications;Toom's
algorithmswerefurthersimpli˝edbyStephenCookinhisPhDthesis.Forany
˝xed
k
,theTooookalgorithmrunsin
O
(
n
1
+
1
=
(
lg
k
)
)
time,wherethehidden
constantinthe
O
(

)
notationdependson
k
.
Ultimately,thisdinquerstrategyledGauss(yes,really)tothe
discoveryofthe
FastFouriertransform
.
11
ThebasicFFTalgorithmitself
runsin
O
(
n
log
n
)
time;however,usingFFTsforintegermultiplicationincurs
somesmalladditionaloverhead.The˝rstFFTsedintegermultiplication
algorithm,publishedbyArnoldSchönhageandVolkerStrassenin1971,runs
in
O
(
n
log
n
loglog
n
)
time.Schössenremainedthetheoretically
fastestintegermultiplicationalgorithmforseveraldecades,beforeMartinFürer
discoveredthe˝rstofalongseriesoftechnicalimprovements.Finally,in2019,
DavidHarveyandJorisvanderHoevenpublishedanalgorithmthatrunsin
O
(
n
log
n
)
time.
12
1.10Exponentiation
Givenanumber
a
andapositiveinteger
n
,supposewewanttocompute
a
n
.The
standardnaïvemethodisasimplefoopthatperforms
n

1
multiplications
by
a
:
11
See
http://algorithms.wtf
forlecturenotesonFastFouriertransforms.
12
Schössenisactuallythefastestalgorithm
inpractice
formultiplyingintegerswith
morethanabout75000digits;themorerecentalgorithmsofFürer,Harvey,vanderHoeven,and
otherswouldbefasterpractionlyforintegerswithmoredigitsthanthereareparticlesin
theuniverse.
42

1.10.Exponentiation
SlowPower
(
a
,
n
)
:
x
 
a
for
i
 
2
to
n
x
 
x

a
return
x
Thisiterativealgorithmrequires
n
multiplications.
Theinputparameter
a
couldbeaninteger,orarational,ora˛oatingpoint
number.Infact,itdoesn'tneedtobeanumberatall,aslongasit'ssomething
thatweknowhowtomultiply.Forexample,thesamealgorithmcanbeused
tocomputepowersmodulosome˝nitenumber(anoperationcommonlyused
incryptographyalgorithms)ortocomputepowersofmatrices(anoperation
usedtoevaluaterecurrencesandtocomputeshortestpathsingraphs).Because
wedon'tknowwhatkindofobjectwe'remultiplying,we
can't
knowhowmuch
timeasinglemultiplicationrequires,sowe'reforcedtoanalyzetherunning
timeintermsofthenumberofmultiplications.
Thereisamuchfasterdinquermethod,originallyproposedby
theIndianprosodistPi

ngalainthe2ndcentury
bce
,whichusesthefollowing
simplerecursiveformula:
a
n
=
8
>
<
>
:
1
if
n
=
0
(
a
n
=
2
)
2
if
n
>
0
and
n
iseven
(
a
b
n
=
2
c
)
2

a
otherwise
Pi

ngalaPower
(
a
,
n
)
:
if
n
=
1
return
a
else
x
 
Pi

ngalaPower
(
a
,
b
n
=
2
c
)
if
n
iseven
return
x

x
else
return
x

x

a
Thetotalnumberofmultiplicationsperformedbythisalgorithmsatis˝esthe
recurrence
T
(
n
)

T
(
n
=
2
)+
2
.Therecursiomethodimmediatelygiveus
thesolution
T
(
n
)=
O
(
log
n
)
.
Anearlyidenticalexponentiationalgorithmcanalsobederiveddirectly
fromtheEgyptianpeasantmultiplicationalgorithmfromthepreviouschapter,
byreplacingadditionwithmultiplication(andinparticular,replacingduplation
withsquaring).
a
n
=
8
>
<
>
:
1
if
n
=
0
(
a
2
)
n
=
2
if
n
>
0
and
n
iseven
(
a
2
)
b
n
=
2
c

a
otherwise
43

1.Recursion
PeasantPower
(
a
,
n
)
:
if
n
=
1
return
a
elseif
n
iseven
return
PeasantPower
(
a
2
,
n
=
2
)
else
return
PeasantPower
(
a
2
,
b
n
=
2
c
)

a
Thisachmightreasonablybecalledaringandmediatio
alsoperformsonly
O
(
log
n
)
multiplications.
Bothofthesealgorithmsareasymptoticallyoptimal;anyalgorithmthat
computes
a
n
must
performatleast

(
log
n
)
multiplications,becauseeach
multiplicationatmostdoublesthelargestpowercomputedsofar.Infact,
when
n
isapoweroftwo,bothofthesealgorithmsrequireexactly
log
2
n
multiplications,whichis
exactly
optimal.However,thereareslightlyfaster
methodsforothervaluesof
n
.Forexample,
Pi

ngalaPower
and
PeasantPower
eachcompute
a
15
usingsixmultiplications,butinfactonly˝vemultiplications
arenecessary:
‹
Pi

ngala:
a
!
a
2
!
a
3
!
a
6
!
a
7
!
a
14
!
a
15
‹
Peasant:
a
!
a
2
!
a
4
!
a
8
!
a
12
!
a
14
!
a
15
‹
Optimal:
a
!
a
2
!
a
3
!
a
5
!
a
10
!
a
15
Itisaloandingopenquestionwhethertheabsoluteminimumnumberof
multiplicationsforagivenexponent
n
canbecomputede˚ciently.
Exercises
TowerofHanoi
1.
ProvethattheoriginalrecursiveTowerofHanoialgorithmperforms
exactly
thesamesequenceofmovsamedisks,toandfromthesamepegs,
inthesameseachofthefollowingnovealgorithms.The
pegsarelabeled
0
,
1
,and
2
,andourproblemistomoveastackof
n
disks
frompeg
0
topeg
2
(asshownonpage
24
).
(a)
If
n
iseven,swappegs
1
and
2
.Atthe
i
thstep,maketheonlylegal
movethatavoidspeg
i
mod3
.Ifthereisnolegalmove,thenalldisks
areonpeg
i
mod3
,andthepuzzleissolved.
(b)
Forthe˝rstmove,movedisk
1
topeg
1
if
n
isevenandtopeg
2
if
n
is
odd.Thenrepeatedlymaketheonlylegalmovethatinvolvesadi˙erent
diskfromthepreviousmove.Ifnosuchmoveexists,thepuzzleissolved.
(c)
Pretendthatdisks
n
+
1
,
n
+
2
,and
n
+
3
areatthebottomofpegs
0
,
1
,
and
2
,respectively.Repeatedlymaketheonlylegalmovethatsatis˝es
thefollowingconstraints,untilnosuchmoveispossible.
44

Exercises
‹
Donotplaceanodddiskdirectlyontopofanotherodddisk.
‹
Donotplaceanevendiskdirectlyontopofanotherevendisk.
‹
Donotundothepreviousmove.
(d)
Let
ˆ
(
n
)
denotethesmallestinteger
k
suchthat
n
=
2
k
isnotaninteger.
Forexample,
ˆ
(
42
)=
2
,because
42
=
2
1
isanintegerbut
42
=
2
2
isnot.
(Equivalently,
ˆ
(
n
)
isonemorethanthepositionoftheleastsigni˝cant
1
inthebinaryrepresentationof
n
.)Becauseitsbehaviorresemblesthe
marksonaruler,
ˆ
(
n
)
issometimescalledthe
rulerfunction
.
RulerHanoi
(
n
)
:
i
 
1
while
ˆ
(
i
)

n
if
n

i
iseven
movedisk
ˆ
(
i
)
forward
hh
0
!
1
!
2
!
0
ii
else
movedisk
ˆ
(
i
)
backward
hh
0
!
2
!
1
!
0
ii
i
 
i
+
1
2.
TheTowerofHanoiisarelativelyrecentdescendantofamucholder
mechanicalpuzzleknownastheChineselinkedrings,Baguenaudier,
dan'sRings,Meleda,Patience,TiringIrons,Prisoner'sLock,Sut,and
manyothernames.ThispuzzlewasalreadywellknowninbothChina
andEuropebythe16thcentury.TheItalianmathematicianLucaPacioli
describedthepuzzleanditssolutioninhisunpublishedtreatise
De
ViribusQuantitatis
,writtenbetween1498and1506;
13
onlyafewyearslater,
theastypoetYangShendescribedthepuzzleastoyfor
womenandThepuzzleisapocryphallyattributedtoa
Chinesegeneral,whogavethepuzzletohiswifetooccupyhertimewhile
hewasawayatwar.
Figure1.16.
The7-ringBaguenaudier,from
RécréationsMathématiques
byÉdouardLucas(1891)(See
ImageCredits
attheendofthebook.)
13
DeViribusQuantitatis
[
OnthePowersofNumbers
]isanimportantearlyworkonrecreational
mathematicsandperhapstheoldestsurvivingtreatiseonmagic.Pacioliisbetterknownfor
SummadeAritmetica
,anmpleteencyclopediaoflatemathematics,which
includedthe˝rstdescriptionofdoublbookkeeping.
45

1.Recursion
TheBaguenaudierpuzzlehasmanyphysicalforms,butoneofthemost
commonconsistsofalongmetalloopandseveralrings,whichareconnected
toasolidbasebymovablerods.Theloopisinitiallythreadedthroughthe
ringsasshowninFigure
1.16
;thegoalofthepuzzleistoremovetheloop.
Moreabstractly,wecanmodelthepuzzleasasequenceofbits,one
foreachring,wherethe
i
thbitis
1
ifthelooppassesthroughthe
i
thring
and
0
otherwise.(Hereweindextheringsfromrighttoleft,asshownin
Figure
1.16
.)Thepuzzleallowstwolegalmoves:
‹
Youcanalways˛ipthe
1
st(=rightmost)bit.
‹
Ifthebitstringendswithexactly
z
0
s,youcan˛ipthe
(
z
+
2
)
thbit.
Thegoalofthepuzzleistotransformastringof
n
1
sintoastringof
n
0
s.
Forexample,thefollowingsequenceof
21
movessolvesthepuzzle:
11111
1
!
11110
3
!
11010
1
!
11011
2
!
11001
1
!
11000
5
!
01000
1
!
01001
2
!
01011
1
!
01010
3
!
01110
1
!
01111
2
!
01101
1
!
01100
4
!
00100
1
!
00101
2
!
00111
1
!
00110
3
!
00010
1
!
00011
2
!
00001
1
!
00000
©
(a)
Callasequenceofmoves
reduced
ifnomoveistheinverseoftheprevious
move.Provethatforanynoegativeinteger
n
,thereis
exactlyone
reducedsequenceofmovesthatsolvesthe
n
Baguenaudierpuzzle.
[Hint:Thisproblemismucheasierifyou'realreadyfamiliarwith
graphs.]
(b)
DescribeanalgorithmtosolvetheBaguenaudierpuzzle.Yourinputis
thenumberofrings
n
;youralgorithmshouldprintareducedsequence
ofmovesthatsolvesthepuzzle.Forexample,giventheinteger
5
as
input,youralgorithmshouldprintthesequence
1,3,1,2,1,5,1,2,1,3,
1,2,1,4,1,2,1,3,1,2,1
.
(c)
Exactly
howmanymovesdoesyouralgorithmperform,asafunction
of
n
?Proveyouransweriscorrect.
3.
AlessfamiliarchapterintheTowerofHanoi'shistoryisitsbriefrelocation
ofthetemplefromBenarestoPisaintheearly13thcentury.
14
Therelocation
wasorganizedbythewealthycianLeonardoFibonacci,
attherequestoftheHolyRomanEmperorFrederickII,whohadheard
reportsofthetemplefromsoldiersreturningfromtheCrusades.TheTowers
ofPisaandtheirattendantmonksbecamefamous,helpingtoestablishPisa
asadominanttradingcenterontheItalianpeninsula.
14
Portionsofthisstoryareactuallytrue.
46

Exercises
Unfortunately,almostassoonasthetemplewasmoved,oneofthe
diamondneedlesbegantoleantooneside.Toavoidthepossibilityof
theleaningtowerfallingoverfromtoomuchuse,Fibonacciconvincedthe
prieststoadoptamorerelaxedrule:
Anynumberofdisksontheleaning
needlecanbemovedtogethertoanotherneedleinasinglemove.
Itwas
stillforbiddentoplacealargerdiskontopofasmallerdisk,anddiskshadto
bemovedoneatatime
onto
theleaningneedleorbetweenthetwovertical
needles.
Figure1.17.
TheTowersofPisa.Inthe˙fthmove,twodisksaretakenofftheleaningneedle.
ThankstoFibonacci'snewrule,thepriestscouldbringabouttheend
oftheuniversesomewhatfasterfromPisathantheycouldfromBenares.
Fortunately,thetemplewasmovedfromPisabacktoBenaresafterthe
newlycrownedPopeGregoryIXexcommunicatedFrederickII,making
thelocalpriestslesssympathetictohostingforeignhereticswithstrange
mathematicalhabits.Soonafterward,abelltowerwaserectedonthespot
wherethetempleoncestood;ittoobegantoleanalmostimmediately.
Describeanalgorithmtotransferastackof
n
disksfromone
vertical
needletotheother
vertical
needle,usingthesmallestpossiblenumberof
moves.
Exactly
howmanymovesdoesyouralgorithmperform?
4.
ConsiderthefollowingrestrictedvariantsoftheTowerofHanoipuzzleIn
eachproblem,thepegsarenumbered
0
,
1
,and
2
,andyourtaskistomove
astackof
n
disksfrompeg
0
topeg
2
,exactlyasinproblem
1
.
(a)
Supposeyouareforbiddentomoveanydiskdirectlybetweenpeg
1
and
peg
2
;
every
movemustinvolvepeg
0
.Describeanalgorithmtosolve
thisversionofthepuzzleinasfewmovesaspossible.
Exactly
howmany
movesdoesyouralgorithmmake?
¨
ª
(b)
Supposeyouareonlyallowedtomovedisksfrompeg
0
topeg
2
,from
peg
2
topeg
1
,orfrompeg
1
topeg
0
.Equivalently,supposethepegs
arearrangedinacircleandnumberedinclockwiseorder,andyouare
onlyallowedtomovediskscounterclockwise.Describeanalgorithmto
solvethisversionofthepuzzleinasfewmovesaspossible.Howmany
movesdoesyouralgorithmmake?
47

1.Recursion
Figure1.18.
The˙rstseveralmovesinacounterclockwiseTowersofHanoisolution.
¨
ª
(c)
Finally,supposeyouronlyrestrictionisthatyoumaynevermoveadisk
directlyfrompeg
0
topeg
2
.Describeanalgorithmtosolvethisversion
ofthepuzzleinasfewmovesaspossible.Howmanymovesdoesyour
algorithmmake?
[Hint:Matrices!Thisvariantisconsiderablyharder
toanalyzethantheothertwo.]
5.
ConsiderthefollowingmorecomplexvariantoftheTowerofHanoipuzzle
Thepuzzlehasarowof
k
pegs,numberedfrom
1
to
k
.Inasingleturn,you
areallowedtomovethesmallestdiskonpeg
i
toeitherpeg
i

1
orpeg
i
+
1
,
foranyindex
i
;asusual,youarenotallowedtoplaceabiggerdiskona
smallerdisk.Yourmissionistomoveastackof
n
disksfrompeg
1
topeg
k
.
(a)
Describearecursivealgorithmforthecase
k
=
3
.
Exactly
howmany
movesdoesyouralgorithmmake?(Thisisexactlythesameasproblem
4(a)
.)
(b)
Describearecursivealgorithmforthecase
k
=
n
+
1
thatrequiresat
most
O
(
n
3
)
moves.
[Hint:Usepart(a).]
ª
(c)
Describearecursivealgorithmforthecase
k
=
n
+
1
thatrequiresat
most
O
(
n
2
)
moves.
[Hint:Don'tusepart(a).]
ª
(d)
Describearecursivealgorithmforthecase
k
=
p
n
thatrequiresatmost
apolynomialnumberofmoves.(Whichpolynomial??)
ª
(e)
Describeandanalyzearecursivealgorithmforarbitrary
n
and
k
.How
smallmust
k
be(asafunctionof
n
)sothatthenumberofmovesis
boundedbyapolynomialin
n
?
48

Exercises
RecursionTrees
6.
Userecursiontreestosolveeachofthefollowingrecurrences.
A
(
n
)=
2
A
(
n
=
4
)+
p
nB
(
n
)=
2
B
(
n
=
4
)+
nC
(
n
)=
2
C
(
n
=
4
)+
n
2
D
(
n
)=
3
D
(
n
=
3
)+
p
nE
(
n
)=
3
E
(
n
=
3
)+
nF
(
n
)=
3
F
(
n
=
3
)+
n
2
G
(
n
)=
4
G
(
n
=
2
)+
p
nH
(
n
)=
4
H
(
n
=
2
)+
nI
(
n
)=
4
I
(
n
=
2
)+
n
2
7.
Userecursiontreestosolveeachofthefollowingrecurrences.
(j)
J
(
n
)=
J
(
n
=
2
)+
J
(
n
=
3
)+
J
(
n
=
6
)+
n
(k)
K
(
n
)=
K
(
n
=
2
)+
2
K
(
n
=
3
)+
3
K
(
n
=
4
)+
n
2
(l)
L
(
n
)=
L
(
n
=
15
)+
L
(
n
=
10
)+
2
L
(
n
=
6
)+
p
n
ª
8.
Userecursiontreestosolveeachofthefollowingrecurrences.
(m)
M
(
n
)=
2
M
(
n
=
2
)+
O
(
n
log
n
)
(n)
N
(
n
)=
2
N
(
n
=
2
)+
O
(
n
=
log
n
)
(p)
P
(
n
)=
p
nP
(
p
n
)+
n
(q)
Q
(
n
)=
p
2
nQ
(
p
2
n
)+
p
n
Sorting
9.
Supposeyouaregivenastackof
n
pancakesofdi˙erentsizes.Youwantto
sortthepancakessothatsmallerpancakesareontopoflargerpancakes.
Theonlyoperationyoucanperformisa
˛ip
aspatulaunderthe
top
k
pancakes,forsomeinteger
k
between
1
and
n
,and˛ipthemallover.
Figure1.19.
Flippingthetopfourpancakes.
(a)
Describeanalgorithmtosortanarbitrarystackof
n
pancakesusing
O
(
n
)
˛ips.
Exactly
howmany˛ipsdoesyouralgorithmperforminthe
worstcase?
15
[Hint:ThisproblemhasnothingtodowiththeTowerof
Hanoi.]
15
The
exact
wseoptimalnumberof˛ipsrequiredtosort
n
pancakes(eitherburnedor
unburned)isanloandingopenproblem;justdothebestyoucan.
49

1.Recursion
(b)
Foreverypositiveinteger
n
,describeastackof
n
pancakesthatrequires

(
n
)
˛ipstosort.
(c)
Nowsupposeonesideofeachpancakeisburned.Describeanalgorithm
tosortanarbitrarystackof
n
pancakes,sothattheburnedsideofevery
pancakeisfacingdown,using
O
(
n
)
˛ips.
Exactly
howmany˛ipsdoes
youralgorithmperformintheworstcase?
10.
Recallthatthe
medif
heuristicexaminesthe˝rst,last,andmiddle
elementofthearray,andusesthemedianofthosethreeelementsasa
quicksortpivot.Provethatquicksortwiththemedifheuristic
requires

(
n
2
)
timetosortanarrayofsize
n
intheworstcase.Speci˝cally,
foranyinteger
n
,describeapermutationoftheintegers
1
through
n
,
suchthatineveryrecursivecalltomedifcksort,thepivotis
alwaysthesecondsmallestelementofthearray.Designingthispermutation
requiresintimateknowledgeofthe
Partition
subroutine.
(a)
Asawexercise,assumethatthe
Partition
subroutineis
stable
,
meaningitpreservestheexistingorderofallelementssmallerthanthe
pivot,anditpreservestheexistingorderofallelementssmallerthan
thepivot.
ª
(b)
Assumethatthe
Partition
subroutineusesthespeci˝calgorithmlisted
onpage
29
,whichis
not
stable.
11.
(a)
Hey,Moe!Hey,Larry!Provethatthefollowingalgorithmactuallysorts
itsinput!
StoogeSort
(
A
[
0..
n

1
])
:
if
n
=
2
and
A
[
0
]
>
A
[
1
]
swap
A
[
0
]
$
A
[
1
]
elseif
n
>
2
m
=
d
2
n
=
3
e
StoogeSort
(
A
[
0..
m

1
])
StoogeSort
(
A
[
n

m
..
n

1
])
StoogeSort
(
A
[
0..
m

1
])
(b)
Would
StoogeSort
stillsortcorrectlyifwereplaced
m
=
d
2
n
=
3
e
with
m
=
b
2
n
=
3
c
?Justifyyouranswer.
(c)
Statearecurrence(includingthebasecase(s))forthenumberof
comparisonsexecutedby
StoogeSort
.
(d)
Solvetherecurrence,andprovethatyoursolutioniscorrect.
[Hint:
Ignoretheceiling.]
(e)
Provethatthenumberof
swaps
executedby
StoogeSort
isatmost

n
2

.
12.
ThefollowingcruelandunusualsortingalgorithmwasproposedbyGary
Miller:
50

Exercises
Cruel
(
A
[
1..
n
])
:
if
n
>
1
Cruel
(
A
[
1..
n
=
2
])
Cruel
(
A
[
n
=
2
+
1..
n
])
Unusual
(
A
[
1..
n
])
Unusual
(
A
[
1..
n
])
:
if
n
=
2
if
A
[
1
]
>
A
[
2
]
hh
theonlycomparison!
ii
swap
A
[
1
]
$
A
[
2
]
else
for
i
 
1
to
n
=
4
hh
swap2ndand3rdquarters
ii
swap
A
[
i
+
n
=
4
]
$
A
[
i
+
n
=
2
]
Unusual
(
A
[
1..
n
=
2
])
hh
recurseonlefthalf
ii
Unusual
(
A
[
n
=
2
+
1..
n
])
hh
recurseonrighthalf
ii
Unusual
(
A
[
n
=
4
+
1..3
n
=
4
])
hh
recurseonmiddlehalf
ii
Thecomparisonsperformedbythisalgorithmdonotdependatallon
thevaluesintheinputarray;suchasortingalgorithmiscalled
oblivious
.
Assumeforthisproblemthattheinputsize
n
isalwaysapowerof
2
.
(a)
Provebyinductionthat
Cruel
correctlysortsanyinputarray.
[Hint:
Consideranarraythatcontains
n
=
41
s,
n
=
42
s,
n
=
43
s,and
n
=
44
s.Why
isthisspecialcaseenough?]
(b)
Provethat
Cruel
would
not
correctlysortifweremovedthefoop
from
Unusual
.
(c)
Provethat
Cruel
would
not
correctlysortifweswappedthelasttwo
linesof
Unusual
.
(d)
Whatistherunningtimeof
Unusual
?Justifyyouranswer.
(e)
Whatistherunningtimeof
Cruel
?Justifyyouranswer.
13.
An
inversion
inanarray
A
[
1..
n
]
isapairofindices
(
i
,
j
)
suchthat
i
<
j
and
A
[
i
]
>
A
[
j
]
.Thenumberofinversionsinan
n
ementarrayisbetween
0
(ifthearrayissorted)and

n
2

(ifthearrayissortedbackward).Describe
andanalyzeanalgorithmtocountthenumberofinversionsinan
n
ement
arrayin
O
(
n
log
n
)
time.
[Hint:Modifymergesort.]
14.
(a)
Supposeyouaregiventwosetsof
n
points,oneset
f
p
1
,
p
2
,...,
p
n
g
onthe
line
y
=
0
andtheotherset
f
q
1
,
q
2
,...,
q
n
g
ontheline
y
=
1
.Createaset
of
n
linesegmentsbyconnecteachpoint
p
i
tothecorrespondingpoint
q
i
.
Describeandanalyzeadinqueralgorithmtodeterminehow
manypairsoftheselinesegmentsintersect,in
O
(
n
log
n
)
time.
[Hint:
Seethepreviousproblem.]
(b)
Nowsupposeyouaregiventwosets
f
p
1
,
p
2
,...,
p
n
g
and
f
q
1
,
q
2
,...,
q
n
g
of
n
points
ontheunitcircle
.Connecteachpoint
p
i
tothecorresponding
51

1.Recursion
point
q
i
.Describeandanalyzeadinqueralgorithmto
determinehowmanypairsoftheselinesegmentsintersectin
O
(
n
log
2
n
)
time.
[Hint:Useyoursolutiontopart(a).]
ª
(c)
Describeanalgorithmforpart(b)thatrunsin
O
(
n
log
n
)
time.
[Hint:
Useyoursolutionfrompart(b)!]
Figure1.20.
Elevenintersectingpairsofsegmentswithendpointsonparallellines,andtenintersecting
pairsofsegmentswithendpointsonacircle.
15.
(a)
Describeanalgorithmthatsortsaninputarray
A
[
1..
n
]
bycallinga
subroutine
SqrtSort
(
k
)
,whichsortsthesubarray
A

k
+
1..
k
+
p
n

in
place,givenanarbitraryinteger
k
between
0
and
n

p
n
asinput.(To
simplifytheproblem,assumethat
p
n
isaninteger.)Youralgorithmis
only
allowedtoinspectormodifytheinputarraybycalling
SqrtSort
;
inparticular,youralgorithmmustnotdirectlycompare,move,orcopy
arrayelements.Howmanytimesdoesyouralgorithmcall
SqrtSort
in
theworstcase?
¨
(b)
Provethatyouralgorithmfrompart(a)isoptimaluptoconstantfactors.
Inotherwords,if
f
(
n
)
isthenumberoftimesyouralgorithmcalls
SqrtSort
,provethatnoalgorithmcansortusing
o
(
f
(
n
))
callsto
SqrtSort
.
(c)
Nowsuppose
SqrtSort
isimplementedrecursively,bycallingyour
sortingalgorithmfrompart(a).Forexample,atthesecondlevelof
recursion,thealgorithmissortingarraysroughlyofsize
n
1
=
4
.What
isthewserunningtimeoftheresultingsortingalgorithm?(To
simplifytheanalysis,assumethatthearraysize
n
hastheform
2
2
k
,so
thatrepeatedsquarerootsarealwaysintegers.)
Selection
16.
Supposewearegivenaset
S
of
n
items,eachwitha
value
anda
weight
.For
anyelement
x
2
S
,wede˝netwosubsets
52

Exercises
‹
S
<
x
isthesetofelementsof
S
whosevalueislessthanthevalueof
x
.
‹
S
>
x
isthesetofelementsof
S
whosevalueismorethanthevalueof
x
.
Foranysubset
R

S
,let
w
(
R
)
denotethesumoftheweightsofelementsin
R
.
The
weightedmedian
of
R
isanyelement
x
suchthat
w
(
S
<
x
)

w
(
S
)
=
2
and
w
(
S
>
x
)

w
(
S
)
=
2
.
Describeandanalyzeanalgorithmtocomputetheweightedmedian
ofagivenweightedsetin
O
(
n
)
time.Yourinputconsistsoftwounsorted
arrays
S
[
1..
n
]
and
W
[
1..
n
]
,whereforeachindex
i
,the
i
thelementhas
value
S
[
i
]
andweight
W
[
i
]
.Youmayassumethatallvaluesaredistinctand
allweightsarepositive.
17.
(a)
Describeanalgorithmtodeterminein
O
(
n
)
timewhetheranarbitrary
array
A
[
1..
n
]
containsmorethan
n
=
4
copiesofanyvalue.
(b)
Describeandanalyzeanalgorithmtodetermine,givenanarbitrary
array
A
[
1..
n
]
andaninteger
k
,whether
A
containsmorethan
k
copies
ofanyvalue.Expresstherunningtimeofyouralgorithmasafunction
ofboth
n
and
k
.
Donotusehashing,orradixsort,oranyothermethodthatdepends
onthepreciseinputvalues,asopposedtotheirorder.
18.
Describeanalgorithmtocomputethemedianofanarray
A
[
1..5
]
ofdistinct
numbersusingatmost
6
comparisons.Insteadofwritingpseudocode,
describeyouralgorithmusinga
decisiontree
:Abinarytreewhereeach
internalnodecontainsacomparisonoftheform
A
[
i
]
¿
A
[
j
]
andeach
leafcontainsanindexintothearray.
Figure1.21.
Findingthemedianofa3-elementarrayusingatmost3comparisons
19.
ConsiderthegeneralizationofthevTarjan
Mo
Select
algorithmshowninFigure
1.22
,whichpartitionstheinputarrayinto
d
n
=
b
e
blocksofsize
b
,insteadof
d
n
=
5
e
blocksofsize
5
,butisotherwise
identical.
53

1.Recursion
Mom
b
Select
(
A
[
1..
n
]
,
k
)
:
if
n

b
2
usebruteforce
else
m
 
d
n
=
b
e
for
i
 
1
to
m
M
[
i
]
 
MedianOfB
(
A
[
b
(
i

1
)+
1..
bi
])
mom
b
 
Mom
b
Select
(
M
[
1..
m
]
,
b
m
=
2
c
)
r
 
Partition
(
A
[
1..
n
]
,
mom
b
)
if
k
<
r
return
Mom
b
Select
(
A
[
1..
r

1
]
,
k
)
elseif
k
>
r
return
Mom
b
Select
(
A
[
r
+
1..
n
]
,
k

r
)
else
return
mom
b
Figure1.22.
Aparametrizedfamilyofselectionalgorithms;seeproblem
19
.
(a)
Statearecurrencefortherunningtimeof
Mom
b
Select
,assumingthat
b
isaconstant(sothesubroutine
MedianOfB
runsin
O
(
1
)
time).In
particular,howdothesizesoftherecursivesubproblemsdependonthe
constant
b
?Considereven
b
andodd
b
separately.
(b)
Whatisthewserunningtimeof
Mom
1
Select
?
[Hint:Thisisa
trickquestion.]
¨
ª
(c)
Whatisthewserunningtimeof
Mom
2
Select
?
[Hint:Thisisan
unfairquestion!]
ª
(d)
Whatisthewserunningtimeof
Mom
3
Select
?Findinganupper
boundontherunningtimeisstraightforward;thehardpartisshowing
thatthisanalysisisactuallytight.
[Hint:Seeproblem
10
.]
ª
(e)
Whatisthewserunningtimeof
Mom
4
Select
?Again,thehard
partisshowingthattheanalysiscannotbeimproved.
16
(f)
Foranyconstants
b

5
,thealgorithm
Mom
b
Select
runsin
O
(
n
)
time,
butdi˙erentvaluesof
b
leadtodi˙erentconstantfactors.Let
M
(
b
)
denotetheminimumnumberofcomparisonsrequiredto˝ndthemedian
of
b
numbers.Theexactvalueof
M
(
b
)
isknownonlyfor
b

13
:
b
12345678910111213
M
(
b
)
01346810121416182023
16
Themedianoffourelementsiseitherthesecondsmallestorthesecondlargest.In2014,
KeChenandAdrianDumitrescuprovedthatifwemodify
Mom
4
Select
to˝ndsecollest
elementswhen
k
<
n
=
2
andsecoargestelementswhen
k
>
n
=
2
,theresultingalgorithmruns
in
O
(
n
)
time!SeetheirpaperelectwithGroupsof
3
or
4
TakesLinearT(WADS2015,
arXiv:1409.3600)fordetails.
54

Exercises
Foreach
b
between
5
and
13
,˝ndanupperboundontherunningtime
of
Mom
b
Select
oftheform
T
(
n
)


b
n
forsomeexplicitconstant

b
.
(Forexample,onpage
39
weshowedthat

5

16
.)
(g)
Whichvalueof
b
yieldsthesmallestconstant

b
?
[Hint:Thisisatrick
question!]
20.
ProvethatthevariantofthevTarjan
Select
a
rithmshowninFigure
1.23
,whichusesanextralayerofsmallmediansto
choosethemainpivot,runsin
O
(
n
)
time.
MomomSelect
(
A
[
1..
n
]
,
k
)
:
if
n

81
usebruteforce
else
m
 d
n
=
3
e
for
i
 
1
to
m
M
[
i
]
 
MedianOf3
(
A
[
3
i

2..3
i
])
mm
 d
m
=
3
e
for
j
 
1
to
mm
Mom
[
j
]
 
MedianOf3
(
M
[
3
j

2..3
j
])
momom
 
MomomSelect
(
Mom
[
1..
mm
]
,
b
mm
=
2
c
)
r
 
Partition
(
A
[
1..
n
]
,
momom
)
if
k
<
r
return
MomomSelect
(
A
[
1..
r

1
]
,
k
)
elseif
k
>
r
return
MomomSelect
(
A
[
r
+
1..
n
]
,
k

r
)
else
return
momom
Figure1.23.
Selectionbymedianofmoms;seeproblem
20
).
21.
(a)
Supposewearegiventwosortedarrays
A
[
1..
n
]
and
B
[
1..
n
]
.Describe
analgorithmto˝ndthemedianelementintheunionof
A
and
B
in

(
log
n
)
time.Youcanassumethatthearrayscontainnoduplicate
elements.
(b)
Supposewearegiventwosortedarrays
A
[
1..
m
]
and
B
[
1..
n
]
andan
integer
k
.Describeanalgorithmto˝ndthe
k
thsmallestelementin
A
[
B
in

(
log
(
m
+
n
))
time.Forexample,if
k
=
1
,youralgorithm
shouldreturnthesmallestelementof
A
[
B
.)
[Hint:Useyoursolution
topart(a).]
ª
(c)
Nowsupposewearegiven
three
sortedarrays
A
[
1..
n
]
,
B
[
1..
n
]
,and
C
[
1..
n
]
,andaninteger
k
.Describeanalgorithmto˝ndthe
k
thsmallest
elementin
A
[
B
[
C
in
O
(
log
n
)
time.
55

1.Recursion
(d)
Finally,supposewearegivenatwodimensionalarray
A
[
1..
m
,1..
n
]
in
whicheveryrow
A
[
i
,

]
issorted,andaninteger
k
.Describeanalgorithm
to˝ndthe
k
thsmallestelementin
A
asquicklyaspossible.Howdoes
therunningtimeofyouralgorithmdependon
m
?
[Hint:Solveproblem
16
˝rst.]
Arithmetic
22.
In1854,archaeologistsdiscoveredSumeriansclaytablets,carvedaround
2000
bce
,thatlistthesquaresofintegersupto
59
.Thisdiscoveryledsome
scholarstoconjecturethatancientSumeriansperformedmultiplicationby
reductiontosquaring,usinganidentitylike
x

y
=(
x
2
+
y
2

(
x

y
)
2
)
=
2
.
Unfortunately,thosesamescholarsaresilentonhowtheSumerians
posedlysquaredlargernumbers.Fourthousandyearslater,wecan˝nally
rescuetheseSumerianmathematiciansfromtheirlivesofdrudgerythrough
thepowerofrecursion!
(a)
DescribeavariantofKaratsuba'salgorithmthatsquaresany
n

numberin
O
(
n
lg3
)
time,byreducingtosquaringthree
d
n
=
2
e

numbers.(Karatsubaactuallydidthisin1960.)
(b)
Describearecursivealgorithmthatsquaresany
n
numberin
O
(
n
log
3
6
)
time,byreducingtosquaringsix
d
n
=
3
e
numbers.
ª
(c)
Describearecursivealgorithmthatsquaresany
n
numberin
O
(
n
log
3
5
)
time,byreducingtosquaringonly
˝ve
(
n
=
3
+
O
(
1
))

numbers.
[Hint:Whatis
(
a
+
b
+
c
)
2
+(
a

b
+
c
)
2
?]
23.
(a)
DescribeandanalyzeavariantofKaratsuba'salgorithmthatm
pliesany
m
numberandany
n
number,forany
n

m
,in
O
(
nm
lg3

1
)
time.
(b)
Describeanalgorithmtocomputethedecimalrepresentationof
2
n
in
O
(
n
lg3
)
time,usingthealgorithmfrompart(a)asasubroutine.(The
standardalgorithmthatcomputesonedigitatatimerequires

(
n
2
)
time.)
(c)
Describeadinqueralgorithmtocomputethedecimal
resentationofanarbitrary
n
binarynumberin
O
(
n
lg3
)
time.
[Hint:
Watchoutforanextralogfactorintherunningtime.]
ª
(d)
Supposewecanmultiplytwo
n
numbersin
O
(
M
(
n
))
time.Describe
analgorithmtocomputethedecimalrepresentationofanarbitrary
n

binarynumberin
O
(
M
(
n
)
log
n
)
time.
[Hint:Theanalysisisthehard
part;useadomaintransformation.]
56

Exercises
24.
Considerthefollowingclassicalrecursivealgorithmforcomputingthe
factorial
n
!
ofanoegativeinteger
n
:
Factorial
(
n
)
:
if
n
=
0
return
1
else
return
n

Factorial
(
n

1
)
(a)
Howmanymultiplicationsdoesthisalgorithmperform?
(b)
Howmanybitsarerequiredtowrite
n
!
inbinary?Expressyouranswer
intheform

(
f
(
n
))
,forsomefamiliarfunction
f
(
n
)
.
[Hint:
(
n
=
2
)
n
=
2
<
n
!
<
n
n
.]
(c)
Youranswerto(b)shouldconvinceyouthatthenumberofmultiplications
is
not
agoodestimateoftheactualrunningtimeof
Factorial
.We
canmultiplyany
k
numberandany
l
numberin
O
(
k

l
)
time
usingeitherthelatticealgorithmorduplationandmediation.Whatis
therunningtimeof
Factorial
ifweusethismultiplicationalgorithmas
asubroutine?
(d)
Thefollowingrecursivealgorithmalsocomputesthefactorialfunction,
butusingadi˙erentgroupingofthemultiplications:
Falling
(
n
,
m
)
:
hh
Compute
n
!
=
(
n

m
)
!
ii
if
m
=
0
return
1
elseif
m
=
1
return
n
else
return
Falling
(
n
,
b
m
=
2
c
)

Falling
(
n
b
m
=
2
c
,
d
m
=
2
e
)
Whatistherunningtimeof
Falling
(
n
,
n
)
ifweusem
plication?
[Hint:Asusual,ignorethe˛oorsandceilings.]
(e)
DescribeandanalyzeavariantofKaratsuba'salgorithmthatmultiplies
any
k
numberandany
l
number,forany
k

l
,in
O
(
k

l
lg3

1
)=
O
(
k

l
0.585
)
time.
ª
(f)
Whataretherunningtimesof
Factorial
(
n
)
and
Falling
(
n
,
n
)
ifwe
usethemodi˝edKaratsubamultiplicationfrompart(e)?
25.
The
greatestcommondivisor
oftwopositiveinteger
x
and
y
,denoted
gcd
(
x
,
y
)
,isthelargestinteger
d
suchthatboth
x
=
d
and
y
=
d
areintegers.
Euclid's
Elements
,writtenaround300
bce
,describesthefollowingrecursive
algorithmtocompute
gcd
(
x
,
y
)
:
17
17
Euclid'salgorithmissometimesincorrectlydescribedastheoldestrecursivealgorithm,
oreventheoldest
nontrivial
algorithm,eventhoughtheEgyptianduplationandmediation
achisbothnontrivialandrecursivEuclidbyatleast1500years.
57

1.Recursion
EuclidGCD
(
x
,
y
)
:
if
x
=
y
return
x
elseif
x
>
y
return
EuclidGCD
(
x

y
,
y
)
else
return
EuclidGCD
(
x
,
y

x
)
(a)
Provethat
EuclidGCD
correctlycomputes
gcd
(
x
,
y
)
.
18
Speci˝cally:
i.
Provethat
EuclidGCD
(
x
,
y
)
dividesboth
x
and
y
.
ii.
Provethateverydivisorof
x
and
y
isadivisorof
EuclidGCD
(
x
,
y
)
.
(b)
Whatisthewserunningtimeof
EuclidGCD
(
x
,
y
)
,asafunction
of
x
and
y
?(Assumethatcomputing
x

y
requires
O
(
log
x
+
log
y
)
time.)
(c)
Provethatthefollowingalgorithmalsocomputes
gcd
(
x
,
y
)
:
FastEuclidGCD
(
x
,
y
)
:
if
y
=
0
return
x
elseif
x
>
y
return
FastEuclidGCD
(
y
,
x
mod
y
)
else
return
FastEuclidGCD
(
x
,
y
mod
x
)
(d)
Whatisthewserunningtimeof
FastEuclidGCD
(
x
,
y
)
,asa
functionof
x
and
y
?(Assumethatcomputing
x
mod
y
takes
O
(
log
x

log
y
)
time.)
(e)
Provethatthefollowingalgorithmalsocomputes
gcd
(
x
,
y
)
:
BinaryGCD
(
x
,
y
)
:
if
x
=
y
return
x
elseif
x
and
y
arebotheven
return
2

BinaryGCD
(
x
=
2,
y
=
2
)
elseif
x
iseven
return
BinaryGCD
(
x
=
2,
y
)
elseif
y
iseven
return
BinaryGCD
(
x
,
y
=
2
)
elseif
x
>
y
return
BinaryGCD
((
x

y
)
=
2,
y
)
else
return
BinaryGCD
(
x
,
(
y

x
)
=
2
)
18
Eucliddidnotdothis.Proposition1in
Elements
BookVIIstatesthatif
EuclidGCD
(
x
,
y
)=
1
,
then
x
and
y
arerelativelyprime(thatis,
gcd
(
x
,
y
)=
1
),buttheproofonlyconsidersthespecial
case
x
mod
(
y
mod
(
x
mod
y
))=
1
.Proposition2statesthatif
x
and
y
are
not
relativelyprime,
then
EuclidGCD
(
x
,
y
)=
gcd
(
x
,
y
)
,buttheproofonlyconsidersthespecialcases
gcd
(
x
,
y
)=
y
and
gcd
(
x
,
y
)=
y
mod
(
x
mod
y
)
.Finally,thesetwoPropositionsdonotmakeacompleteproof
that
EuclidGCD
iscorrect.Don'tbelikeEuclid.
58

Exercises
(f)
Whatisthewserunningtimeof
BinaryGCD
(
x
,
y
)
,asafunction
of
x
and
y
?(Assumethatcomputing
x

y
takes
O
(
log
x
+
log
y
)
time,
andcomputing
z
=
2
requires
O
(
log
z
)
time.)
Arrays
26.
Supposeyouaregivena
2
n

2
n
checkerboardwithone(arbitrarilychosen)
squareremoved.Describeandanalyzeanalgorithmtocomputeatilingof
theboardbywithoutgapsoroverlapsby
L
hapedtiles,eachcomposedof3
squares.Yourinputistheinteger
n
andtwo
n
integersrepresentingthe
rowandcolumnofthemissingsquare.Theoutputisalistofthepositions
andorientationsof
(
4
n

1
)
=
3
tiles.Youralgorithmshouldrunin
O
(
4
n
)
time.
[Hint:Firstprovethatsuchatilingalwaysexists.]
27.
Youareavisitoratapoliticalconvention(orperhapsafacultymeeting)
with
n
delegates;eachdelegateisamemberofexactlyonepoliticalparty.
Itisimpossibletotellwhichpoliticalpartyanydelegatebelongsto;in
particular,youwillbesummarilyejectedfromtheconventionifyouask.
However,youcandeterminewhetheranypairofdelegatesbelongtothe
same
partybyintroducingthemtoeachother.Membersofthesamepolitical
partyalwaysgreeteachotherwithsmilesandfriendlyhandshakes;members
ofdi˙erentpartiesalwaysgreeteachotherwithangrystaresandinsults.
19
(a)
Supposemorethanhalfofthedelegatesbelongtothesamepolitical
party.Describeane˚cientalgorithmthatidenti˝esallmembersofthis
majorityparty.
(b)
Nowsupposetherearemorethantwoparties,butonepartyhasa
plurality
:morepeoplebelongtothatpartythantoanyotherparty.
Presentapracticalproceduretopreciselypickthepeoplefromthe
pluralitypoliticalpartyasparsimoniouslyaspossible,presumingthe
pluralitypartyiscomposedofatleast
p
people.Prettyplease.
28.
SmullyanIslandhasthreetypesofinhabitants:
knights
alwaysspeakthe
truth;
knaves
alwayslie;and
normals
sometimesspeakthetruthand
sometimesdon't.Everyoneontheislandknowseveryoneelse'snameand
type(knight,knave,ornormal).Youwanttolearnthetypeofevery
inhabitant.
Youcanaskanyinhabitanttotellyouthetypeofanyotherinhabitant.
Speci˝cally,ifyouaskey
X
,whatis
Y
'stthen
X
willrespondas
follows:
19
Reaorldpoliticsismuchmessierthanthissimpli˝edmodel,butthisisatheorybook!
59

1.Recursion
‹
If
X
isaknight,then
X
willrespondwith
Y
'scorrecttype.
‹
If
X
isaknave,then
X
couldrespondwith
either
ofthetypesthat
Y
is
not
.
‹
If
X
isanormal,then
X
couldrespondwith
any
ofthethreetypes.
Theinhabitantswillignoreanyquestionsnotofthispreciseform;in
particular,youmaynotaskaninhabitantabouttheirowntype.Askingthe
sameinhabitantthesamequestionmultipletimesalwaysyieldsthesame
answer,sothere'snopointinaskinganyquestionmorethanonce.
(a)
Supposeyouknowthatastrictmajorityofinhabitantsareknights.
Describeane˚cientalgorithmtoidentifythetypeofeveryinhabitant.
(b)
Provethatifatmosthalftheinhabitantsareknights,itisimpossibleto
determinethetypeofeveryinhabitant.
29.
Mostgraphicshardwareincludessupportforaloeveloperationcalled
blit
,
or
bl
ock
t
ransfer,whichquicklycopiesarectangularchunkofapixelmap
(atwonalarrayofpixelvalues)fromonelocationtoanother.This
isatwonalversionofthestandardClibraryfunction
memcpy()
.
Supposewewanttorotatean
n

n
pixelmap
90

clockwise.Onewayto
dothis,atleastwhen
n
isapoweroftwo,istosplitthepixelmapintofour
n
=
2

n
=
2
blocks,moveeachblocktoitsproperpositionusingasequenceof
˝veblits,andthenrecursivelyrotateeachblock.(Why˝ve?Forthesame
reasontheTowerofHanoipuzzleneedsathirdpeg.)Alternately,wecould
˝rst
recursivelyrotatetheblocksand
then
blitthemintoplace.
Figure1.24.
Twoalgorithmsforrotatingapixelmap.
(a)
Provethatbothversionsofthealgorithmarecorrectwhen
n
isapower
of
2
.
(b)
Exactly
howmanyblitsdoesthealgorithmperformwhen
n
isapower
of
2
?
(c)
Describehowtomodifythealgorithmsothatitworksforarbitrary
n
,
notjustpowersof
2
.Howmanyblitsdoesyourmodi˝edalgorithm
perform?
(d)
Whatisyouralgorithm'srunningtimeifa
k

k
blittakes
O
(
k
2
)
time?
(e)
Whatifa
k

k
blittakesonly
O
(
k
)
time?
30.
Anarray
A
[
0..
n

1
]
of
n
distinctnumbersis
bitonic
ifthereareunique
indices
i
and
j
suchthat
A
[(
i

1
)
mod
n
]
<
A
[
i
]
>
A
[(
i
+
1
)
mod
n
]
and
60

Exercises
Figure1.25.
The˙rstrotationalgorithm(blitthenrecurse)inaction.(See
ImageCredits
attheendof
thebook.)
A
[(
j

1
)
mod
n
]
>
A
[
j
]
<
A
[(
j
+
1
)
mod
n
]
.Inotherwords,abitonic
sequenceeitherconsistsofanincreasingsequencefollowedbyadecreasing
sequence,orcanbecircularlyshiftedtobecomeso.Forexample,
469875123
isbitonic,but
369875124
is
not
bitonic.
Describeandanalyzeanalgorithmto˝ndthe
smallest
elementinan
n

elementbitonicarrayin
O
(
log
n
)
time.Youmayassumethatthenumbers
intheinputarrayaredistinct.
31.
Supposewearegivenanarray
A
[
1..
n
]
of
n
distinctintegers,whichcouldbe
positive,negative,orzero,sortedinincreasingordersothat
A
[
1
]
<
A
[
2
]
<

<
A
[
n
]
.
(a)
Describeafastalgorithmthateithercomputesanindex
i
suchthat
A
[
i
]=
i
orcorrectlyreportsthatnosuchindexexists.
(b)
Supposeweknowinadvancethat
A
[
1
]
>
0
.Describeanevenfaster
algorithmthateithercomputesanindex
i
suchthat
A
[
i
]=
i
orcorrectly
reportsthatnosuchindexexists.
[Hint:Thisis
really
easy.]
32.
Supposewearegivenanarray
A
[
1..
n
]
withthespecialpropertythat
A
[
1
]

A
[
2
]
and
A
[
n

1
]

A
[
n
]
.Wesaythatanelement
A
[
x
]
isa
local
minimum
ifitislessthanorequaltobothitsneighbors,ormoreformally,
if
A
[
x

1
]

A
[
x
]
and
A
[
x
]

A
[
x
+
1
]
.Forexample,therearesixlocal
minimainthefollowingarray:
9
Î
7
72
Î
1
375
Î
4
7
Î
3
Î
3
48
Î
6
9
61

1.Recursion
Wecanobviously˝ndalocalminimumin
O
(
n
)
timebyscanningthrough
thearray.Describeandanalyzeanalgorithmthat˝ndsalocalminimumin
O
(
log
n
)
time.
[Hint:Withthegivenboundaryconditions,thearray
must
haveatleastonelocalminimum.Why?]
33.
Supposeyouaregivenasortedarrayof
n
distinctnumbersthathasbeen
rotated
k
steps,forsome
unknown
integer
k
between
1
and
n

1
.Thatis,
youaregivenanarray
A
[
1..
n
]
suchthatsomepre˝x
A
[
1..
k
]
issortedin
increasingorder,thecorrespondingsu˚x
A
[
k
+
1..
n
]
issortedinincreasing
order,and
A
[
n
]
<
A
[
1
]
.
Forexample,youmightbegiventhefollowingementarray(where
k
=
10
):
9131618192328313742134578
(a)
Describeandanalyzeanalgorithmtocomputetheunknowninteger
k
.
(b)
Describeandanalyzeanalgorithmtodetermineifthegivenarray
containsagivennumber
x
.
34.
Attheendofthesecondactoftheactionblockbuster
FastandImpossible
XIII
¾
:TheLastGuardiansofExpendableJusticeReloaded
,thevillainous
Dr.MetaphorhypnotizestheentireHeroLeague/Force/Squad,arranges
theminalonglineattheedgeofacli˙,andinstructseachherotoshoot
theclosesttallerheroestotheirleftandright,ataprearrangedsignal.
Supposewearegiventheheightsofall
n
heroes,inorderfromleft
toright,inanarray
Ht
[
1..
n
]
.(Toavoidsalaryarguments,theproducers
insistedthatnotwoheroeshavethesameheight.)Thenwecancompute
theLeftandRighttargetsofeachheroin
O
(
n
2
)
timeusingthefollowing
orcealgorithm.
WhoTargetsWhom
(
Ht
[
1..
n
])
:
for
j
 
1
to
n
hh
Findthelefttarget
L
[
j
]
forhero
j
ii
L
[
j
]
 
None
for
i
 
1
to
j

1
if
Ht
[
i
]
>
Ht
[
j
]
L
[
j
]
 
i
hh
Findtherighttarget
R
[
j
]
forhero
j
ii
R
[
j
]
 
None
for
k
 
n
downto
j
+
1
if
Ht
[
k
]
>
Ht
[
j
]
R
[
j
]
 
k
return
L
[
1..
n
]
,
R
[
1..
n
]
62

Exercises
(a)
Describeadinqueralgorithmthatcomputestheoutputof
WhoTargetsWhom
in
O
(
n
log
n
)
time.
(b)
Provethatatleast
b
n
=
2
c
ofthe
n
heroesaretargets.Thatis,provethat
theoutputarrays
R
[
0..
n

1
]
and
L
[
0..
n

1
]
containatleast
b
n
=
2
c
distinctvalues(otherthan
None
).
(c)
Alas,Dr.Metaphor'sdiabolicalplanissuccessful.Attheprearranged
signal,alltheheroessimultaneouslyshoottheirtargets,andalltargets
falloverthecli˙,apparentlydead.Metaphorrepeatshisdastardly
experimentoverandover;aftereachmassacre,heforcestheremaining
heroestochoosenewtargets,followingthesamealgorithm,andthen
shoottheirtargetsatthenextsignal.Eventually,onlytheshortest
memberoftheHeroCrew/Alliance/Posseisleftalive.
20
Describeandanalyzeanalgorithmtocomputethenumberofrounds
beforeDr.Metaphor'sdeadlyprocess˝nallyends.Forfullcredit,your
algorithmshouldrunin
O
(
n
)
time.
35.
YouareacontestantonthehitgameshowYourNYouare
presentedwithan
m

n
gridofboxes,eachcontainingauniquenumber.It
costs$100toopenabox.Yourgoalisto˝ndaboxwhosenumberislarger
thanitsneighborsinthegrid(above,below,left,andright).Ifyouspend
lessmoneythananyofyouropponents,youwinawongtripfortwoto
LasVegasandayear'ssupplyofRioni
tm
,towhichyouarehopelessly
addicted.
(a)
Suppose
m
=
1
.Describeanalgorithmthat˝ndsanumberthatisbigger
thaneitherofitsneighbors.Howmanyboxesdoesyouralgorithmopen
intheworstcase?
ª
(b)
Suppose
m
=
n
.Describeanalgorithmthat˝ndsanumberthatisbigger
thananyofitsneighbors.Howmanyboxesdoesyouralgorithmopenin
theworstcase?
¨
ª
(c)
Provethatyoursolutiontopart(b)isoptimaluptoaconstantfactor.
36.
(a)
Let
n
=
2
`

1
forsomepositiveinteger
`
.Supposesomeoneclaimsto
holdanunsortedarray
A
[
1..
n
]
of
distinct
`
strings;thus,exactlyone
`
stringdoes
not
appearin
A
.Supposefurtherthatthe
only
waywe
canaccess
A
isbycallingthefunction
FetchBit
(
i
,
j
)
,whichreturnsthe
j
thbitofthestring
A
[
i
]
in
O
(
1
)
time.Describeanalgorithmto˝ndthe
missingstringin
A
usingonly
O
(
n
)
callsto
FetchBit
.
20
Inthethrilling˝nalact,RetcontheSquirrel,thelastsurvivingmemberoftheHero
Team/Group/Society,saveseveryonebytravelingbackintimeandretroactivelyreplacingthe
other
n

1
heroeswithlifelikeballoonsculptures.So,yeah,basicallyit's
Avengers:Endgame
.
63

1.Recursion
ª
(b)
Nowsuppose
n
=
2
`

k
forsomepositiveintegers
k
and
`
,andagainwe
aregivenanarray
A
[
1..
n
]
of
distinct
`
strings.Describeanalgorithm
to˝ndthe
k
stringsthataremissingfrom
A
usingonly
O
(
n
log
k
)
calls
to
FetchBit
.
Trees
37.
Forthisproblem,a
subtree
ofabinarytreemeansanyconnectedsubgraph.
Abinarytreeis
complete
ifeveryinternalnodehastwochildren,andevery
leafhasexactlythesamedepth.Describeandanalyzearecursivealgorithm
tocomputethe
largestcompletesubtree
ofagivenbinarytree.Youralgorithm
shouldreturnboththerootandthedepthofthissubtree.SeeFigure
1.26
foranexample.
Figure1.26.
Thelargestcompletesubtreeofthisbinarytreehasdepth3.
38.
Let
T
beabinarytreewith
n
vertices.Deletinganyvertex
v
splits
T
intoat
mostthreesubtrees,containingtheleftchildof
v
(ifany),therightchild
of
v
(ifany),andtheparentof
v
(ifany).Wecall
v
a
central
vertexif
eachofthesesmallertreeshasatmost
n
=
2
vertices.SeeFigure
1.27
foran
example.
Describeandanalyzeanalgorithmto˝ndacentralvertexinanarbitrary
givenbinarytree.
[Hint:Firstprovethateverytreehasacentralvertex.]
Figure1.27.
Deletingacentralvertexina34-nodebinarytree,leavingsubtreeswith14,7,and12nodes.
64

Exercises
39.
(a)
ProfessorGeorgeO'Junglehasaodebinarytree,inwhichevery
nodeislabeledwithauniqueletteroftheRomanalphabetorthe
character
&
.Preorderandpostordertraversalsofthetreevisitthenodes
inthefollowingorder:
‹
Preorder:
IQJHLEMVOTSBRGYZKCA&FPNUDWX
‹
Postorder:
HEMLJVQSGYRZBTCPUDNFW&XAKOI
DrawGeorge'sbinarytree.
(b)
Recallthatabinarytreeis
full
ifeverynoeafnodehasexactlytwo
children.
i.
Describeandanalyzearecursivealgorithmtoreconstructanarbitrary
full
binarytree,givenitspreorderandpostordernodesequencesas
input.
ii.
Provethatthereisnoalgorithmtoreconstructan
arbitrary
binary
treefromitspreorderandpostordernodesequences.
(c)
Describeandanalyzearecursivealgorithmtoreconstructan
arbitrary
binarytree,givenitspreorderand
inorder
nodesequencesasinput.
(d)
Describeandanalyzearecursivealgorithmtoreconstructanarbitrary
binary
search
tree,givenonlyitspreordernodesequence.
ª
(e)
Describeandanalyzearecursivealgorithmtoreconstructanarbitrary
binary
search
tree,givenonlyitspreordernodesequence,
in
O
(
n
)
time
.
Inpartsassumethatallkeysaredistinctandthattheinputis
consistentwithatleastonebinarytree.
40.
Supposewehave
n
pointsscatteredinsideatwonalbox.A

tree
21
recursivelysubdividesthepointsasfollows.Iftheboxcontainsno
pointsinitsinterior,wearedone.Otherwise,wesplittheboxintotwo
smallerboxeswitha
vertical
line,throughamedianpointinsidethebox
(
not
onitsboundary),partitioningthepointsasevenlyaspossible.Then
werecursivelybuildaforthepointsineachofthetwosmaller
boxes,
afterrotatingthem90degrees
.Thus,wealternatebetweensplitting
verticallyandsplittinghorizontallyateachlevelofrecursion.The˝nal
emptyboxesarecalled
cells
.
21
Theterm(pronouncedy
dee
wasoriginallyanabbreviationfor
k

dimensionalbutmodernusageignoresthisetymology,inpartbecausenobodyintheir
rightmindwould
ever
usetheletter
k
todenotedimensioninsteadofthe
obviously
superior
d
.
Etymologicalconsistencywouldrequirecallingthedatastructureinthisproblema
2

(orperhapsa
2
butthestandardnomenclatureisnowwonal
Seealso:B(maybe),alphashape,betaskeleton,epsilonnet,PotomacRiver,Mississippi
River,LakeMichigan,LakeTahoe,ManhattanIsland,LaBreaTarPits,SaharaDesert,Mount
Kilimanjaro,SouthVietnam,EastTimor,theMilkyWayGalaxy,theCityofTownsville,and
selfvingautomobiles.
65

1.Recursion
Figure1.28.
Akd-treefor15points.Thedashedlinecrossesthefourshadedcells.
(a)
Howmanycellsarethere,asafunctionof
n
?Proveyouransweris
correct.
(b)
Intheworstcase,
exactly
howmanycellscanahorizontallinecross,as
afunctionof
n
?Proveyouransweriscorrect.Assumethat
n
=
2
k

1
forsomeinteger
k
.
[Hint:Thereismorethanonefunction
f
suchthat
f
(
16
)=
4
.]
(c)
Supposewearegiven
n
pointsstoredinaDescribeandanalyze
analgorithmthatcountsthenumberofpointsaboveahorizontalline
(suchasthedashedlineinthe˝gure)asquicklyaspossible.
[Hint:Use
part(b).]
(d)
Describeananalyzeane˚cientalgorithmthatcounts,givena
containing
n
points,thenumberofpointsthatlieinsidearectangle
R
withhorizontalandverticalsides.
[Hint:Usepart(c).]
ª
41.
BobRatenbur,anewstudentinCS225,istryingtowritecodetoperform
preorder,inorder,andpostordertraversalsofbinarytrees.Bobf
understandsthebasicideabehindthetraversalalgorithms,butwhenever
heactuallytriestoimplementthem,hekeepsmixinguptherecursivecalls.
Fiveminutesbeforethedeadline,Bobfranticallysubmitscodewiththe
followingstructure:
PreOrder
(
v
)
:
if
v
=
Null
return
else
print
label
(
v
)
Order
(
left
(
v
))
Order
(
right
(
v
))
InOrder
(
v
)
:
if
v
=
Null
return
else
Order
(
left
(
v
))
print
label
(
v
)
Order
(
right
(
v
))
PostOrder
(
v
)
:
if
v
=
Null
return
else
Order
(
left
(
v
))
Order
(
right
(
v
))
print
label
(
v
)
Each
inthispseudocodehidesoneofthepre˝xes
Pre
,
In
,or
Post
.
Moreover,eachofthefollowingfunctioncallsappearsexactlyonceinBob's
submittedcode:
66

Exercises
PreOrder
(
left
(
v
))
PreOrder
(
right
(
v
))
InOrder
(
left
(
v
))
InOrder
(
right
(
v
))
PostOrder
(
left
(
v
))
PostOrder
(
right
(
v
))
Thus,thereareprecisely36possibilitiesforBob'scode.Unfortunately,Bob
accidentallydeletedhissourcecodeaftersubmittingtheexecutable,so
neitheryounorheknowswhichfunctionswerecalledwhere.
NowsupposeyouaregiventheoutputofBob'straversalalgorithms,
executedonsome
unknown
binarytree
T
.Bob'soutputhasbeenhelpfully
parsedintothreearrays
Pre
[
1..
n
]
,
In
[
1..
n
]
,and
Post
[
1..
n
]
.Youmay
assumethatthesetraversalsequencesareconsistentwithexactlyonebinary
tree
T
;inparticular,thevertexlabelsoftheunknowntree
T
aredistinct,
andeveryinternalnodein
T
hasexactlytwochildren.
(a)
Describeanalgorithmtoreconstructtheunknowntree
T
fromthegiven
traversalsequences.
(b)
DescribeanalgorithmthateitherreconstructsBob'scodefromthegiven
traversalsequences,orcorrectlyreportsthatthetraversalsequencesare
consistentwithmorethanonesetofalgorithms.
Forexample,giventheinput
Pre
[
1..
n
]=[
HAECBIFGD
]
In
[
1..
n
]=[
AHDCEIFBG
]
Post
[
1..
n
]=[
AEIBFCDGH
]
your˝rstalgorithmshouldreturnthefollowingtree:
andyoursecondalgorithmshouldreconstructthefollowingcode:
PreOrder
(
v
)
:
if
v
=
Null
return
else
print
label
(
v
)
PreOrder
(
left
(
v
))
PostOrder
(
right
(
v
))
InOrder
(
v
)
:
if
v
=
Null
return
else
PostOrder
(
left
(
v
))
print
label
(
v
)
PreOrder
(
right
(
v
))
PostOrder
(
v
)
:
if
v
=
Null
return
else
InOrder
(
left
(
v
))
InOrder
(
right
(
v
))
print
label
(
v
)
ª
42.
Let
T
beabinarytreewhosenodesstoredistinctnumericalvalues.Recall
that
T
isa
binarysearchtree
ifandonlyifeither(1)
T
isempty,or(2)
T
satis˝esthefollowingrecursiveconditions:
67

1.Recursion
‹
Theleftsubtreeof
T
isabinarysearchtree.
‹
Allvaluesintheleftsubtreearesmallerthanthevalueattheroot.
‹
Therightsubtreeof
T
isabinarysearchtree.
‹
Allvaluesintherightsubtreearelargerthanthevalueattheroot.
Considerthefollowingpairofoperationsonbinarytrees:
‹
Rotate
anarbitrarynodeupward.
22
‹
Swap
theleftandrightsubtreesofanarbitrarynode.
Inbothoftheseoperations,some,all,ornoneofthesubtrees
A
,
B
,and
C
couldbeempty.
(a)
Describeanalgorithmtotransforman
arbitrary
n
odebinarytree
withdistinctnodevaluesintoabinarysearchtree,usingatmost
O
(
n
2
)
rotationsandswaps.Figure
1.29
showsasequenceofeightoperations
thattransformsa˝vodebinarytreeintoabinarysearchtree.
Figure1.29.
abinarytree:rotate2,rotate2,swap3,rotate3,rotate4,swap3,rotate2,swap4.
Youralgorithmisnotallowedtodirectlymodifyparentorchild
pointers,createnewnodes,ordeleteoldnodes;the
only
waytomodify
thetreeisthroughrotationsandswaps.
Ontheotherhand,youmay
compute
anythingyoulikeforfree,as
longasthatcomputationdoesnotmodifythetree;therunningtimeof
youralgorithmis
de˝ned
tobethenumberofrotationsandswapsthatit
performs.
ª
(b)
Describeanalgorithmtotransformanarbitrary
n
odebinarytreeinto
abinarysearchtree,usingatmost
O
(
n
log
n
)
rotationsandswaps.
22
Rotationspreservetheinordersequenceofnodesinabinarytree.Partlyforthisreason,
rotationsareusedtomaintainseveraltypesofbalancedbinarysearchtrees,includingAVLtrees,
lacktrees,splaytrees,scapegoattrees,andtreaps.See
http://algorithms.wtf
forlecture
notesonmostofthesedatastructures.
68

Exercises
(c)
Provethatany
n
odebinary
search
treecanbetransformedintoany
otherbinary
search
treewiththesamenodevalues,usingonly
O
(
n
)
rotations(and
no
swaps).
ª
(d)
Openproblem:
Eitherdescribeanalgorithmtotransformanarbitrary
n
odebinarytreeintoabinarysearchtreeusingonly
O
(
n
)
rotations
andswaps,orprovethatnosuchalgorithmispossible.
[Hint:Idon't
thinkit'spossible.]
69


Where,however,theambiguitycannotbeclearedup,eitherbytheruleoffaithorby
thecontext,thereisnothingtohinderustopointthesentenceaccordingtoany
methodwechooseofthosethatsuggestthemselves.
AugustineofHippo,
DedoctrinaChristiana
(397
ce
)
TranslatedbyMarcusDods(1892)
Idroppedmydinner,andranbacktothelaboratory.There,inmyexcitement,
Itastedthecontentsofeverybeakerandevaporatingdishonthetable.Luckilyfor
me,nonecontainedanycorrosiveorpoisonousliquid.
ConstantineFahlbergonhisdiscoveryofsaccharin,
Scienti˙cAmerican
(1886)
Thegreatestchallengetoanythinkerisstatingtheproblem
inawaythatwillallowasolution.
attributedtoBertrandRussell
Whenyoucometoaforkintheroad,takeit.
YogiBerra(givingdirectionstohishouse)
2
Backtracking
Thischapterdescribesanotherimportantrecursivestrategycalled
backtracking
.
Abacktrackingalgorithmtriestoconstructasolutiontoacomputationalproblem
incrementally,onesmallpieceatatime.Wheneverthealgorithmneedsto
decidebetweenmultiplealternativestothenextcomponentofthesolution,it
recursivelyevaluates
every
alternativeandthenchoosesthebestone.
2.1NQueens
Theprototypicalbacktrackingproblemistheclassical
n
QueensProblem
,˝rst
proposedbyGermanchessenthusiastMaxBezzelin1848(underhispseudonym
forthestandard
8

8
boardandbyFrançoosephEustache
Lionnetin1869forthemoregeneral
n

n
board.Theproblemistoplace
n
queensonan
n

n
chessboard,sothatnotwoqueensareattackingeachother.
71

2.Backtracking
Forreadersnotfamiliarwiththerulesofchess,thismeansthatnotwoqueens
areinthesamerow,thesamecolumn,orthesamediagonal.
Figure2.1.
Gauss's˙rstsolutiontothe8queensproblem,representedbythearray
[
5,7,1,4,2,8,6,3
]
InaletterwrittentohisfriendHeinrichSchumacherin1850,theeminent
mathematicianCarlFriedrichGausswrotethatonecouldeasilycon˝rmFranz
Nauck'sclaimthattheEightQueensproblemhas92solutionsbytrialand
errorinafewhours.
Schweristesübrigensnicht,durcheinmethodisches
TatonnirensichdieseGewissheitzuverscha˙en,wennman1odereinpaarStunden
daranwendenwill.
Hisdescription
Tatonniren
comesfromtheFrench
tâtonner
,
meaningtofeel,grope,orfumblearoundblindly,asifinthedark.
Gauss'sletterdescribedthefollowingrecursivestrategyforsolvingthe
n
eensproblem;thesamestrategywasdescribedin1882bytheFrench
recreationalmathematicianÉdouardLucas,whoattributedthemethodto
EmmanuelLaquière.Weplacequeensontheboardonerowatatime,starting
withthetoprow.Toplacethe
r
thqueen,wemethodicallytryall
n
squaresin
row
r
fromlefttorightinasimpleforloop.Ifaparticularsquareisattackedby
anearlierqueen,weignorethatsquare;otherwise,wetentativelyplaceaqueen
onthatsquareand
recursively
gropeforconsistentplacementsofthequeensin
laterrows.
Figure
2.2
showstheresultingalgorithm,whichrecursivelyenumerates
all
complete
n
eenssolutionsthatareconsistentwithagivenpartialsolution.
FollowingGauss,werepresentthepositionsofthequeensusinganarray
Q
[
1..
n
]
,where
Q
[
i
]
indicateswhichsquareinrow
i
containsaqueen.When
PlaceQueens
iscalled,theinputparameter
r
istheindexofthe˝rstemptyrow,
andthepre˝x
Q
[
1..
r

1
]
containsthepositionsofthe˝rst
r

1
queens.In
particular,tocomputeall
n
eenssolutionswithnorestrictions,wewouldcall
PlaceQueens
(
Q
[
1..
n
]
,1
)
.Theouterfoopconsidersallpossibleplacements
ofaqueenonrow
r
;theinnerfoopcheckswhetheracandidateplacement
ofrow
r
isconsistentwiththequeensthatarealreadyonthe˝rst
r

1
rows.
Theexecutionof
PlaceQueens
canbeillustratedusinga
recursiontree
.
Eachnodeinthistreecorrespondstoarecursivesubproblem,andthustoa
legalpartialsolution;inparticular,therootcorrespondstotheemptyboard
72

2.1.NQueens
PlaceQueens
(
Q
[
1..
n
]
,
r
)
:
if
r
=
n
+
1
print
Q
[
1..
n
]
else
for
j
 
1
to
n
legal
 
True
for
i
 
1
to
r

1
if
(
Q
[
i
]=
j
)
or
(
Q
[
i
]=
j
+
r

i
)
or
(
Q
[
i
]=
j

r
+
i
)
legal
 
False
if
legal
Q
[
r
]
 
j
PlaceQueens
(
Q
[
1..
n
]
,
r
+
1
)
hh
Recursion!
ii
Figure2.2.
GaussandLaquière'sbacktrackingalgorithmforthe
n
queensproblem.
(with
r
=
0
).Edgesintherecursiontreecorrespondtorecursivecalls.Leaves
correspondtopartialsolutionsthatcannotbefurtherextended,eitherbecause
thereisalreadyaqueenoneveryrow,orbecauseeverypositioninthenext
emptyrowisattackedbyanexistingqueen.Thebacktrackingsearchfor
completesolutionsisequivalenttoasearchofthistree.
Figure2.3.
ThecompleterecursiontreeofGaussandLaquière'salgorithmforthe4queensproblem.
73

2.Backtracking
2.2GameTrees
Considerthefollowingsimpletwayergame
1
playedonan
n

n
squaregrid
withaborderofsquares;let'scalltheplayersHoraceFaemsenand
VeraRebaudi.
2
Eachplayerhas
n
tokensthattheymoveacrosstheboardfrom
onesidetotheother.Horace'stokensstartintheleftborder,oneineachrow,
andmove
hor
izontallytotheright;symmetrically,Vera'stokensstartinthe
topborder,oneineachcolumn,andmove
ver
ticallydownward.Theplayers
alternateturns.Ineachofhisturns,Horaceeither
moves
oneofhistokensone
steptotherightintoanemptysquare,or
jumps
oneofhistokensoverexactly
oneofVera'stokensintoanemptysquaretwostepstotheright.Ifnolegal
movesorjumpsareavailable,Horacesimplypasses.Similarly,Veraeithermoves
orjumpsoneofhertokensdownwardineachofherturns,unlessnomovesor
jumpsarepossible.The˝rstplayertomovealltheirtokenso˙theedgeofthe
boardwins.(It'snothardtoprovethataslongastherearetokensontheboard,
atleastoneplayercanlegallymove,andthereforesomeoneeventuallywins.)
Figure2.4.
Verawinsthe3

3fake-sugar-packetgame.
1
Idon'tknowwhatthisgameiscalled,orevenifI'mreportingtherulescorrectly;Ilearned
it(orsomethinglikeit)fromLennyPitt,whorecommendedplayingitwithfapacketsat
restaurants.
2
ConstantinFahlbergandIraRemsensynthesizedsaccharinforthe˝rsttimein1878,while
FahlbergwasapostdocinRemsen'slabinvestigatingcoaltarderivatives.In1900,OvidioRebaudi
publishedthe˝rstchemicalanalysisof
ka'ahe'ê
,amedicinalplantcultivatedbytheGuaranífor
morethan1500years,nowmorecommonlyknownas
Steviarebaudiana
.
74

2.2.GameTrees
Unlessyou'veseenthisgamebefore
3
,youprobablydon'thaveanyideahow
toplayitwell.Nevertheless,thereisarelativelysimplebacktrackingalgorithm
thatcanplaythisanytwayergamewithoutrandomnessorhidden
informationthatendsaftera˝nitenumberofmov
perfectly
.Thatis,ifwe
dropyouintothemiddleofagame,anditis
possible
towinagainstanother
perfectplayer,thealgorithmwilltellyouhowtowin.
A
state
ofthegameconsistsofthelocationsofallthepiecesandtheidentity
ofthecurrentplayer.Thesestatescanbeconnectedintoa
gametree
,whichhas
anedgefromstate
x
tostate
y
ifandonlyifthecurrentplayerinstate
x
can
legallymovetostate
y
.Therootofthegametreeistheinitialpositionofthe
game,andeverypathfromtheroottoaleafisacompletegame.
Figure2.5.
The˙rsttwolevelsofthefake-sugar-packetgametree.
Tonavigatethroughthisgametree,werecursivelyde˝neagamestateto
be
good
or
bad
asfollows:
‹
Agamestateis
good
ifeitherthecurrentplayerhasalreadywon,orifthe
currentplayercanmovetoabadstatefortheopposingplayer.
‹
Agamestateis
bad
ifeitherthecurrentplayerhasalreadylost,orifevery
availablemoveleadstoagoodstatefortheopposingplayer.
Equivalently,anoeafnodeinthegametreeisgoodifithasatleastonebad
child,andanoeafnodeisbadifallitschildrenaregood.Byinduction,any
playerthat˝ndsthegameinagoodstateontheirturncanwinthegame,even
iftheiropponentplaysperfectly;ontheotherhand,startingfromabadstate,a
playercanwinonlyiftheiropponentmakesamistake.Thisrecursivede˝nition
wasproposedbyErnstZermeloin1913.
4
3
Ifyouhave,pleasetellmewhere!
4
Infact,Zermeloconsideredthemoresubtleclassofgamesthathavea˝nitenumberof
states,butthatallowin˝nitesequencesofmoves.(Zermelode˝nedin˝niteplaytobeadraw.)
75

2.Backtracking
Thisrecursivede˝nitionimmediatelysuggeststhefollowingrecursive
trackingalgorithmtodeterminewhetheragivengamestateisgoodorbad.At
itscore,thisalgorithmisjustasearchofthegametree;equivalently,
thegametreeistherecursiontreeofthealgorithm!Asimplemodi˝cationof
thisbacktrackingalgorithm˝ndsagoodmove(orevenallpossiblegoodmoves)
iftheinputisagoodgamestate.
PlayAnyGame
(
X
,
player
)
:
if
player
hasalreadywoninstate
X
return
Good
if
player
hasalreadylostinstate
X
return
Bad
foralllegalmoves
X
€
Y
if
PlayAnyGame
(
Y
,
:
player
)=
Bad
return
Good
hh
X
€
Y
isagoodmove
ii
return
Bad
hh
Therearenogoodmoves
ii
Allayingprogramsareultimatelybasedonthissimplebacktracking
strategy.However,sincemostgameshaveanenormousnumberofstates,itis
notpossibletotraversetheentiregametreeinpractice.Instead,gameprograms
employotherheuristics
5
to
prune
thegametree,byignoringstatesthatare
obviously(orousgoodorbad,oratleastbetterorworsethanother
states,and/orbycuttingo˙thetreeatacertaindepth(or
ply
)andusinga
moree˚cientheuristictoevaluatetheleaves.
2.3SubsetSum
Let'sconsideramorecomplicatedproblem,called
SubsetSum
:Givenaset
X
ofpositiveintegersand
target
integer
T
,isthereasubsetofelementsin
X
that
addupto
T
?Noticethattherecanbemorethanonesuchsubset.Forexample,
if
X
=
f
8,6,7,5,3,10,9
g
and
T
=
15
,theansweris
True
,becausethesubsets
f
8,7
g
and
f
7,5,3
g
and
f
6,9
g
and
f
5,10
g
allsumto
15
.Ontheotherhand,if
X
=
f
11,6,5,1,7,13,12
g
and
T
=
15
,theansweris
False
.
Therearetwotrivialcases.Ifthetargetvalue
T
iszero,thenwecan
immediatelyreturn
True
,becausetheemptysetisasubsetof
every
set
X
,and
theelementsoftheemptysetadduptozero.
6
Ontheotherhand,if
T
<
0
,or
if
T
6
=
0
buttheset
X
isempty,thenwecanimmediatelyreturn
False
.
Forthegeneralcase,consideranarbitraryelement
x
2
X
.(We'vealready
handledthecasewhere
X
isempty.)Thereisasubsetof
X
thatsumsto
T
if
andonlyifoneofthefollowingstatementsistrue:
5
Aheuristicisanalgorithmthatdoesn'twork.(Exceptinpractice.Sometimes.Maybe.)
6
...becausewhatelsecouldtheyaddupto?
76

2.3.SubsetSum
‹
Thereisasubsetof
X
that
includes
x
andwhosesumis
T
.
‹
Thereisasubsetof
X
that
excludes
x
andwhosesumis
T
.
Inthe˝rstcase,theremustbeasubsetof
X
nf
x
g
thatsumsto
T

x
;inthe
secondcase,theremustbeasubsetof
X
nf
x
g
thatsumsto
T
.Sowecansolve
SubsetSum
(
X
,
T
)
byreducingittotwosimplerinstances:
SubsetSum
(
X
nf
x
g
,
T

x
)
and
SubsetSum
(
X
nf
x
g
,
T
)
.Theresultingrecursivealgorithmisshown
below.
hh
Doesanysubsetof
X
sumto
T
?
ii
SubsetSum
(
X
,
T
)
:
if
T
=
0
return
True
elseif
T
<
0
or
X
=
?
return
False
else
x
 
anyelementof
X
with
 
SubsetSum
(
X
nf
x
g
,
T

x
)
hh
Recurse!
ii
wout
 
SubsetSum
(
X
nf
x
g
,
T
)
hh
Recurse!
ii
return
(
with
_
wout
)
Correctness
Provingthisalgorithmcorrectisastraightforwardexerciseininduction.If
T
=
0
,thentheelementsoftheemptysubsetsumto
T
,so
True
isthecorrect
output.Otherwise,if
T
isnegativeortheset
X
isempty,thennosubsetof
X
sumsto
T
,so
False
isthecorrectoutput.Otherwise,ifthereisasubsetthat
sumsto
T
,theneitheritcontains
X
[
n
]
oritdoesn't,andtheRecursionFairy
correctlychecksforeachofthosepossibilities.Done.
Analysis
Inordertoanalyzethealgorithm,wehavetodescribeafewimplementation
detailsmoreprecisely.Tobegin,let'sassumethattheinputset
X
isgivenasan
array
X
[
1..
n
]
.
Thepreviousrecursivealgorithmallowsustochoose
any
element
x
2
X
in
themainrecursivecase.Purelyforthesakeofe˚ciency,itishelpfultochoose
anelement
x
suchthattheremainingsubset
X
nf
x
g
hasaconcisedescription,
whichcanbecomputedquickly,sothatsettinguptherecursivecallsrequires
minimaloverhead.Speci˝cally,wewilllet
x
bethelastelement
X
[
n
]
;then
thesubset
X
nf
x
g
isstoredinthepre˝x
X
[
1..
n

1
]
.Passingacomplete
copy
ofthispre˝xtotherecursivecallswouldtaketooloeneed

(
n
)
time
justtomaketheinstead,wepushonlytwovalues:areferencetothe
array(oritsstartingaddress)andthelengthofthepre˝x.(Alternatively,we
77

2.Backtracking
couldavoidpassingareferenceto
X
to
every
recursivecallbymaking
X
aglobal
variable.)
hh
Doesanysubsetof
X
[
1..
i
]
sumto
T
?
ii
SubsetSum
(
X
,
i
,
T
)
:
if
T
=
0
return
True
elseif
T
<
0
or
i
=
0
return
False
else
with
 
SubsetSum
(
X
,
i

1,
T

X
[
i
])
hh
Recurse!
ii
wout
 
SubsetSum
(
X
,
i

1,
T
)
hh
Recurse!
ii
return
(
with
_
wout
)
Withtheseimplementationchoices,therunningtime
T
(
n
)
ofouralgorithm
satis˝estherecurrence
T
(
n
)

2
T
(
n

1
)+
O
(
1
)
.Thesolution
T
(
n
)=
O
(
2
n
)
followseasilyusingeitherrecursiontreesortheevensimpleryeah,we
alreadysolvedthisrecurrencefortheTowerofHanomethod.Intheworst
caorexample,when
T
islargerthanthesumofallelementsof
X

recursiontreeforthisalgorithmisacompletebinarytreewithdepth
n
,andthe
algorithmconsidersall
2
n
subsetsof
X
.
Variants
Withonlyminorchanges,wecansolveseveralvariantsof
SubsetSum
.For
example,Figure
2.6
showsanalgorithmthatactually
constructs
asubsetof
X
thatsumsto
T
,ifoneexists,orreturnstheerrorvalue
None
ifnosuchsubset
exists;thisalgorithmusesexactlythesamerecursivestrategyasourearlier
decisionalgorithms.Thisalgorithmalsorunsin
O
(
2
n
)
time;theanalysisis
simplestifweassumeasetdatastructurethatallowsustoinsertasingle
elementin
O
(
1
)
time(forexample,alinkedlist),butinfacttherunningtime
isstill
O
(
2
n
)
evenifinsertionrequires
O
(
n
)
time(forexample,a
sorted
linked
list).Similarvariantsallowustocountsubsetsthatsumtoaparticularvalue,
orchoosethe
best
subset(accordingtosomeothercriterion)thatsumstoa
particularvalue.
Mostotherproblemsthataresolvedbybacktrackinghavethisproperty:
thesamerecursivestrategycanbeusedtosolvemanydi˙erentvariantsofthe
sameproblem.Forexample,itiseasytomodifytherecursivestrategydescribed
intheprevioussection,whichdetermineswhetheragivengamepositionis
goodorbad,toinsteadreturnagoodmove,oralistofallgoodmoves.For
thisreason,whenwe
design
backtrackingalgorithms,weshouldaimforthe
simplestpossiblevariantoftheproblem,computinganumberorevenasingle
booleaninsteadofmorecomplexinformationorstructure.
78

2.4.TheGeneralPattern
hh
Returnasubsetof
X
[
1..
i
]
thatsumsto
T
ii
hh
or
None
ifnosuchsubsetexists
ii
ConstructSubset
(
X
,
i
,
T
)
:
if
T
=
0
return
?
if
T
<
0
or
n
=
0
return
None
Y
 
ConstructSubset
(
X
,
i

1,
T
)
if
Y
6
=
None
return
Y
Y
 
ConstructSubset
(
X
,
i

1,
T

X
[
i
])
if
Y
6
=
None
return
Y
[f
X
[
i
]
g
return
None
Figure2.6.
Arecursivebacktrackingalgorithmfortheconstructionversionof
SubsetSum
.
2.4TheGeneralPattern
Backtrackingalgorithmsarecommonlyusedtomakea
sequenceofdecisions
,with
thegoalofbuildingarecursivelyde˝nedstructuresatisfyingcertainconstraints.
Often(butnotalways)thisgoalstructureisitselfasequence.Forexample:
‹
Inthe
n
eensproblem,thegoalisasequenceofqueenpositions,onein
eachrow,suchthatnotwoqueensattackeachother.Foreachrow,the
algorithm
decides
wheretoplacethequeen.
‹
Inthegametreeproblem,thegoalisasequenceoflegalmoves,suchthat
eachmoveisasgoodaspossiblefortheplayermakingit.Foreachgame
state,thealgorithm
decides
thebestpossiblenextmove.
‹
Inthe
SubsetSum
problem,thegoalisasequenceofinputelementsthat
haveaparticularsum.Foreachinputelement,thealgorithm
decides
whether
toincludeitintheoutputsequenceornot.
(Hangon,whyisthegoalof
subset
sum˝ndinga
sequence
?Thatwasa
deliberatedesigndecision.Weimposedaconvenientorderingontheinput
representingitusinganarray,asopposedtosomeothermoreamorphous
datastruwecanexploitinourrecursivealgorithm.)
Ineachrecursivecalltothebacktrackingalgorithm,weneedtomake
exactly
one
decision,andourchoicemustbeconsistentwithallpreviousdecisions.
Thus,eachrecursivecallrequiresnotonlytheportionoftheinputdatawehave
notyetprocessed,butalsoasuitablesummaryofthedecisionswehavealready
made.Forthesakeofe˚ciency,thesummaryofpastdecisionsshouldbeas
smallaspossible.Forexample:
79

2.Backtracking
‹
Forthe
n
eensproblem,wemustpassinnotonlythenumberofempty
rows,butthepositionsofallpreviouslyplacedqueens.Here,unfortunately,
wemustrememberourpastdecisionsincompletedetail.
‹
Forthegametreeproblem,weonlyneedtopassinthecurrentstateofthe
game,includingtheidentityofthenextplayer.Wedon'tneedtoremember
anything
aboutourpastdecisions,becausewhowinsfromagivengame
statedoesnotdependonthemovesthatcreatedthatstate.
7
‹
Forthe
SubsetSum
problem,weneedtopassinboththeremainingavailable
integersandtheremainingtargetvalue,whichistheoriginaltargetvalue
minusthe
sum
ofthepreviouslychosenelements.Preciselywhichelements
werepreviouslychosenisunimportant.
Whenwedesignnewrecursivebacktrackingalgorithms,wemust˝gureout
in
advance
whatinformationwewillneedaboutpastdecisions
inthemiddleof
thealgorithm
.Ifthisinformationisnontrivial,ourrecursivealgorithmmight
needtosolveamoregeneralproblemthantheonewewereoriginallyaskedto
solve.(We'veseenthiskindofgeneralizationbefore:To˝ndthe
median
ofan
unsortedarrayinlineartime,wederivedanalgorithmtoselectthe
k
thsmallest
elementfor
arbitrary
k
.)
Finally,oncewe've˝guredoutwhatrecursiveproblemwe
really
needto
solve,wesolvethatproblemby
recursivebruteforce
:Try
all
possibilitiesfor
thenextdecisionthatareconsistentwithpastdecisions,andlettheRecursion
Fairyworryabouttherest.Nobeingcleverhere.Noskippingousstupid
choices.Tryeverything.Youcanmakethealgorithmfasterlater.
2.5TextSegmentation(
InterpunctioVerborum
)
Supposeyouaregivenastringoflettersrepresentingtextinsomeforeign
language,butwithoutanyspacesorpunctuation,andyouwanttobreakthis
stringintoitsindividualconstituentwords.Forexample,youmightbegiven
thefollowingpassagefromCicero'sfamousorationindefenseofLuciusLicinius
Murenain62
bce
,inthestandard
scriptiocontinua
ofclassicalLatin:
8
7
Manygames
appear
toviolatethisindependencecondition.Forexample,thestandardrules
ofbothchessandcheckersallowaplayertodeclareadrawifthesamearrangementofpieces
occursthreetimes,andtheChineserulesforgosimplyforbidrepeatinganyearlierarrangement
ofstones.Thus,forthesegames,agamestateformallyincludesnotonlythecurrentpositionsof
thepiecesbuttheentirehistoryofpreviousmoves.
8
In
·
fact
·
most
·
classical
·
Latin
·
manuscripts
·
separated
·
words
·
with
·
small
·
dots
·
called
·
interpuncts
.
Interpunctuationallbutdisappearedbythe3rdcenturyinfavorof
scriptiocontinua
.Empty
spacesbetweenwordswereintroducedbyIrishmonksinthe8thcenturyandslowlyspread
acrossEuropeoverthenextseveralcenturies.
Scriptiocontinua
survivesinearly
EnglishintheformofURLsandhashtags.
#octotherps4lyfe
80

2.5.TextSegmentation(
InterpunctioVerborum
)
PRIMVSDIGNITASINTAMTENVISCIENTIANONPOTEST
ESSERESENIMSVNTPARVAEPROPEINSINGVLISLITTERIS
ATQVEINTERPVNCTIONIBUSVERBORVMOCCVPATAE
A˛uentLatinreaderwouldparsethisstring(inmodernorthography)as
Primus
dignitasintamtenuiscientianonpotestesse;resenimsuntparvae,propeinsingulis
litterisatqueinterpunctionibusverborumoccupatae
.
9
Textsegmentationisnot
onlyaprobleminclassicalLatinandGreek,butinseveralmodernlanguages
andscriptsincludingBalinese,Burmese,Chinese,Japanese,Javanese,Khmer,
Lao,Thai,Tibetan,andVietnamese.Similarproblemsariseinsegmenting
unpunctuatedEnglishtextintosentences,
10
segmentingtextintolinesfor
typesetting,speechandhandwritingrecognition,curvesimpli˝cation,and
severaltypesofesanalysis.Forpurposesofillustration,I'llstickto
segmentingsequencesoflettersinthemodernEnglishalphabetintomodern
Englishwords.
Ofcourse,somestringscanbesegmentedinseveraldi˙erentways;for
example,
BOTHEARTHANDSATURNSPIN
canbedecomposedintoEnglishwords
aseither
BOTH
·
EARTH
·
AND
·
SATURN
·
SPIN
or
BOT
·
HEART
·
HANDS
·
AT
·
URNS
·
PIN
,
amongmanyotherpossibilities.Fornow,let'sconsideranextremelysimple
segmentationproblem:Givenastringofcharacters,canitbesegmentedinto
Englishwords
atall
?
Tomaketheproblemconcrete(andlanguostic),let'sassumewe
haveaccesstoasubroutine
IsWord
(
w
)
thattakesastring
w
asinput,and
returns
True
if
w
isaor
False
if
w
isnotaForexample,if
wearetryingtodecomposetheinputstringintopalindromes,thena
isasynonymforlindroandtherefore
IsWord
(
ROTATOR
)=
True
but
IsWord
(
PALINDROME
)=
False
.
Justlikethe
SubsetSum
problem,the
input
structureisasequence,this
timecontaininglettersinsteadofnumbers,soitisnaturaltoconsideradecision
processthatconsumestheinputcharactersinorderfromlefttoright.Similarly,
the
output
structureisasequenceofwords,soitisnaturaltoconsideraprocess
thatproducestheoutputwordsinorderfromlefttoright.Thus,jumpinginto
themiddleofthesegmentationprocess,wemightimaginethefollowingpicture:
BLUE
STEM
UNIT
ROBOT
HEARTHANDSATURNSPIN
9
Looselytranslated:ofall,dignityinsuchpaltryknowledgeisimpossible;thisistrivial
stu˙,mostlyconcernedwithindividuallettersandtheplacementofpointsbetweenw
Cicerowasopenlymockingthelegalexpertiseofhisfriend(!)andnotedjuristServiusSulpicius
Rufus,whohadaccusedMurenaofbribery,afterMurenadefeatedRufusinelectionforconsul.
Murenawasacquitted,thanksinparttoCicero'sacerbicdefense,althoughhewasalmostcertainly
guilty.
#librapondo#nunquamest˙delis
10
St.Augustine's
DedoctrinaChristiana
devotesanentirechaptertoremovingambiguityfrom
Latinscripturebyaddingpunctuation.
81

2.Backtracking
Heretheblackbarseparatesourpastdecisioplittingthe˝rst17lettersinto
fourwmtheportionoftheinputstringthatwehavenotyetprocessed.
Thenextstageinourimaginedprocessisto
decide
wherethenextwordin
theoutputsequenceends.Forthisspeci˝cexample,therearefourpossibilities
forthenextoutputw
HE
,
HEAR
,
HEART
,and
HEARTH
.Wehave
noidea
which
ofthesechoices,ifany,isconsistentwithacompletesegmentationoftheinput
string.Wecouldbeatthispointandtryto
˝gureout
whichchoices
aregood,butthatwouldrequire
thinking
!Instead,let'stryevery
possibilitybybruteforce,andlettheRecursionFairydoalltherealwork.
‹
First
tentatively
accept
HE
asthenextword,andlettheRecursionFairymake
therestofthedecisions.
BLUE
STEM
UNIT
ROBOT
HE
ARTHANDSATURNSPIN
‹
Then
tentatively
accept
HEAR
asthenextword,andlettheRecursionFairy
maketherestofthedecisions.
BLUE
STEM
UNIT
ROBOT
HEAR
THANDSATURNSPIN
‹
Then
tentatively
accept
HEART
asthenextword,andlettheRecursionFairy
maketherestofthedecisions.
BLUE
STEM
UNIT
ROBOT
HEART
HANDSATURNSPIN
‹
Finally,
tentatively
accept
HEARTH
asthenextword,andlettheRecursion
Fairymaketherestofthedecisions.
BLUE
STEM
UNIT
ROBOT
HEARTH
ANDSATURNSPIN
AslongastheRecursionFairyreportssuccessatleastonce,wereportsuccess.
Ontheotherhand,iftheRecursionFairy
never
reportssuparticular,if
thesetofpossiblenextwordsisemptwereportfailure.
Noneofourpastdecisionsa˙ectwhichchoicesareavailablenow;allthat
mattersisthesu˚xofcharactersthatwehavenotyetprocessed.Inparticular,
severaldi˙erentsequencesofpastdecisionscouldleadustothesamesu˚x,
buttheyallleaveuswithexactlythesamesetofchoicesforthatsu˚x.
BLUE
STEM
UNIT
ROBOT
HEARTHANDSATURNSPIN
BLUEST
EMU
NITRO
BOT
HEARTHANDSATURNSPIN
Thus,wecansimplifyourpictureoftherecursiveprocessbydiscarding
everything
leftoftheblackbar:
HEARTHANDSATURNSPIN
82

2.5.TextSegmentation(
InterpunctioVerborum
)
Wearenowleftwithasimpleandnaturalbacktrackingstrategy:
Selectthe˝rst
outputword,andrecursivelysegmenttherestoftheinputstring.
Togetacompleterecursivealgorithm,weneedabasecase.Ourrecursive
strategybreaksdownwhenwereachtheendoftheinputstring,becausethere
isnonextword.Fortunately,theemptystringhasauniquesegmentationinto
zerowords!
Puttingallthepiecestogether,wearriveatthefollowingsimplerecursive
algorithm:
Splittable
(
A
[
1..
n
])
:
if
n
=
0
return
True
for
i
 
1
to
n
if
IsWord
(
A
[
1..
i
])
if
Splittable
(
A
[
i
+
1..
n
])
return
True
return
False
IndexFormulation
Inpractice,passingarraysasinputparametersisratherslow;weshouldreally
˝ndamorecompactwaytodescribeourrecursivesubproblems.
Forpurposesof
designingthealgorithm
,it'sincrediblyusefultotreattheoriginalinputarrayas
aglobalvariable,andthenreformulatetheproblemandthealgorithminterms
ofarrayindicesinsteadofexplicitsubarrays.
Forourstringsegmentationproblem,theargumentofanyrecursivecall
isalwaysa
su˚x
A
[
i
..
n
]
oftheoriginalinputarray.Soifwetreattheinput
array
A
[
1..
n
]
asaglobalvariable,wecanreformulateourrecursiveproblemas
follows:
Givenanindex
i
,˝ndasegmentationofthesu˚x
A
[
i
..
n
]
.
Todescribeouralgorithm,weneedtwobooleanfunctions:
‹
Foranyindices
i
and
j
,let
IsWord
(
i
,
j
)=
True
ifandonlyifthesubstring
A
[
i
..
j
]
isaword.(We'reassumingthisfunctionisgiventous.)
‹
Foranyindex
i
,let
Splittable
(
i
)=
True
ifandonlyifthesu˚x
A
[
i
..
n
]
can
besplitintowords.(Thisisthefunctionweneedtoimplement.)
Forexample,
IsWord
(
1,
n
)=
True
ifandonlyiftheentireinputstringisa
singleword,and
Splittable
(
1
)=
True
ifandonlyiftheentireinputstringcan
besegmented.Ourearlierrecursivestrategygivesusthefollowingrecurrence:
Splittable
(
i
)=
8
>
<
>
:
True
if
i
>
n
n
W
j
=
i

IsWord
(
i
,
j
)
^
Splittable
(
j
+
1
)

otherwise
83

2.Backtracking
Thisis
exactly
thesamealgorithmaswesawearlier;theonlythingwe've
changedisthenotation.Thesimilarityisevenmoreapparentifwerewritethe
recurrenceinpseudocode:
hh
Isthesuf˙x
A
[
i
..
n
]
Splittable?
ii
Splittable
(
i
)
:
if
i
>
n
return
True
for
j
 
i
to
n
if
IsWord
(
i
,
j
)
if
Splittable
(
j
+
1
)
return
True
return
False
Althoughitmaylooklikeatrivialnotationaldi˙erence,usingindexnotation
insteadofarraynotationisanimportanthabit,notonlytospeedupbacktracking
algorithmsinpractice,butfordevelopingdynamicprogrammingalgorithms,
whichwediscussinthenextchapter.
ª
Analysis
Itshouldcomeasnosurprisethatmostbacktrackingalgorithmshaveexponential
wserunningtimes.Analyzingthepreciserunningtimesofmanyof
thesealgorithmsrequirestechniquesthatarebeyondthescopeofthisbook.
Fortunately,mostofthebacktrackingalgorithmswewillencounter
inthisbook
areonlyintermediateresultsonthewaytomoree˚cientalgorithms,which
meanstheirexactwserunningtimeisnotactuallyimportant.(First
makeitwork;thenmakeitfast.)
Butjustforfun,let'sanalyzetherunningtimeofourrecursivealgorithm
Splittable
.Becausewedon'tknowwhat
IsWord
isdoing,wecan'tknow
howlongeachcallto
IsWord
takes,sowe'reforcedtoanalyzetherunning
timeintermsofthenumberofcallsto
IsWord
.
11
Splittable
calls
IsWord
oneverypre˝xoftheinputstring,and
possibly
callsitselfrecursivelyonevery
su˚xoftheoutputstring.Thus,theof
Splittable
obeysthe
ookingrecurrence
T
(
n
)

n

1
X
i
=
0
T
(
i
)+
O
(
n
)
Thisreallyisn'tasbadasitlooks,especiallyonceyou'veseenthetrick.
First,wereplacethe
O
(
n
)
termwithanexplicitexpression

n
,forsome
unknown(andultimatelyunimportant)constant

.Second,weconservatively
11
Infact,aslongas
IsWord
runsin
polynomial
time,
Splittable
runsin
O
(
2
n
)
time.
84

2.5.TextSegmentation(
InterpunctioVerborum
)
assumethatthealgorithmactuallymakeseverypossiblerecursivecall.
12
Then
wecantransformtheullhistrecurrenceintoahistrecurrence
bysubtractingtherecurrencefor
T
(
n

1
)
,asfollows:
T
(
n
)=
n

1
X
i
=
0
T
(
i
)+

n
T
(
n

1
)=
n

2
X
i
=
0
T
(
i
)+

(
n

1
)
=
)
T
(
n
)

T
(
n

1
)=
T
(
n

1
)+

This˝nalrecurrencesimpli˝esto
T
(
n
)=
2
T
(
n

1
)+

.Atthispoint,wecan
con˝dentlyguess(orderiveviarecursiontrees,orrememberfromourTower
ofHanoianalysis)that
T
(
n
)=
O
(
2
n
)
;indeed,thisupperboundisnothardto
provebyinductionfromtheoriginalforyrecurrence.
Moreover,thisanalysisistight.Thereareexactly
2
n

1
possiblewaysto
segmentastringoflength
n
inputcharactereitherendsawordordoesn't,
exceptthelastinputcharacter,whichalwaysendsthelastword.Intheworst
case,our
Splittable
algorithmexploreseachofthese
2
n

1
possibilities.
Variants
Nowthatwehavethebasicrecursionpatterninhand,wecanuseittosolve
manydi˙erentvariantsofthesegmentationproblem,justaswedidforthe
SubsetSum
problem.HereI'lldescribejustoneexample;morevariationsare
consideredintheexercises.Asusual,theoriginalinputtoourproblemisan
array
A
[
1..
n
]
.
Ifastringcanbesegmentedinmorethanonesequenceofwords,wemay
wantto˝ndthe
best
segmentationaccordingtosomecriterion;conversely,if
theinputstringcannotbesegmentedintowords,wemaywanttocomputethe
bestsegmentationwecan˝nd,ratherthanmerelyreportingfailure.Tomeet
bothofthesegoals,supposewehaveaccesstoasecondfunction
Score
that
takesastringasinputandreturnsanumericalvalue.Forexample,wemight
assignhigherscorestolongerormorecommonwords,lowerscorestoshorter
ormoreobscurewords,slightlynegativescoresforminorspellingerrors,and
morenegativescorestoobviousnoords.Ourgoalisto˝ndasegmentation
thatmaximizesthesumofthescoresofthesegments.
12
ThisassumptioniswildlyconservativeforEnglish
word
segmentation,sincemoststringsof
lettersarenotEnglishwords,but
not
forthesimilarproblemofsegmentingsequencesofEnglish
words
intogrammaticallycorrectEnglish
sentences
.Consider,forexample,asequenceof
n
copies
ofthewordu˙alor
n
copiesoftheworkor
n
copiesofthewordforany
positiveinteger
n
.(AttheMoulinRouge,dancesthatarepreservableinmetalcylindersbyother
danceshavetheopportunityto˝redancesthathappeninprisonrestroomtrashreceptacles.)
85

2.Backtracking
Foranyindex
i
,let
MaxScore
(
i
)
denotethemaximumscoreofany
tationofthesu˚x
A
[
i
..
n
]
;weneedtocompute
MaxScore
(
1
)
.Thisfunction
satis˝esthefollowingrecurrence:
MaxScore
(
i
)=
(
0
if
i
>
n
max
i

j

n

Score
(
A
[
i
..
j
])+
MaxScore
(
j
+
1
)

otherwise
Thisisessentiallythesamerecurrenceastheonewedevelopedfor
Splittable
;
theonlydi˙erenceisthatthebooleanoperations
_
and
^
havebeenreplaced
bythenumericaloperations
max
and
+
.
2.6LongestIncreasingSubsequence
Foranysequence
S
,a
subsequence
of
S
isanothersequenceobtainedfrom
S
by
deletingzeroormoreelements,withoutchangingtheorderoftheremaining
elements;theelementsofthesubsequenceneednotbecontiguousin
S
.For
example,whenyoudrivedownamajorstreetinanycity,youdrivethrough
a
sequence
ofintersectionswithtra˚clights,butyouonlyhavetostopata
subsequence
ofthoseintersections,wherethetra˚clightsarered.Ifyou'revery
lucky,youneverstopatall:theemptysequenceisasubsequenceof
S
.Onthe
otherhand,ifyou'reveryunlucky,youmayhavetostopateveryintersection:
S
isasubsequenceofitself.
Asanotherexample,thestrings
BENT
,
ACKACK
,
SQUARING
,and
SUBSEQUENT
areallsubsequencesofthestring
SUBSEQUENCEBACKTRACKING
,asaretheempty
stringandtheentirestring
SUBSEQUENCEBACKTRACKING
,butthestrings
QUEUE
and
EQUUS
and
TALLYHO
arenot.Asubsequencewhoseelementsarecontiguous
intheoriginalsequenceiscalleda
substring
;forexample,
MASHER
and
LAUGHTER
arebothsubsequencesof
MANSLAUGHTER
,butonly
LAUGHTER
isasubstring.
Nowsupposewearegivenasequenceof
integers
,andweneedto˝ndthe
longestsubsequencewhoseelementsareinincreasingorder.Moreconcretely,
theinputisanintegerarray
A
[
1..
n
]
,andweneedtocomputethelongest
possiblesequenceofindices
1

i
1
<
i
2
<

<
i
`

n
suchthat
A
[
i
k
]
<
A
[
i
k
+
1
]
forall
k
.
Onenaturalapproachtobuildingthis
longestincreasingsubsequence
isto
decide
,foreachindex
j
inorderfrom
1
to
n
,whetherornottoinclude
A
[
j
]
in
thesubsequence.Jumpingintothemiddleofthisdecisionsequence,wemight
imaginethefollowingpicture:
3
1
4
1
5
9
2
6
5
3
5
?
897932384626
Asinourearliertextsegmentationexamples,theblackbarseparatesourpast
decisionsfromtheportionoftheinputwehavenotyetprocessed.Numberswe
86

2.6.LongestIncreasingSubsequence
havealreadydecidedtoincludearehighlightedandbold;numberswehave
alreadydecidedtoexcludearegrayedout.(Noticethatthenumberswe've
decidedtoincludeareincreasing!)Ouralgorithmmustdecidewhetherornot
toincludethenumberimmediatelyaftertheblackbar.
Inthisexample,wede˝nitely
cannot
include
5
,becausethentheselected
numberswouldnolongerbeinincreasingorder.Solet'sskipaheadtothenext
decision:
3
1
4
1
5
9
2
6
5
3
5
8
?
97932384626
Nowwe
can
include
8
,butit'snotobviouswhetherwe
should
.Ratherthan
tryingtobeourbacktrackingalgorithmwillusesimplebruteforce.
‹
First
tentatively
includethe
8
,andlettheRecursionFairymaketherestof
thedecisions.
‹
Then
tentatively
excludethe
8
,andlettheRecursionFairymaketherestof
thedecisions.
Whicheverchoiceleadstoalongerincreasingsubsequenceistherightone.
(Thisispreciselythesamerecursionpatternweusedtosolve
SubsetSum
.)
Nowforthekeyquestion:
Whatdoweneedtorememberaboutourpast
decisions?
Wecanonlyinclude
A
[
j
]
iftheresultingsubsequenceisinincreasing
order.Ifweassume(inductively!)thatthenumberspreviouslyselectedfrom
A
[
1..
j

1
]
areinincreasingorder,thenwecaninclude
A
[
j
]
ifandonlyif
A
[
j
]
islargerthanthelastnumberselectedfrom
A
[
1..
j

1
]
.Thus,theonly
informationweneedaboutthepastis
thelastnumberselectedsofar
.Wecan
nowreviseourpicturesbyerasingeverythingwedon'tneed:
6
5
?
897932384626
6
8
?
97932384626
Sotheproblemourrecursivestrategyis
actually
solvingisthefollowing:
Givenaninteger
prev
andanarray
A
[
1..
n
]
,˝ndthelongestincreasing
subsequenceof
A
inwhicheveryelementislargerthan
prev
.
Asusual,ourrecursivestrategyrequiresabasecase.Ourcurrentstrategy
breaksdownwhenwegettotheendofthearray,becausethereisnoext
ntoconsider.Butanemptyarrayhasexactlyonesubsequence,namely,
the
empty
sequence.Vacuously,everyelementintheemptysequenceislarger
thanwhatevervalueyouwant,andeverypairofelementsintheemptysequence
appearsinincreasingorder.Thus,thelongestincreasingsubsequenceofthe
emptyarrayhaslength
0
.
Here'stheresultingrecursivealgorithm:
87

2.Backtracking
LISbigger
(
prev
,
A
[
1..
n
])
:
if
n
=
0
return
0
elseif
A
[
1
]

prev
return
LISbigger
(
prev
,
A
[
2..
n
)
else
skip
 
LISbigger
(
prev
,
A
[
2..
n
])
take
 
LISbigger
(
A
[
1
]
,
A
[
2..
n
])+
1
return
max
f
skip
,
take
g
Okay,butrememberthatpassingarraysaroundonthecallstackisexpensive;
let'strytorephraseeverythingintermsofarrayindices,assumingthatthearray
A
[
1..
n
]
isaglobalvariable.Theinteger
prev
istypicallyanarrayelement
A
[
i
]
,
andtheremainingarrayisalwaysasu˚x
A
[
j
..
n
]
oftheoriginalinputarray.
Sowecanreformulateourrecursive
problem
asfollows:
Giventwoindices
i
and
j
,where
i
<
j
,˝ndthelongestincreasing
subsequenceof
A
[
j
..
n
]
inwhicheveryelementislargerthan
A
[
i
]
.
Let
LISbigger
(
i
,
j
)
denotethe
length
ofthelongestincreasingsubsequenceof
A
[
j
..
n
]
inwhicheveryelementislargerthan
A
[
i
]
.Ourrecursivestrategygives
usthefollowingrecurrence:
LISbigger
(
i
,
j
)=
8
>
>
>
<
>
>
>
:
0
if
j
>
n
LISbigger
(
i
,
j
+
1
)
if
A
[
i
]

A
[
j
]
max
ˆ
LISbigger
(
i
,
j
+
1
)
1
+
LISbigger
(
j
,
j
+
1
)
˙
otherwise
Alternatively,ifyoupreferpseudocode:
LISbigger
(
i
,
j
)
:
if
j
>
n
return
0
elseif
A
[
i
]

A
[
j
]
return
LISbigger
(
i
,
j
+
1
)
else
skip
 
LISbigger
(
i
,
j
+
1
)
take
 
LISbigger
(
j
,
j
+
1
)+
1
return
max
f
skip
,
take
g
Finally,weneedtoconnectourrecursivestrategytotheoriginalproblem:
Findingthelongestincreasingsubsequenceofanarray
withnootherconstraints
.
Thesimplestapproachistoaddanarti˝cialsentinelvalue

tothebeginning
ofthearray.
88

2.7.LongestIncreasingSubsequence,Take2
LIS
(
A
[
1..
n
])
:
A
[
0
]
 
return
LISbigger
(
0,1
)
Therunningtimeof
LISbigger
satis˝estheHanoirecurrence
T
(
n
)

2
T
(
n

1
)+
O
(
1
)
,whichasusualimpliesthat
T
(
n
)=
O
(
2
n
)
.Wereallyshouldn't
besurprisedbythisrunningtime;intheworstcase,thealgorithmexamines
eachofthe
2
n
subsequencesoftheinputarray.
2.7LongestIncreasingSubsequence,Take2
Thisisnottheonlybacktrackingstrategywecanuseto˝ndlongestincreasing
subsequences.Insteadofconsideringthe
input
sequenceoneelementatatime,
wecouldtrytoconstructthe
output
sequenceoneelementatatime.Thatis,
insteadofasking
A
[
i
]
thenextelementoftheoutputsequenwecould
askdirectly,isthenextelementoftheoutputsequence,if
Jumpingintothemiddleofthisstrategy,wemightbefacedwiththefollowing
picture.Supposewejustdecidedtoincludethe
6
justleftoftheblackbarin
ouroutputsequence,andweneedtodecidewhichelementtotherightofthe
bartoincludenext.
3
1
4
1
5
9
2
6
5
?
3
?
5
?
8
?
9
?
7
?
9
?
3
?
2
?
3
?
8
?
4
?
6
?
2
?
6
?
Ofcourse,wecanonlyincludenumbersontherightthataregreaterthan
6
;
otherwise,ouroutputsequencewouldnotbeincreasing.
3
1
4
1
5
9
2
6
5
3
5
8
?
9
?
7
?
9
?
3
2
3
8
?
4
6
2
6
Butwehavenoidea
which
ofthoselargernumbersisthebestchoice,andtrying
tocleverly
˝gureout
thebestchoiceistoomuchwork,andit'sonlygoingtoget
usintotroubleanyway.Instead,weenumerateallpossibilitiesbybruteforce,
andlettheRecursionFairyevaluateeachone.
3
1
4
1
5
9
2
6
5
3
5
8
97932384626
3
1
4
1
5
9
2
6
5
3
5
8
9
7932384626
3
1
4
1
5
9
2
6
5
3
5
8
9
7
932384626
3
1
4
1
5
9
2
6
5
3
5
8
9
7
9
32384626
3
1
4
1
5
9
2
6
5
3
5
8
9
7
9
3
2
3
8
4626
89

2.Backtracking
Thesubsetofnumberswecanconsiderasthenextelementdepends
only
onthelastnumberwedecidedtoinclude.Thus,wecansimplifyourpictureof
thedecisionprocessbydiscardingeverythingtotheleftofthebar
except
the
lastnumberwedecidedtoinclude.
6
535897932384626
Theremainingsequenceofnumbersisjustasu˚xoftheoriginalinputarray.
Thus,ifwethinkoftheinputarray
A
[
1..
n
]
asaglobalvariable,wecanformally
expressourrecursiveproblemintermsofindicesasfollows:
Givenanindex
i
,˝ndthelongestincreasingsubsequenceof
A
[
i
..
n
]
that
beginswith
A
[
i
]
.
Let
LIS˝rst
(
i
)
denotethelengthofthelongestincreasingsubsequenceof
A
[
i
..
n
]
thatbeginswith
A
[
i
]
.Wecannowformulateourrecursivebacktrackingstrategy
asthefollowingrecursivede˝nition:
LIS˝rst
(
i
)=
1
+
max

LIS˝rst
(
j
)


j
>
i
and
A
[
j
]
>
A
[
i
]

Becausewearedealingwithsetsofnaturalnumbers,wede˝ne
max
?
=
0
.Then
weautomaticallyhave
LIS˝rst
(
i
)=
1
if
A
[
j
]

A
[
i
]
forall
j
>
i
;inparticular,
LIS˝rst
(
n
)=
1
.Thesearethebasecasesforourrecurrence.
Wecanalsoexpressthisrecursivede˝nitioninpseudocodeasfollows:
LISfirst
(
i
)
:
best
 
0
for
j
 
i
+
1
to
n
if
A
[
j
]
>
A
[
i
]
best
 
max
f
best
,
LISfirst
(
j
)
g
return
1
+
best
Finally,weneedtoreconnectthisrecursivealgorithmtoouroriginal
problthelongestincreasingsubsequencewithoutknowingits
˝rstelement.Onenaturalapproachthatworksistotryallpossible˝rstel
mentsbybruteforce.Equivalently,wecanaddasentinelelement

tothe
beginningofthearray,˝ndthelongestincreasingsubsequencethatstartswith
thesentinel,and˝nallyignorethesentinel.
LIS
(
A
[
1..
n
])
:
best
 
0
for
i
 
1
to
n
best
 
max
f
best
,
LISfirst
(
i
)
g
return
best
LIS
(
A
[
1..
n
])
:
A
[
0
]
 
return
LISfirst
(
0
)

1
90

2.8.OptimalBinarySearchTrees
2.8OptimalBinarySearchTrees
Our˝nalexamplecombinesrecursivebacktrackingwiththedinquer
strategy.Recallthattherunningtimeforasuccessfulsearchinabinarysearch
treeisproportionaltothenumberofancestorsofthetargetnode.
13
Asaresult,
thewsesearchtimeisproportionaltothedepthofthetree.Thus,to
minimizethewsesearchtime,theheightofthetreeshouldbeassmall
aspossible;bythismetric,theidealtreeisperfectlybalanced.
Inmanyapplicationsofbinarysearchtrees,however,itismoreimportantto
minimizethetotalcostofseveralsearchesratherthanthewsecostofa
singlesearch.If
x
isamorefrequentsearchtargetthan
y
,wecansavetimeby
buildingatreewherethedepthof
x
issmallerthanthedepthof
y
,evenifthat
meansincreasingtheoveralldepthofthetree.Aperfectlybalancedtreeis
not
thebestchoiceifsomeitemsaresigni˝cantlymorepopularthanothers.Infact,
atotallyunbalancedtreewithdepth

(
n
)
mightactuallybethebestchoice!
Thissituationsuggeststhefollowingproblem.Supposewearegivena
sortedarrayof
keys
A
[
1..
n
]
andanarrayofcorresponding
accessfrequencies
f
[
1..
n
]
.Ourtaskistobuildthebinarysearchtreethatminimizesthe
total
searchtime,assumingthattherewillbeexactly
f
[
i
]
searchesforeachkey
A
[
i
]
.
Beforewethinkabouthowtosolvethisproblem,weshould˝rstcome
upwithagoodrecursivede˝nitionofthefunctionwearetryingtooptimize!
Supposewearealsogivenabinarysearchtree
T
with
n
nodes.Let
v
1
,
v
2
,...,
v
n
bethenodesof
T
,indexedinsortedorder,sothateachnode
v
i
storesthe
correspondingkey
A
[
i
]
.Thenignoringconstantfactors,thetotalcostof
performingallthebinarysearchesisgivenbythefollowingexpression:
Cost
(
T
,
f
[
1..
n
])
:
=
n
X
i
=
1
f
[
i
]

#
ancestorsof
v
i
in
T
(

)
Nowsuppose
v
r
istherootof
T
;byde˝nition,
v
r
isanancestorofeverynode
in
T
.If
i
<
r
,thenallancestorsof
v
i
excepttherootareintheleftsubtreeof
T
.
Similarly,if
i
>
r
,thenallancestorsof
v
i
excepttherootareintherightsubtree
of
T
.Thus,wecanpartitionthecostfunctionintothreepartsasfollows:
Cost
(
T
,
f
[
1..
n
])=
n
X
i
=
1
f
[
i
]+
r

1
X
i
=
1
f
[
i
]

#
ancestorsof
v
i
in
left
(
T
)
+
n
X
i
=
r
+
1
f
[
i
]

#
ancestorsof
v
i
in
right
(
T
)
Thesecondandthirdsummationslookexactlylikeouroriginalde˝nition
(

)
13
An
ancestor
ofanode
v
iseitherthenodeitselforanancestoroftheparentof
v
.A
proper
ancestorof
v
iseithertheparentof
v
oraproperancestoroftheparentof
v
.
91

2.Backtracking
for
Cost
(
T
,
f
[
1..
n
])
.Simplesubstitutionnowgivesusarecurrencefor
Cost
:
Cost
(
T
,
f
[
1..
n
])=
n
X
i
=
1
f
[
i
]+
Cost
(
left
(
T
)
,
f
[
1..
r

1
])
+
Cost
(
right
(
T
)
,
f
[
r
+
1..
n
])
Thebasecaseforthisrecurrenceis,asusual,
n
=
0
;thecostofperformingno
searchesintheemptytreeiszero.
Nowourtaskistocomputethetree
T
opt
thatminimizesthiscostfunction.
Supposewesomehowmagicallyknewthattherootof
T
opt
is
v
r
.Thenthe
recursivede˝nitionof
Cost
(
T
,
f
)
immediatelyimpliesthattheleftsubtree
left
(
T
opt
)
mustbetheoptimalsearchtreeforthekeys
A
[
1..
r

1
]
andaccess
frequencies
f
[
1..
r

1
]
.Similarly,therightsubtree
right
(
T
opt
)
mustbethe
optimalsearchtreeforthekeys
A
[
r
+
1..
n
]
andaccessfrequencies
f
[
r
+
1..
n
]
.
Oncewechoosethecorrectkeytostoreattheroot,theRecursionFairy
willconstructtherestoftheoptimaltree.
Moregenerally,let
OptCost
(
i
,
k
)
denotethetotalcostoftheoptimalsearch
treefortheintervaloffrequencies
f
[
i
..
k
]
.Thisfunctionobeysthefollowing
recurrence.
OptCost
(
i
,
k
)=
8
>
>
<
>
>
:
0
if
i
>
k
k
X
j
=
i
f
[
i
]+
min
i

r

k
¨
OptCost
(
i
,
r

1
)
+
OptCost
(
r
+
1,
k
)
«
otherwise
Thebasecasecorrectlyindicatesthattheminimumpossiblecosttoperform
zerosearchesintotheemptysetiszero!Ouroriginalproblemistocompute
OptCost
(
1,
n
)
.
Thisrecursivede˝nitioncanbetranslatedmechanicallyintoarecursive
backtrackingalgorithmtocompute
OptCost
(
1,
n
)
.Notsurprisingly,therunning
timeofthisalgorithmisexponential.Inthenextchapter,we'llseehowto
reducetherunningtimetopolynomial,sothere'snotmuchpointincomputing
thepreciserunningtime...
ª
Analysis
...unlessyou'reintothatsortofthing.Justforthefunofit,let's˝gureout
howslowthisbacktrackingalgorithmactuallyis.Therunningtimesatis˝esthe
recurrence
T
(
n
)=
n
X
k
=
1

T
(
k

1
)+
T
(
n

k
)

+
O
(
n
)
.
The
O
(
n
)
termcomesfromcomputingthetotalnumberofsearches
P
n
i
=
1
f
[
i
]
.
Yeah,that'soneuglyrecurrence,butwecansolveitusingexactlythesame
92

Exercises
subtractiontrickweusedbefore.Wereplacethe
O
()
notationwithanexplicit
constant,regroupandcollectidenticalterms,subtracttherecurrencefor
T
(
n

1
)
togetridofthesummation,andthenregroupagain.
T
(
n
)=
2
n

1
X
k
=
0
T
(
k
)+

n
T
(
n

1
)=
2
n

2
X
k
=
0
T
(
k
)+

(
n

1
)
T
(
n
)

T
(
n

1
)=
2
T
(
n

1
)+

T
(
n
)=
3
T
(
n

1
)+

Hey,thatdoesn'tlooksobadafterall.Therecursiontreemethodimmediately
givesusthesolution
T
(
n
)=
O
(
3
n
)
(orwecanjustguessandcon˝rmby
induction).
Thisanalysisimpliesthatourrecursivealgorithmdoes
not
examineall
possiblebinarysearchtrees!Thenumberofbinarysearchtreeswith
n
vertices
satis˝estherecurrence
N
(
n
)=
n

1
X
r
=
1

N
(
r

1
)

N
(
n

r
)

,
whichhasthecloormsolution
N
(
n
)=

(
4
n
=
p
n
)
.(No,that'snotobvious.)
Ouralgorithmsavesconsiderabletimebysearching
independently
fortheoptimal
leftandrightsubtreesforeachroot.Afullenumerationofbinarysearchtrees
wouldconsiderallpossible
pairs
ofleftandrightsubtrees;hencetheproductin
therecurrencefor
N
(
n
)
.
Exercises
1.
Describerecursivealgorithmsforthefollowinggeneralizationsofthe

setSum
problem:
(a)
Givenanarray
X
[
1..
n
]
ofpositiveintegersandaninteger
T
,compute
the
number
ofsubsetsof
X
whoseelementssumto
T
.
(b)
Giventwoarrays
X
[
1..
n
]
and
W
[
1..
n
]
ofpositiveintegersandan
integer
T
,whereeach
W
[
i
]
denotesthe
weight
ofthecorresponding
element
X
[
i
]
,computethe
maximumweight
subsetof
X
whoseelements
sumto
T
.Ifnosubsetof
X
sumsto
T
,youralgorithmshouldreturn

.
2.
Describerecursivealgorithmsforthefollowingvariantsofthetext
tationproblem.Assumethatyouhaveasubroutine
IsWord
thattakesan
93

2.Backtracking
arrayofcharactersasinputandreturns
True
ifandonlyifthatstringisa

(a)
Givenanarray
A
[
1..
n
]
ofcharacters,computethenumberofpartitions
of
A
intowords.Forexample,giventhestring
ARTISTOIL
,youralgorithm
shouldreturn
2
,forthepartitions
ARTIST
·
OIL
and
ART
·
IS
·
TOIL
.
(b)
Giventwoarrays
A
[
1..
n
]
and
B
[
1..
n
]
ofcharacters,decidewhether
A
and
B
canbepartitionedintowordsatthesameindices.Forexample,
thestrings
BOTHEARTHANDSATURNSPIN
and
PINSTARTRAPSANDRAGSLAP
canbepartitionedintowordsatthesameindicesasfollows:
BOT
·
HEART
·
HAND
·
SAT
·
URNS
·
PIN
PIN
·
START
·
RAPS
·
AND
·
RAGS
·
LAP
(c)
Giventwoarrays
A
[
1..
n
]
and
B
[
1..
n
]
ofcharacters,computethenumber
ofdi˙erentwaysthat
A
and
B
canbepartitionedintowordsatthesame
indices.
3.
An
additionchain
foraninteger
n
isanincreasingsequenceofintegers
thatstartswith
1
andendswith
n
,suchthateachentryafterthe˝rst
isthesumoftwoearlierentries.Moreformally,theintegersequence
x
0
<
x
1
<
x
2
<

<
x
`
isanadditionchainfor
n
ifandonlyif
‹
x
0
=
1
,
‹
x
`
=
n
,and
‹
foreveryindex
k
>
0
,thereareindices
i

j
<
k
suchthat
x
k
=
x
i
+
x
j
.
The
`
engthofanadditionchainisthenumberofelementsminus
1
;we
don'tbothertocountthe˝rstentry.Forexample,
h
1,2,3,5,10,20,23,46,
92,184,187,374
i
isanadditionchainfor
374
oflength
11
.
(a)
Describearecursivebacktrackingalgorithmtocomputeaminim
lengthadditionchainforagivenpositiveinteger
n
.
Don't
analyzeor
optimizeyouralgorithm'srunningtime,excepttosatisfyyourown
curiosity.Acorrectalgorithmwhoserunningtimeisexponentialin
n
is
su˚cientforfullcredit.
[Hint:Thisproblemisalotmorelike
n
Queens
thantextsegmentation.]
ª
(b)
Describearecursivebacktrackingalgorithmtocomputeaminim
lengthadditionchainforagivenpositiveinteger
n
intimethatis
nentialin
n
.
[Hint:Youmay˝ndtheresultsofcertainEgyptian
asteners,Induverprosodists,andRussianpeasantshelpful.]
4.
(a)
Let
A
[
1..
m
]
and
B
[
1..
n
]
betwoarbitraryarrays.A
commonsubsequence
of
A
and
B
isbothasubsequenceof
A
andasubsequenceof
B
.Give
asimplerecursivede˝nitionforthefunction
lcs
(
A
,
B
)
,whichgivesthe
lengthofthe
longest
commonsubsequenceof
A
and
B
.
94

Exercises
(b)
Let
A
[
1..
m
]
and
B
[
1..
n
]
betwoarbitraryarrays.A
commonsuper
sequence
of
A
and
B
isanothersequencethatcontainsboth
A
and
B
assubsequences.Giveasimplerecursivede˝nitionforthefunction
scs
(
A
,
B
)
,whichgivesthelengthofthe
shortest
commonsupersequence
of
A
and
B
.
(c)
Callasequence
X
[
1..
n
]
ofnumbers
bitonic
ifthereisanindex
i
with
1
<
i
<
n
,suchthatthepre˝x
X
[
1..
i
]
isincreasingandthesu˚x
X
[
i
..
n
]
isdecreasing.Giveasimplerecursivede˝nitionforthefunction
lbs
(
A
)
,whichgivesthelengthofthelongestbitonicsubsequenceofan
arbitraryarray
A
ofintegers.
(d)
Callasequence
X
[
1..
n
]
oscillating
if
X
[
i
]
<
X
[
i
+
1
]
foralleven
i
,and
X
[
i
]
>
X
[
i
+
1
]
forallodd
i
.Giveasimplerecursivede˝nitionfor
thefunction
los
(
A
)
,whichgivesthelengthofthelongestoscillating
subsequenceofanarbitraryarray
A
ofintegers.
(e)
Giveasimplerecursivede˝nitionforthefunction
sos
(
A
)
,whichgives
thelengthoftheshortestoscillatingsupersequenceofanarbitraryarray
A
ofintegers.
(f)
Callasequence
X
[
1..
n
]
convex
if
2

X
[
i
]
<
X
[
i

1
]+
X
[
i
+
1
]
forall
i
.
Giveasimplerecursivede˝nitionforthefunction
lxs
(
A
)
,whichgives
thelengthofthelongestconvexsubsequenceofanarbitraryarray
A
of
integers.
5.
Foreachofthefollowingproblems,theinputconsistsoftwoarrays
X
[
1..
k
]
and
Y
[
1..
n
]
where
k

n
.
(a)
Describearecursivebacktrackingalgorithmtodeterminewhether
X
is
asubsequenceof
Y
.Forexample,thestring
PPAP
isasubsequenceof
thestring
P
EN
P
INE
A
PPLEAPPLE
P
EN
.
(b)
Describearecursivebacktrackingalgorithmto˝ndthesmallestnumber
ofsymbolsthatcanberemovedfrom
Y
sothat
X
isnolongera
subsequence.Equivalently,youralgorithmshould˝ndthelongest
subsequenceof
Y
thatis
not
asupersequenceof
X
.Forexample,after
removingremovingtwosymbolsfromthestring
PENPINE
A
PPLE
A
PPLEPEN
,
thestring
PPAP
isnolongerasubsequence.
ª
(c)
Describearecursivebacktrackingalgorithmtodeterminewhether
X
occursastwo
disjoint
subsequencesof
Y
.Forexample,thestring
PPAP
a
pearsastwodisjointsubsequencesinthestring
P
EN
P
INE
A
PP
LE
A
P
PLE
P
EN
.
Don't
analyzetherunningtimesofyouralgorithms,excepttosatisfyyour
owncuriosity.Allthreealgorithmsruninexponentialtime;we'llimprove
thatlater,sothepreciserunningtimeisn'tparticularlyimportant.
95

2.Backtracking
6.
Thisproblemasksyoutodesignbacktrackingalgorithmsto˝ndthecostof
anoptimalbinarysearchtreethatsatis˝esadditionalbalanceconstraints.
Yourinputconsistsofasortedarray
A
[
1..
n
]
ofsearchkeysandanarray
f
[
1..
n
]
offrequencycounts,where
f
[
i
]
isthenumberofsearchesfor
A
[
i
]
.
ThisisexactlythesamecostfunctionasdescribedinSection
2.8
.But
nowyourtaskistocomputeanoptimaltreethatsatis˝essomeadditional
constraints.
(a)
AVLtrees
weretheearliestselflancingbalancedbinarysearchtrees,
˝rstdescribedin1962byGeorgyAdelsoVelskyandEvgeniiLandis.An
AVLtreeisabinarysearchtreewhereforeverynode
v
,theheightof
theleftsubtreeof
v
andtheheightoftherightsubtreeof
v
di˙erbyat
mostone.
Describearecursivebacktrackingalgorithmtoconstructanoptimal
AVLtreeforagivensetofsearchkeysandfrequencies.
(b)
SymmetricbinaryB
areanotherselflancingbinarytrees,˝rst
describedbyRudolfBayerin1972;thesearebetterknownbythename
lacktrees
,afterasomewhatsimplerreformulationbyLeoGuibas
andBobSedgwickin1978.Alacktreeisabinarysearchtreewith
thefollowingadditionalconstraints:
‹
Everynodeiseitherredorblack.
‹
Everyrednodehasablackparent.
‹
Everyeafpathcontainsthesamenumberofblacknodes.
Describearecursivebacktrackingalgorithmtoconstructanoptimal
lacktreeforagivensetofsearchkeysandfrequencies.
(c)
AAtrees
wereproposedbyproposedbyArneAnderssonin1993and
slightlysimpli˝ed(andnamed)byMarkAllenWeissin2000.AAtreesare
alsoknownas
leaninglacktrees
,afterasymmetricreformulation
(withdi˙erentrebalancingalgorithms)byBobSedgewickin2006.An
AAtreeisalacktreewithoneadditionalconstraint:
‹
Noleftchildisred.
14
DescribearecursivebacktrackingalgorithmtoconstructanoptimalAA
treeforagivensetofsearchkeysandfrequencies.
Don't
analyzetherunningtimesofyouralgorithms,excepttosatisfyyour
owncuriosity.Allthreealgorithmsruninexponentialtime;we'llimprove
thatlater,sothepreciserunningtimesaren'tparticularlyimportant.
Formorebacktrackingexercises,seethenextchapter!
14
Sedgwick'sreformulationrequiresthatno
right
childisred.Whatever.Anderssonand
Sedgwickarestrangelysilentonwhichendoftheeggtoeat˝rst.
96

Potesenimvidereinhacmargine,qualiterhocoperatifuimus,scilicetquod
iunximusprimumnumerumcumsecundo,videlicet1cum2;etsecundumcum
tercio;etterciumcumquarto;etquartumcumquinto,etsicdeinceps....
[Youcanseeinthemarginherehowwehaveworkedthis;clearly,wecombinedthe
˙rstnumberwiththesecond,namely1with2,andthesecondwiththethird,and
thethirdwiththefourth,andthefourthwiththe˙fth,andsoforth....]
LeonardoPisano,
LiberAbaci
(1202)
Thosewhocannotrememberthepastarecondemnedtorepeatit.
JorgeAgustínNicolásRuizdeSantayanayBorrás,
TheLifeofReason,BookI:IntroductionandReasoninCommonSense
(1905)
Youknowwhatalearningexperienceis?
Alearningexperienceisoneofthosethingsthatsays,
ouknowthatthingyoujustdid?Don'tdothat.
DouglasAdams,
TheSalmonofDoubt
(2002)
3
DynamicProgramming
3.1M

atr

avr
.
tta
OneoftheearliestexamplesofrecursionaroseinIndiamorethan2000yearsago,
inthestudyofpoeticmeter,orprosody.ClassicalSanskritpoetrydistinguishes
betweentwotypesofsyllables(
ak
s
.
ara
):
light
(
laghu
)and
heavy
(
guru
).In
oneclassofmeters,variouslycalled
m

atr

av
r
.
tta
or
m

atr

achandas
,eachlineof
poetryconsistsofa˝xednumberof(
m

atr

a
),whereeachlightsyllable
lastsonebeatandeachheavysyllablelaststwobeats.Theformalstudyof
m

atr


r
.
tta
datesbacktothe
Chanda
h
.
±

astra
,writtenbythescholarPi

ngala
between600
bce
and200
bce
.Pi

ngalaobservedthatthereareexactly˝ve
4
meters:
‹‹
,
‹

‹
,
‹‹
and
‹‹‹‹
.(Hereeach
representsalongsyllableandeach
‹
representsashortsyllable.)
1
1
InMorsecode,alaststhreetimesaslongasabuteachorisfollowed
byapausewiththesamedurationasaThus,eachuisa
laghuak
s
.
ara
,each
97

3.DynamicProgramming
AlthoughPi

ngala'stext
hints
atasystematicruleforcountingmeterswitha
givennumberofbeats,
2
ittookaboutamillenniumforthatruletobestated
explicitly.Inthe7thcentury
ce
,anotherIndianscholarnamedVirah

a
n
.
kawrote
acommentaryonPi

ngala'swork,inwhichheobservedthatthenumberof
meterswith
n
beatsisthesumofthenumberofmeterswith
(
n

2
)
beatsand
thenumberofmeterswith
(
n

1
)
beats.Inmoremodernnotation,Virah

a
n
.
ka's
observationimpliesarecurrenceforthetotalnumber
M
(
n
)
of
n
meters:
M
(
n
)=
M
(
n

2
)+
M
(
n

1
)
Itisnothardtoseethat
M
(
0
)=
1
(thereisonlyoneemptymeter)and
M
(
1
)=
1
(theonlyonmeterconsistsofasingleshortsyllable).
ThesamerecurrencereappearedinEuropeabout500yearsafterVirah

a
n
.
ka,
inLeonardoofPisa's1202treatise
LiberAbaci
,oneofthemostin˛uential
earlyEuropeanworksonInfullcompliancewithStigler'sLaw
ofEponymy,
3
themodern
Fibonaccinumbers
arede˝nedusingVirah

a
n
.
ka's
recurrence,butwithdi˙erentbasecases:
F
n
=
8
>
<
>
:
0
if
n
=
0
1
if
n
=
1
F
n

1
+
F
n

2
otherwise
Inparticular,wehave
M
(
n
)=
F
n
+
1
forall
n
.
BacktrackingCanBeSlow
Therecursivede˝nitionofFibonaccinumbersimmediatelygivesusa
sivealgorithmforcomputingthem.Hereisthesamealgorithmwrittenin
pseudocode:
uisa
guruak
s
.
ara
,andthereareexactly˝veletters(
M
,
D
,
R
,
U
,and
H
)whosecodeslast
four
m

atr

a
.
2
The
Chanda
h
.
±

astra
contains
two
systematicrulesforlistingallmeterswithagivennumber
of
syllables
,whichcorrespondroughlytowritingnumbersinbinaryfromlefttoright(like
Greeks)orfromrighttoleft(likeEgyptians).Thesametextincludesarecursivealgorithmto
compute
2
n
(thenumberofmeterswith
n
syllables)byrepeatedsquaring,and(arguably)a
recursivealgorithmtocomputebinomialcoe˚cients(thenumberofmeterswith
k
shortsyllables
and
n
syllablesoverall).
3
oscienti˝cdiscoveryisnamedafteritsoriginaldiscoverer
Inhis1980paperthatgivesthe
lawitsname,thestatisticianStephenStiglerjokinglyclaimedthatthislawwas˝rstproposedby
sociologistRobertK.Merton.However,similarstatementswerepreviouslymadebyVladimir
Arnol'dinthe1970'sveriesarerarelyattributedtothecorrectpersoCarlBoyerin
1968o,themuseofhistory,oftenis˝ckleinattachingnamestoAlfredNorth
Whiteheadin1917verythingofimportancehasbeensaidbeforebysomeonewhodidnot
discoverandevenStephen'sfatherGeorgeStiglerin1966weshouldeverencountera
casewhereatheoryisnamedforthecorrectman,itwillbenWewillsee
many
other
examplesofStigler'slawinthisbook.
98

3.1.M

atr

avr
.
tta
RecFibo
(
n
)
:
if
n
=
0
return
0
elseif
n
=
1
return
1
else
return
RecFibo
(
n

1
)+
RecFibo
(
n

2
)
Unfortunately,thisnaiverecursivealgorithmishorriblyslow.Exceptforthe
recursivecalls,theentirealgorithmrequiresonlyaconstantnumberofsteps:
onecomparisonandpossiblyoneaddition.Let
T
(
n
)
denotethenumberof
recursivecallsto
RecFibo
;thisfunctionsatis˝estherecurrence
T
(
0
)=
1,
T
(
1
)=
1,
T
(
n
)=
T
(
n

1
)+
T
(
n

2
)+
1,
whichlooksanawfullotliketherecurrenceforFibonaccinumbers
selves!Writingoutthe˝rstseveralvaluesof
T
(
n
)
suggeststhecloorm
solution
T
(
n
)=
2
F
n
+
1

1
,whichwecanverifybyinduction(hint,hint).So
computing
F
n
usingthisalgorithmtakesabouttwiceaslongasjustcounting
to
F
n
.Methodsbeyondthescopeofthisbook
4
implythat
F
n
=

(
˚
n
)
,where
˚
=(
p
5
+
1
)
=
2
ˇ
1.61803
isthelled
goldenratio
.Inshort,therunning
timeofthisrecursivealgorithmisexponentialin
n
.
Wecanactuallyseethisexponentialgrowthdirectlyasfollows.Thinkofthe
recursiontreefor
RecFibo
asabinarytreeofadditions,withonly
0
sand
1
s
attheleaves.Sincetheeventualoutputis
F
n
,exactly
F
n
oftheleavesmust
havevalue
1
;theseleavesrepresentthecallsto
RecRibo
(
1
)
.Aneasyinductive
argument(hint,hint)impliesthat
RecFibo
(
0
)
iscalledexactly
F
n

1
times.(If
wejustwantanasymptoticbound,it'senoughtoobservethatthenumber
ofcallsto
RecFibo
(
0
)
isatmostthenumberofcallsto
RecFibo
(
1
)
.)Thus,
therecursiontreehasexactly
F
n
+
F
n

1
=
F
n
+
1
=
O
(
F
n
)
leaves,andtherefore,
becauseit'safullbinarytree,
2
F
n
+
1

1
=
O
(
F
n
)
nodesaltogether.
Memo(r)ization:RememberEverything
Theobviousreasonfortherecursivealgorithm'slackofspeedisthatitco
putesthesameFibonaccinumbersoverandoverandover.Asinglecallto
RecFibo
(
n
)
resultsinonerecursivecallto
RecFibo
(
n

1
)
,tworecursivecalls
to
RecFibo
(
n

2
)
,threerecursivecallsto
RecFibo
(
n

3
)
,˝verecursivecalls
to
RecFibo
(
n

4
)
,andingeneral
F
k

1
recursivecallsto
RecFibo
(
n

k
)
for
anyinteger
0

k
<
n
.EachcallisrecomputingsomeFibonaccinumberfrom
scratch.
Wecanspeedupourrecursivealgorithmconsiderablybywritingdownthe
resultsofourrecursivecallsandlookingthemupagainifweneedthemlater.
4
See
http://algorithms.wtf
fornotesonsolvingbacktrackingrecurrences.
99

3.DynamicProgramming
Figure3.1.
Therecursiontreeforcomputing
F
7
;arrowsrepresentrecursivecalls.
Thisoptimizationtechnique,nowknownas
memoization
(yes,withoutanR),is
usuallycreditedtoDonaldMichiein1967,butessentiallythesametechnique
wasproposedin1959byArthurSamuel.
5
MemFibo
(
n
)
:
if
n
=
0
return
0
elseif
n
=
1
return
1
else
if
F
[
n
]
isunde˝ned
F
[
n
]
 
MemFibo
(
n

1
)+
MemFibo
(
n

2
)
return
F
[
n
]
Memoizationclearlydecreasestherunningtimeofthealgorithm,butby
howmuch?Ifweactuallytracethroughtherecursivecallsmadeby
MemFibo
,
we˝ndthatthearray
F
[]
is˝lledfromthebottomup:˝rst
F
[
2
]
,then
F
[
3
]
,
andsoon,upto
F
[
n
]
.Thispatterncanbeveri˝edbyinduction:Eachentry
F
[
i
]
is˝lledonlyafteritspredecessor
F
[
i

1
]
.Ifweignorethetimespentin
recursivecalls,itrequiresonlyconstanttimetoevaluatetherecurrenceforeach
Fibonaccinumber
F
i
.Butbydesign,therecurrencefor
F
i
isevaluatedonlyonce
foreachindex
i
.Weconcludethat
MemFibo
performsonly
O
(
n
)
additions,an
exponential
improvementoverthenaïverecursivealgorithm!
5
Michieproposedthatprogramminglanguagesshouldsupportanabstractionhecalleda
ofunctioconsistingofbothastandardfunctionandadictionaryinstead
ofseparatelysupportingarraysandfunctions.Wheneveramemofunctioncomputesafunction
valueforthe˝rsttime,it(yes,withanR)thatvalueintoitsdictionary.Michiewas
inspiredbySamuel'suseofltospeeduptherecursiveevaluationofcheckersgame
trees;Michiedescribeshismoregeneralproposalasablingtheprogrammerto`Samuelize'any
functionsheplea(AsfarasIcantell,Michieneverusedthetermoisatiohimself.)
MemoizationwasusedevenearlierbyClaudeShannon'smazrobotwhich
hedesignedandconstructedin1950.
100

3.1.M

atr

avr
.
tta
Figure3.2.
Therecursiontreefor
F
7
trimmedbymemoization.Downwardgreenarrowsindicatewriting
intothememoizationarray;upwardredarrowsindicatereadingfromthememoizationarray.
DynamicProgramming:FillDeliberately
Onceweseehowthearray
F
[]
is˝lled,wecanreplacethememoizedrecurrence
withasimplefoopthat
intentionally
˝llsthearrayinthatorder,insteadof
relyingonamorecomplicatedrecursivealgorithmtodoitforusaccidentally.
IterFibo
(
n
)
:
F
[
0
]
 
0
F
[
1
]
 
1
for
i
 
2
to
n
F
[
i
]
 
F
[
i

1
]+
F
[
i

2
]
return
F
[
n
]
Nowthetimeanalysisisimmediate:
IterFibo
clearlyuses
O
(
n
)
additions
and
stores
O
(
n
)
integers
.
Thisisour˝rstexplicit
dynamicprogramming
algorithm.Thedynamic
programmingparadigmwasformalizedandpopularizedbyRichardBellman
inthewhileworkingattheRANDCorporation,althoughhewas
farfromthe˝rsttousethetechnique.Inparticular,thisiterativealgorithm
forFibonaccinumberswasalreadyproposedbyVirah

a
n
.
kaandlaterSanskrit
prosodistsinthe12thcentury,andagainbyFibonacciattheturnofthe13th
century!
6
6
Moregeneraldynamicprogrammingtechniqueswereindependentlydeployedseveraltimes
inthelate1930sandearly1940s.Forexample,PierreMasséuseddynamicprogramming
algorithmstooptimizetheoperationofhydroelectricdamsinFranceduringtheVichyregime.
JohnvonNeumannandOskarMorgensterndevelopeddynamicprogrammingalgorithmsto
determinethewinnerofanytwayergamewithperfectinformation(forexample,checkers).
AlanTuringandhiscohortsusedsimilarmethodsaspartoftheirkinge˙ortsat
101

3.DynamicProgramming
Manyyearsafterthefact,Bellmanclaimedthathedeliberatelychosethe
nameamictohidethemathematicalcharacterofhiswork
fromhismilitarybosses,whowereactivelyhostiletowardanythingresembling
mathematicalresearch.
7
Theworddoesnotrefertowriting
code,butrathertotheoldersenseof
planning
or
scheduling
,typicallyby˝lling
inatable.Forexample,sportsprogramsandtheaterprogramsareschedules
ofimportantevents(withads);televisionprogramminginvolves˝llingeach
availabletimeslotwithashow(andads);degreeprogramsareschedulesof
classestobetaken(withads).TheAirForcefundedBellmanandothersto
developmethodsforconstructingtrainingandlogisticsschedules,orasthey
calledthem,Thewordamiwasnotonlyareferenceto
themultistage,aryingprocessesthatBellmanandhiscolleagueswere
attemptingtooptimize,butalsoamarketingbuzzwordthatwouldresonate
withtheFuturisticZeitgeist
Š
ofpoWWIIAmerica.
8
Thanksinpart
toBellman'sproselytizing,dynamicprogrammingisnowastandardtoolfor
multistageplanningineconomics,robotics,controltheory,andseveralother
disciplines.
Don'tRememberEverythingAfterAll
Inmanydynamicprogrammingalgorithms,itisnotnecessarytoretain
all
intermediateresultsthroughtheentirecomputation.Forexample,wecan
signi˝cantlyreducethespacerequirementsofouralgorithm
IterFibo
by
maintainingonlythetwonewestelementsofthearray:
BletchleyPark.BothMassé'sworkandvonNeumannandMergenstern'sworkwere˝rstpublished
in1944,sixyearsbeforeBellmancoinedthephraseamicThedetailsof
Turing'surismuwerekeptsecretuntilthe
7
CharlesErwinWilsonbecameSecretaryofDefenseinJanuary1953,afteradozenyears
asthepresidentofGeneralMotors.eCharlireorganizedtheDepartmentofDefense
andsigni˝cantlydecreaseditsbudgetinhis˝rstyearino˚ce,withtheexplicitgoalofrunning
theDepartmentmuchmorelikeanindustrialcorporation.BellmandescribedWilsoninhis1984
autobiographyasfollows:
WehadaveryinterestinggentlemaninWashingtonnamedWilson.HewassecretaryofDefense,
andheactuallyhadapathologicalfearandhatredoftheword
research
I'mnotusingtheterm
lightly;I'musingitprecisely.Hisfacewouldsuffuse,hewouldturnred,andhewouldgetviolent
ifpeopleusedtheterm
research
inhispresence.Youcanimaginehowhefelt,then,aboutthe
term
mathematical
...IfeltIhadtodosomethingtoshieldWilsonandtheAirForcefromthefact
thatIwasreallydoingmathematicsinsidetheRANDCorporation.Whattitle,whatname,couldI
choose?
However,Bellman's˝rstpublisheduseofthetermamicalreadyappearedin
1952,severalmonthsbeforeWilsontooko˚ce,sothisstoryisatleast
slightly
embellished.
8
...andjustpossiblyari˙ontheiconicbrandnameynamiTensioforCharlesAtlas's
famousseriesofexercises,whichCharlesRomancoinedin1928.HerooftheBeach!
102

ª
3.2.Aside:EvenFasterFibonacciNumbers
IterFibo2
(
n
)
:
prev
 
1
curr
 
0
for
i
 
1
to
n
next
 
curr
+
prev
prev
 
curr
curr
 
next
return
curr
(Thisalgorithmusesthenoandardbutconsistentbasecase
F

1
=
1
so
that
IterFibo2
(
0
)
returnsthecorrectvalue
0
.)Althoughsavingspacecanbe
absolutelycrucialinpractice,wewon'tfocusonspaceissuesinthisbook.
ª
3.2Aside:EvenFasterFibonacciNumbers
Althoughthepreviousalgorithmissimpleandattractive,itis
not
thefastest
algorithmtocomputeFibonaccinumbers.Wecanderiveafasteralgorithmby
exploitingthefollowingmatrixreformulationoftheFibonaccirecurrence:

01
11

x
y

=

y
x
+
y

Inotherwords,multiplyingatwonalvectorbythematrix

01
11

has
exactlythesamee˙ectasoneiterationoftheinnerloopof
IterFibo2
.Itfollows
thatmultiplyingbythematrix
n
timesisthesameasiteratingtheloop
n
times:

01
11

n

1
0

=

F
n

1
F
n

.
Soifwewantthe
n
thFibonaccinumber,weonlyneedtocomputethe
n
thpower
ofthematrix

01
11

.Ifweuserepeatedsquaring,
9
computingthe
n
thpowerof
somethingrequiresonly
O
(
log
n
)
multiplications.Here,becauseis
a
2

2
matrix,thatmeans
O
(
log
n
)
2

2
matrixmultiplications,eachofwhich
reducestoaconstantnumberofintegermultiplicationsandadditions.Thus,
wecancompute
F
n
inonly
O
(
log
n
)
integerarithmeticoperations
.
Wecanachievethesamespeedupusingtheidentity
F
n
=
F
m
F
n

m

1
+
F
m
+
1
F
n

m
,whichholds(byinduction!)forallintegers
m
and
n
.Inparticular,
thisidentityimpliesthefollowingmutualrecurrenceforpairsofadjacent
Fibonaccinumbers,˝rstproposedbyÉdouardLucasin1898:
F
2
n

1
=
F
2
n

1
+
F
2
n
F
2
n
=
F
n
(
F
n

1
+
F
n
+
1
)=
F
n
(
2
F
n

1
+
F
n
)
9
assuggestedbyPi

ngalaforpowersof
2
elsewherein
Chandah
.
±

astra
103

3.DynamicProgramming
(Wecanalsoderivethismutualrecurrencedirectlyfromthearing
algorithm.)Theserecurrencestranslatedirectlyintothefollowingalgorithm:
hh
Computethepair
F
n

1
,
F
n
ii
FastRecFibo
(
n
)
:
if
n
=
1
return
0,1
m
 b
n
=
2
c
hprv
,
hcur
 
FastRecFibo
(
m
)
hh
F
m

1
,
F
m
ii
prev
 
hprv
2
+
hcur
2
hh
F
2
m

1
ii
curr
 
hcur

(
2

hprv
+
hcur
)
hh
F
2
m
ii
next
 
prev
+
curr
hh
F
2
m
+
1
ii
if
n
iseven
return
prev
,
curr
else
return
curr
,
next
Ourstandardrecursiontreetechniqueimpliesthatthisalgorithmperformsonly
O
(
log
n
)
integerarithmeticoperations.
Thisisanexponentialspeedupoverthestandarditerativealgorithm,which
wasalreadyanexponentialspeedupoverouroriginalrecursivealgorithm.
Right?
Whoa!Notsofast!
Well,notexactly.Fibonaccinumbersgrowexponentiallyfast.The
n
thFibonacci
numberisapproximately
n
log
10
˚
ˇ
n
=
5
decimaldigitslong,or
n
log
2
˚
ˇ
2
n
=
3
bits.Sowecan'tpossiblycompute
F
n
inlogarithmic
time
weneed

(
n
)
time
justtowritedowntheanswer!
Thewayoutofthisapparentparadoxistoobservethat
wecan'tperform
arbitraryonarithmeticinconstanttime
.Let
M
(
n
)
denotethetime
requiredtomultiplytwo
n
numbers.Therunningtimeof
FastRecFibo
satis˝estherecurrence
T
(
n
)=
T
(
b
n
=
2
c
)+
M
(
n
)
,whichsolvesto
T
(
n
)=
O
(
M
(
n
))
viarecursiontrees.Thefastestintegermultiplicationalgorithm
known(asof2019)runsin
O
(
n
log
n
)
time,sothatisalsotherunningtimeof
thefastestalgorithmknown(asof2019)tocomputeFibonaccinumbers.
Isthisalgorithmslowerthanouriterativealgorithms?Actually,
nonisn'tfree,either!Addingtwo
n
numbersrequires
O
(
n
)
time,
sotheiterativealgorithms
IterFibo
and
IterFibo2
actuallyrunin
O
(
n
2
)
time
.
(Doyouseewhy?)So
FastRecFibo
issigni˝cantlyfasterthantheiterative
algorithms,justnot
exponentially
faster.
Intheoriginalrecursivealgorithm,theextracostofon
arithmeticisoverwhelmedbythehugenumberofrecursivecalls.Thecorrect
104

3.3.
InterpunctioVerborumRedux
recurrenceis
T
(
n
)=
T
(
n

1
)+
T
(
n

2
)+
O
(
n
)
,whichstillhasthesolution
T
(
n
)=
O
(
˚
n
)
.
3.3
InterpunctioVerborumRedux
Forournextdynamicprogrammingalgorithm,let'sconsiderthetextsegment
tionproblemfromthepreviouschapter.Wearegivenastring
A
[
1..
n
]
anda
subroutine
IsWord
thatdetermineswhetheragivenstringisaword(whatever
thatmeans),andwewanttoknowwhether
A
canbepartitionedintoasequence
ofwords.
Wesolvedthisproblembyde˝ningafunction
Splittable
(
i
)
thatreturns
True
ifandonlyifthesu˚x
A
[
i
..
n
]
canbepartitionedintoasequenceofwords.We
needtocompute
Splittable
(
1
)
.Thisfunctionsatis˝estherecurrence
Splittable
(
i
)=
8
>
<
>
:
True
if
i
>
n
n
W
j
=
i

IsWord
(
i
,
j
)
^
Splittable
(
j
+
1
)

otherwise
where
IsWord
(
i
,
j
)
isshorthandfor
IsWord
(
A
[
i
..
j
])
.Thisrecurrencetranslates
directlyintoarecursivebacktrackingalgorithmthatcallsthe
IsWord
subroutine
O
(
2
n
)
timesintheworstcase.
Butforany˝xedstring
A
[
1..
n
]
,thereareonly
n
di˙erentwaystocall
therecursivefunction
Splittable
(
i
)
neforeachvalueof
i
between
1
and
n
+
1
only
O
(
n
2
)
di˙erentwaystocall
IsWord
(
i
,
j
)
neforeachpair
(
i
,
j
)
suchthat
1

i

j

n
.Whyarewespendingexponentialtimecomputing
onlyapolynomialamountofstu˙?
Eachrecursivesubproblemisspeci˝edbyanintegerbetween
1
and
n
+
1
,so
wecanmemoizethefunction
Splittable
intoanarray
SplitTable
[
1..
n
+
1
]
.Each
subproblem
Splittable
(
i
)
dependsonlyonresultsofsubproblems
Splittable
(
j
)
where
j
>
i
,sothememoizedrecursivealgorithm˝llsthearrayin
decreasing
indexorder.Ifwe˝llthearrayinthisorderdeliberately,weobtainthedynamic
programmingalgorithmshowninFigure
3.3
.Thealgorithmmakes
O
(
n
2
)
callsto
IsWord
,anexponentialimprovementoverourearlierbacktracking
algorithm.
3.4ThePattern:SmartRecursion
Inanutshell,dynamicprogrammingis
recursionwithoutrepetition
.Dynamic
programmingalgorithmsstorethesolutionsofintermediatesubproblems,often
butnotalways
insomekindofarrayortable.Manyalgorithmsstudents
105

3.DynamicProgramming
FastSplittable
(
A
[
1..
n
])
:
SplitTable
[
n
+
1
]
 
True
for
i
 
n
downto
1
SplitTable
[
i
]
 
False
for
j
 
i
to
n
if
IsWord
(
i
,
j
)
and
SplitTable
[
j
+
1
]
SplitTable
[
i
]
 
True
return
SplitTable
[
1
]
Figure3.3.
Interpunctioverborumvelox
(andinstructors,andtextbooks)makethemistakeoffocusingonthetabl
becausetablesareeasyandfamiliofthe
much
moreimportant
(anddi˚cult)taskof˝ndingacorrectrecurrence.Aslongaswememoizethe
correctrecurrence,anexplicittableisn'treallynecessary,butiftherecurrence
isincorrect,wearewellandtrulyhosed.
Dynamicprogrammingis
not
about˙llingintables.
It'saboutsmartrecursion!
Dynamicprogrammingalgorithmsarebestdevelopedintwodistinctstages.
1.
Formulatetheproblemrecursively.
Writedownarecursiveformula
oralgorithmforthewholeproblemintermsoftheanswerstosmaller
subproblems.Thisisthehardpart.Acompleterecursiveformulationhas
twoparts:
(a)
Speci˙cation.
Describetheproblemthatyouwanttosolverecursively,
incoherentandpreciseEnglisot
how
tosolvethatproblem,but
what
problemyou'retryingtosolve.Withoutthisspeci˝cation,itis
impossible,eveninprinciple,todeterminewhetheryoursolutionis
correct.
(b)
Solution.
Giveaclearrecursiveformulaoralgorithmforthewhole
problemintermsoftheanswerstosmallerinstancesof
exactly
thesame
problem.
2.
Buildsolutionstoyourrecurrencefromthebottomup.
Writeana
rithmthatstartswiththebasecasesofyourrecurrenceandworksitsway
uptothe˝nalsolution,byconsideringintermediatesubproblemsinthe
correctorder.Thisstagecanbebrokendownintoseveralsmaller,relatively
mechanicalsteps:
(a)
Identifythesubproblems.
Whatareallthedi˙erentwaysyour
cursivealgorithmcancallitself,startingwithsomeinitialinput?For
example,theargumentto
RecFibo
isalwaysanintegerbetween
0
and
n
.
106

3.5.Warning:GreedisStupid
(b)
Chooseamemoizationdatastructure.
Findadatastructurethatcan
storethesolutionto
every
subproblemyouidenti˝edinstep(a).Thisis
usually
butnotalways
amultidimensionalarray.
(c)
Identifydependencies.
Exceptforthebasecases,everysubproblem
dependsonothersubproblchones?Drawapictureofyour
datastructure,pickagenericelement,anddrawarrowsfromeachof
theotherelementsitdependson.Thenformalizeyourpicture.
(d)
Findagoodevaluationorder.
Orderthesubproblemssothateachone
comes
after
thesubproblemsitdependson.Youshouldconsiderthe
basecases˝rst,thenthesubproblemsthatdependsonlyonbasecases,
andsoon,eventuallybuildinguptotheoriginaltevelproblem.The
dependenciesyouidenti˝edinthepreviousstepde˝neapartialorder
overthesubproblems;youneedto˝ndalinearextensionofthatpartial
order.
Becareful!
(e)
Analyzespaceandrunningtime.
Thenumberofdistinctsubproblems
determinesthespacecomplexityofyourmemoizedalgorithm.To
computethetotalrunningtime,adduptherunningtimesofallpossible
subproblems,
assumingdeeperrecursivecallsarealreadymemoized
.You
canactuallydothisimmediatelyafterstep(a).
(f)
Writedownthealgorithm.
Youknowwhatordertoconsiderthe
subproblems,andyouknowhowtosolveeachsubproblem.Sodothat!
Ifyourdatastructureisanarray,thisusuallymeanswritingafewnested
foopsaroundyouroriginalrecurrence,andreplacingtherecursive
callswitharrayl
Ofcourse,youhavetoprovethateachofthesestepsiscorrect.Ifyourrecurrence
iswrong,orifyoutrytobuildupanswersinthewrongorder,youralgorithm
won'twork!
3.5Warning:GreedisStupid
Ifwe'reincrediblylucky,wecanbypassalltherecurrencesandtablesandsoforth,
andsolvetheproblemusinga
greedy
algorithm.Likeabacktrackingalgorithm,a
greedyalgorithmconstructsasolutionthroughaseriesofdecisions,butitmakes
thosedecisionsdirectly,
without
solvingatanyrecursivesubproblems.Whilethis
approachseemsverynatural,italmostneverworks;optimizationproblemsthat
canbesolvedcorrectlybyagreedyalgorithmarequiterare.Nevertheless,for
manyproblemsthatshouldbesolvedbybacktrackingordynamicprogramming,
manystudents'˝rstintuitionistoapplyagreedystrategy.
Forexample,agreedyalgorithmforthetextsegmentationproblemmight
˝ndtheshortest(or,ifyouprefer,longest)pre˝xoftheinputstringthatis
107

3.DynamicProgramming
aword,acceptthatpre˝xasthe˝rstwordinthesegmentation,andthen
recursivelysegmenttheremainingsu˚xoftheinputstring.Similarly,agreedy
algorithmforthelongestincreasingsubsequenceproblemmightlookforthe
smallestelementoftheinputarray,acceptthatelementasthestartofthetarget
subsequence,andthenrecursivelylookforthelongestincreasingsubsequence
totherightofthatelement.Ifthesesoundlikestupidhackstoyou,patyourself
ontheback;thesearen'teven
close
tocorrectsolutions.
Everyoneshouldtattoothefollowingsentenceonthebackoftheirhands,
rightunderalltherulesaboutlogarithmsandnotation:
Greedyalgorithmsneverwork!
Usedynamicprogramminginstead!
What,never?
No,never!
What,
never
?
Well...hardlyever.
10
Becausethegreedyapproachissoincrediblytempting,butsorarelycorrect,
Istronglyadvocatethefollowingpolicyinanyalgorithmscourse,even(or
perhaps
especially
)forcoursesthatdonotnormallyaskforproofsofcorrectness.
11
Youwillnotreceive
any
creditfor
any
greedyalgorithm,
on
any
homeworkorexam,evenifthealgorithmiscorrect,
withouta
formal
proofofcorrectness.
Moreover,thevastmajorityofproblemsforwhichstudentsaretemptedto
submitagreedyalgorithmareactuallybestsolvedusingdynamicprogramming.
SoIalwayso˙erthefollowingadvicetomyalgorithmsstudents.
Wheneveryoueven
think
wordY
yoursubconsciousistellingyoutouseDYnamicprogramming.
Evenforproblemsthat
can
becorrectlysolvedbygreedyalgorithms,it'susually
moreproductivetodevelopabacktrackingordynamicprogrammingalgorithm
˝rst.Firstmakeitwork,thenmakeitfast.Wewillseetechniquesforproving
greedyalgorithmscorrectinthenextchapter.
10
Theyhardlyevereverwork!Thengivethreecheers,andonecheermore,fortherigorous
Captainofthe
Pinafore
!Thengivethreecheers,andonecheermore,fortheCaptainofthe
Pinafore
!
11
Introducingthispolicyinmyownalgorithmscoursessigni˝cantlyimprovedstudents'grades,
becauseitsigni˝cantlyreducedthefrequencyofincorrectgreedyalgorithms.
108

3.6.LongestIncreasingSubsequence
3.6LongestIncreasingSubsequence
Anotherproblemweconsideredinthepreviouschapterwascomputingthe
lengthofthelongestincreasingsubsequenceofagivenarray
A
[
1..
n
]
ofnumbers.
Wedevelopedtwodi˙erentrecursivebacktrackingalgorithmsforthisproblem.
Bothalgorithmsrunin
O
(
2
n
)
timeintheworstcase;bothalgorithmscanbe
spedupsigni˝cantlyviadynamicprogramming.
FirstRecurrence:IsThisNext?
Our˝rstbacktrackingalgorithmevaluatedthefunction
LISbigger
(
i
,
j
)
,which
wede˝nedasthelengthofthelongestincreasingsubsequenceof
A
[
j
..
n
]
in
whicheveryelementislargerthan
A
[
i
]
.Wederivedthefollowingrecurrence
forthisfunction:
LISbigger
(
i
,
j
)=
8
>
>
>
<
>
>
>
:
0
if
j
>
n
LISbigger
(
i
,
j
+
1
)
if
A
[
i
]

A
[
j
]
max
ˆ
LISbigger
(
i
,
j
+
1
)
1
+
LISbigger
(
j
,
j
+
1
)
˙
otherwise
Tosolvetheoriginalproblem,wecanaddasentinelvalue
A
[
0
]=

tothe
arrayandcompute
LISbigger
(
0,1
)
.
Eachrecursivesubproblemisidenti˝edbytwoindices
i
and
j
,sothereare
only
O
(
n
2
)
distinctrecursivesubproblemstoconsider.Wecanmemoizethe
sultsofthesesubproblemsintoatwonalarray
LISbigger
[
0..
n
,1..
n
]
.
12
Moreover,eachsubproblemcanbesolvedin
O
(
1
)
time,notcountingrecursive
calls,soweshouldexpectthe˝naldynamicprogrammingalgorithmtorunin
O
(
n
2
)
time
.
Theorderinwhichthememoizedrecursivealgorithm˝llsthisarrayis
notimmediatelyclear;allwecantellfromtherecurrenceisthateachentry
LISbigger
[
i
,
j
]
is˝lledin
after
theentries
LISbigger
[
i
,
j
+
1
]
and
LISbigger
[
j
,
j
+
1
]
inthenextcolumn,asindicatedontheleftinFigure
3.4
.
Fortunately,thispartialinformationisenoughtogiveusa
valid
evaluation
order.Ifwe˝llthetableonecolumnatatime,fromrighttoleft,thenwhenever
wereachanentryinthetable,theentriesitdependsonarealreadyavailable.
Thismaynotbetheorderthattherecursivealgorithmwoulduse,butitworks,
sowe'llgowithit.Theright˝gureinFigure
3.4
illustratesthisevaluationorder,
withadoublearrowindicatingtheouterloopandsinglearrowsindicatingthe
12
Infact,weonlyneedhalfofthisarray,becausewealwayshave
i
<
j
.Butevenifwecared
aboutconstantfactorsinthisbook(wedon't),thiswouldbethewrongtimetoworryabout
them.Firstmakeitwork;thenmakeitbetter.
109

3.DynamicProgramming
Figure3.4.
Subproblemdependenciesforlongestincreasingsubsequence,andavalidevaluationorder
innerloop.Inthiscase,thesinglearrowsarebidirectional,becausetheorder
thatweuseto˝lleachcolumndoesn'tmatter.
Andwe'redone!Pseudocodeforourdynamicprogrammingalgorithmis
shownbelow;asexpected,ouralgorithmclearlyrunsin
O
(
n
2
)
time.Ifnecessary,
wecanreducethespaceboundfrom
O
(
n
2
)
to
O
(
n
)
bymaintainingonlythe
twomostrecentcolumnsofthetable,
LISbigger
[

,
j
]
and
LISbigger
[

,
j
+
1
]
.
13
FastLIS
(
A
[
1..
n
])
:
A
[
0
]
 
hh
Addasentinel
ii
for
i
 
0
to
n
hh
Basecases
ii
LISbigger
[
i
,
n
+
1
]
 
0
for
j
 
n
downto
1
for
i
 
0
to
j

1
hh
...orwhatever
ii
keep
 
1
+
LISbigger
[
j
,
j
+
1
]
skip
 
LISbigger
[
i
,
j
+
1
]
if
A
[
i
]

A
[
j
]
LISbigger
[
i
,
j
]
 
skip
else
LISbigger
[
i
,
j
]
 
max
f
keep
,
skip
g
return
LISbigger
[
0,1
]
SecondRecurrence:What'sNext?
Oursecondbacktrackingalgorithmevaluatedthefunction
LIS˝rst
(
i
)
,which
wede˝nedasthelengthofthelongestincreasingsubsequenceof
A
[
i
..
n
]
that
beginswith
A
[
i
]
.Wederivedthefollowingrecurrenceforthisfunction:
LIS˝rst
(
i
)=
1
+
max

LIS˝rst
(
j
)


j
>
i
and
A
[
j
]
>
A
[
i
]

Here,weassumethat
max
?
=
0
,sothatthebasecaseslike
LIS˝rst
(
n
)=
1
fall
outoftherecurrenceautomatically.Tosolvetheoriginalproblem,wecanadd
asentinelvalue
A
[
0
]=

tothearrayandcompute
LIS˝rst
(
0
)

1
.
Inthiscase,recursivesubproblemsareindicatedbyasingleindex
i
,sowe
canmemoizetherecurrenceintoaononalarray
LIS˝rst
[
1..
n
]
.Each
13
See,Itoldyounottoworryaboutconstantfactorsyet!
110

3.7.EditDistance
entry
LIS˝rst
[
i
]
dependsonlyonentries
LIS˝rst
[
j
]
with
j
>
i
,sowecan˝ll
thearrayindecreasingindexorder.Tocomputeeach
LIS˝rst
[
i
]
,weneedto
consider
LIS˝rst
[
j
]
for
all
indices
j
>
i
,butwedon'tneedtoconsiderthose
indices
j
inanyparticularorder.Theresultingdynamicprogrammingalgorithm
runsin
O
(
n
2
)
time
anduses
O
(
n
)
space.
FastLIS2
(
A
[
1..
n
])
:
A
[
0
]=

hh
Addasentinel
ii
for
i
 
n
downto
0
LIS˝rst
[
i
]
 
1
for
j
 
i
+
1
to
n
hh
...orwhatever
ii
if
A
[
j
]
>
A
[
i
]
and
1
+
LIS˝rst
[
j
]
>
LIS˝rst
[
i
]
LIS˝rst
[
i
]
 
1
+
LIS˝rst
[
j
]
return
LIS˝rst
[
0
]

1
hh
Don'tcountthesentinel
ii
3.7EditDistance
The
editdistance
betweentwostringsistheminimumnumberofletter
tions,letterdeletions,andlettersubstitutionsrequiredtotransformonestring
intotheother.Forexample,theeditdistancebetween
FOOD
and
MONEY
isat
mostfour:
F
OOD
!
MOO
D
!
MON
^
D
!
MONED
!
MONEY
ThisdistancefunctionwasindependentlyproposedbyVladimirLevenshteinin
1965(workingoncodingtheory),TarasVintsyukin1968(workingonspeech
recognition),andStanislawUlamin1972(workingwithbiologicalsequences).
Forthisreason,editdistanceissometimescalled
Levenshteindistance
or
Ulam
distance
(butstrangely,neverintsyukdistan
Wecanvisualizethiseditingprocessbyaligningthestringsoneabovethe
other,withagapinthe˝rstwordforeachinsertionandagapinthesecond
wordforeachdeletion.Columnswithtwo
di˙erent
characterscorrespondto
substitutions.Inthisrepresentation,thenumberofeditingstepsisjustthe
numberofcolumnsthatdo
not
containthesamecharactertwice.
FOOD
MONEY
It'sfairlyobviousthatwecan'ttransform
FOOD
into
MONEY
inthreesteps,so
theeditdistancebetween
FOOD
and
MONEY
isexactlyfour.Unfortunately,it'snot
soeasyingeneraltotellwhenasequenceofeditsisasshortaspossible.For
example,thefollowingalignmentshowsthatthedistancebetweenthestrings
ALGORITHM
and
ALTRUISTIC
is
atmost
6.Isthatthebestwecando?
111

3.DynamicProgramming
ALGORITHM
ALTRUISTIC
RecursiveStructure
Todevelopadynamicprogrammingalgorithmtocomputeeditdistance,we˝rst
needtoformulatetheproblemrecursively.Ouralignmentrepresentationforedit
sequenceshasacruciallsubstruproperty.Supposewehavethe
gaprepresentationfortheshortesteditsequencefortwostrings.
Ifweremove
thelastcolumn,theremainingcolumnsmustrepresenttheshortestedit
sequencefortheremainingpre˙xes.
Wecaneasilyprovethisobservation
bycontradiction:Ifthepre˝xeshadashortereditsequence,gluingthelast
columnbackonwouldgivesusashortereditsequencefortheoriginalstrings.
Sooncewe˝gureoutwhatshouldhappeninthelastcolumn,theRecursion
Fairycan˝gureouttherestoftheoptimalgaprepresentation.
Saiddi˙erently,thealignmentwearelookingforrepresentsasequenceof
editingoperations,ordered(fornoparticularreason)fromrighttoleft.Solving
theeditdistanceproblemrequiresmakingasequenceofdecisions,oneforeach
columnintheoutputalignment.Inthemiddleofthissequenceofdecisions,we
havealreadyalignedasu˚xofonestringwithasu˚xoftheother.
ALGOR
ALTRU
I
T
H
M
I
S
T
I
C
Becausethecostofanalignmentisjustthenumberofmismatchedcolumns,
ourremainingdecisionsdon'tdependontheeditingoperationswe'vealready
chosen;theyonlydependonthepre˝xeswehaven'talignedyet.
ALGOR
ALTRU
Thus,foranytwoinputstrings
A
[
1..
m
]
and
B
[
1..
n
]
,wecanformulatetheedit
distanceproblemrecursivelyasfollows:Foranyindices
i
and
j
,let
Edit
(
i
,
j
)
denotetheeditdistancebetweenthepre˝xes
A
[
1..
i
]
and
B
[
1..
j
]
.Weneedto
compute
Edit
(
m
,
n
)
.
Recurrence
When
i
and
j
arebothpositive,thereareexactlythreepossibilitiesforthelast
columnintheoptimalalignmentof
A
[
1..
i
]
and
B
[
1..
j
]
:
‹
Insertion:
Thelastentryinthetoprowisempty.Inthiscase,theedit
distanceisequalto
Edit
(
i
,
j

1
)+
1
.The
+
1
isthecostofthe˝nalinsertion,
112

3.7.EditDistance
andtherecursiveexpressiongivestheminimumcostfortheremaining
alignment.
ALGOR
ALTR
U
‹
Deletion:
Thelastentryinthebottomrowisempty.Inthiscase,theedit
distanceisequalto
Edit
(
i

1,
j
)+
1
.The
+
1
isthecostofthe˝naldeletion,
andtherecursiveexpressiongivestheminimumcostfortheremaining
alignment.
ALGO
ALTRU
R
‹
Substitution:
Bothrowshavecharactersinthelastcolumn.Ifthesetwo
charactersaredi˙erent,thentheeditdistanceisequalto
Edit
(
i

1,
j

1
)+
1
.
Ifthesetwocharactersareequal,thesubstitutionisfree,sotheeditdistance
is
Edit
(
i

1,
j

1
)
.
ALGO
ALTR
R
U
ALGO
ALT
R
R
Thisgenericcaseanalysisbreaksdownifeither
i
=
0
or
j
=
0
,butthose
boundarycasesareeasytohandledirectly.
‹
Transformingtheemptystringintoastringoflength
j
requires
j
insertions,
so
Edit
(
0,
j
)=
j
.
‹
Transformingastringoflength
i
intotheemptystringrequires
i
deletions,
so
Edit
(
i
,0
)=
i
.
Asasanitycheck,bothofthesebasecasescorrectlyindicatethattheedit
distancebetweentheemptystringandtheemptystringiszero!
Weconcludethatthe
Edit
functionsatis˝esthefollowingrecurrence:
Edit
(
i
,
j
)=
8
>
>
>
>
>
<
>
>
>
>
>
:
i
if
j
=
0
j
if
i
=
0
min
8
<
:
Edit
(
i
,
j

1
)+
1
Edit
(
i

1,
j
)+
1
Edit
(
i

1,
j

1
)+[
A
[
i
]
6
=
B
[
j
]]
9
=
;
otherwise
DynamicProgramming
Nowthatwehavearecurrence,wecantransformitintoadynamicprogramming
algorithmfollowingourusualmechanicalrecipe.
‹
Subproblems:
Eachrecursivesubproblemisidenti˝edbytwoindices
0

i

m
and
0

j

n
.
113

3.DynamicProgramming
‹
Memoizationstructure:
Sowecanmemoizeallpossiblevaluesof
Edit
(
i
,
j
)
inatwonalarray
Edit
[
0..
m
,0..
n
]
.
‹
Dependencies:
Eachentry
Edit
[
i
,
j
]
dependsonlyonitsthreeneighboring
entries
Edit
[
i

1,
j
]
,
Edit
[
i
,
j

1
]
,and
Edit
[
i

1,
j

1
]
.
‹
Evaluationorder:
Ifwe˝llthisarrayinstandardrowby
rowfromtopdown,eachrowfromlefttowheneverwereachan
entryinthearray,alltheentriesitdependsonarealreadyavailable.(This
isn'tthe
only
evaluationorderwecoulduse,butitworks,solet'sgowithit.)
‹
Spaceandtime:
Thememoizationstructureuses
O
(
mn
)
space.Wecan
computeeachentry
Edit
[
i
,
j
]
in
O
(
1
)
timeonceweknowitspredecessors,
sotheoverallalgorithmrunsin
O
(
mn
)
time.
Hereistheresultingdynamicprogrammingalgorithm:
EditDistance
(
A
[
1..
m
]
,
B
[
1..
n
])
:
for
j
 
0
to
n
Edit
[
0,
j
]
 
j
for
i
 
1
to
m
Edit
[
i
,0
]
 
i
for
j
 
1
to
n
ins
 
Edit
[
i
,
j

1
]+
1
del
 
Edit
[
i

1,
j
]+
1
if
A
[
i
]=
B
[
j
]
rep
 
Edit
[
i

1,
j

1
]
else
rep
 
Edit
[
i

1,
j

1
]+
1
Edit
[
i
,
j
]
 
min
f
ins
,
del
,
rep
g
return
Edit
[
m
,
n
]
ThisalgorithmismostcommonlyattributedtoRobertWagnerandMichael
Fischer,whodescribedthealgorithmin1974.However,infullcompliance
withStigler'sLawofEponymy,eitheridenticalormoregeneralalgorithms
wereindependentlydiscoveredbyTarasVintsyukin1968,V.M.Velichkoand
N.G.Zagoruykoin1970,DavidSanko˙in1972,PeterSellersin1974,and
114

3.7.EditDistance
almostcertainlyseveralothers.
14
Interestingly,
none
oftheseauthorsciteeither
LevenshteinorUlam!
Thememoizationtablefortheinputstrings
ALGORITHM
and
ALTRUISTIC
is
shownbelow.Boldnumbersindicateplaceswherecharactersinthetwostrings
areequal.Theeditdistancebetween
ALGORITHM
and
ALTRUISTIC
isindeedsix!
A
L
G
O
R
I
T
H
M
0
!
1
!
2
!
3
!
4
!
5
!
6
!
7
!
8
!
9
#
&
&
&
&
&
&
&
&
&
A
1
0
!
1
!
2
!
3
!
4
!
5
!
6
!
7
!
8
#
#
&
&
&
&
&
&
&
&
&
L
21
0
!
1
!
2
!
3
!
4
!
5
!
6
!
7
#
#
#
&
&
&
&
&
&
&
&
&
&
&
&
&
T
3211
!
2
!
3
!
4
4
!
5
!
6
#
#
#
#
&
&
&
&
&
&
&
&
&
&
&
&
R
43222
2
!
3
!
4
!
5
!
6
#
#
#
&
#
&
#
&
#
&
&
&
&
U
5433333
!
4
!
5
!
6
#
#
#
&
#
&
#
&
#
&
&
&
&
&
&
&
&
&
&
&
&
I
654444
3
!
4
!
5
!
6
#
#
#
&
#
&
#
&
#
#
&
&
&
S
7655554456
#
#
#
&
#
&
#
&
#
#
&
&
&
&
&
&
&
&
&
&
&
T
8766665
4
!
5
!
6
#
#
#
&
#
&
#
&
#
&
&
&
&
&
&
&
&
&
#
#
&
&
I
987777
6
55
!
6
#
#
#
&
#
&
#
&
#
#
#
&
#
&
C
10988887666
Thearrowsinthistableindicatewhichpredecessor(s)actuallyde˝ne
eachentry.Eachdirectionofarrowcorrespondstoadi˙erenteditoperation:
horizontal=deletion,vertical=insertion,anddiagonal=substitution.Boldred
diagonalarrowsindicatesubstitutionsofaletterforitself.Anypathof
arrowsfromthetopleftcornertothebottomrightcornerofthistablerepresents
anoptimaleditsequencebetweenthetwostrings.Theexamplememoization
arraycontainsexactlythreedirectedpathsfromthetopleftcornertothebottom
rightcorner,eachindicatingadi˙erentsequenceofsixeditstransforming
ALGORITHM
into
ALTRUISTIC
,asshownonthenextpage.
14
Thisalgorithmissometimesalso
incorrectly
attributedtoSaulNeedlemanandChristian
Wunschin1970.NeedlWunschamorecommonlyreferstothestandard
dynamicprogrammingalgorithmforcomputingthelongestcommonsubsequenceoftwostrings
(orequivalently,theeditdistancewhereonlyinsertionsanddeletionsarepermitted)in
O
(
mn
)
time,butthatattributionis
also
incorrect!Infact,NeedlemanandWunsch'salgorithmcomputes
(weighted)longestcommonsubsequences(possiblywithgapcosts)in
O
(
m
2
n
2
)
time,usinga
di˙erentrecurrence.Sanko˙explicitlydescribeshis
O
(
mn
)
algorithmasanimprovement
ofNeedlemanandWunsch'salgorithm.
115

3.DynamicProgramming
ALGORITHM
ALTRUISTIC
ALGORITHM
ALTRUISTIC
ALGORITHM
ALTRUISTIC
Our
EditDistance
algorithmdoesnotactuallycomputeorstoreanyarrows
inthetable,butthearrow(s)leadingintoanyentryinthetablecanbe
reconstructedonthe˛yin
O
(
1
)
timefromthenumericalvalues.Thus,once
we've˝lledinthetable,wecanreconstructtheshortesteditsequencein
O
(
n
+
m
)
additionaltime.
3.8SubsetSum
Recallthatthe
SubsetSum
problemaskswhetheranysubsetofagivenarray
X
[
1..
n
]
ofpositiveintegerssumstoagiveninteger
T
.Inthepreviouschapter,
wedevelopedarecursiveSubsetSumalgorithmthatcanbereformulatedas
follows.Fixtheoriginalinputarray
X
[
1..
n
]
andde˝nethebooleanfunction
SS
(
i
,
t
)=
True
ifandonlyifsomesubsetof
X
[
i
..
n
]
sumsto
t
.
Weneedtocompute
SS
(
1,
T
)
.Thisfunctionsatis˝esthefollowingrecurrence:
SS
(
i
,
t
)=
8
>
<
>
:
True
if
t
=
0
False
if
t
<
0
or
i
>
n
SS
(
i
+
1,
t
)
_
SS
(
i
+
1,
t

X
[
i
])
otherwise
Wecantransformthisrecurrenceintoadynamicprogrammingalgorithm
followingtheusualboilerplate.
‹
Subproblems:
Eachsubproblemisdescribedbyaninteger
i
suchthat
1

i

n
+
1
,andaninteger
t

T
.However,subproblemswith
t
<
0
are
trivial,soitseemsrathersillytomemoizethem.
15
Indeed,wecanmodify
therecurrencesothatthosesubproblemsneverarise:
SS
(
i
,
t
)=
8
>
>
>
<
>
>
>
:
True
if
t
=
0
False
if
i
>
n
SS
(
i
+
1,
t
)
if
t
<
X
[
i
]
SS
(
i
+
1,
t
)
_
SS
(
i
+
1,
t

X
[
i
])
otherwise
15
Yes,I'mbreakingmyownruleagainstprematureoptimization.
116

3.9.OptimalBinarySearchTrees
‹
Datastructure:
Wecanmemoizeourrecurrenceintoatwonal
array
S
[
1..
n
+
1,0..
T
]
,where
S
[
i
,
t
]
storesthevalueof
SS
(
i
,
t
)
.
‹
Evaluationorder:
Eachentry
S
[
i
,
t
]
dependsonatmosttwootherentries,
bothoftheform
SS
[
i
+
1,

]
.Sowecan˝llthearraybyconsideringrows
frombottomtotopintheouterloop,andconsideringtheelementsineach
rowinarbitraryorderintheinnerloop.
‹
Spaceandtime:
Thememoizationstructureuses
O
(
nT
)
space.If
S
[
i
+
1,
t
]
and
S
[
i
+
1,
t

X
[
i
]]
arealreadyknown,wecancompute
S
[
i
,
t
]
inconstant
time,sothealgorithmrunsin
O
(
nT
)
time
.
Hereistheresultingdynamicprogrammingalgorithm:
FastSubsetSum
(
X
[
1..
n
]
,
T
)
:
S
[
n
+
1,0
]
 
True
for
t
 
1
to
T
S
[
n
+
1,
t
]
 
False
for
i
 
n
downto
1
S
[
i
,0
]=
True
for
t
 
1
to
X
[
i
]

1
S
[
i
,
t
]
 
S
[
i
+
1,
t
]
hh
Avoidthecase
t
<
0
ii
for
t
 
X
[
i
]
to
T
S
[
i
,
t
]
 
S
[
i
+
1,
t
]
_
S
[
i
+
1,
t

X
[
i
]]
return
S
[
1,
T
]
Thewserunningtime
O
(
nT
)
forthisalgorithmisasigni˝cant
improvementoverthe
O
(
2
n
)
recursivebacktrackingalgorithmwhen
T
is
small.
16
However,ifthetargetsum
T
issigni˝cantlylargerthan
2
n
,thisiterative
algorithmisactuallyslowerthanthenaïverecursivealgorithm,becauseit's
wastingtimesolvingsubproblemsthattherecursivealgorithmneverconsiders.
Dynamicprogrammingisn't
always
animprovement!
17
3.9OptimalBinarySearchTrees
The˝nalproblemweconsideredinthepreviouschapterwastheoptimalbinary
searchtreeproblem.Theinputisasortedarray
A
[
1..
n
]
ofsearchkeysandan
array
f
[
1..
n
]
offrequencycounts,where
f
[
i
]
isthenumberoftimeswewill
16
Eventhoughthesubsetsumproblemisthistimebounddoes
not
implythatP=NP,
because
T
isnotnecessarilyboundedbyapolynomialfunctionoftheinputsize.
17
Inthe1967researchmemorandum(!)whereheproposedmemofunctions,DonaldMichie
wrote,otabulatevaluesofafunctionwhichwillnotbeneededisawasteofspace,andto
recomputethesamevaluesmorethanonceisawasteofButinfact,tabulatingvaluesofa
functionthatwillnotbeneededisalsoawasteof
time
!
117

3.DynamicProgramming
searchfor
A
[
i
]
.Ourtaskistoconstructabinarysearchtreeforthatsetsuch
thatthetotalcostofallthesearchesisassmallaspossible.
Fixthefrequencyarray
f
,andlet
OptCost
(
i
,
k
)
denotethetotalsearchtime
intheoptimalsearchtreeforthesubarray
A
[
i
..
k
]
.Wederivedthefollowing
recurrenceforthefunction
OptCost
:
OptCost
(
i
,
k
)=
8
>
>
<
>
>
:
0
if
i
>
k
k
X
j
=
i
f
[
j
]+
min
i

r

k
¨
OptCost
(
i
,
r

1
)
+
OptCost
(
r
+
1,
k
)
«
otherwise
Youcanprobablyguesswhatwe'regoingtodowiththisrecurrenceeventually,
butlet'sridofthatuglysummation˝rst.
Foranypairofindices
i

k
,let
F
(
i
,
k
)
denotethetotalfrequencycountfor
allthekeysintheinterval
A
[
i
..
k
]
:
F
(
i
,
k
)
:
=
k
X
j
=
i
f
[
j
]
Thisfunctionsatis˝esthefollowingsimplerecurrence:
F
(
i
,
k
)=
¨
f
[
i
]
if
i
=
k
F
(
i
,
k

1
)+
f
[
k
]
otherwise
Wecancomputeallpossiblevaluesof
F
(
i
,
k
)
in
O
(
n
2
)
timeuouguessed
amicprogramming!Theusualmechanicalstepsgiveusthefollowing
dynamicprogrammingalgorithm:
InitF
(
f
[
1..
n
])
:
for
i
 
1
to
n
F
[
i
,
i

1
]
 
0
for
k
 
i
to
n
F
[
i
,
k
]
 
F
[
i
,
k

1
]+
f
[
k
]
Wewillusethisshortalgorithmasaninitializationsubroutine.Thisinitialization
allowsustosimplifytheoriginal
OptCost
recurrenceasfollows:
OptCost
(
i
,
k
)=
8
>
<
>
:
0
if
i
>
k
F
[
i
,
k
]+
min
i

r

k
¨
OptCost
(
i
,
r

1
)
+
OptCost
(
r
+
1,
k
)
«
otherwise
Nowlet'sturnthecrank.
118

3.9.OptimalBinarySearchTrees
‹
Subproblems:
Eachrecursivesubproblemisspeci˝edbytwointegers
i
and
k
,suchthat
1

i

n
+
1
and
0

k

n
.
‹
Memoization:
Wecanstoreallpossiblevaluesof
OptCost
inatw
dimensionalarray
OptCost
[
1..
n
+
1,0..
n
]
.(Onlytheentries
OptCost
[
i
,
j
]
with
j

i

1
willactuallybeused,butwhatever.)
‹
Dependencies:
Eachentry
OptCost
[
i
,
k
]
dependsontheentries
OptCost
[
i
,
j

1
]
and
OptCost
[
j
+
1,
k
]
,forall
j
suchthat
i

j

k
.Inotherwords,
eachtableentrydependsonallentrieseitherdirectlytotheleftordirectly
below.
Thefollowingsubroutine˝llstheentry
OptCost
[
i
,
k
]
,assumingallthe
entriesitdependsonhavealreadybeencomputed.
ComputeOptCost
(
i
,
k
)
:
OptCost
[
i
,
k
]
 1
for
r
 
i
to
k
tmp
 
OptCost
[
i
,
r

1
]+
OptCost
[
r
+
1,
k
]
if
OptCost
[
i
,
k
]
>
tmp
OptCost
[
i
,
k
]
 
tmp
OptCost
[
i
,
k
]
 
OptCost
[
i
,
k
]+
F
[
i
,
k
]
‹
Evaluationorder:
Thereareatleastthreedi˙erentordersthatcanbe
usedto˝llthearray.The˝rstonethatoccurstomoststudentsistoscan
throughthetableonediagonalatatime,startingwiththetrivialbasecases
OptCost
[
i
,
i

1
]
andworkingtowardthe˝nalanswer
OptCost
[
1,
n
]
,likeso:
OptimalBST
(
f
[
1..
n
])
:
InitF
(
f
[
1..
n
])
for
i
 
1
to
n
+
1
OptCost
[
i
,
i

1
]
 
0
for
d
 
0
to
n

1
for
i
 
1
to
n

d
hh
...orwhatever
ii
ComputeOptCost
(
i
,
i
+
d
)
return
OptCost
[
1,
n
]
Wecouldalsotraversethearrayrowbyrowfromthebottomup,traversing
eachrowfromlefttoright,orcolumnbycolumnfromlefttoright,traversing
eachcolumnsfromthebottomup.
119

3.DynamicProgramming
OptimalBST2
(
f
[
1..
n
])
:
InitF
(
f
[
1..
n
])
for
i
 
n
+
1
downto
1
OptCost
[
i
,
i

1
]
 
0
for
j
 
i
to
n
ComputeOptCost
(
i
,
j
)
return
OptCost
[
1,
n
]
OptimalBST3
(
f
[
1..
n
])
:
InitF
(
f
[
1..
n
])
for
j
 
0
to
n
+
1
OptCost
[
j
+
1,
j
]
 
0
for
i
 
j
downto
1
ComputeOptCost
(
i
,
j
)
return
OptCost
[
1,
n
]
Asbefore,wecanillustratetheseevaluationordersusingadoubled
arrowtoindicatetheouterloopandsinglinedarrowstoindicatetheinner
loop.Thebidirectionalarrowsinthe˝rstevaluationorderindicatethatthe
orderoftheinnerloopsdoesn'tmatter.
‹
Timeandspace:
Thememoizationstructureuses
O
(
n
2
)
space.Nomatter
whichevaluationorderwechoose,weneed
O
(
n
)
timetocomputeeach
entry
OptCost
[
i
,
k
]
,soouroverallalgorithmrunsin
O
(
n
3
)
time
.
Asusual,wecouldhavepredictedthe˝nalspaceandtimeboundsdirectlyfrom
theoriginalrecurrence:
OptCost
(
i
,
k
)=
8
>
<
>
:
0
if
i
>
k
F
[
i
,
k
]+
min
i

r

k
¨
OptCost
(
i
,
r

1
)
+
OptCost
(
r
+
1,
k
)
«
otherwise
The
OptCost
functionhastwoarguments,eachofwhichcantakeonroughly
n
di˙erentvalues,soweprobablyneedadatastructureofsize
O
(
n
2
)
.Onthe
otherhand,thereare
three
variablesinthebodyoftherecurrence(
i
,
k
,and
r
),
eachofwhichcantakeroughly
n
di˙erentvalues,soitshouldtake
O
(
n
3
)
time
tocomputeeverything.
3.10DynamicProgrammingonTrees
Sofar,allofourdynamicprogrammingexamplesusemultidimensionalarrays
tostoretheresultsofrecursivesubproblems.However,asthenextexample
shows,thisisnotalwaysthemostappropriatedatastructuretouse.
An
independentset
inagraphisasubsetoftheverticeswithnoedges
betweenthem.Findingthelargestindependentsetinanarbitrarygraphis
extremelyhard;infact,thisisoneofthecanonicalproblemswewill
120

3.10.DynamicProgrammingonTrees
studyinChapter
12
.Butinsomespecialclassesofgraphs,wecan˝ndlargest
independentsetsquickly.Inparticular,whentheinputgraphisa
tree
with
n
vertices,wecanactuallycomputethelargestindependentsetin
O
(
n
)
time.
Supposewearegivenatree
T
.Withoutlossofgenerality,suppose
T
isa
rootedtree;thatis,thereisaspecialnodein
T
calledthe
root
,andalledgesare
implicitlydirectedawayfromthisvertex.(If
T
isanunrootedconnected
acyclicundirectedgraecanchooseanarbitraryvertexastheroot.)We
callvertex
w
a
descendant
ofvertex
v
iftheuniquepathfrom
w
totheroot
includes
v
;equivalently,thedescendantsof
v
are
v
itselfandthedescendants
ofthechildrenof
v
.The
subtreerootedat
v
consistsofallthedescendantsof
v
andtheedgesbetweenthem.
Foranynode
v
in
T
,let
MIS
(
v
)
denotethesizeofthelargestindependentset
inthesubtreerootedat
v
.Anyindependentsetinthissubtreethatexcludes
v
itselfistheunionofindependentsetsinthesubtreesrootedatthechildrenof
v
.
Ontheotherhand,anyindependentsetthat
includes
v
necessarilyexcludesall
of
v
'schildren,andthereforeincludesindependentsetsinthesubtreesrooted
at
v
'sgrandchildren.Thus,thefunction
MIS
obeysthefollowingrecurrence,
wherethenonstandardnotation
w
#
v
means
w
isachildof
v

MIS
(
v
)=
max
(
X
w
#
v
MIS
(
w
)
,1
+
X
w
#
v
X
x
#
w
MIS
(
x
)
)
Weneedtocompute
MIS
(
r
)
,where
r
istherootof
T
.
Figure3.5.
Computingthemaximumindependentsetinatree
Whatdatastructureshouldweusetomemoizethisrecurrence?Themost
naturalchoiceis
thetree
T
itself!
Speci˝cally,foreachvertex
v
in
T
,westore
theresultof
MIS
(
v
)
inanew˝eld
v
.
MIS
.(Inprinciple,we
could
useanarray
instead,butthenwe'dneedpointersbackandforthbetweeneachnodeandits
correspondingarrayentry,sowhybother?)
What'sagoodordertoconsiderthesubproblems?Thesubproblema
atedwithanynode
v
dependsonthesubproblemsassociatedwiththechildren
andgrandchildrenof
v
.Sowecanvisitthenodesinanyorderwelike,provided
thateveryvertexisvisitedbeforeitsparent;inparticular,wecanuseastandard
po
traversal.
What'stherunningtimeofthealgorithm?Thenovetimeassociated
witheachnode
v
isproportionaltothenumberofchildrenandgrandchildren
121

3.DynamicProgramming
of
v
;thisnumbercanbeverydi˙erentfromonevertextothenext.Butwecan
turntheanalysisaround:Eachvertexcontributesaconstantamountoftimeto
itsparentanditsgrandparent!Becauseeachvertexhasatmostoneparentand
atmostonegrandparent,thealgorithmrunsin
O
(
n
)
time
.
Hereistheresultingdynamicprogrammingalgorithm.Yes,it'sstillrecursive,
becausethat'sthemostnaturalwaytoimplementapotreetraversal.
TreeMIS
(
v
)
:
skipv
 
0
foreachchild
w
of
v
skipv
 
skipv
+
TreeMIS
(
w
)
keepv
 
1
foreachgrandchild
x
of
v
keepv
 
keepv
+
x
.
MIS
v
.
MIS
 
max
f
keepv
,
skipv
g
return
v
.
MIS
Wecanderiveanevensimplerlinalgorithmbyde˝ningtwoseparate
functionsoverthenodesof
T
:
‹
Let
MISyes
(
v
)
denotethesizeofthelargestindependentsetofthesubtree
rootedat
v
that
includes
v
.
‹
Let
MISno
(
v
)
denotethesizeofthelargestindependentsetofthesubtree
rootedat
v
that
excludes
v
.
Again,weneedtocompute
max
f
MISyes
(
r
)
,
MISno
(
r
)
g
,where
r
istherootof
T
.
The˝rsttwofunctionssatisfythefollowingmutualrecurrence:
MISyes
(
v
)=
1
+
X
w
#
v
MISno
(
w
)
MISno
(
v
)=
X
w
#
v
max
f
MISyes
(
w
)
,
MISno
(
w
)
g
Again,wecanmemoizethesefunctionsintothetreeitself,byde˝ningtwo
new˝eldsforeachvertex.Astraightforwardpotreetraversalevaluates
bothfunctionsateverynodein
O
(
n
)
time
.Thefollowingalgorithmnotonly
memoizesbothfunctionvaluesat
v
,italsoreturnsthelargerofthosetwo
values.
TreeMIS2
(
v
)
:
v
.
MISno
 
0
v
.
MISyes
 
1
foreachchild
w
of
v
v
.
MISno
 
v
.
MISno
+
TreeMIS2
(
w
)
v
.
MISyes
 
v
.
MISyes
+
w
.
MISno
return
max
f
v
.
MISyes
,
v
.
MISno
g
122

Exercises
Inthesecondlineoftheinnerloop,weareusingthevalue
w
.
MISno
thatwas
memoizedbytherecursivecallinthepreviousline.
Exercises
Forallofthefollowingmoregenerallywhendeveloping
any
newdynamicprogrammingastronglyrecommendfollowingthe
stepsoutlinedinSection
3.4
.Inparticular,don'teven
start
thinkingabout
tablesorfoopsuntilyouhaveacompleterecursivesolution,includingaclear
Englishspeci˝cationoftherecursivesubproblemsyouareactuallysolving.
18
Firstmakeitwork,thenmakeitfast.
Sequences/Arrays
1.
Inapreviouslife,youworkedasacashierinthelostAntarcticancolony
ofNadiria,spendingthebetterpartofyourdaygivingchangetoyour
customers.BecausepaperisaveryrareandvaluableresourceinAntarctica,
cashierswererequiredbylawtousethefewestbillspossiblewhenever
theygavechange.Thankstothenumerologicalpredilectionsofoneofits
founders,
thecurrencyofNadiria,calledars
,wasavailablein
thefollowingdenominations:$1,$4,$7,$13,$28,$52,$91,and$365.
19
«
(a)
Thegreedychangealgorithmrepeatedlytakesthelargestbillthatdoes
notexceedthetargetamount.Forexample,tomake$122usingthe
greedyalgorithm,we˝rsttakea$91bill,thena$28bill,and˝nally
three$1bills.Giveanexamplewherethisgreedyalgorithmusesmore
arbillsthantheminimumpossible.
[Hint:Itmaybeeasier
towriteasmallprogramthantoworkthisoutbyhand.]
(b)
Describeandanalyzearecursivealgorithmthatcomputes,givenan
integer
k
,theminimumnumberofbillsneededtomake
k

Dollars.(Don'tworryaboutmakingyouralgorithmfast;justmakesure
it'scorrect.)
(c)
Describeadynamicprogrammingalgorithmthatcomputes,givenan
integer
k
,theminimumnumberofbillsneededtomake
k
ars.
(Thisoneneedstobefast.)
18
Inmyalgorithmsclasses,anydynamicprogrammingsolutionthatdoes
not
includean
Englishspeci˝cationoftheunderlyingrecursivesubproblemsautomaticallygetsascoreof
zero
,evenifthesolutionisotherwiseperfect.Introducingthispolicysigni˝cantlyimproved
students'grades,becauseitsigni˝cantlyreducedthenumberoftimestheysubmittedincorrect
(orincoherent)dynamicprogrammingalgorithms.
19
FormoredetailsonthehistoryandcultureofNadiria,includingimagesofthevarious
denominationsofars,see
http://moneyart.biz/dd/
.
123

3.DynamicProgramming
2.
Describee˚cientalgorithmsforthefollowingvariantsofthetext
tationproblem.Assumethatyouhaveasubroutine
IsWord
thattakes
anarrayofcharactersasinputandreturns
True
ifandonlyifthatstring
isaAnalyzeyouralgorithmsbyboundingthenumberofcallsto
IsWord
.
(a)
Givenanarray
A
[
1..
n
]
ofcharacters,computethenumberofpartitions
of
A
intowords.Forexample,giventhestring
ARTISTOIL
,youralgorithm
shouldreturn
2
,forthepartitions
ARTIST
·
OIL
and
ART
·
IS
·
TOIL
.
(b)
Giventwoarrays
A
[
1..
n
]
and
B
[
1..
n
]
ofcharacters,decidewhether
A
and
B
canbepartitionedintowordsatthesameindices.Forexample,
thestrings
BOTHEARTHANDSATURNSPIN
and
PINSTARTRAPSANDRAGSLAP
canbepartitionedintowordsatthesameindicesasfollows:
BOT
·
HEART
·
HAND
·
SAT
·
URNS
·
PIN
PIN
·
START
·
RAPS
·
AND
·
RAGS
·
LAP
(c)
Giventwoarrays
A
[
1..
n
]
and
B
[
1..
n
]
ofcharacters,computethenumber
ofdi˙erentwaysthat
A
and
B
canbepartitionedintowordsatthesame
indices.
3.
Supposeyouaregivenanarray
A
[
1..
n
]
ofnumbers,whichmaybepositive,
negative,orzero,andwhichare
not
necessarilyintegers.
(a)
Describeandanalyzeanalgorithmthat˝ndsthelargestsumofelements
inacontiguoussubarray
A
[
i
..
j
]
.
(b)
Describeandanalyzeanalgorithmthat˝ndsthelargest
product
of
elementsinacontiguoussubarray
A
[
i
..
j
]
.
Forexample,giventhearray
[

6,12,

7,0,14,

7,5
]
asinput,your˝rst
algorithmshouldreturn
19
,andyoursecondalgorithmshouldreturn
504
.
sum
=
19
z
}|
{

612

7014

75
|
{z
}
product
=
504
Giventheonementarray
[

374
]
asinput,your˝rstalgorithmshould
return
0
,andyoursecondalgorithmshouldreturn
1
.(Theemptyintervalis
stillaninterval!)Forthesakeofanalysis,assumethatcomparing,adding,
ormultiplyinganypairofnumberstakes
O
(
1
)
time.
[Hint:Part(a)hasbeenastandardcomputerscienceinterviewquestion
sinceatleastthemiYoucan˝ndmanycorrectsolutionsonthe
web;theproblemevenhasitsown
Wikipediapage
!Butatleastin2016,a
signi˝cantfractionofthesolutionsIfoundonthewebforpart(b)were
eitherslowerthannecessaryoractuallyincorrect.]
124

Exercises
4.
Thisexerciseexploresvariantsofthemaximyproblem
lem
3
).Inallcases,yourinputconsistsofanarray
A
[
1..
n
]
ofrealnumbers
(whichcouldbepositive,negative,orzero)andpossiblyanadditional
integer
X

0
.
(a)
Wrappingaround:
Suppose
A
isa
circular
array.Inthissetting,a
ntiguoussubarracanbeeitheraninterval
A
[
i
..
j
]
orasu˚xfollowed
byapre˝x
A
[
i
..
n
]

A
[
1..
j
]
.Describeandanalyzeanalgorithmthat
˝ndsacontiguoussubarrayof
A
withthelargestsum.
(b)
Longsubarraysonly:
Describeandanalyzeanalgorithmthat˝ndsa
contiguoussubarrayof
A
oflengthatleast
X
thathasthelargestsum.
(Assume
X

n
.)
(c)
Shortsubarraysonly:
Describeandanalyzeanalgorithmthat˝ndsa
contiguoussubarrayof
A
oflengthatmost
X
thathasthelargestsum.
(d)
ThePriceIsRight:
Describeandanalyzeanalgorithmthat˝ndsa
contiguoussubarrayof
A
withthelargestsum
lessthanorequalto
X
.
(e)
DescribeafasteralgorithmforProblem
4(d)
wheneverynumberinthe
array
A
isnoegative.
5.
Thisexerciseasksyoutodevelope˚cientalgorithmsto˝ndoptimal

quences
ofvariouskinds.Asubsequenceisanythingobtainedfromasequence
byextractingasubsetofelements,butkeepingtheminthesameorder;the
elementsofthesubsequenceneednotbecontiguousintheoriginalsequence.
Forexample,thestrings
C
,
DAMN
,
YAIOAI
,and
DYNAMICPROGRAMMING
areall
subsequencesofthestring
DYNAMICPROGRAMMING
.
[Hint:Exactlyoneoftheseproblemscanbesolvedin
O
(
n
)
timeusinga
greedyalgorithm.]
(a)
Let
A
[
1..
m
]
and
B
[
1..
n
]
betwoarbitraryarrays.A
common
sequence
of
A
and
B
isanothersequencethatisasubsequenceofboth
A
and
B
.Describeane˚cientalgorithmtocomputethelengthofthe
longest
commonsubsequenceof
A
and
B
.
(b)
Let
A
[
1..
m
]
and
B
[
1..
n
]
betwoarbitraryarrays.A
commonsuper
sequence
of
A
and
B
isanothersequencethatcontainsboth
A
and
B
as
subsequences.Describeane˚cientalgorithmtocomputethelengthof
the
shortest
commonsupersequenceof
A
and
B
.
(c)
Callasequence
X
[
1..
n
]
ofnumbers
bitonic
ifthereisanindex
i
with
1
<
i
<
n
,suchthatthepre˝x
X
[
1..
i
]
isincreasingandthesu˚x
X
[
i
..
n
]
isdecreasing.Describeane˚cientalgorithmtocomputethe
lengthofthelongestbitonicsubsequenceofanarbitraryarray
A
of
integers.
125

3.DynamicProgramming
(d)
Callasequence
X
[
1..
n
]
ofnumbers
oscillating
if
X
[
i
]
<
X
[
i
+
1
]
for
alleven
i
,and
X
[
i
]
>
X
[
i
+
1
]
forallodd
i
.Describeane˚cient
algorithmtocomputethelengthofthelongestoscillatingsubsequence
ofanarbitraryarray
A
ofintegers.
(e)
Describeane˚cientalgorithmtocomputethelengthoftheshortest
oscillatingsupersequenceofanarbitraryarray
A
ofintegers.
(f)
Callasequence
X
[
1..
n
]
ofnumbers
convex
if
2

X
[
i
]
<
X
[
i

1
]+
X
[
i
+
1
]
forall
i
.Describeane˚cientalgorithmtocomputethelengthofthe
longestconvexsubsequenceofanarbitraryarray
A
ofintegers.
(g)
Callasequence
X
[
1..
n
]
ofnumbers
weaklyincreasing
ifeachelement
islargerthantheaverageofthetwopreviouselements;thatis,
2

X
[
i
]
>
X
[
i

1
]+
X
[
i

2
]
forall
i
>
2
.Describeane˚cientalgorithmto
computethelengthofthelongestweaklyincreasingsubsequenceofan
arbitraryarray
A
ofintegers.
(h)
Callasequence
X
[
1..
n
]
ofnumbers
doublcreasing
if
X
[
i
]
>
X
[
i

2
]
forall
i
>
2
.(Inotherwords,adoublcreasingsequenceisaperfect
shu˜eoftwoincreasingsequences.)Describeane˚cientalgorithmto
computethelengthofthelongestdoublcreasingsubsequenceofan
arbitraryarray
A
ofintegers.
(i)
Recallthatasequence
X
[
1..
n
]
ofnumbersis
increasing
if
X
[
i
]
<
X
[
i
+
1
]
forall
i
.Describeane˚cientalgorithmtocomputethelengthofthe
longestcommonincreasingsubsequence
oftwogivenarraysofintegers.For
example,
h
1,4,5,6,7,9
i
isthelongestcommonincreasingsubsequence
ofthesequences
h
3,1,4,1,5,9,2,6,5,3,5,8,9,7,9,3
i
and
h
1,4,1,4,2,
1,3,5,6,2,3,7,3,0,9,5
i
.
6.
A
shu˜e
oftwostrings
X
and
Y
isformedbyinterspersingthecharacters
intoanewstring,keepingthecharactersof
X
and
Y
inthesameorder.
Forexample,thestring
BANANAANANAS
isashu˜eofthestrings
BANANA
and
ANANAS
inseveraldi˙erentways.
BANANA
ANANAS
BAN
ANA
ANA
NAS
B
AN
AN
A
A
NA
NA
S
Similarly,thestrings
PRODGYRNAMAMMIINCG
and
DYPRONGARMAMMICING
are
bothshu˜esof
DYNAMIC
and
PROGRAMMING
:
PRO
D
G
Y
R
NAM
AMMI
I
N
C
G
DY
PRO
N
G
A
R
M
AMM
IC
ING
(a)
Giventhreestrings
A
[
1..
m
]
,
B
[
1..
n
]
,and
C
[
1..
m
+
n
]
,describeand
analyzeanalgorithmtodeterminewhether
C
isashu˜eof
A
and
B
.
(b)
A
smooth
shu˜eof
X
and
Y
isashu˜eof
X
and
Y
thatneveruses
morethantwoconsecutivesymbolsofeitherstring.Forexample,
126

Exercises
‹
PR
D
O
Y
G
NA
RA
M
MM
I
I
C
NG
isasmoothshu˜eofthestrings
DYNAMIC
and
PROGRAMMING
.
‹
DY
PR
N
OGR
A
A
M
MM
IC
ING
isashu˜eof
DYNAMIC
and
PROGRAMMING
,but
itisnotasmoothshu˜e(becauseofthesubstrings
OGR
and
ING
).
‹
XX
X
X
X
X
XX
XX
XX
XX
X
X
X
XX
isasmoothshu˜eofthestrings
XXXXXXX
and
XXXXXXXXXXX
.
‹
Thereisnosmoothshu˜eofthestrings
XXXX
and
XXXXXXXXXXXX
.
Describeandanalyzeanalgorithmtodecide,giventhreestrings
X
,
Y
,
and
Z
,whether
Z
isasmoothshu˜eof
X
and
Y
.
7.
Foreachofthefollowingproblems,theinputconsistsoftwoarrays
X
[
1..
k
]
and
Y
[
1..
n
]
where
k

n
.
(a)
Describeandanalyzeanalgorithmtodecidewhether
X
isasubsequence
of
Y
.Forexample,thestring
PPAP
isasubsequenceofthestring
P
EN
P
INE
A
PPLEAPPLE
P
EN
.
(b)
Describeandanalyzeanalgorithmto˝ndthesmallestnumberofsymbols
thatcanberemovedfrom
Y
sothat
X
isnolongerasubsequence.
Equivalently,youralgorithmshould˝ndthelongestsubsequenceof
Y
thatis
not
asupersequenceof
X
.Forexample,afterremovingremoving
twosymbolsfromthestring
PENPINE
A
PPLE
A
PPLEPEN
,thestring
PPAP
is
nolongerasubsequence.
ª
(c)
Describeandanalyzeanalgorithmtodeterminewhether
X
occursas
two
disjoint
subsequencesof
Y
.Forexample,thestring
PPAP
appearsas
twodisjointsubsequencesinthestring
P
EN
P
INE
A
PP
LE
A
P
PLE
P
EN
.
(d)
Supposetheinputalsoincludesathirdarray
C
[
1..
n
]
ofnumbers,which
maybepositive,negative,orzero,where
C
[
i
]
isthe
cost
of
Y
[
i
]
.Describe
andanalyzeanalgorithmtocomputetheminimstoccurrenceof
X
asasubsequenceof
Y
.Thatis,wewantto˝ndanarray
I
[
1..
k
]
such
that
I
[
j
]
<
I
[
j
+
1
]
and
X
[
I
[
j
]]=
Y
[
j
]
foreveryindex
j
,andthetotal
cost
P
k
j
=
1
C
[
j
]
isassmallaspossible.
(e)
Describeandanalyzeanalgorithmtocomputethetotalnumberof
(possiblyoverlapping)occurrencesof
X
asasubsequenceof
Y
.For
purposesofanalysis,assumethatwecanaddtwoarbitraryintegersin
O
(
1
)
time.Forexample,thestring
PPAP
appearsexactly23timesasa
subsequenceofthestring
PENPINEAPPLEAPPLEPEN
.Ifallcharactersin
X
and
Y
areequal,youralgorithmshouldreturn

n
k

.
(f)
Whatistherunningtimeofyouralgorithmforpart(d)ifaddingtwo
`
integersrequires
O
(
`
)
time?
127

3.DynamicProgramming
8.
Describeandanalyzeane˚cientalgorithmto˝ndthelengthofthelongest
contiguoussubstringthatappearsbothforwardandbackwardinaninput
string
T
[
1..
n
]
.Theforwardandbackwardsubstringsmustnotoverlap.
Hereareseveralexamples:
‹
Giventheinputstring
ALGORITHM
,youralgorithmshouldreturn
0
.
‹
Giventheinputstring
R
ECUR
SION
,youralgorithmshouldreturn
1
,for
thesubstring
R
.
‹
Giventheinputstring
REDI
VIDE
,youralgorithmshouldreturn
3
,forthe
substring
EDI
.(Theforwardandbackwardsubstringsmustnotoverlap!)
‹
Giventheinputstring
DYNAM
ICPROGRAMMINGMANY
TIMES
,youralgorithm
shouldreturn
4
,forthesubstring
YNAM
.(Inparticular,itshould
not
return
6
,forthesubsequence
YNAMIR
).
9.
Apalindromeisanystringthatisexactlythesameasitsreversal,like
I
,or
DEED
,or
RACECAR
,or
AMANAPLANACATACANALPANAMA
.
(a)
Describeandanalyzeanalgorithmto˝ndthelengthofthe
longest
subsequence
ofagivenstringthatisalsoapalindrome.
Forexample,thelongestpalindromesubsequenceofthestring
M
A
H
D
Y
NA
M
ICP
R
O
G
R
AMZLET
M
ESHOW
Y
OUT
H
E
M
is
MHYMRORMYHM
;thus,given
thatstringasinput,youralgorithmshouldreturn
11
.
(b)
Describeandanalyzeanalgorithmto˝ndthelengthofthe
shortest
supersequence
ofagivenstringthatisalsoapalindrome.Forexample,
theshortestpalindromesupersequenceof
TWENTYONE
is
TWENT
O
YO
T
NE
WT
,
sogiventhestring
TWENTYONE
asinput,youralgorithmshouldreturn
13
.
(c)
Anystringcanbedecomposedintoasequenceofpalindromes.For
example,thestring
BUBBASEESABANANA
baseesabanancanbe
brokenintopalindromesinthefollowingways(and65others):
BUB
‹
BASEESAB
‹
ANANA
B
‹
U
‹
BB
‹
ASEESA
‹
B
‹
ANANA
BUB
‹
B
‹
A
‹
SEES
‹
ABA
‹
N
‹
ANA
B
‹
U
‹
BB
‹
A
‹
S
‹
EE
‹
S
‹
A
‹
B
‹
A
‹
NAN
‹
A
B
‹
U
‹
B
‹
B
‹
A
‹
S
‹
E
‹
E
‹
S
‹
A
‹
B
‹
A
‹
N
‹
A
‹
N
‹
A
Describeandanalyzeane˚cientalgorithmto˝ndthesmallestnumber
ofpalindromesthatmakeupagiveninputstring.Forexample,given
theinputstring
BUBBASEESABANANA
,youralgorithmshouldreturn
3
.
(d)
Describeandanalyzeane˚cientalgorithmto˝ndthelargestinteger
k
suchthatagivenstringcanbesplitintopalindromesoflengthatleast
k
.
Forexample:
128

Exercises
‹
Giventhestring
PALINDROME
,youralgorithmshouldreturn
1
.
‹
Giventhestring
BUBBASEESABANANA
,youralgorithmshouldreturn
3
,
forthepartition
BUB
‹
BASEESAB
‹
ANANA
.
‹
Givenastringof
n
identicalsymbols,youralgorithmshouldreturn
n
.
(e)
Describeandanalyzeane˚cientalgorithmto˝ndthenumberof
di˙erentwaysthatagivenstringcanbedecomposedintopalindromes.
Forexample:
‹
Giventhestring
PALINDROME
,youralgorithmshouldreturn
1
.
‹
Giventhestring
BUBBASEESABANANA
,youralgorithmshouldreturn
70
.
‹
Givenastringof
n
identicalsymbols,youralgorithmshouldreturn
2
n

1
.
ª
(f)
A
metapalindrome
isadecompositionofastringintoasequenceof
palindromes,suchthatthesequenceofpalindromelengthsisitselfa
palindrome.Forexample:
BOB
‹
S
‹
MAM
‹
ASEESA
‹
UKU
‹
L
‹
ELE
isametapalindromeforthestring
BOBSMAMASEESAUKULELE
,whoselength
sequenceisthepalindrome
(
3,1,3,6,3,1,3
)
.Describeandanalyzean
e˚cientalgorithmto˝ndthelengthoftheshortestmetapalindromefora
givenstring.Forexample,giventheinputstring
BOBSMAMASEESAUKULELE
,
youralgorithmshouldreturn11.
10.
Supposeyouaregivenanarray
A
[
1..
n
]
ofpositiveintegers.An
increa
ingorthsubsequence
isansequenceofindices
I
[
1..
`
]
withthe
followingproperties:
‹
1

I
[
j
]

n
forall
j
.
‹
A
[
I
[
j
]]
<
A
[
I
[
j
+
1
]]
forall
j
<`
.
‹
If
I
[
j
]
iseven,then
I
[
j
+
1
]
>
I
[
j
]
.
‹
If
I
[
j
]
isodd,then
I
[
j
+
1
]
<
I
[
j
]
.
Lessformally,supposewearegivenanarrayof
n
squares,eachcontaininga
positiveinteger.Supposeweplaceatokenononeofthesquares,andthen
repeatedlymovethetokenleft(ifit'sonansquare)orright
(ifit'sonanevsquare),alwaysmovingfromasmallernumber
toalargernumber.Thenthesequenceoftokenpositionsisanincreasing
orthsubsequence.
Describeanalgorithmtocomputethelengthofthelongestincreasing
orthsubsequenceofagivenarrayof
n
integers.Forexample,
giventheinputarray
129

3.DynamicProgramming
1
1
8
7
5
6
3
6
4
4
8
3
9
1
2
2
3
9
4
0
1<2>3<4>5<6>7<8>9<10>11<12>13<14>15<16>17<18>19<20>
youralgorithmshouldreturntheinteger
9
,whichisthelengthofthe
followingincreasingorthsubsequence:
0
1
2
3
4
6
7
8
9
20>1<15<18>10>6>4>3<13<
11.
Supposewewanttotypesetaparagraphoftextontoapieceofpaper(orif
youinsist,acomputerscreen).Thetextconsistsofasequenceof
n
words,
wherethe
i
thwordhaslength
`
[
i
]
.Wewanttobreaktheparagraphinto
severallinesoftotallengthexactly
L
.Forexample,accordingtoT
E
X,the
programusedtotypesetthesenotes,
theparagraphyouarereadingright
now
isapproximately11.94794cm
ˇ
4.7055incheswide.
Dependingonhowtheparagraphisbrokenintolinesoftext,wemust
insertdi˙erentamountsofwhitespacebetweenthewords.Theparagraph
shouldbefullyjusti˝ed,meaningthatthe˝rstcharacteroneachlinestarts
attheleftmargin,and
exceptforthelastline
,thelastcharacteroneachline
endsattherightmargin.Theremustbeatleastoneunitofwhitespace
betweenanytwowordsonthesameline.See
theparagraphyouarereading
rightnow
?Justlikethat.
De˝nethe
slop
ofaparagraphlayoutasthesumoveralllines,
except
thelast
,ofthecubeoftheamountofextrapaceineachline,not
countingtheoneunitofrequiredspacebetweeneachadjacentpairofwords.
Speci˝cally,ifalinecontainswords
i
through
j
,thentheslopofthatlineis
de˝nedtobe

L

j
+
i

P
j
k
=
i
`
[
k
]

3
.Describeadynamicprogramming
algorithmtoprinttheparagraphwithminimumslop.
12.
YouandyournephewElmodecidetoplayasimplecard
game.Atthebeginningofthegame,thecardsaredealtfaceupinalong
row.Eachcardisworthadi˙erentnumberofpoints.Afterallthecardsare
dealt,youandElmotaketurnsremovingeithertheleftmostorrightmost
cardfromtherow,untilallthecardsaregone.Ateachturn,youcandecide
whichofthetwocardstotake.Thewinnerofthegameistheplayerthat
hascollectedthemostpointswhenthegameends.
Havingnevertakenanalgorithmsclass,Elmofollowstheobviousgreedy
it'shisturn,Elmo
always
takesthecardwiththehigher
pointvalue.Yourtaskisto˝ndastrategythatwillbeatElmowhenever
possible.(Itmightseemmeantobeatuponalittlekidlikethis,butElmo
absolutely
hates
itwhengrolethimwin.)
(a)
Provethatyoushouldnotalsousethegreedystrategy.Thatis,show
thatthereisagamethatyoucanwin,butonlyifyoudo
not
followthe
samegreedystrategyasElmo.
130

Exercises
(b)
Describeandanalyzeanalgorithmtodetermine,giventheinitial
quenceofcards,themaximumnumberofpointsthatyoucancollect
playingagainstElmo.
¨
(c)
WhenElmowasfour,heusedanevensimplernhisturn,
healwayschosehisnextcarduniformlyatrandom.Thatis,ifthere
wasmorethanonecardleftonhisturn,hewouldtaketheleftmost
cardwithprobability
1
=
2
,andtherightmostcardwithprobability
1
=
2
.
Describeanalgorithmtodetermine,giventheinitialsequenceofcards,
themaximum
expected
numberofpointsyoucancollectplayingagainst
foo.
(d)
Fiveyearslater,Elmohasbecomea
much
stronger
player.Describeandanalyzeanalgorithmtodetermine,giventheinitial
sequenceofcards,themaximumnumberofpointsthatyoucancollect
playingagainsta
perfect
opponent.
13.
It'salmosttimetoshowo˙your˛ippin'sweetdancingskills!Tomorrowis
thebigdancecontestyou'vebeentrainingforyourentirelife,exceptforthat
summeryouspentwithyouruncleinAlaskahuntingwolverines.You've
obtainedanadvancecopyofthelistof
n
songsthatthejudgeswillplay
duringthecontest,inchronologicalorder.Yessssssssss!
Youknowallthesongs,allthejudges,andyourowndancingability
extremelywell.Foreachinteger
k
,youknowthatifyoudancetothe
k
th
songontheschedule,youwillbeawardedexactly
Score
[
k
]
points,butthen
youwillbephysicallyunabletodanceforthenext
Wait
[
k
]
songs(thatis,
youcannotdancetosongs
k
+
1
through
k
+
Wait
[
k
]
).Thedancerwiththe
highesttotalscoreattheendofthenightwinsthecontest,soyouwantyour
totalscoretobeashighaspossible.
Describeandanalyzeane˚cientalgorithmtocomputethemaximum
totalscoreyoucanachieve.Theinputtoyoursweetalgorithmisthepairof
arrays
Score
[
1..
n
]
and
Wait
[
1..
n
]
.
14.
Thenewswaegame
CandySwapSagaXIII
involves
n
cuteanimals
numberedfrom
1
to
n
.Eachanimalholdsoneofthreetypesofcandy:
circuspeanuts,Heathbars,andCioccolateriaGardinichocolatetru˜es.You
alsohaveacandyinyourhand;atthestartofthegame,youhaveacircus
peanut.
Toearnpoints,youvisiteachoftheanimalsinorderfrom
1
to
n
.For
eachanimal,youcaneitherkeepthecandyinyourhandorexchangeit
withthecandytheanimalisholding.
‹
Ifyouswapyourcandyforanothercandyofthe
same
type,youearn
onepoint.
131

3.DynamicProgramming
‹
Ifyouswapyourcandyforacandyofa
di˙erent
type,youloseonepoint.
(Yes,yourscorecanbenegative.)
‹
Ifyouvisitananimalanddecidenottoswapcandy,yourscoredoesnot
change.
You
must
visittheanimalsinorder,andonceyouvisitananimal,youcan
nevervisititagain.
Describeandanalyzeane˚cientalgorithmtocomputeyourmaximum
possiblescore.Yourinputisanarray
C
[
1..
n
]
,where
C
[
i
]
isthetypeof
candythatthe
i
thanimalisholding.
15.
LennyRutenbar,thefoundingdeanofthenewMaksymilianR.Levchin
CollegeofComputerScience,hascommissionedaseriesofsnowrampson
thesouthslopeoftheOrchardDownssleddinghill
20
andchallengedBill
Kudeki,headoftheDepartmentofElectricalandComputerEngineering,to
asleddingcontest.BillandLennywillbothsleddownthehill,eachtryingto
maximizetheirairtime.Thewinnergetstoexpandtheirdepartment/college
intobothSiebelCenterandthenewECEBuilding;theloserhastomove
theirentiredepartment/collegeintheBoneyardculvertnexttoLoomisLab.
WheneverLennyorBillreachesaramp
whileontheground
,theycan
eitherusethatramptojumpthroughtheair,possibly˛yingoveroneor
moreramps,orsledpastthatrampandstayontheground.Obviously,if
someone˛iesoveraramp,theycannotusethatramptoextendtheirjump.
(a)
Supposeyouaregivenapairofarrays
Ramp
[
1..
n
]
and
Length
[
1..
n
]
,
where
Ramp
[
i
]
isthedistancefromthetopofthehilltothe
i
thramp,
and
Length
[
i
]
isthedistancethatanysledderwhotakesthe
i
thrampwill
travelthroughtheair.Describeandanalyzeanalgorithmtodetermine
themaximumtotaldistancethatLennyorBillcanspendintheair.
(b)
TheuniversitylawyersheardaboutLennyandBill'slittlebetand
immediatelyobjected.Toprotecttheuniversityfromeitherlawsuits
orsinsurancerates,theyimposeanupperboundonthe
numberofjumpsthateithersleddercantake.Describeandanalyze
analgorithmtodeterminethemaximumtotaldistancethatLennyor
Billcanspendintheair
withatmost
k
jumps
,giventheoriginalarrays
Ramp
[
1..
n
]
and
Length
[
1..
n
]
andtheinteger
k
asinput.
ª
(c)
Whenthelawyersrealizedthatimposingtheirrestrictiondidn't
atelyshutdownthecontest,theyaddedanewrestriction:Norampcan
beusedmorethanonce!Disgustedbythelegalinterference,Lennyand
Billgiveupontheirbetanddecidetocooperatetoputonagoodshow
20
Thenorthslopeisfaster,buttooshortforaninterestingcontest.
132

Exercises
forthespectators.Describeandanalyzeanalgorithmtodeterminethe
maximumtotaldistancethatLennyandBillcanspendintheair,each
takingatmost
k
jumps(soatmost
2
k
jumpstotal),andwitheachramp
usedatmostonce.
16.
FarmersBoggis,Bunce,andBeanhavesetupanobstaclecourseforMr.Fox.
Thecourseconsistsofalongrowofbooths,eachwithanumberpaintedon
thefrontwithbrightredpaint.Formally,Mr.Foxisgivenanarray
A
[
1..
n
]
,
where
A
[
i
]
isthenumberpaintedonthefrontofthe
i
thbooth.Eachnumber
A
[
i
]
couldbepositive,negative,orzero.Everyoneagreeswiththefollowing
rules:
‹
Ateachbooth,Mr.Fox
must
sayeitheror
‹
IfMr.Foxsaysatthe
i
thbooth,heearnsarewardof
A
[
i
]
chickens.(If
A
[
i
]
<
0
,Mr.Foxpaysapenaltyof

A
[
i
]
chickens.)
‹
IfMr.Foxsaysatthe
i
thbooth,hepaysapenaltyof
A
[
i
]
chickens.
(If
A
[
i
]
<
0
,Mr.Foxearnsarewardof

A
[
i
]
chickens.)
‹
Mr.Foxisforbiddentosaythesamewordmorethanthreetimesina
row.Forexample,ifhesaysatbooths6,7,and8,thenhemust
sayatbooth9.
‹
Allaccountswillbesettledattheend,afterMr.Foxvisitseverybooth
andtheumpirecallsotMr.Foxdoesnotactuallyhavetocarry
chickensthroughtheobstaclecourse.
‹
Finally,ifMr.Foxviolatesanyoftherules,orifheendstheobstacle
courseowingthefarmerschickens,thefarmerswillshoothim.
Describeandanalyzeanalgorithmtocompute,thelargestnumberof
chickensthatMr.Foxcanearnbyrunningtheobstaclecourse,giventhe
array
A
[
1..
n
]
ofnumbersasinput.
[Hint:Watchoutfortheburningpine
cone!]
17.
DanceDanceRevolution
isadancevideogame,˝rstintroducedinJapan
byKonamiin1998.Playersstandonaplatformmarkedwithfourarrows,
pointingforward,back,left,andright,arrangedinacrosspattern.During
play,thegameplaysasongandscrollsasequenceof
n
arrows(
Ü
,
Ü
,
Ü
,
or
Ü
)fromthebottomtothetopofthescreen.Attheprecisemoment
eacharrowreachesthetopofthescreen,theplayermuststeponthe
correspondingarrowonthedanceplatform.(Thearrowsaretimedsothat
you'llstepwiththebeatofthesong.)
YouareplayingavariantofthisgamecalledogueVogueRevolutio
wherethegoalistoplayperfectlybutmoveaslittleaspossible.Whenan
arrowreachesthetopofthescreen,ifoneofyourfeetisalreadyonthe
133

3.DynamicProgramming
correctarrow,youareawardedonestylepointformaintainingyourcurrent
pose.Ifneitherfootisontherightarrow,youmustmoveone(and
only
one)
footfromitscurrentlocationtothecorrectarrowontheplatform.Ifyou
eversteponthewrongarrow,orfailtosteponthecorrectarrow,ormove
morethanonefootatatime,ormoveeitherfootwhenyouarealready
standingonthecorrectarrow,allyourstylepointsaretakenawayandyou
losethegame.
Howshouldyoumoveyourfeettomaximizeyourtotalnumberofstyle
points?Forpurposesofthisproblem,assumeyoualwaysstartwithyourleft
footon
Ü
andyourrightfooton
Ü
,andthatyou'vememorizedtheentire
sequenceofarrows.Forexample,ifthesequenceis
Ü
Ü
Ü
Ü
Ü
Ü
Ü
Ü
,you
canearn
5
stylepointsbymovingyourfeetasshownbelow:
(a)
Prove
thatfor
any
sequenceof
n
arrows,itispossibletoearnatleast
n
=
4

1
stylepoints.
(b)
Describeane˚cientalgorithmto˝ndthemaximumnumberofstyle
pointsyoucanearnduringagivenVVRroutine.Theinputtoyour
algorithmisanarray
Arrow
[
1..
n
]
containingthesequenceofarrows.
18.
ConsiderthefollowingsolitaireformofScrabble.Webeginwitha˝xed,
˝nitesequenceoftiles;eachtilehasbothaletterandanumericalvalue.At
thestartofthegame,wedrawthe˝rstseventilesfromthesequenceand
putthemintoourhand.Ineachturn,weformanEnglishwordfromsome
orallofthetilesinourhand,placethosetilesonthetable,andreceivethe
totalvalueofthosetilesaspoints.(IfnoEnglishwordcanbeformedfrom
thetilesinourhand,thegameimmediatelyends.)Thenwerepeatedlydraw
thenexttilefromthestartofthesequenceuntileither(a)wehaveseven
tilesinourhand,or(b)thesequenceisempty.(Sorry,nodouble/triple
word/letterscores,bingos,blanks,orpassing.)Ourgoalistoobtainas
manypointsaspossible.
Forexample,considerthefollowingsequenceof20tiles:
I
2
N
2
X
8
A
1
N
2
A
1
D
3
U
5
D
3
I
2
D
3
K
8
U
5
B
4
L
2
A
1
K
8
H
5
A
1
N
2
Giventhissequenceoftilesatthebeginningofthegame,wecanearn68
pointsasfollows:
‹
Weinitiallydraw
I
2
N
2
X
8
A
1
N
2
A
1
D
3
.
‹
Playtheword
N
2
A
1
I
2
A
1
D
3
for9points,leaving
N
2
X
8
inhand.
134

Exercises
‹
Drawthenext˝vetiles
U
5
D
3
I
2
D
3
K
8
.
‹
Playtheword
U
5
N
2
D
3
I
2
D
3
for15points,leaving
K
8
X
8
inhand.
‹
Drawthenext˝vetiles
U
5
B
4
L
2
A
1
K
8
.
‹
Playtheword
B
4
U
5
L
2
K
8
for19points,leaving
K
8
X
8
A
1
inhand.
‹
Drawthelastthreetiles
H
5
A
1
N
2
.
‹
Playtheword
A
1
N
2
K
8
H
5
for16points,leaving
X
8
A
1
inhand.
‹
Playtheword
A
1
X
8
for9points,emptyingourhandandendingthe
game.
(a)
Supposethesequenceoftilesisrepresentedbytwoarrays
Letter
[
1..
n
]
,
containingasequenceoflettersbetween
A
and
Z
,and
Value
[
A
..
Z
]
,where
Value
[
`
]
isthevalueofanytilewithletter
`
.Designandanalyzean
e˚cientalgorithmtocomputethemaximumnumberofpointsthatcan
beearnedfromthegivensequenceoftiles.
(b)
Nowsupposetwotileswiththesamelettermighthavedi˙erentvalues.
Nowthetilesequenceisrepresentedbytwoarrays
Letter
[
1..
n
]
and
Value
[
1..
n
]
,where
Value
[
i
]
isthevalueofthe
i
thtile.Designand
analyzeane˚cientalgorithmtocomputethemaximumnumberof
pointsthatcanbeearnedfromthegivensequenceoftiles.
Inbothproblems,theoutputisasinglenumber:themaximumpossible
score.Assume(becauseit'strue)thatyoucan˝ndallEnglishwordsthat
canbemadefromanysetofatmostseventiles,alongwiththepointvalues
ofthosewords,in
O
(
1
)
time.
19.
Supposewearegivenaset
L
of
n
linesegmentsintheplane,whereeach
segmenthasoneendpointontheline
y
=
0
andoneendpointontheline
y
=
1
,andall
2
n
endpointsaredistinct.
(a)
Describeandanalyzeanalgorithmtocomputethelargestsubsetof
L
in
whichnopairofsegmentsintersects.
(b)
Describeandanalyzeanalgorithmtocomputethelargestsubsetof
L
in
which
every
pairofsegmentsintersects.
Nowsupposewearegivenaset
L
of
n
linesegmentsintheplane,where
bothendpointsofeachsegmentlieontheunitcircle
x
2
+
y
2
=
1
,andall
2
n
endpointsaredistinct.
(c)
Describeandanalyzeanalgorithmtocomputethelargestsubsetof
L
in
whichnopairofsegmentsintersects.
(d)
Describeandanalyzeanalgorithmtocomputethelargestsubsetof
L
in
which
every
pairofsegmentsintersects.
135

3.DynamicProgramming
20.
Let
P
beasetof
n
pointsevenlydistributedontheunitcircle,andlet
S
beasetof
m
linesegmentswithendpointsin
P
.Theendpointsofthe
m
segmentsare
not
necessarilydistinct;
n
couldbesigni˝cantlysmallerthan
2
m
.
(a)
Describeanalgorithmto˝ndthesizeofthelargestsubsetofsegments
in
S
suchthateverypairisdisjoint.Twosegmentsaredisjointiftheydo
notintersectevenattheirendpoints.
(b)
Describeanalgorithmto˝ndthesizeofthelargestsubsetofsegments
in
S
suchthateverypairisinteriint.Twosegmentsareinteri
disjointiftheirintersectioniseitheremptyoranendpointofboth
segments.
(c)
Describeanalgorithmto˝ndthesizeofthelargestsubsetofsegments
in
S
suchthateverypairintersects.
(d)
Describeanalgorithmto˝ndthesizeofthelargestsubsetofsegments
in
S
suchthateverypaircrosses.Twosegmentscrossiftheyintersect
butnotattheirendpoints.
Forfullcredit,allfouralgorithmsshouldrunin
O
(
mn
)
time.
21.
Youaredrivingabusalongahighway,fullofrowdy,hyper,thirstystudents
andasodafountainmachine.Eachminutethatastudentisonyourbus,
thatstudentdrinksoneounceofsoda.Yourgoalistodropthestudents
o˙quickly,sothatthetotalamountofsodaconsumedbyallstudentsisas
smallaspossible.
Youknowhowmanystudentswillgeto˙ofthebusateachexit.Your
busbeginssomewherealongthehighway(probablynotateitherend)
andmovesataconstantspeedof37.4milesperhour.Youmustdrivethe
busalongthehighway;however,youmaydriveforwardtooneexitthen
backwardtoanexitintheoppositedirection,switchingasoftenasyoulike.
(Youcanstopthebus,dropo˙students,andturnaroundinstantaneously.)
Describeane˚cientalgorithmtodropthestudentso˙sothattheydrink
aslittlesodaaspossible.Yourinputconsistsofthebusroute(alistofthe
exits,togetherwiththetraveltimebetweensuccessiveexits),thenumberof
studentsyouwilldropo˙ateachexit,andthecurrentlocationofyourbus
(whichyoumayassumeisanexit).
22.
Let'sde˝nea
summary
oftwostrings
A
and
B
tobeaconcatenationof
substringsofthefollowingform:
‹
Î
SNA
indicatesasubstring
SNA
ofonlythe˝rststring
A
.
‹
⁄
FOO
indicatesacommonsubstring
FOO
ofbothstrings.
‹
È
BAR
indicatesasubstring
BAR
ofonlythesecondstring
B
.
136

Exercises
Asummaryis
valid
ifwecanrecovertheoriginalstrings
A
and
B
by
concatenatingtheappropriatesubstringsofthesummaryinorderand
discardingthedelimiters
Î
,
⁄
,and
È
.Eachregularcharacterhaslength
1
,
andeachdelimiter
Î
,
⁄
,or
È
hassome˝xednoegativelength

.The
length
ofasummaryisthesumofthelengthsofitssymbols.
Forexample,eachofthefollowingstringsisavalidsummaryofthe
strings
KITTEN
and
KNITTING
:
‹
⁄
K
È
N
⁄
ITT
Î
E
È
I
⁄
N
È
G
haslength
9
+
7

.
‹
⁄
K
È
N
⁄
ITT
Î
EN
È
ING
haslength
10
+
5

.
‹
⁄
K
Î
ITTEN
È
NITTING
haslength
13
+
3

.
‹
Î
KITTEN
È
KNITTING
haslength
14
+
2

.
Describeandanalyzeanalgorithmthatcomputesthelengthofthe
shortestsummaryoftwogivenstrings
A
[
1..
m
]
and
B
[
1..
n
]
.Thedelimiter
length

isalsopartoftheinputtoyouralgorithm.Forexample:
‹
Givenstrings
KITTEN
and
KNITTING
and

=
0
,youralgorithmshould
return
9
.
‹
Givenstrings
KITTEN
and
KNITTING
and

=
1
,youralgorithmshould
return
15
.
‹
Givenstrings
KITTEN
and
KNITTING
and

=
2
,youralgorithmshould
return
18
.
23.
Vankin'sMile
isanAmericansolitairegameplayedonan
n

n
squaregrid.
Theplayerstartsbyplacingatokenonanysquareofthegrid.Thenon
eachturn,theplayermovesthetokeneitheronesquaretotherightorone
squaredown.Thegameendswhenplayermovesthetokeno˙theedgeof
theboard.Eachsquareofthegridhasanumericalvalue,whichcouldbe
positive,negative,orzero.Theplayerstartswithascoreofzero;whenever
thetokenlandsonasquare,theplayeraddsitsvaluetohisscore.The
objectofthegameistoscoreasmanypointsaspossible.
Forexample,giventhegridbelow,theplayercanscore
8

6
+
7

3
+
4
=
10
pointsbyplacingtheinitialtokenonthe8inthesecondrow,andthen
movingdown,down,right,down,down.(Thisis
not
thebestpossiblescore
forthisgridofnumbers.)

17

810

5

4

9
8
+

60
5

2

6
+

67

74
7
)

3
+

3
71

6
4
+

9
137

3.DynamicProgramming
(a)
Describeandanalyzeane˚cientalgorithmtocomputethemaximum
possiblescoreforagameofVankin'sMile,giventhe
n

n
arrayofvalues
asinput.
(b)
IntheEuropeanversionofthisgame,appropriatelycalled
Vankin's
Kilometer
,theplayercanmovethetokeneitheronesquaredown,one
squareright,
oronesquareleft
ineachturn.However,topreventin˝nite
scores,thetokencannotlandonthesamesquaremorethanonce.
Describeandanalyzeane˚cientalgorithmtocomputethemaximum
possiblescoreforagameofVankin'sKilometer,giventhe
n

n
arrayof
valuesasinput.
21
24.
Supposeyouaregivenan
m

n
bitmapasanarray
M
[
1..
n
,1..
n
]
of
0
s
and
1
s.A
solidblock
in
M
isasubarrayoftheform
M
[
i
..
i
0
,
j
..
j
0
]
inwhich
allbitsareequal.Asolidblockissquareifithasthesamenumberofrows
andcolumns.
(a)
Describeanalgorithmto˝ndthemaximumareaofasolid
square
block
in
M
in
O
(
n
2
)
time.
(b)
Describeanalgorithmto˝ndthemaximumareaofasolidblockin
M
in
O
(
n
3
)
time.
(c)
Describeanalgorithmto˝ndthemaximumareaofasolidblockin
M
in
O
(
n
2
log
n
)
time.
[Hint:Divideandconquer.]
ª
(d)
Describeanalgorithmto˝ndthemaximumareaofasolidblockin
M
in
O
(
n
2
)
time.
25.
Supposeyouaregivenanarray
M
[
1..
n
,1..
n
]
ofnumbers,whichmaybe
positive,negative,orzero,andwhichare
not
necessarilyintegers.Describe
analgorithmto˝ndthelargestsumofelementsinanyrectangularsubarray
oftheform
M
[
i
..
i
0
,
j
..
j
0
]
.Forfullcredit,youralgorithmshouldrunin
O
(
n
3
)
time.
[Hint:Seeproblem
3
.]
26.
Describeandanalyzeanalgorithmthat˝ndsthemaximrectangular
patternthatappearsmorethanonceinagivenbitmap.Speci˝cally,given
atwonalarray
M
[
1..
n
,1..
n
]
ofbitsasinput,youralgorithm
shouldoutputtheareaofthelargestrepeatedrectangularpatternin
M
.
Forexample,giventhebitmapshownontheleftinthe˝gurebelow,your
algorithmshouldreturntheinteger
195
,whichistheareaofthe
15

13
doggo.(Althoughitdoesn'thappeninthisexample,thetwocopiesofthe
repeatedpatternmightoverlap.)
21
Ifwealsoallowed
upward
movement,theresultinggame(Vankin'sFathom?)wouldbe
NP
138

Exercises
(a)
Forfullcredit,describeanalgorithmthatrunsin
O
(
n
5
)
time.
ª
(b)
Forextracredit,describeanalgorithmthatrunsin
O
(
n
4
)
time.
¨
ª
(c)
Forextraextracredit,describeanalgorithmthatrunsin
O
(
n
3
polylog
n
)
time.
27.
Let
P
beasetofpointsintheplanein
convexposition
.Intuitively,ifa
rubberbandwerewrappedaroundthepoints,theneverypointwouldtouch
therubberband.Moreformally,foranypoint
p
in
P
,thereisalinethat
separates
p
fromtheotherpointsin
P
.Moreover,supposethepointsare
indexed
P
[
1
]
,
P
[
2
]
,...,
P
[
n
]
incounterclockwiseorderaroundtheber
startingwiththeleftmostpoint
P
[
1
]
.
Thisproblemasksyoutosolveaspecialcaseofthetravelingsalesman
problem,wherethesalesmanmustvisiteverypointin
P
,andthecostof
movingfromonepoint
p
2
P
toanotherpoint
q
2
P
istheEuclideandistance
j
pq
j
.
(a)
Describeasimplealgorithmtocomputetheshortest
cyclic
tourof
P
.
(b)
A
simple
tourisonethatnevercrossesitself.Provethattheshortesttour
of
P
mustbesimple.
(c)
Describeandanalyzeane˚cientalgorithmtocomputetheshortesttour
of
P
thatstartsattheleftmostpoint
P
[
1
]
andendsattherightmost
point
P
[
r
]
.
(d)
Describeandanalyzeane˚cientalgorithmtocomputetheshortesttour
of
P
,withnorestrictionsontheendpoints.
ª
28.
Describeandanalyzeanalgorithmtosolvethetravelingsalesmanproblem
in
O
(
2
n
poly
(
n
))
time.Givenanundirected
n
ertexgraph
G
withweighted
edges,youralgorithmshouldreturntheweightofthelightestcyclein
G
thatvisitseveryvertexexactlyonce,or
1
if
G
hasnosuchcycles.
[Hint:
Theobviousrecursivebacktrackingalgorithmtakes
O
(
n
!
)
time.]
29.
Let
W
=
f
w
1
,
w
2
,...,
w
n
g
bea˝nitesetofstringsoversome˝xedalphabet

.
An
editcenter
for
W
isastring
C
2


suchthatthemaximumeditdistance
139

3.DynamicProgramming
from
C
toanystringin
W
isassmallaspossible.The
editradius
of
W
isthe
maximumeditdistancefromaneditcentertoastringin
W
.Asetofstrings
mayhaveseveraleditcenters,butitseditradiusisunique.
EditRadius
(
W
)
:
=
min
C
2


max
w
2
W
Edit
(
w
,
C
)
EditCenter
(
W
)
:
=
argmin
C
2


max
w
2
W
Edit
(
w
,
C
)
(a)
Describeandanalyzeane˚cientalgorithmtocomputetheeditradius
ofthreegivenstrings.
¨
ª
(b)
Describeandanalyzeane˚cientalgorithmtoapproximatetheedit
radiusofanarbitrarysetofstringswithinafactorof
2
.(Computingthe
exact
editradiusisunlessthenumberofstringsis˝xed.)
ª
30.
Let
D
[
1..
n
]
beanarrayofdigits,eachanintegerbetween
0
and
9
.A
digital
subsequence
of
D
isasequenceofpositiveintegerscomposedintheusual
wayfromdisjointsubstringsof
D
.Forexample,thesequence
3,4,5,6,8,
9,32,38,46,64,83,279
isadigitalsubsequenceofthe˝rstseveraldigits
of
ˇ
:
3
,1,4
,1,5
,9,2,6
,5,3,5,8
,9
,7,9,3,2
,3,8
,4,6
,2,6,4
,3,3,8,3
,2,7,9
The
length
ofadigitalsubsequenceisthenumberofintegersitcontains,
not
thenumberofdigits;theprecedingexamplehaslength
12
.Asusual,adigital
subsequenceis
increasing
ifeachnumberislargerthanitspredecessor.
Describeandanalyzeane˚cientalgorithmtocomputethelongest
increasingdigitalsubsequenceof
D
.
[Hint:Becarefulaboutyourco
putationalassumptions.Howlongdoesittaketocomparetwo
k

numbers?]
Forfullcredit,youralgorithmshouldrunin
O
(
n
4
)
time;fasteralgorithms
areworthextracredit.ThefastestalgorithmIknowforthisproblemrunsin
O
(
n
3
=
2
log
n
)
time;achievingthisboundrequiresseveraltricks,bothinthe
designofthealgorithmandinitsanalysis,butnothingoutsidethescopeof
thisclass.
22
ª
31.
ConsiderthefollowingvariantoftheclassicalTowerofHanoiproblem.As
usual,thereare
n
diskswithdistinctsizes,placedonthreepegsnumbered
0
,
1
,and
2
.Initially,all
n
disksareonpeg
0
,sortedbysizefromsmallest
ontoptolargestonbottom.Ourgoalistomoveallthediskstopeg
2
.In
asinglestep,wecanmovethehighestdiskonanypegtoadi˙erentpeg,
22
Withmoreadvancedtechniques,Ibelievetherunningtimecanbereducedto
O
(
n
3
=
2
loglog
n
)
,butIhaven'tworkedthroughthedetails.
140

Exercises
providedwesatisfytwoconstraints.First,wemustneverplaceasmaller
diskontopofalargerdisk.Secothisisthenoandard
we
mustnevermoveadiskdirectlyfrompeg
0
topeg
2
.
Describeandanalyzeanalgorithmtocomputetheexactnumberof
movesrequiredtomoveall
n
disksfrompeg
0
topeg
2
,subjecttothe
statedrestrictions.Forfullcredit,youralgorithmshoulduseonly
O
(
log
n
)
arithmeticoperationsintheworstcase.Forthesakeofanalysis,assume
thataddingormultiplyingtwo
k
numbersrequires
O
(
k
)
time.
[Hint:
Matrices!]
SplittingSequences/Arrays
32.
A
basicarithmeticexpression
iscomposedofcharactersfromtheset
f
1,
+
,

andparentheses.Almosteveryintegercanberepresentedbymore
thanonebasicarithmeticexpression.Forexample,allofthefollowingbasic
arithmeticexpressionrepresenttheinteger14:
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
+
1
((
1
+
1
)

(
1
+
1
+
1
+
1
+
1
))+((
1
+
1
)

(
1
+
1
))
(
1
+
1
)

(
1
+
1
+
1
+
1
+
1
+
1
+
1
)
(
1
+
1
)

(((
1
+
1
+
1
)

(
1
+
1
))+
1
)
Describeandanalyzeanalgorithmtocompute,givenaninteger
n
asinput,
theminimumnumberof
1
sinabasicarithmeticexpressionwhosevalueis
equalto
n
.Thenumberofparenthesesdoesn'tmatter,justthenumberof
1
s.Forexample,when
n
=
14
,youralgorithmshouldreturn
8
,forthe˝nal
expressionabove.Therunningtimeofyouralgorithmshouldbebounded
byasmallpolynomialfunctionof
n
.
33.
Supposeyouaregivenasequenceofintegersseparatedby
+
and

signs;
forexample:
1
+
3

2

5
+
1

6
+
7
Youcanchangethevalueofthisexpressionbyaddingparenthesesin
di˙erentplaces.Forexample:
1
+
3

2

5
+
1

6
+
7
=

1
(
1
+
3

(
2

5
))+(
1

6
)+
7
=
9
(
1
+(
3

2
))

(
5
+
1
)

(
6
+
7
)=

17
Describeandanalyzeanalgorithmtocompute,givenalistofintegers
separatedby
+
and

signs,themaximumpossiblevaluetheexpression
141

3.DynamicProgramming
cantakebyaddingparentheses.Parenthesesmustbeusedonlytogroup
additionsandsubtractions;inparticular,donotusethemtocreateimplicit
multiplicationasin
1
+
3
(

2
)(

5
)+
1

6
+
7
=
33
.
34.
Supposeyouaregivenasequenceofintegersseparatedby
+
and

signs;
forexample:
1
+
3

2

0
+
1

6
+
7
Youcanchangethevalueofthisexpressionbyaddingparenthesesin
di˙erentplaces.Forexample:
(
1
+(
3

2
))

0
+(
1

6
)+
7
=
13
((
1
+(
3

2

0
)+
1
)

6
)+
7
=
19
(
1
+
3
)

2

(
0
+
1
)

(
6
+
7
)=
104
(a)
Describeandanalyzeanalgorithmtocomputethemaximumpossible
valuethegivenexpressioncantakebyaddingparentheses,assumingall
integersintheinputare
positive
.
[Hint:Thisiseasy.]
(b)
Describeandanalyzeanalgorithmtocomputethemaximumpossible
valuethegivenexpressioncantakebyaddingparentheses,assumingall
integersintheinputare
noegative
.
(c)
Describeandanalyzeanalgorithmtocomputethemaximumpossible
valuethegivenexpressioncantakebyaddingparentheses,withno
restrictionsontheinputnumbers.
Assumeanyarithmeticoperationtakes
O
(
1
)
time.
35.
AftergraduatingfromSoobananaUniversity,youdecidetointerview
forapositionattheWallStreetbank
LongLiveBoole
.Themanaging
directorofthebank,EloobEgroeg,posesa'solve'problemstoeach
newemployee,whichtheymustsolvewithin24hours.Thosewhofailto
solvetheproblemare˝redimmediately!
Enteringthebankforthe˝rsttime,younoticethattheemployeeo˚ces
areorganizedinastraightrow,withalarge
T
or
F
printedonthedoorof
eacho˚ce.Furthermore,betweeneachadjacentpairofo˚ces,thereisa
boardmarkedbyoneofthesymbols
^
,
_
,or

.Whenyouaskaboutthese
arcanesymbols,Eloobcon˝rmsthat
T
and
F
representthebooleanvalues
True
and
False
,andthesymbolsontheboardsrepresentthestandard
booleanoperators
And
,
Or
,and
Xor
.Healsoexplainsthattheseletters
andsymbolsdescribewhethercertaincombinationsofemployeescanwork
togethersuccessfully.Atthestartofanynewproject,Eloobhierarchically
clustershisemployeesbyaddingparenthesestothesequenceofsymbols,to
142

Exercises
obtainanunambiguousbooleanexpression.Theprojectissuccessfulifthis
parenthesizedbooleanexpressionevaluatesto
T
.
Forexample,ifthebankhasthreeemployees,andthesequenceof
symbolsonandbetweentheirdoorsis
T
^
F

T
,thereisexactlyone
successfulparenthesizationscheme:
(
T
^
(
F

T
))
.However,ifthelistof
doorsymbolsis
F
^
T

F
,thereisnowaytoaddparenthesestomakethe
projectsuccessful.
Eloob˝nallyposesyoursolveinterviewquestion:Describean
algorithmtodecidewhetheragivensequenceofsymbolscanbe
sizedsothattheresultingbooleanexpressionevaluatesto
T
.Yourinputis
anarray
S
[
0..2
n
]
,where
S
[
i
]
2f
T
,
F
g
when
i
iseven,and
S
[
i
]
2f_
,
^
,

when
i
isodd.
36.
Everyyear,aspartofitsannualmeeting,theAntarcticanSnailLoversof
UpperGlaciervilleholdaRoundTableMatingRace.Severalality
breedingsnailsareplacedattheedgeofaroundtable.Thesnailsare
numberedinorderaroundthetablefrom
1
to
n
.Duringtherace,eachsnail
wandersaroundthetable,leavingatrailofslimebehindit.Thesnailshave
beenspeciallytrainednevertofallo˙theedgeofthetableortocrossa
slimetrail,eventheirown.Iftwosnailsmeet,theyaredeclaredabreeding
pair,removedfromthetable,andwhiskedawaytoaromanticholeinthe
groundtomakelittlebabysnails.Notethatsomesnailsmaynever˝nda
mate,eveniftheracegoesonforever.
Figure3.6.
TheendofatypicalAntarcticanSLUGrace.Snails6and8never˙ndmates.Theorganizers
mustpay
M
[
3,4
]+
M
[
2,5
]+
M
[
1,7
]
.
Foreverypairofsnails,theAntarcticanSLUGraceorganizershave
postedamonetaryreward,tobepaidtotheownersifthatpairofsnails
meetsduringtheMatingRace.Speci˝cally,thereisatwonal
143

3.DynamicProgramming
array
M
[
1..
n
,1..
n
]
postedonthewallbehindtheRoundTable,where
M
[
i
,
j
]=
M
[
j
,
i
]
istherewardtobepaidifsnails
i
and
j
meet.
Describeandanalyzeanalgorithmtocomputethemaximumtotal
rewardthattheorganizerscouldbeforcedtopay,giventhearray
M
as
input.
37.
Youhaveminedalargeslabofmarblefromaquarry.Forsimplicity,suppose
themarbleslabisarectanglemeasuring
n
inchesinheightand
m
inches
inwidth.Youwanttocuttheslabintosmallerrectanglesofvarioussiz
someforkitchencountertops,someforlargesculptureprojects,othersfor
memorialheadstones.Youhaveamarblesawthatcanmakeeitherhorizontal
orverticalcutsacrossanyrectangularslab.Atanytime,youcanquerythe
spotprice
P
[
x
,
y
]
ofan
x
chby
y
chmarblerectangle,foranypositive
integers
x
and
y
.Thesepricesdependoncustomerdemand,andpeople
whobuymarblecountertopsareweird,sodon'tmakeanyassumptions
aboutthem;inparticular,largerrectanglesmayhavesigni˝cantlysmaller
spotprices.Giventhearrayofspotpricesandtheintegers
m
and
n
asinput,
describeanalgorithmtocomputehowtosubdividean
n

m
marbleslabto
maximizeyourpro˝t.
38.
Thisproblemasksyoutodesigne˚cientalgorithmstoconstructoptimal
binarysearchtreesthatsatisfyadditionalbalanceconstraints.Yourinput
consistsofasortedarray
A
[
1..
n
]
ofsearchkeysandanarray
f
[
1..
n
]
of
frequencycounts,where
f
[
i
]
isthenumberofsearchesfor
A
[
i
]
.Thisis
exactlythesamecostfunctionasdescribedinSection
3.9
.Butnowyour
taskistocomputeanoptimaltreethatsatis˝essomeadditionalconstraints.
(a)
AVLtrees
weretheearliestselflancingbalancedbinarysearchtrees,
˝rstdescribedin1962byGeorgyAdelsoVelskyandEvgeniiLandis.An
AVLtreeisabinarysearchtreewhereforeverynode
v
,theheightof
theleftsubtreeof
v
andtheheightoftherightsubtreeof
v
di˙erbyat
mostone.
DescribeandanalyzeanalgorithmtoconstructanoptimalAVLtree
foragivensetofsearchkeysandfrequencies.
(b)
SymmetricbinaryB
areanotherselflancingbinarytrees,˝rst
describedbyRudolfBayerin1972;thesearebetterknownbythename
lacktrees
,afterasomewhatsimplerreformulationbyLeoGuibas
andBobSedgwickin1978.Alacktreeisabinarysearchtreewith
thefollowingadditionalconstraints:
‹
Everynodeiseitherredorblack.
‹
Everyrednodehasablackparent.
‹
Everyeafpathcontainsthesamenumberofblacknodes.
144

Exercises
Describearecursivebacktrackingalgorithmtoconstructanoptimal
lacktreeforagivensetofsearchkeysandfrequencies.
(c)
AAtrees
wereproposedbyproposedbyArneAnderssonin1993and
slightlysimpli˝ed(andnamed)byMarkAllenWeissin2000.AAtreesare
alsoknownas
leaninglacktrees
,afterasymmetricreformulation
(withdi˙erentrebalancingalgorithms)byBobSedgewickin2006.An
AAtreeisalacktreewithoneadditionalconstraint:
‹
Noleftchildisred.
23
DescribeandanalyzeanalgorithmtoconstructanoptimalAAtreefora
givensetofsearchkeysandfrequencies.
39.
Supposeyouaregivenan
m

n
bitmapasanarray
M
[
1..
m
,1..
n
]
of
0
s
and
1
s.A
solidblock
in
M
isasubarrayoftheform
M
[
i
..
i
0
,
j
..
i
0
]
inwhich
allbitsareequal.Supposeyouwanttodecompose
M
intoasfewdisjoint
blocksaspossible.
Onenaturalrecursivepartitioningstrategyiscalleda
guillotine
division
.Iftheentirebitmap
M
isasolidblock,thereisnothingtodo.
Otherwise,wecut
M
intotwosmallerbitmapsalongahorizontalorvertical
line,andthenrecursivelydecomposethetwosmallerbitmapsintosolid
blocks.
Anyguillotinesubdivisioncanberepresentedasabinarytree,where
eachinternalnodestoresthepositionandorientationofacut,andeach
leafstoresasinglebut
0
or
1
indictingthecontentsofthecorresponding
block.The
size
ofaguillotinesubdivisionisthenumberofleavesinthe
correspondingbinarytree(thatis,the˝nalnumberofsolidblocks),andthe
depth
ofaguillotinesubdivisionisthedepthofthecorrespondingbinary
tree.
(a)
Describeandanalyzeanalgorithmtocomputeaguillotinesubdivision
of
M
ofminimumpossiblesize.
(b)
Showthataguillotinesubdivisiondoes
not
alwaysyieldapartitioninto
thesmallestnumberofsolidblocks.
(c)
Describeandanalyzeanalgorithmtocomputeaguillotinesubdivision
for
M
withthesmallestpossibledepth.
(d)
Describeandanalyzeanalgorithmtodetermine
M
[
i
,
j
]
,giventhetree
representingaguillotinedecompositionfor
M
andtwoindices
i
and
j
.
23
Sedgwick'sreformulationrequiresthatno
right
childisred.Whatever.Anderssonand
Sedgewickarestrangelysilentaboutwhethertomeasureanglesclockwiseorcounterclockwise,
whetherPlutoisaplanet,whetherowermeansorandwhetherit's
betterto˝ghtahundredduzedhorsesorasinglezedduck.
145

3.DynamicProgramming
Figure3.7.
Aguillotinesubdivisionwithsize8anddepth5.
(e)
De˝nethe
depth
ofapixel
M
[
i
,
j
]
inaguillotinesubdivisiontobethe
depthoftheleafthatcontainsthatpixel.Describeandanalyzean
algorithmtocomputeaguillotinesubdivisionfor
M
suchthatthesum
ofthedepthsofthepixelsassmallaspossible.
(f)
Describeandanalyzeanalgorithmtocomputeaguillotinesubdivision
for
M
suchthatthesumofthedepthsofthe
black
pixelsassmallas
possible.
«
40.
Congratulations!You'vebeenhiredbythegiantonlinebookstoreDeNile
otjustariverintooptimizetheirwarehouserobots.Eachbook
thatDeNilesellshasauniqueISBN(InternationalStandardBookNumber),
whichisjustanumericalvalue.EachofDeNile'swarehousescontainsa
longrowofbins,eachcontainingmultiplecopiesofasinglebook.These
binsarearrangedinsortedorderbyISBN;eachbin'sISBNisprintedonthe
frontofthebininmachinbleform.Booksareretrievedfromthese
binsbyrobots,whichrunalongrailsparalleltotherowofbins.
DeNiledoesnotmaintainalistofwhichbinscontainwhichISBN
numbers;thatwouldbetoosimple!Instead,toretrieveadesiredbook,
therobotmust˝rst˝ndthatbook'sbinusingabinarysearch.Becausethe
searchrequiresphysicalmotionbytherobot,wecannolongerassumethat
eachstepofthebinarysearchrequires
O
(
1
)
time.Speci˝cally:
‹
Therobotalwaysstartsatthe
0
th(wherethebooksareloaded
intoboxestoshiptocustomers).
146

Exercises
‹
Movingtherobotfromthe
i
thbintothe
j
thbinrequires

j
i

j
j
seconds
forsomeconstant

.
‹
Therobotmustbedirectlyinfrontofabininordertoreadthatbin's
ISBN.ReadinganISBNrequires

seconds,forsomeconstant

.
‹
Reversingtherobot'sdirectionofmotion(fromincreasingtodecreasing
orviceversa)requires

additionalseconds,forsomeconstant

.
‹
Whentherobot˝ndsthetargetbin,itextractsonebookfromthatbin
andreturnsto
0
th
Designandanalyzeanalgorithmtocomputeabinarysearchtreeoverthe
binsthatminimizesthetotaltimetherobotspendssearchingforbooks.
Yourinputisanarray
f
[
1..
n
]
ofintegers,where
f
[
i
]
isthenumberoftimes
thattherobotwillbeaskedtoretrieveabookfromthe
i
thbin,alongwith
thetimeparameters

,

,and

.
«
41.
Astandardmethodtoimprovethecacheperformanceofsearchtreesisto
packmoresearchkeysandsubtreesintoeachnode.A
B

isarooted
treeinwhicheachinternalnodestoresupto
B
keysandpointerstoupto
B
+
1
children,eachtherootofasmaller
B
Speci˝cally,eachnode
v
storesthree˝elds:
‹
apositiveinteger
v
.
d

B
,
‹
a
sorted
array
v
.
key
[
1..
v
.
d
]
,and
‹
anarray
v
.
child
[
0..
v
.
d
]
ofchildpointers.
Inparticular,thenumberofchildpointersisalwaysexactlyonemorethan
thenumberofkeys.
24
Eachpointer
v
.
child
[
i
]
iseither
Null
orapointertotherootofa
B

treewhosekeysarealllargerthan
v
.
key
[
i
]
andsmallerthan
v
.
key
[
i
+
1
]
.
Inparticular,allkeysintheleftmostsubtree
v
.
child
[
0
]
aresmallerthan
v
.
key
[
1
]
,andallkeysintherightmostsubtree
v
.
child
[
v
.
d
]
arelargerthan
v
.
key
[
v
.
d
]
.
Intuitively,youshouldhavethefollowingpictureinmind:
[




<
key
[
1
]
<




<
key
[
2
]
<









<
key
[
d
]
<




]
T
0
T
1
T
2

T
d

1
T
d
24
Normally,
B
arerequiredtosatisfytwoadditionalconstraints,whichguaranteea
wsesearchcostof
O
(
log
B
n
)
:Everyleafmusthaveexactlythesamedepth,andeverynode
exceptpossiblytherootmustcontainatleast
B
=
2
keys.However,inthisproblem,wearenot
interestedinoptimizingthe
wse
searchcost,butratherthe
total
costofasequenceof
searches,sowewillnotimposetheseadditionalconstraints.
147

3.DynamicProgramming
Here
T
i
isthesubtreepointedtoby
child
[
i
]
.
The
cost
ofsearchingforakey
x
ina
B
isthenumberofnodesin
thepathfromtheroottothenodecontaining
x
asoneofitskeys.A
1

isjustastandardbinarysearchtree.
Fixanarbitrarypositiveinteger
B
>
0
.(Isuggest
B
=
8
.)Suppose
youraregivenasortedarray
A
[
1,...,
n
]
ofsearchkeysandacorresponding
array
F
[
1,...,
n
]
offrequencycounts,where
F
[
i
]
isthenumberoftimes
thatwewillsearchfor
A
[
i
]
.Yourtaskistodescribeandanalyzeane˚cient
algorithmto˝nda
B
thatminimizesthetotalcostofsearchingforthe
givenkeyswiththegivenfrequencies.
(a)
Describeapolynomiaalgorithmforthespecialcase
B
=
2
.
(b)
Describeanalgorithmforarbitrary
B
thatrunsin
O
(
n
B
+
c
)
timeforsome
˝xedinteger
c
.
ª
(c)
Describeanalgorithmforarbitrary
B
thatrunsin
O
(
n
c
)
timeforsome
˝xedinteger
c
thatdoes
not
dependon
B
.
42.
Astring
w
ofparentheses
((
and
))
andbrackets
[[
and
]]
is
balanced
ifit
satis˝esoneofthefollowingconditions:
‹
w
istheemptystring.
‹
w
=
((
x
))
forsomebalancedstring
x
‹
w
=
[[
x
]]
forsomebalancedstring
x
‹
w
=
xy
forsomebalancedstrings
x
and
y
Forexample,thestring
w
=
((
[[
((
))
]]
[[
]]
((
))
))
[[
((
))
((
))
]]
((
))
isbalanced,because
w
=
xy
,where
x
=
((
[[
((
))
]]
[[
]]
((
))
))
and
y
=
[[
((
))
((
))
]]
((
))
.
(a)
Describeandanalyzeanalgorithmtodeterminewhetheragivenstring
ofparenthesesandbracketsisbalanced.
(b)
Describeandanalyzeanalgorithmtocomputethelengthofalongest
balancedsubsequenceofagivenstringofparenthesesandbrackets.
(c)
Describeandanalyzeanalgorithmtocomputethelengthofashortest
balancedsupersequenceofagivenstringofparenthesesandbrackets.
(d)
Describeandanalyzeanalgorithmtocomputetheminimumeditdistance
fromagivenstringofparenthesesandbracketstoabalancedstringof
parenthesesandbrackets.
148

Exercises
ª
(e)
Describeandanalyzeanalgorithmtocomputethelongestcommon
balancedsubsequenceoftwogivenstringsofparenthesesandbrackets.
ª
(f)
Describeandanalyzeanalgorithmtocomputethelongestpalindromic
balancedsubsequenceofagivenstringofparenthesesandbrackets.
ª
(g)
Describeandanalyzeanalgorithmtocomputethelongestcommon
palindromicbalancedsubsequence(whew!)oftwogivenstringsof
parenthesesandbrackets.
Foreachproblem,yourinputisanarray
w
[
1..
n
]
,where
w
[
i
]
2f
((
,
))
,
[[
,
]]
g
foreveryindex
i
.(Youmayprefertousedi˙erentsymbolsinsteadof
parenthesesandorexample,
L
,
R
,
l
,
r
or
Ã
,
Â
,
Ê
,
É
utplease
tellyourgraderwhatsymbolsyou'reusing!)
ª
43.
Congratulations!Yourresearchteamhasjustbeenawardeda$50Mm
yearproject,jointlyfundedbyDARPA,Google,andMcDonald's,toproduce
DWIM:The˝rstcompilertoreadprogrammers'minds!Yourproposaland
yournumerouspressreleasesallpromisethatDWIMwillautomatically
correcterrorsinanygivenpieceofcode,whilemodifyingthatcodeaslittle
aspossible.Unfortunately,nowit'stimetostartactuallymakingthedamn
thingwork.
Asawarmupexercise,youdecidetotacklethefollowingnecessary
subproblem.Recallthatthe
editdistance
betweentwostringsistheminimum
numberofsinglinsertions,deletions,andreplacementsrequired
totransformonestringintotheother.An
arithmeticexpression
isastring
w
suchthat
‹
w
isastringofoneormoredecimaldigits,
‹
w
=
(
x
)
forsomearithmeticexpression
x
,or
‹
w
=
x

y
forsomearithmeticexpressions
x
and
y
andsomebinary
operator

.
Supposeyouaregivenastringoftokensfromthealphabet
f
#
,

,
(
,
)
g
,
where
#
representsadecimaldigitand

representsabinaryoperator.
Describeandanalyzeanalgorithmtocomputetheminimumeditdistance
fromthegivenstringtoanarithmeticexpression.
44.
Ribonucleicacid(RNA)moleculesarelongchainsofmillionsofnucleotides
or
bases
offourdi˙erenttypes:adenine(
A
),cytosine(
C
),guanine(
G
),and
uracil(
U
).The
sequence
ofanRNAmoleculeisastring
b
[
1..
n
]
,where
eachcharacter
b
[
i
]
2f
A
,
C
,
G
,
U
g
correspondstoabase.Inadditiontothe
chemicalbondsbetweenadjacentbasesinthesequence,hydrogenbonds
canformbetweencertainpairsofbases.Thesetofbondedbasepairsis
calledthe
secondarystructure
oftheRNAmolecule.
149

3.DynamicProgramming
Wesaythattwobasepairs
(
i
,
j
)
and
(
i
0
,
j
0
)
with
i
<
j
and
i
0
<
j
0
overlap
if
i
<
i
0
<
j
<
j
0
or
i
0
<
i
<
j
0
<
j
.Inpractice,mostbasepairsare
noverlapping.Overlappingbasepairscreatelled
pseudoknots
inthe
secondarystructure,whichareessentialforsomeRNAfunctions,butare
moredi˚culttopredict.
Supposewewanttopredictthebestpossiblesecondarystructurefor
agivenRNAsequence.Wewilladoptadrasticallysimpli˝edmodelof
secondarystructure:
‹
Eachbasecanbondwithatmostoneotherbase.
‹
Only
A

U
pairsand
C

G
pairscanbond.
‹
Pairsoftheform
(
i
,
i
+
1
)
and
(
i
,
i
+
2
)
cannotbond.
‹
Bondedbasepairscannotoverlap.
Thelast(andleastrealistic)restrictionallowsustovisualizeRNAsecondary
structureasasortoffattree,asshownbelow.
Figure3.8.
ExampleRNAsecondarystructurewith21bondedbasepairs,indicatedbyheavyredlines.
Gapsareindicatedbydottedcurves.Thisstructurehasscore
2
2
+
2
2
+
8
2
+
1
2
+
7
2
+
4
2
+
7
2
=
187
.
(a)
Describeandanalyzeanalgorithmthatcomputesthemaximumpossible
number
ofbondedbasepairsinasecondarystructureforagivenRNA
sequence.
(b)
A
gap
inasecondarystructureisamaximalsubstringofunpairedbases.
Largegapsleadtochemicalinstabilities,sosecondarystructureswith
smallergapsaremorelikely.Toaccountforthispreference,let'sde˝ne
the
score
ofasecondarystructuretobethesumofthe
squares
ofthegap
lengths;seeFigure
3.8
.(Thisscorefunctionisutterly˝ctional;realRNA
structurepredictionrequires
much
morecomplicatedscoringfunctions.)
Describeandanalyzeanalgorithmthatcomputestheminimum
possiblescoreofasecondarystructureforagivenRNAsequence.
150

Exercises
¨
45.
(a)
Describeandanalyzeane˚cientalgorithmtodetermine,givenastring
w
andaregularexpression
R
,whether
w
2
L
(
R
)
.
(b)
Generalized
regularexpressionsallowthebinaryoperator
\
(intersection)
andtheunaryoperator
:
(complement),inadditiontotheusual
‹
(concatenation),
+
(or),and

(Kleeneclosure)operators.NFA
constructionsandKleene'stheoremimplythatanygeneralizedregular
expression
E
representsaregularlanguage
L
(
E
)
.
Describeandanalyzeane˚cientalgorithmtodetermine,givena
string
w
andageneralizedregularexpression
E
,whether
w
2
L
(
E
)
.
Inbothproblems,assumethatyouareactuallygivenaparsetreeforthe
(generalized)regularexpression,notjustastring.
TreesandSubtrees
46.
You'vejustbeenappointedastheneworganizerofthe˝rstannualmandatory
holidaypartyatGiggle(asubsidiaryofAbugida).Giggleemployeesare
organizedintoastricthitreewiththecompanypresidentatthe
root.TheaowingoraclesinHumanResourceshaveassignedareal
numbertoeachemployeemeasuringhowtheemployeeis.Tokeep
thingssocial,thereisonerestrictionontheguestlist:anemployeecannot
attendthepartyiftheirimmediatesupervisorisalsopresent.Ontheother
hand,thepresidentofthecompany
must
attendtheparty,eventhoughshe
hasanegativefunrating;it'shercompany,afterall.Giveanalgorithmthat
makesaguestlistforthepartythatmaximizesthesumoftheratings
oftheguests.
47.
Sincesofewpeoplecametolastyear'sholidayparty,thepresidentofGiggle
decidestogiveeachemployeeapresentinsteadthisyear.Speci˝cally,
eachemployeemustreceiveonthethreegifts:(1)ana
weekvacationanywhereintheworld,(2)anacao
breakfastfortwoatJumpingJackFlash'sFlapjackStackShack,or(3)a
burningpaperbagfullofdogpoop.Corporateregulationsprohibitany
employeefromreceivingexactlythesamegiftashis/herdirectsupervisor.
Anyemployeewhoreceivesabettergiftthanhis/herdirectsupervisorwill
almostcertainlybe˝redina˝tofjealousy.
AsGiggle'so˚cialpartyczar,it's
your
jobtodecidewhichgifteach
employeereceives.Describeanalgorithmtodistributegiftssothatthe
minimumnumberofpeopleare˝red.Yes,youmaysendthepresidenta
˛amingbagofdogpoop.
Moreformally,youaregivenarootedtree
T
,representingthecompany
hierarchy,andyouwanttolabelthenodesof
T
withintegers
1
,
2
,or
3
,so
151

3.DynamicProgramming
thateverynodehasadi˙erentlabelfromitsparent.The
cost
ofanlabeling
isthenumberofnodeswithsmallerlabelsthantheirparents.SeeFigure
3.9
foranexample.Describeandanalyzeanalgorithmtocomputethe
minimstlabelingof
T
.
Figure3.9.
Atreelabelingwithcost9.Thenineboldnodeshavesmallerlabelsthantheirparents.This
is
not
theoptimallabelingforthistree.
48.
AftertheFlamingDogPoopHolidayDebacle,youwerestronglyencouraged
toseekotheremployment,andsoyouleftGiggleforrivalcompanyTwitbook.
Unfortunately,thenewpresidentofTwitbookjustdecidedtoimitateGiggle
bythrowingherownholidayparty,andinlightofyourpastexperience,
appointedyouastheo˚cialpartyorganizer.Thepresidentdemandsthat
youinviteexactly
k
employees,includingthepresidentherself,andeveryone
whoisinvitedisrequiredtoattend.Yeah,that'llbefun.
JustlikeatGiggle,employeesatTwitbookareorganizedintoastrict
hierarchy:atreewiththecompanypresidentattheroot.Theaowing
oraclesinHumanResourceshaveassignedarealnumbertoeachemployee
indicatingthe
awkwardness
ofinvitingboththatemployeeandtheir
diatesupervisor;anegativevalueindicatesthattheemployeeandtheir
supervisoractuallylikeeachother.Yourgoalistochooseasubsetof
exactly
k
employeestoinvite,sothatthetotalawkwardnessoftheresulting
partyisassmallaspossible.Forexample,iftheguestlistdoesnotinclude
bothanemployeeandtheirimmediatesupervisor,thetotalawkwardness
iszero.Theinputtoyouralgorithmisthetree
T
,theinteger
k
,andthe
awkwardnessofeachnodein
T
.
(a)
Describeanalgorithmthatcomputesthetotalawkwardnessoftheleast
awkwardsubsetof
k
employees,assumingthecompanyhierarchyis
describedbya
binary
tree.Thatis,assumethateachemployeedirectly
supervisesatmosttwoothers.
ª
(b)
Describeanalgorithmthatcomputesthetotalawkwardnessoftheleast
awkwardsubsetof
k
employees,withnorestrictionsonthecompany
hierarchy.
152

Exercises
49.
Supposeweneedtobroadcastamessagetoallthenodesinarootedtree.
Initially,onlytherootnodeknowsthemessage.Inasingleround,anynode
thatknowsthemessagecanforwardittoatmostoneofitschildren.See
Figure
3.10
foranexample.
(a)
Designanalgorithmtocomputetheminimumnumberofroundsrequired
tobroadcastthemessagetoallnodesina
binary
tree.
©
(b)
Designanalgorithmtocomputetheminimumnumberofroundsrequired
tobroadcastthemessagetoallnodesinan
arbitrary
rootedtree.
[Hint:
Youmay˝ndtechniquesinthenextchapterusefultoproveyour
algorithmiscorrect,eventhoughit'snotagreedyalgorithm.]
Figure3.10.
Amessagebeingdistributedthroughatreein˙verounds.
50.
Oneday,Alexgottiredofclimbinginagymanddecidedtotakeaverylarge
groupofclimberfriendsoutsidetoclimb.Theclimbingareawherethey
went,hadahugewideboulder,notverytall,withvariousmarkedhand
andfootholds.Alexquicklydeterminedanllowsetofmovesthather
groupoffriendscanperformtogetfromoneholdtoanother.
Theoverallsystemofholdscanbedescribedbyarootedtree
T
with
n
vertices,whereeachvertexcorrespondstoaholdandeachedgecorresponds
toanallowedmovebetweenholds.Theclimbingpathsconvergeastheygo
uptheboulder,leadingtoauniqueholdatthesummit,representedbythe
rootof
T
.
25
Alexandherfriends(whoareallexcellentclimbers)decidedtoplaya
game,whereasmanyclimbersaspossiblearesimultaneouslyontheboulder
andeachclimberneedstoperformasequenceof
exactly
k
moves.Each
climbercanchooseanarbitraryholdtostartfrom,andallmovesmustmove
awayfromtheground.Thus,eachclimbertracesoutapathof
k
edges
inthetree
T
,alldirectedtowardtheroot.However,notwoclimbersare
allowedtotouchthesamehold;thepathsfollowedbydi˙erentclimbers
cannotintersectatall.
Describeandanalyzeane˚cientalgorithmtocomputethemaximum
numberofclimbersthatcanplaythisgame.Moreformally,youaregivena
rootedtree
T
andaninteger
k
,andyouwantto˝ndthelargestpossible
25
Q:Whydocomputerscienceprofessorsthinktreeshavetheirrootsatthetop?
A:Becausethey'veneverbeenoutside!
153

3.DynamicProgramming
numberofdisjointpathsin
T
,whereeachpathhaslength
k
.Do
not
assume
that
T
isabinarytree.Forexample,giventhetree
T
belowand
k
=
3
as
input,youralgorithmshouldreturntheinteger
8
.
Figure3.11.
Sevendisjointpathsoflength
k
=
3
.Thisis
not
thelargestsuchsetofpathsinthistree.
51.
Let
T
bearootedbinarytreewith
n
vertices,andlet
k

n
beapositive
integer.Wewouldliketomark
k
verticesin
T
sothateveryvertexhasa
nearbymarkedancestor.Moreformally,wede˝nethe
clusteringcost
ofany
subset
K
ofverticesas
cost
(
K
)=
max
v
cost
(
v
,
K
)
,
wherethemaximumistakenoverallvertices
v
inthetree,and
cost
(
v
,
K
)
is
thedistancefrom
v
toitsnearestancestorin
K
:
cost
(
v
,
K
)=
8
>
<
>
:
0
if
v
2
K
1
if
v
istherootof
T
and
v
62
K
1
+
cost
(
parent
(
v
))
otherwise
Inparticular,
cost
(
K
)=
1
if
K
excludestherootof
T
.
Figure3.12.
Asubsetof˙veverticesinabinarytree,withclusteringcost3.
154

Exercises
ª
(a)
Describeadynamicprogrammingalgorithmtocompute,giventhetree
T
andaninteger
k
,theminimumclusteringcostofanysubsetof
k
verticesin
T
.Forfullcredit,youralgorithmshouldrunin
O
(
n
2
k
2
)
time.
(b)
Describeadynamicprogrammingalgorithmtocompute,giventhetree
T
andaninteger
r
,thesizeofthesmallestsubsetofverticeswhose
clusteringcostisatmost
r
.Forfullcredit,youralgorithmshouldrunin
O
(
nr
)
time.
(c)
Showthatyoursolutionforpart(b)impliesanalgorithmforpart(a)
thatrunsin
O
(
n
2
log
n
)
time.
52.
Thisquestionasksyouto˝nde˚cientalgorithmstocomputethe
largest
commonrootedsubtree
oftwogivenrootedtrees.Recallthata
rooted
tree
isaconnectedacyclicgraphwithadesignatednodecalledtheroot.
Arootedsubtreeofarootedtreeconsistsofanarbitrarynodeandallits
descendants.Theprecisede˝nitionofmmodependsonwhichpairsof
rootedtreesweconsiderisomorphic.
(a)
Recallthata
binary
treeisarootedtreeinwhicheverynodehasa
(possiblyempty)
left
subtreeanda(possiblyempty)
right
subtree.Two
binarytreesareisomorphicifandonlyiftheyarebothempty,ortheir
leftsubtreesareisomorphicandtheirrightsubtreesareisomorphic.
Describeanalgorithmto˝ndthelargestcommon
binary
subtreeoftwo
given
binary
trees.
Figure3.13.
Twobinarytrees,withtheirlargestcommon(rooted)subtreeemphasized.
(b)
Inan
ordered
rootedtree,eachnodehasa
sequence
ofchildren,which
aretherootsoforderedrootedsubtrees.Twoorderedrootedtreesare
isomorphiciftheyarebothempty,oriftheir
i
thsubtreesareisomorphic
foreveryindex
i
.Describeanalgorithmto˝ndthelargestcommon
orderedsubtreeoftwoorderedtrees
T
1
and
T
2
.
©
ª
(c)
Inan
unordered
rootedtree,eachnodehasanunordered
set
ofchildren,
whicharetherootsofunorderedrootedsubtrees.Twounorderedrooted
treesareisomorphiciftheyarebothempty,orthesubtreesofeachroot
canbeorderedsothat
their
i
thsubtreesareisomorphicforeveryindex
i
.
Describeanalgorithmto˝ndthelargestcommonunorderedsubtreeof
twounorderedtrees
T
1
and
T
2
.
155

3.DynamicProgramming
53.
Thisquestionasksyouto˝nde˚cientalgorithmstocomputeoptimal
subtreesin
unrooted
nnectedacyclicundirectedgraphs.A
subtree
ofanunrootedtreeisanyconnectedsubgraph.
(a)
Supposeyouaregivenanunrootedtree
T
withweightsonits
edges
,
whichmaybepositive,negative,orzero.Describeanalgorithmto˝nd
a
path
in
T
withmaximumtotalweight.
(b)
Supposeyouaregivenanunrootedtree
T
withweightsonits
vertices
,
whichmaybepositive,negative,orzero.Describeanalgorithmto˝nd
a
subtree
of
T
withmaximumtotalweight.
[Thiswasa2016Google
interviewquestion.]
(c)
Let
T
1
and
T
2
bearbitrary
ordered
unrootedtrees,meaningthatthe
neighborsofeverynodehaveawedcyclicorder.Describean
algorithmto˝ndthelargestcommon
ordered
subtreeof
T
1
and
T
2
.
©
ª
(d)
Let
T
1
and
T
2
bearbitrary
unordered
unrootedtrees.Describean
algorithmto˝ndthelargestcommon
unordered
subtreeof
T
1
and
T
2
.
54.
Rootedminors
ofrootedtreesareanaturalgeneralizationofsubsequences.
Arootedminorofarootedtree
T
isanytreeobtainedby
contracting
oneor
moreedges.Whenwecontractanedge
u

v
,where
u
istheparentof
v
,the
childrenof
v
becomenewchildrenof
u
andthen
v
isdeleted.Inparticular,
therootof
T
isalsotherootofeveryrootedminorof
T
.
Figure3.14.
Arootedtreeandoneofitsrootedminors.
(a)
Let
T
bearootedtreewithlabelednodes.Wesaythat
T
is
boring
if,foreachnode
x
,allchildrenof
x
havethesamelabel;childrenof
di˙erentnodesmayhavedi˙erentlabels.Describeanalgorithmto˝nd
thelargestboringrootedminorofagivenlabeledrootedtree.
(b)
Supposewearegivenarootedtree
T
whosenodesarelabeledwith
numbers.Describeanalgorithmto˝ndthelargest
hearooted
minor
of
T
.Thatis,youralgorithmshouldreturnthelargestrooted
minor
M
suchthateverynodein
M
hasasmallerlabelthanitschildren
in
M
.
156

Exercises
(c)
Supposewearegivena
binary
tree
T
whosenodesarelabeledwith
numbers.Describeanalgorithmto˝ndthelargest
binary
rootedminor
of
T
.Thatis,youralgorithmshouldreturnarooted
minor
M
suchthateverynodein
M
hasatmosttwochildren,and
aninordertraversalof
M
isanincreasingsubsequenceofaninorder
traversalof
T
.
(d)
Recallthatarootedtreeis
ordered
ifthechildrenofeachnodehavea
wedlorder.Describeanalgorithmto˝ndthelargest
binminorofan
arbitrary
orderedtree
T
whosenodes
arelabeledwithnumbers.Again,thelorderofnodesin
M
shouldbeconsistentwiththeirorderin
T
.
ª
(e)
Describeanalgorithmto˝ndthelargestcommon
ordered
rootedminor
oftwo
ordered
labeledrootedtrees.
©
ª
(f)
Describeanalgorithmto˝ndthelargestcommon
unordered
rooted
minoroftwo
unordered
labeledrootedtrees.
[Hint:Combinedynamic
programmingwithmaximum˛ows.]
157


Thepointis,ladiesandgentleman,greedisgood.Greedworks,greedisright.
Greedclari˙es,cutsthrough,andcapturestheessenceoftheevolutionaryspirit.
Greedinallitsforms,greedforlife,money,love,knowledgehasmarkedthe
upwardsurgeinmankind.AndgrmyworsavenotonlyTeldar
PaperbuttheothermalfunctioningcorporationcalledtheUSA.
GordonGekko[MichaelDouglas],
WallStreet
(1987)
Thereisalwaysaneasysolutiontoeveryhumanpr
neat,plausible,andwrong.
H.L.Mencken,Divine
NewYorkEveningMail
(November16,1917)
4
GreedyAlgorithms
4.1StoringFilesonTape
Supposewehaveasetof
n
˝lesthatwewanttostoreonmagnetictape.
1
Inthe
future,userswillwanttoreadthose˝lesfromthetape.Readinga˝lefrom
tapeisn'tlikereadinga˝lefromdisk;˝rstwehavetofaorwardpastallthe
other˝les,andthattakesasigni˝cantamountoftime.Let
L
[
1..
n
]
beanarray
listingthelengthsofeach˝le;speci˝cally,˝le
i
haslength
L
[
i
]
.Ifthe˝lesare
storedinorderfrom
1
to
n
,thenthecostofaccessingthe
k
th˝leis
cost
(
k
)=
k
X
i
=
1
L
[
i
]
.
1
Readerswhoaretemptedtoobjectthatmagnetictapehasbeenobsoletefordecades
arecordiallyinvitedtotouryournearestsupercomputerfacility;asktoseethetaperobots.
Alternatively,consider˝lingasequenceofbooksonalibrarybookshelf.Youknow,thosestrange
briobjectsmadeofdeadtreesandink?
159

4.GreedyAlgorithms
Thecostre˛ectsthefactthatbeforeweread˝le
k
wemust˝rstscanpastallthe
earlier˝lesonthetape.Ifweassumeforthemomentthateach˝leisequally
likelytobeaccessed,thenthe
expected
costofsearchingforarandom˝leis
E
[
cost
]=
n
X
k
=
1
cost
(
k
)
n
=
1
n
n
X
k
=
1
k
X
i
=
1
L
[
i
]
.
Ifwechangetheorderofthe˝lesonthetape,wechangethecostofaccessing
the˝les;some˝lesbecomemoreexpensivetoread,butothersbecomecheaper.
Di˙erent˝leordersarelikelytoresultindi˙erentexpectedcosts.Speci˝cally,
let
ˇ
(
i
)
denotetheindexofthe˝lestoredatposition
i
onthetape.Thenthe
expectedcostofthepermutation
ˇ
is
E
[
cost
(
ˇ
)]=
1
n
n
X
k
=
1
k
X
i
=
1
L
[
ˇ
(
i
)]
.
Whichordershouldweuseifwewantthisexpectedcosttobeassmallas
possible?Theanswer
seems
intuitivelyclear:Sortthe˝lesbyincreasinglength.
Butintuitionisatrickybeast.Theonlywaytobe
sure
thatthisorderworksis
to
takeo˙andnuketheentiresitefromorbitactually
prove
thatitworks!
Lemma4.1.
E
[
cost
(
ˇ
)]
isminimizedwhen
L
[
ˇ
(
i
)]

L
[
ˇ
(
i
+
1
)]
forall
i
.
Proof:
Suppose
L
[
ˇ
(
i
)]
>
L
[
ˇ
(
i
+
1
)]
forsomeindex
i
.Tosimplifynotation,
let
a
=
ˇ
(
i
)
and
b
=
ˇ
(
i
+
1
)
.Ifweswap˝les
a
and
b
,thenthecostof
accessing
a
increasesby
L
[
b
]
,andthecostofaccessing
b
decreasesby
L
[
a
]
.
Overall,theswapchangestheexpectedcostby
(
L
[
b
]

L
[
a
])
=
n
.Butthischange
isanimprovement,because
L
[
b
]
<
L
[
a
]
.Thus,ifthe˝lesareoutoforder,we
candecreasetheexpectedcostbyswappingsomepairof˝les.
…
Thisisour˝rstexampleofacorrect
greedyalgorithm
.Tominimizethe
total
expectedcostofaccessingthe˝les,weputthe˝lethatischeapesttoaccess
˝rst,andthenrecursivelywriteeverythingelse;nobacktracking,nodynamic
programming,justmakethebestlocalchoiceandblindlyplowahead.Ifwe
useane˚cientsortingalgorithm,therunningtimeisclearly
O
(
n
log
n
)
,plus
thetimerequiredtoactuallywritethe˝les.Toshowthatthegreedyalgorithm
isactuallycorrect,weprovedthattheoutputofanyotheralgorithmcanbe
improvedbysomesortofexchange
Let'sgeneralizethisideafurther.Supposewearealsogivenanarray
F
[
1..
n
]
of
accessfrequencies
foreach˝le;˝le
i
willbeaccessedexactly
F
[
i
]
timesover
thelifetimeofthetape.Nowthe
total
costofaccessingallthe˝lesonthetapeis

cost
(
ˇ
)=
n
X
k
=
1
‡
F
[
ˇ
(
k
)]

k
X
i
=
1
L
[
ˇ
(
i
)]
„
=
n
X
k
=
1
k
X
i
=
1

F
[
ˇ
(
k
)]

L
[
ˇ
(
i
)]

.
160

4.2.SchedulingClasses
Asbefore,reorderingthe˝lescanchangethistotalcost.Sowhatordershould
weuseifwewantthetotalcosttobeassmallaspossible?(Thisquestionis
similarinspirittotheoptimalbinarysearchtreeproblem,butthetargetdata
structureandthecostfunctionarebothdi˙erent,sothealgorithmmustbe
di˙erent,too.)
Wealreadyprovedthatifallthefrequenciesareequal,weshouldsortthe
˝lesbyincreasingsize.Ifthefrequenciesarealldi˙erentbutthe˝lelengths
L
[
i
]
areallequal,thenintuitively,weshouldsortthe˝lesby
decreasing
access
frequency,withthemo˝le˝rst.Infact,thisisnothardtoprove
(hint,hint)bymodifyingtheproofofLemma
4.1
.Butwhatifthesizesandthe
frequenciesbothvary?Inthiscase,weshouldsortthe˝lesbythe
ratio
L
=
F
.
Lemma4.2.

cost
(
ˇ
)
isminimizedwhen
L
[
ˇ
(
i
)]
F
[
ˇ
(
i
)]

L
[
ˇ
(
i
+
1
)]
F
[
ˇ
(
i
+
1
)]
forall
i
.
Proof:
Suppose
L
[
ˇ
(
i
)]
=
F
[
ˇ
(
i
)]
>
L
[
ˇ
(
i
+
1
)]
=
F
[
ˇ
(
i
+
i
)]
forsomeindex
i
.
Tosimplifynotation,let
a
=
ˇ
(
i
)
and
b
=
ˇ
(
i
+
1
)
.Ifweswap˝les
a
and
b
,then
thecostofaccessing
a
increasesby
L
[
b
]
,andthecostofaccessing
b
decreases
by
L
[
a
]
.Overall,theswapchangesthetotalcostby
L
[
b
]
F
[
a
]

L
[
a
]
F
[
b
]
.But
thischangeisanimprovement,because
L
[
a
]
F
[
a
]
>
L
[
b
]
F
[
b
]
()
L
[
b
]
F
[
a
]

L
[
a
]
F
[
b
]
<
0.
Thus,ifanytwoadjacent˝lesareoutoforder,wecanimprovethetotalcostby
swappingthem.
…
4.2SchedulingClasses
Thenextexampleisslightlymorecomplex.Supposeyoudecidetodropout
ofcomputerscienceandchangeyourmajortoAppliedChaos.TheApplied
Chaosdepartmento˙ersallofitsclassesonthesamedayeveryweek,called
oberdabythestudents(butinterestingly,
not
bythefaculty).Everyclass
hasadi˙erentstarttimeandadi˙erentendingtime:AC101oiletPaper
LandscapeAstartsat10:27pmandendsat11:51pm;AC666
entizingtheEschatostartsat4:18pmandendsat4:22pm,andsoon.
Intheinterestofgraduatingasquicklyaspossible,youwanttoregisterforas
manyclassesaspossible.(AppliedChaosclassesdon'trequireanyactual
work
.)
Theuniversity'sregistrationcomputerwon'tletyouregisterforoverlapping
classes,andnooneinthedepartmentknowshowtooverridethis
Whichclassesshouldyoutake?
Moreformally,supposeyouaregiventwoarrays
S
[
1..
n
]
and
F
[
1..
n
]
listing
thestartand˝nishtimesofeachclass;tobeconcrete,wecanassumethat
161

4.GreedyAlgorithms
0

S
[
i
]
<
F
[
i
]

M
foreach
i
,forsomevalue
M
(forexample,thenumber
ofpicosecondsinSoberday).Yourtaskistochoosethelargestpossiblesubset
X
2f
1,2,...,
n
g
sothatforanypair
i
,
j
2
X
,either
S
[
i
]
>
F
[
j
]
or
S
[
j
]
>
F
[
i
]
.
Wecanillustratetheproblembydrawingeachclassasarectanglewhoseleft
andright
x
atesshowthestartand˝nishtimes.Thegoalisto˝nda
largestsubsetofrectanglesthatdonotoverlapvertically.
Figure4.1.
Amaximumcon˝ict-freescheduleforasetofclasses.
Thisproblemhasafairlysimplerecursivesolution,basedontheobservation
thateitheryoutakeclass
1
oryoudon't.Let
B
denotethesetofclassesthat
end
before
class
1
starts,andlet
A
denotethesetofclassesthat
startafter
class
1
ends:
B
:
=
f
i
j
2

i

n
and
F
[
i
]
<
S
[
1
]
g
A
:
=
f
i
j
2

i

n
and
S
[
i
]
>
F
[
1
]
g
Ifclass
1
isintheoptimalschedule,thensoaretheoptimalschedulesfor
B
and
A
,whichwecan˝ndrecursively.Ifnot,wecan˝ndtheoptimalschedule
for
f
2,3,...,
n
g
recursively.Soweshouldtrybothchoicesandtakewhichever
onegivesthebetterschedule.Evaluatingthisrecursivealgorithmfromthe
bottomupgivesusadynamicprogrammingalgorithmthatrunsin
O
(
n
3
)
time.
Iwon'tbothertogothroughthedetails,becausewecandobetter.
2
Intuitively,we'dlikethe˝rstclassto˝nishasearlyaspossible,becausethat
leavesuswiththelargestnumberofremainingclasses.Thisintuitionsuggests
thefollowingsimplegreedyalgorithm.Scanthroughtheclassesinorderof
˝nishtime;wheneveryouencounteraclassthatdoesn'tcon˛ictwithyourlatest
classsofar,takeit!SeeFigure
4.2
foravisualizationoftheresultinggreedy
schedule.
Wecanwritethegreedyalgorithmsomewhatmoreformallyasshowninin
Figure
4.3
.(Hopefullythe˝rstlineisunderstandable.)Aftertheinitialsort,the
algorithmisasimplelinloop,sotheentirealgorithmrunsin
O
(
n
log
n
)
time
.
2
Butyoushouldstillworkoutthedetailsyourself.Thedynamicprogrammingalgorithm
canbeusedto˝ndthescheduleforseveraldi˙erentde˝nitionsofbutthegreedy
algorithmI'mdescribinghereonlyworkswhenmeansAlso,youcanimprove
therunningtimeto
O
(
n
2
)
usingadi˙erentrecurrence.
162

4.2.SchedulingClasses
Figure4.2.
Thesameclassessortedby˙nishtimesandthegreedyschedule.
GreedySchedule
(
S
[
1..
n
]
,
F
[
1..
n
])
:
sort
F
andpermute
S
tomatch
count
 
1
X
[
count
]
 
1
for
i
 
2
to
n
if
S
[
i
]
>
F
[
X
[
count
]]
count
 
count
+
1
X
[
count
]
 
i
return
X
[
1..
count
]
Figure4.3.
Agreedyalgorithmfor˙ndingamaximumsetofnon-overlappingclasses
Toprovethat
GreedySchedule
actuallycomputesthelargestcon˛i
schedule,weuseanexchangeargument,similartotheoneweusedfortape
sorting.Wearenotclaimingthatthegreedyscheduleisthe
only
maximal
schedule;therecouldbeothers.(CompareFigures
4.1
and
4.2
!)Allwecan
claimisthatatleastoneoftheoptimalschedulesistheoneproducedbythe
greedyalgorithm.
Lemma4.3.
Atleastonemaximalcon˛ischeduleincludestheclassthat
˝nishes˝rst.
Proof:
Let
f
betheclassthat˝nishes˝rst.Supposewehaveamaximal
con˛ischedule
X
thatdoesnotinclude
f
.Let
g
bethe˝rstclassin
X
to
˝nish.Since
f
˝nishesbefore
g
does,
f
cannotcon˛ictwithanyclassintheset
X
nf
g
g
.Thus,theschedule
X
0
=
X
[f
f
gnf
g
g
isalsocon˛iSince
X
0
has
thesamesizeas
X
,itisalsomaximal.
…
To˝nishtheproof,wecallonouroldfriendinduction.
163

4.GreedyAlgorithms
Theorem4.4.
Thegreedyscheduleisanoptimalschedule.
Proof:
Let
f
betheclassthat˝nishes˝rst,andlet
A
bethesubsetofclassesthat
startafter
f
˝nishes.Thepreviouslemmaimpliesthatsomeoptimalschedule
contains
f
,sothebestschedulethatcontains
f
isanoptimalschedule.Thebest
schedulethatincludes
f
mustcontainanoptimalschedulefortheclassesthat
donotcon˛ictwith
f
,thatis,anoptimalschedulefor
A
.Thegreedyalgorithm
chooses
f
andthen,bytheinductivehypothesis,computesanoptimalschedule
ofclassesfrom
A
.
…
Theproofmightbeeasiertounderstandifweunrolltheinductionslightly.
Proof:
Let
h
g
1
,
g
2
,...,
g
k
i
bethesequenceofclasseschosenbythegreedy
algorithm,sortedbystartingtime.Supposewehaveamaximalcon˛i
schedule
S
=
h
g
1
,
g
2
,...,
g
j

1
,
c
j
,
c
j
+
1
,...,
c
m
i
,
againsortedbystartingtime,where
c
j
isdi˙erentfromtheclass
g
j
chosenby
thegreedyalgorithm.(Wecouldhave
j
=
1
,inwhichcasethisschedulestarts
withanochoice
c
1
.)Byconstruction,the
j
thgreedychoice
g
j
does
notcon˛ictwithanyearlierclass
g
1
,
g
2
,...,
g
j

1
,andbecauseourschedule
S
is
con˛ineitherdoes
c
j
.Moreover,
g
j
hasthe
earliest
˝nishtimeamong
allclassesthatdon'tcon˛ictwiththeearlierclasses;inparticular,
g
j
˝nishes
before
c
j
.Itfollowsthat
g
j
doesnotcon˛ictwithanyofthelaterclasses
c
j
+
1
,...,
c
m
.Thus,themodi˝edschedule
S
0
=
h
g
1
,
g
2
,...,
g
j

1
,
g
j
,
c
j
+
1
,...,
c
m
i
,
isalsocon˛i(ThisargumentisadirectgeneralizationofLemma
4.3
,
whichconsidersthecase
j
=
1
.)
Byinduction,itnowfollowsthatthereisanoptimalschedule
h
g
1
,
g
2
,...,
g
k
,
c
k
+
1
,...,
c
m
i
thatincludes
every
classchosenbythegreedyalgorithm.Butthis
isimpossibleunless
k
=
m
;ifsomeclass
c
k
+
1
doesnotcon˛ictwithanyofthe
˝rst
k
greedyclasses,thenthegreedyalgorithmwouldchoosemorethan
k
classes!
…
4.3GeneralPattern
Thebasicstructureofthiscorrectnessproofisexactlythesameasforthe
taproblem:aninductiveexchangeargument.
‹
Assumethatthereisanoptimalsolutionthatisdi˙erentfromthegreedy
solution.
‹
Findthedi˙erencebetweenthetwosolutions.
164

4.4.HuffmanCodes
‹
Arguethatwecanexchangetheoptimalchoiceforthegreedychoicewithout
makingthesolutionworse(althoughtheexchangemightnotmakeitbetter).
Thisargumentimpliesbyinductionthatsomeoptimalsolution
contains
the
entiregreedysolution,andtherefore
equals
thegreedysolution.Sometimes,as
intheschedulingproblem,anadditionalstepisrequiredtoshownooptimal
solution
strictly
improvesthegreedysolution.
4.4HuffmanCodes
A
binarycode
assignsastringof0sand1stoeachcharacterinthealphabet.A
binarycodeis

ifnocodeisapre˝xofanyother.(Confusingly,
freecodesarealsocommonlycalled
pre˝xcodes
.)ASCIIandUnicode's
UTFarebothbinarycodes.Morsecodeisabinarycodewith
symbols
‹
andbutitis
not
becausethecodefor
E
(
‹
)isapre˝x
ofthecodesfor
I
(
‹‹
),
S
(
‹‹‹
),and
H
(
‹‹‹‹
).
3
Anybinarycodecanbevisualizedasabinarytreewiththe
encodedcharactersstoredattheleaves.Thecodewordforanysymbolisgiven
bythepathfromtheroottothecorrespondingleaf;
0
forleft,
1
forright.Thus,
thelengthofanysymbol'scodewordisthedepthofthecorrespondingleafin
thecodetree.Althoughtheyaresuper˝ciallysimilar,binarycodetreesare
not
binarysearchtrees;wedon'tcareatallabouttheorderofsymbolsattheleaves.
Supposewewanttoencodeamessagewritteninan
n
alphabet
sothattheencodedmessageisasshortaspossible.Speci˝cally,givenanarray
offrequencycounts
f
[
1..
n
]
,wewanttocomputeabinarycodethat
minimizesthetotalencodedlengthofthemessage:
n
X
i
=
1
f
[
i
]

depth
(
i
)
.
Thisisexactlythesamecostfunctionweconsideredforoptimizingbinary
searchtrees,buttheoptimizationproblemisdi˙erent,becausecodetreesare
notrequiredtokeepthekeysinanyparticularorder.
3
Forthisreason,Morsecodeisarguablybetterdescribedasa
ternary
code,with
threesymbols:
‹
,andpause.Alternatively,Morsecodecanbeconsidereda
binarycode,withonebeatofsound/light/current/highvoltage/smoke/gas(
—
)andonebeat
ofsilence/darkness/ground/lowvoltage/air/liquid(
…
)asthetwosymbols.Theneachis
encodedas
—…
,eachas
———…
,andeachpauseas
……
.InstandardMorsecode,each
letterisfollowedbyonepause,andeachwordisfollowedbytwoadditionalpauses;however,
…
sattheendoftheentirecodedmessageareomitted.Forexample,thestring
MORSECODE
is
unambiguouslyencodedasthefollowingbitstring:
———…———………———…———…———………—…———………—…—…—………—…………………———…—…———…—………———…———…———………———…—…—………—
.
165

4.GreedyAlgorithms
In1951,asaPhDstudentatMIT,DavidHu˙mandevelopedthefollowing
greedyalgorithmtoproducesuchanoptimalcode:
4
Huffman:
Mergethetwoleastfrequentlettersandrecurse.
Hu˙man'salgorithmisbestillustratedthroughanexample.Supposewewant
toencodethefollowinghelpfullyselfvesentence,discoveredbyLee
Sallows:
5
Thissentencecontainsthreea's,threec's,twod's,twenty-sixe's,˙vef's,three
g's,eighth's,thirteeni's,twol's,sixteenn's,nineo's,sixr's,twenty-sevens's,
twenty-twot's,twou's,˙vev's,eightw's,fourx's,˙vey's,andonlyonez.
Tokeepthingssimple,let'signorethefortourspaces,nineteenapostrophes,
nineteencommas,threehyphens,andonlyoneperiod,andencodeonlythe
letters,asthoughthemessagewerewrittenin
scriptiocontinua
:
THISSENTENCECONTAINSTHREEASTHREECSTWODSTWENTYSIXESFIVEFST
HREEGSEIGHTHSTHIRTEENISTWOLSSIXTEENNSNINEOSSIXRSTWENTYSEV
ENSSTWENTYTWOTSTWOUSFIVEVSEIGHTWSFOURXSFIVEYSANDONLYONEZ
6
HereisthefrequencytableforSallows'sentence:
A
C
D
E
F
G
H
I
L
N
O
R
S
T
U
V
W
X
Y
Z
3322653813216962722258451
Hu˙man'salgorithmpicksoutthetwoleastfrequentletters,breakingties
thiscase,say,
Z
and
D
mergesthemtogetherintoasingle
4
Hu˙manwasastudentinaninformationtheoryclasstaughtbyRobertFano,whowas
aclosecolleagueofClaudeShannon,thefatherofinformationtheory.FanoandShannon
hadpreviouslydevelopedadi˙erentgreedyalgorithmforproducingpre˝xplitthe
frequencyarrayintotwosubarraysasevenlyaspossible,andthenrecursivelybuildacodefor
eachsubarrauttheseFanhannoncodeswereknownnottobeoptimal.Fanoposedthe
problemof˝ndinganoptimalpre˝xcodetohisclass.Hu˙mandecidedtosolvetheproblemas
aclassproject,insteadoftakinga˝nalexam,notrealizingthattheproblemwasopen,orthat
FanoandShannonhadalreadytriedandfailedtosolveit.Afterseveralmonthsoffruitlesse˙ort,
Hu˙maneventuallygaveupanddecidedtotakethe˝nalexamafterall.Ashewasthrowinghis
notesinthetrash,thesolutiondawnedonhim.Hu˙manwouldlaterdescribetheepiphanyas
absolutelightningofsuddenrealizatio
5
Thissentencewas˝rstreportedbyAlexanderDewdneyinhisOctober1984omputer
Recreatiocolumnin
Scienti˝cAmerican
.Sallowshimselfpublishedtheremarkablestoryof
itsdiscoveryin1985,alongwithseveralotherselfvesentences;youcan˝ndSallows'
paperon
hiswebsite
.FrustratedwiththeslowprogressofhiscoderunningonaVAX11/780,
Sallowsdesignedandbuiltdedicatedhardwaretoperformaorcesearchforselfve
sentenceswithvarious˛avortextpangramhas...sentencecontainsexactly...
andsoon).Carefultheoreticalanalysislimitedthesearchspacetojustoversixbillionpossibilities,
whichhisPangramMachineenumeratedinjustundertwohours.
6
...andhetalkedforfortveminutes,andnobodyunderstoodawordthathesaid,butwe
hadfun˝llin'outtheformsandplayin'withthepencilsonthebenchthere.
166

4.4.HuffmanCodes
newcharacter
DZ
withfrequency
3
.Thisnewcharacterbecomesaninternal
nodeinthecodetreeweareconstructing,with
Z
and
D
asitschildren;it
doesn'tmatterwhichchildiswhich.Thealgorithmthenrecursivelyconstructs
aHu˙mancodeforthenewfrequencytable
A
C
E
F
G
H
I
L
N
O
R
S
T
U
V
W
X
Y
DZ
332653813216962722258453
After19merges,all20lettershavebeenmergedtogether.Therecordofmerges
givesusourcodetree.Thealgorithmmakesanumberofarbitrarychoices;asa
result,thereareactuallyseveraldi˙erentHu˙mancodes.OnesuchHu˙man
codeisshownbelow;numbersinnoeafnodesarefrequenciesformerged
characters.Forexample,thecodefor
A
is
101000
,andthecodefor
S
is
111
.
EncodingSallows'sentencewiththisparticularHu˙mancodewouldyielda
bitstringthatstartslikeso:
100
T
0110
H
1011
I
111
S
111
S
110
E
010
N
100
T
110
E
010
N
101001
C
110
E
101001
C
0001
O
010
N
100
T

HereisthelistofcostsforencodingeachcharacterinSallows'sentence,along
withthatcharacter'scontributiontothetotallengthoftheencodedsentence:
char
A
C
D
E
F
G
H
I
L
N
O
R
S
T
U
V
W
X
Y
Z
freq
3322653813216962722258451
depth
66735644634533654557
total
181814782518325212483630816612253220257
Altogether,theencodedmessageis649bitslong.Di˙erentHu˙mancodes
encodethesamecharactersdi˙erently,possiblywithcodewordsofdi˙erent
length,buttheoveralllengthoftheencodedmessageisthesamefor
every
Hu˙mancode:649bits.
167

4.GreedyAlgorithms
GiventhesimplestructureofHu˙man'salgorithm,it'srathersurprisingthat
itproducesan
optimal
binarycode.
7
EncodingSallows'sentence
using
any
coderequiresatleast649bits!Fortunately,therecursive
structuremakesthisclaimeasytoproveusinganexchangeargument,similar
toourearlieroptimalityproofs.Westartbyprovingthatthealgorithm'svery
˝rstchoiceiscorrect.
Lemma4.5.
Let
x
and
y
bethetwoleastfrequentcharacters(breakingties
betweenequallyfrequentcharactersarbitrarily).Thereisanoptimalcodetree
inwhich
x
and
y
aresiblings.
Proof:
I'llactuallyproveastrongerstatement:Thereisanoptimalcodein
which
x
and
y
aresiblings
and
havethelargestdepthofanyleaf.
Let
T
beanoptimalcodetree,andsupposethistreehasdepth
d
.Because
T
isafullbinarytree,ithasatleasttwoleavesatdepth
d
thataresiblings.(Verify
thisclaimbyinduction!)Supposethosetwoleavesare
not
x
and
y
,butsome
othercharacters
a
and
b
.
Let
T
0
bethecodetreeobtainedbyswapping
x
and
a
,andlet

=
d

depth
T
(
x
)
.Thisswapincreasesthedepthof
x
by

anddecreasesthedepth
of
a
by

,so
cost
(
T
0
)=
cost
(
T
)+


(
f
[
x
]

f
[
a
])
.
Ourassumptionthat
x
isoneofthetwoleastfrequentcharactersbut
a
isnot
implies
f
[
x
]

f
[
a
]
,andourassumptionthat
a
hasmaximumdepthimplies


0
.Itfollowsthat
cost
(
T
0
)

cost
(
T
)
.Ontheotherhand,
T
isanoptimal
codetree,sowemustalsohave
cost
(
T
0
)

cost
(
T
)
.Weconcludethat
T
0
is
also
anoptimalcodetree.
Similarly,swapping
y
and
b
mustgiveyetanotheroptimalcodetree.Inthis
˝naloptimalcodetree,
x
and
y
aremaximsiblings,asrequired.
…
NowoptimalityisguaranteedbyourdearfriendtheRecursionFairy!Our
recursiveargumentreliesonthefollowingnoandardrecursivede˝nition:
Afullbinarytreeiseitherasinglenode,orafullbinarytreewheresomeleafhas
beenreplacedbyaninternalnodewithtwoleafchildren.
Theorem4.6.
EveryHu˙mancodeisanoptimalbinarycode.
Proof:
Ifthemessagehasonlyoneortwodistinctcharacters,thetheoremis
trivial,soassumeotherwise.
Let
f
[
1..
n
]
betheoriginalinputfrequencies,andassumewithoutlossof
generalitythat
f
[
1
]
and
f
[
2
]
arethetwosmallestfrequencies.Tosetupthe
7
ItwascertainlysurprisingtobothHu˙manandFano!
168

4.4.HuffmanCodes
recursivesubproblem,de˝ne
f
[
n
+
1
]=
f
[
1
]+
f
[
2
]
.Ourearlierexchange
argumentimpliesthat
1
and
2
are(deepest)siblingsinsomeoptimalcodefor
f
[
1..
n
]
.
Let
T
0
betheHu˙mantreefor
f
[
3..
n
+
1
]
;theinductivehypothesisimplies
that
T
0
isanoptimalcodetreeforthesmallersetoffrequencies.Toobtain
the˝nalcodetree
T
,wereplacetheleaflabeled
n
+
1
withaninternalnode
withtwochildren,labelled
1
and
2
.Iclaimthat
T
isoptimalfortheoriginal
frequencyarray
f
[
1..
n
]
.
Toprovethisclaim,wecanexpressthecostof
T
intermsofthecostof
T
0
asfollows.(Intheseequations,
depth
(
i
)
denotesthedepthoftheleaflabelled
i
ineither
T
or
T
0
;eachleafthatappearsinboth
T
and
T
0
hasthesamedepthin
bothtrees.)
cost
(
T
)=
n
X
i
=
1
f
[
i
]

depth
(
i
)
=
n
+
1
X
i
=
3
f
[
i
]

depth
(
i
)+
f
[
1
]

depth
(
1
)+
f
[
2
]

depth
(
2
)

f
[
n
+
1
]

depth
(
n
+
1
)
=
cost
(
T
0
)+(
f
[
1
]+
f
[
2
])

depth
(
T
)

f
[
n
+
1
]

(
depth
(
T
)

1
)
=
cost
(
T
0
)+
f
[
1
]+
f
[
2
]+(
f
[
1
]+
f
[
2
]

f
[
n
+
1
])

(
depth
(
T
)

1
)
=
cost
(
T
0
)+
f
[
1
]+
f
[
2
]
Thisequationimpliesthatminimizingthecostof
T
isequivalenttominimizing
thecostof
T
0
;inparticular,attachingleaveslabeled
1
and
2
totheleafin
T
0
labeled
n
+
1
givesanoptimalcodetreefortheoriginalfrequencies.
…
Toe˚cientlyconstructaHu˙mancode,wekeepthecharactersinapriority
queue,usingthecharacterfrequenciesaspriorities.Wecanrepresentthecode
treeasthreearraysofindices,listingthe
L
eftand
R
ightchildrenandthe
P
arent
ofeachnode.Theleavesofthe˝nalcodetreearenodesatindices
1
through
n
,
andtherootisthenodewithindex
2
n

1
.Pseudocodeforthealgorithmis
showninFigure
4.4
.
BuildHuffman
performs
O
(
n
)
prioriteueoperations:
exactly
2
n

1
Insert
sand
2
n

2
ExtractMin
s.Ifweimplementthepriority
queueasastandardbinaryheap,eachoftheseoperationsrequires
O
(
log
n
)
time,andthustheentirealgorithmrunsin
O
(
n
log
n
)
time
.
Finally,simplealgorithmstoencodeanddecodemessagesusinga˝xed
Hu˙mancodeareshowninFigure
4.5
;bothalgorithmsrunin
O
(
m
)
time,
where
m
isthelengthoftheencodedmessage.
169

4.GreedyAlgorithms
BuildHuffman
(
f
[
1..
n
])
:
for
i
 
1
to
n
L
[
i
]
 
0
;
R
[
i
]
 
0
Insert
(
i
,
f
[
i
])
for
i
 
n
to
2
n

1
x
 
ExtractMin
()
hh
˙ndtworarestsymbols
ii
y
 
ExtractMin
()
f
[
i
]
 
f
[
x
]+
f
[
y
]
hh
mergeintoanewsymbol
ii
Insert
(
i
,
f
[
i
])
L
[
i
]
 
x
;
P
[
x
]
 
i
hh
updatetreepointers
ii
R
[
i
]
 
y
;
P
[
y
]
 
i
P
[
2
n

1
]
 
0
Figure4.4.
BuildingaHuffmancode.
HuffmanEncode
(
A
[
1..
k
])
:
m
 
1
for
i
 
1
to
k
HuffmanEncodeOne
(
A
[
i
])
HuffmanEncodeOne
(
x
)
:
if
x
<
2
n

1
HuffmanEncodeOne
(
P
[
x
])
if
x
=
L
[
P
[
x
]]
B
[
m
]
 
0
else
B
[
m
]
 
1
m
 
m
+
1
HuffmanDecode
(
B
[
1..
m
])
:
k
 
1
v
 
2
n

1
for
i
 
1
to
m
if
B
[
i
]=
0
v
 
L
[
v
]
else
v
 
R
[
v
]
if
L
[
v
]=
0
A
[
k
]
 
v
k
 
k
+
1
v
 
2
n

1
Figure4.5.
EncodinganddecodingalgorithmsforHuffmancodes
4.5StableMatching
Everyyear,thousandsofnewdoctorsmustobtaininternshipsathospitalsaround
theUnitedStates.Duringthe˝rsthalfofthe20thcentury,competitionamong
hospitalsforthebestdoctorsledtoearlierandearliero˙ersofinternships,
sometimesasearlyasthesecondyearofmedicalschool,alongwithtighter
deadlinesforacceptance.Inthe1940s,medicalschoolsagreednottorelease
informationuntilacommondateduringtheirstudents'fourthyear.Inresponse,
hospitalsbegandemandingfasterdecisions.By1950,hospitalswouldregularly
calldoctors,o˙ertheminternships,anddemand
immediate
responses.Interns
wereforcedtogambleiftheiricehospitalcalledandrisk
losingabetteropportunitylater,orrejectandriskhavingnopositionatall.
8
8
TheAmericanacademicjobmarketinvolvessimilargambles,atleastincomputerscience.
Somedepartmentsstartmakingo˙ersinFebruarywithtweekdecisiondeadlines;other
departmentsdon'tevenstartinterviewinguntilMarch;MITnotoriouslywaitsuntilMay,whenall
170

4.5.StableMatching
Finally,acentralclearinghouseforinternshipassignments,nowcalledthe
NationalResidentMatchingProgram(NRMP),wasestablishedintheearly1950s.
Eachyear,doctorssubmitarankedlistofallhospitalswheretheywouldaccept
aninternship,andeachhospitalsubmitsarankedlistofdoctorstheywould
acceptasinterns.TheNRMPthencomputesanmatchingbetweendoctors
andhospitalsthatsatis˝esthefollowing
stability
requirement.Amatchingis
unstable
ifthereisadoctor

andhospital
B
thatwouldbebothhappierwith
eachotherthanwiththeircurrentmatch;thatis,
‹

ismatchedwithsomeotherhospital
A
,eventhoughsheprefers
B
.
‹
B
ismatchedwithsomeotherdoctor

,eventhoughtheyprefer

.
Inthiscase,wecall
(

,
B
)
an
unstablepair
forthematching.Thegoalofthe
ResidentMatchisa
stablematching
,whichisamatchingwithnounstable
pairs.
Forsimplicity,I'llassumefromnowonthatthereareexactlythesame
numberofdoctorsandhospitals;eachhospitalo˙ersexactlyoneinternship;
eachdoctorranksallhospitalsandviceversa;and˝nally,therearenotiesin
thedoctors'orhospitals'rankings.
9
SomeBadIdeas
At˝rstglance,itisnotevenclearthatastablematchingalwaysexists!Certainly
not
every
matchingofdoctorsandhospitalsisstable.Supposetherearethree
doctors(Dr.Quincy,Dr.Rotwang,Dr.Shephard,representedbylowse
letters)andthreehospitals(ArkhamAsylum,BethlemRoyalHospital,and
CountyGeneralHospital,representedbyseletters),whorankeach
otherasfollows:
qrs
ACA
CAB
BBC
ABC
rsq
qqr
srs
Thematching
f
Aq
,
Br
,
Cs
g
isunstable,becauseArkhamwouldratherhire
Dr.RotwangthanDr.Quincy,andDr.RotwangwouldratherworkatArkham
thanatBedlam.
(
A
,
r
)
isanunstablepairforthismatching.
itsinterviewsareover,beforemaking
any
facultyo˙ers.Needlesstosay,themishmashofo˙er
datesanddecisiondeadlinescausestremendousstress,forcandidatesanddepartmentsalike.
Forsimilarreasons,since1965,mostAmericanuniversitieshaveagreedtoacommonApril15
deadlineforprospectivegraduatestudentstoaccepto˙ersof˝nancialsupport(andbyextension,
o˙ersofadmission).
9
Inreality,mosthospitalso˙ermultipleinternships,
eachdoctorranksonlyasubsetofthe
hospitalsandviceversa
,andtherearetypicallymoreinternshipsthaninteresteddoctors.And
thenitstartsgettingcomplicated.
171

4.GreedyAlgorithms
Onemightimagineusinganincrementalalgorithmthatstartswithan
arbitrarymatching,andthengreedilyperformsexchangestoresolveinstabilities.
Unfortunately,resolvingoneinstabilitycancreatenewones;infact,this
incrementalvcanleadtoanin˝niteloop.Forexample,ifwestart
withourearlierunstablematching
f
Aq
,
Br
,
Cs
g
,eachofthefollowingexchanges
resolvesoneunstablepair(indicatedoverthearrow),butthesequenceof
exchangesleadsbacktotheoriginalmatching:
10
f
Aq
,
Br
,
Cs
g
Ar
!f
Ar
,
Bq
,
Cs
g
Cr
!f
As
,
Bq
,
Cr
g
Cq
!f
As
,
Br
,
Cq
g
Aq
!f
Aq
,
Br
,
Cs
g
Alternatively,wemighttrythefollowingmundgreedyprotocol.In
eachround,everyunmatchedhospitalmakesano˙ertotheirfavoriteunmatched
doctor,theneveryunmatcheddoctorwithano˙eracceptstheirfavoriteo˙er.
It'snothardtoprovethatatleastonenewdoctspitalpairismatchedin
eachround,sothealgorithmalwaysendswithamatching.Fortheprevious
exampleinput,wealreadyhaveastablematching
f
Ar
,
Bs
,
Cq
g
attheendofthe
˝rstround!Butconsiderthefollowinginputinstead:
qrs
CAA
BCB
ABC
ABC
qqs
srr
rsq
Inthe˝rstround,Dr.Shephardacceptsano˙erfromCounty,andDr.Quincy
acceptsano˙erfromBedlam(rejectingArkham'so˙er),leavingonlyDr.
RotwangandArkhamunmatched.Thus,theprotocolendswiththematching
f
Ar
,
Bq
,
Cs
g
aftertworounds.Unfortunately,thismatchingisunstable;Arkham
andDr.Shephardprefereachothertotheirmatches.
TheBostonPoolandGale-ShapleyAlgorithms
In1952,theNRMPadoptedthestonPalgorithmtoassigninterns,so
namedbecauseithadbeenpreviouslyusedbyaregionalclearinghouseinthe
Bostonarea.Tenyearslater,DavidGaleandLloydShapleydescribedand
formallyanalyzedageneralizationoftheBostonPoolalgorithmandprovedthat
itcomputesastablematching.GaleandShapleyusedthemetaphorofcollege
admissions.Essentiallythesamealgorithmwasindependentlydevelopedby
ElliottPeransonin1972foruseinmedicalschooladmissions.Similaralgorithms
havesincebeenadoptedformanyothermatchingmarkets,includingfaculty
hiringinFrance,hiringofneweconomicsPhDsintheUnitedStates,university
admissioninGermany,publicschooladmissioninNewYorkandBoston,billet
assignmentsforUSNavysailors,andkidnprograms.
10
ThisexamplewasdiscoveredbyDonaldKnuth.
172

4.5.StableMatching
Shapleywasawardedthe2012NobelPrizeinEconomicsforhisresearchon
stablematchings,togetherwithAlvinRoth,whosigni˝cantlyextendedShapley's
workandusedittodevelopseveralreaorldexchanges.(Galedidnotshare
theprize,becausehediedin2008.)
Likeourlastfailedgreedyalgorithm,theGalhapleyalgorithmproceeds
inroundsuntileverypositionhasbeenaccepted.Eachroundhastwostages:
1.
Anarbitraryunmatchedhospital
A
o˙ersitspositiontothebestdoctor

(accordingtoA'spreferencelist)whohasnotalreadyrejectedit.
2.
If

isunmatched,she(tentatively)accepts
A
'so˙er.If

alreadyhas
amatchbutprefers
A
,sherejectshercurrentmatchand(tentatively)
acceptsthenewo˙erfrom
A
.Otherwise,

rejectsthenewo˙er.
Eachdoctorultimatelyacceptsthebesto˙erthatshereceives,accordingtoher
preferencelist.
11
Inshort,hospitalsmakeo˙ersgreedily,anddoctorsaccept
o˙ersgreedily.Thedoctors'abilitytorejecttheircurrentmatchesinfavorof
bettero˙ersisthekeytomakingthismutualgreedystrategywork.
Forexample,supposethattherearefourdoctors(Dr.Quincy,Dr.Rotwang,
Dr.Shephard,andDr.Tam)andfourhospitals(ArkhamAsylum,BethlemRoyal
Hospital,CountyGeneralHospital,andTheDharmaInitiative),whorankeach
otherasfollows:
qrst
AABD
BDAB
CCCC
DBDA
ABCD
trts
strr
rqsq
qsqt
Giventhesepreferencelistsasinput,theGalhapleyalgorithmmightproceed
asfollows:
1.
Arkhammakesano˙ertoDr.Tam.
2.
Bedlammakesano˙ertoDr.Rotwang.
3.
Countymakesano˙ertoDr.Tam,whorejectsherearliero˙erfrom
Arkham.
4.
Dharmamakesano˙ertoDr.Shephard.(Fromthispointon,thereis
onlyoneunmatchedhospital,sothealgorithmhasnomorechoices.)
5.
Arkhammakesano˙ertoDr.Shephard,whorejectsherearliero˙er
fromDharma.
11
The1952BostonPoolalgorithmisaspecialcaseoftheGalhapleyalgorithmthatexecutes
o˙ersinaparticularorder.Roughlyspeaking,eacho˙erismadebyahospital
X
whosefavorite
doctor(amongthosewhohaven'trejected
X
already)ranks
X
highest.Becausetheorderof
o˙ersdependsontheentiresetofpreferencelists,thisalgorithm
must
beexecutedbyacentral
authority;incontrast,theGalhapleyalgorithmdoesnotevenrequireeachparticipanttoknow
theirownpreferencesinadvance,aslongastheybehaveconsistentlywithsome˝xedrankings.
173

4.GreedyAlgorithms
6.
Dharmamakesano˙ertoDr.Rotwang,whorejectsherearliero˙erfrom
Bedlam.
7.
Bedlammakesano˙ertoDr.Tam,whorejectsherearliero˙erfrom
County.
8.
Countymakesano˙ertoDr.Rotwang,whorejectsit.
9.
Countymakesano˙ertoDr.Shephard,whorejectsit.
10.
Countymakesano˙ertoDr.Quincy.
Afterthetenthround,allpendingo˙ersareaccepted,andthealgorithmreturns
thematching
f
As
,
Bt
,
Cq
,
Dr
g
.Youcan(andshould)verifybybruteforcethat
thismatchingisstable,eventhoughnodoctorwashiredbyherfavoritehospital,
andnohospitalhiredtheirfavoritedoctor;infact,Countyendeduphiringtheir
least
favoritedoctor.Thisisnot
theonlystablematching
forthesepreference
lists;thematching
f
Ar
,
Bs
,
Cq
,
Dt
g
isalsostable.
RunningTime
Analyzingthenumberofo˙ersperformedbythealgorithmisrelatively
forward(whichiswhywe'redoingit˝rst).Eachhospitalmakesano˙erto
eachdoctoratmostonce,sothealgorithmmakesatmost
n
2
o˙ers.
Toanalyzetheactual
runningtime
,however,weneedtospecifythealgorithm
inmoredetail.Howarethepreferencelistsgiventothealgorithm?Howdoes
thealgorithmdecidewhetheranyhospitalisunmatched,andifso,howdoes
it˝ndanunmatchedhospital?Howdoesthealgorithmstorethetentative
matchings?Howdoesthealgorithmdecidewhetheradoctorprefershernew
o˙ertohercurrentmatch?Mostfundamentally:
Howdoesthealgorithm
actuallyrepresentdoctorsandhospitals?
Onepossibilityistorepresenteachdoctorandhospitalbyauniqueinteger
between
1
and
n
,andtorepresentpreferencesastwoarrays
Dpref
[
1..
n
,1..
n
]
and
Hpref
[
1..
n
,1..
n
]
,where
Dpref
[
i
,
r
]
representsthe
r
thhospitalindoctor
i
'spreferencelist,and
HPref
[
j
,
r
]
representsthe
r
thdoctorinhospital
j
's
preferencelist.Withtheinputinthisform,theBostonPoolalgorithmcan
executeeacho˙erinconstanttime,aftersomeinitialpreprocessing;theoverall
implementationrunsin
O
(
n
2
)
time
.Weleavetheremainingdetailsas
a
straightforwardexercise
.
Asomewhatharderexercise
istoprovethatthereareinputs(andchoicesof
whomakeso˙erswhen)thatforce

(
n
2
)
o˙erstobemadebeforethealgorithm
halts.Thus,our
O
(
n
2
)
upperboundonthewserunningtimeis
tight
.
Correctness
Butwhyisthealgorithm
correct
atall?Howdoweknowthatitalwayscomputes
astablematching,or
any
completematchingforthatmatter?
174

4.5.StableMatching
Onceadoctorreceivesano˙er,shehasatleastatentativematchforthe
restoftime.Equivalently,ifanydoctorisunmatched,thennohospitalhas
o˙eredthatdoctorajob,whichimpliesthatthehospitalshavenotexhausted
theirpreferencelists.Itfollowsthatwhenthealgorithmterminates(afterat
most
n
2
rounds),everydoctorismatched,andthereforeeverypositionis˝lled.
Inotherwords,thealgorithmalwayscomputesaperfectmatchingbetween
doctorsandhospitals.(Whew!)Itremainsonlytoprovethattheresulting
matchingisstable.
Supposethealgorithmmatchessomedoctor

tosomehospital
A
,even
thoughsheprefersanotherhospital
B
.Becauseeverydoctoracceptsthebest
o˙ershereceives,

receivednoo˙ershelikedmorethan
A
;inparticular,
B
nevermadeano˙erto

.Ontheotherhand,
B
madeo˙erstoeverydoctor
theypreferovertheir˝nalmatch

.Itfollowsthat
B
prefers

over

,which
means
(

,
B
)
is
not
anunstablepair.Weconcludethattherearenounstable
pairs;thematchingisstable!
Optimality!
Surprisingly,thecorrectnessoftheGalhapleyalgorithmdoesnotdepend
onwhichhospitalmakesitso˙erineachround.Infact,nomatterwhich
unassignedhospitalmakesano˙erineachround,
thealgorithmalwayscomputes
thesamematching
!Let'ssaythat

isa
feasible
doctorfor
A
ifthereisastable
matchingthatassignsdoctor

tohospital
A
.
Lemma4.7.
DuringtheGalhapleyalgorithm,eachhospital
A
isrejected
onlybydoctorsthatareinfeasiblefor
A
.
Proof:
Weprovethelemmabyinductiononthenumberofrounds.Consider
anarbitraryroundofthealgorithm,inwhichdoctor

rejectsonehospital
A
foranotherhospital
B
.Therejectionimpliesthat

prefers
B
to
A
.Eachdoctor
thatappearshigherthan

in
B
'spreferencelistalreadyrejected
B
inanearlier
roundandtherefore,bytheinductivehypothesis,isinfeasiblefor
B
.
Nowconsideranarbitrarymatching(ofthesamedoctorsandhospitals)
thatassigns

to
A
.Wealreadyestablishedthat

prefers
B
to
A
.If
B
prefers

toitspartner,thematchingisunstable.Ontheotherhand,if
B
prefersits
partnerto

,then(byourearlierargument)itspartnerisinfeasible,andagain
thematchingisunstable.Weconcludethatthereisnostablematchingthat
assigns

to
A
.
…
Nowlet
best
(
A
)
denotethe
feasible
doctoron
A
'spreference
list.Lemma
4.7
impliesthateverydoctorthat
A
preferstoits˝nalmatchis
infeasiblefor
A
.Ontheotherhand,the˝nalmatchingisstable,sothedoctor
assignedto
A
mustbefeasiblefor
A
.Thefollowingresultisnowimmediate:
175

4.GreedyAlgorithms
Corollary4.8.
TheGalhapleyalgorithmmatches
best
(
A
)
with
A
,forevery
hospital
A
.
Inotherwords,theGalhapleyalgorithmcomputesthe
bestpossible
stable
matchingfromthehospitals'pointofview.Itturnsoutthatthismatchingis
alsothe
worst
possiblefromthedoctors'pointofview!Let
worst
(

)
denotethe
lowfeasiblehospitalondoctor

'spreferencelist.
Corollary4.9.
TheGalhapleyalgorithmmatches

with
worst
(

)
,forevery
doctor

.
Proof:
SupposeGaleandShapleyassigndoctor

tohospital
A
;weneedto
showthat
A
=
worst
(

)
.Consideranarbitrarystablematchingwhere
A
is
not
matchedwith

butwithanotherdoctor

.Thepreviouscorollaryimpliesthat
A
prefers

=
best
(
A
)
to

.Becausethematchingisstable,

musttherefore
preferherassignedhospitalto
A
.Thisargumentworksfor
any
stablematching,
so

prefers
every
otherfeasiblematchto
A
;inotherwords,
A
=
worst
(

)
.
…
Asubtleconsequenceofthesetwocorollaries,discoveredbyLesterDubins
andDavidFreedmanin1981,isthatadoctorcanpotentiallyimprovehermatch
bylyingaboutherpreferences,butahospitalcannot.(However,asetofhospitals
cancolludesothat
some
oftheirmatchesimprove.)Partlyforthisreason,the
NationalResidencyMatchingProgramreverseditsmatchingalgorithmin
1998,sothatpotentialresidentso˙ertoworkforhospitals,accordingtotheir
preferenceorders,andeachhospitalacceptsitsbesto˙er.Thus,thenew
algorithmcomputesthebestpossiblestablematchingforthedoctors,andthe
worstpossiblestablematchingforthehospitals.Inpractice,however,this
reversalalteredlessthan1%oftheresidents'matches.AsfarasIknow,the
precisee˙ectofthischangeonthe
patients
isanopenproblem.
Exercises
Caveatlector:Someoftheseexercises
cannot
besolvedusinggreedy
algorithms!
Wheneveryoudescribeandanalyzeagreedyalgorithm,you
must
alsoincludeaproofthatyouralgorithmiscorrect;thisproofwilltypicallytake
theformofanexchangeargument.Theseproofsareespeciallyimportantin
classes(likemine)thatdo
not
normallyrequireproofsofcorrectness.
1.
The
GreedySchedule
algorithmwedescribedfortheclassscheduling
problemisnottheonlygreedystrategywecouldhavetried.Foreachof
thefollowingalternativegreedystrategies,eitherprovethattheresulting
algorithmalwaysconstructsanoptimalschedule,ordescribeasmallinput
176

Exercises
exampleforwhichthealgorithmdoes
not
produceanoptimalschedule.
Assumethatallalgorithmsbreaktiesarbitrarily(thatis,inamannerthat
iscompletelyoutofyourcontrol).
[Hint:
Three
ofthesealgorithmsare
actuallycorrect.]
(a)
Choosethecourse
x
that
endslast
,discardclassesthatcon˛ictwith
x
,
andrecurse.
(b)
Choosethecourse
x
that
starts˝rst
,discardallclassesthatcon˛ict
with
x
,andrecurse.
(c)
Choosethecourse
x
that
startslast
,discardallclassesthatcon˛ict
with
x
,andrecurse.
(d)
Choosethecourse
x
with
shortestduration
,discardallclassesthat
con˛ictwith
x
,andrecurse.
(e)
Chooseacourse
x
that
con˛ictswiththefewestothercourses
,discardall
classesthatcon˛ictwith
x
,andrecurse.
(f)
Ifnoclassescon˛ict,choosethemall.Otherwise,discardthecourse
with
longestduration
andrecurse.
(g)
Ifnoclassescon˛ict,choosethemall.Otherwise,discardacoursethat
con˛ictswiththemostothercourses
andrecurse.
(h)
Let
x
betheclasswiththe
earlieststarttime
,andlet
y
betheclasswith
the
secondearlieststarttime
.
‹
If
x
and
y
aredisjoint,choose
x
andrecurseoneverythingbut
x
.
‹
If
x
completelycontains
y
,discard
x
andrecurse.
‹
Otherwise,discard
y
andrecurse.
(i)
Ifanycourse
x
completelycontainsanothercourse,discard
x
and
recurse.Otherwise,choosethecourse
y
that
endslast
,discardallclasses
thatcon˛ictwith
y
,andrecurse.
2.
Nowconsideraweightedversionoftheclassschedulingproblem,where
di˙erentclasseso˙erdi˙erentnumberofcredithours(totallyunrelated
tothedurationoftheclasslectures).Yourgoalisnowtochooseasetof
non˛ictingclassesthatgiveyouthelargestpossiblenumberofcredit
hours,givenarraysofstarttimes,endtimes,andcredithoursasinput.
(a)
Provethatthegreedyalgorithmdescribedatthebeginningofthis
chasetheclassthatends˝rstand
not
always
returnanoptimalschedule.
(b)
Provethat
none
ofthegreedyalgorithmsdescribedinExercise
1
always
returnanoptimalschedule.
[Hint:SolveExercise
1
˝rst;thealgorithms
thatdon'tworktheredon'tworkhere,either.]
177

4.GreedyAlgorithms
(c)
Describeandanalyzeanalgorithmthatalwayscomputesanoptimal
schedule.
[Hint:Youralgorithmwillnotbegreedy.]
3.
Let
X
beasetof
n
intervalsontherealline.Wesaythatasubsetofintervals
Y

X
covers
X
iftheunionofallintervalsin
Y
isequaltotheunionofall
intervalsin
X
.The
size
ofacoverisjustthenumberofintervals.
Describeandanalyzeane˚cientalgorithmtocomputethesmallest
coverof
X
.Assumethatyourinputconsistsoftwoarrays
L
[
1..
n
]
and
R
[
1..
n
]
,representingtheleftandrightendpointsoftheintervalsin
X
.If
youuseagreedyalgorithm,youmustprovethatitiscorrect.
Asetofintervals,withacover(shaded)ofsize
7
.
4.
Let
X
beasetof
n
intervalsontherealline.Wesaythataset
P
ofpoints
stabs
X
ifeveryintervalin
X
containsatleastonepointin
P
.Describeand
analyzeane˚cientalgorithmtocomputethesmallestsetofpointsthat
stabs
X
.Assumethatyourinputconsistsoftwoarrays
L
[
1..
n
]
and
R
[
1..
n
]
,
representingtheleftandrightendpointsoftheintervalsin
X
.Asusual,If
youuseagreedyalgorithm,youmustprovethatitiscorrect.
Asetofintervalsstabbedbyfourpoints(shownhereasverticalsegments)
5.
Let
X
beasetof
n
intervalsontherealline.A
propercoloring
of
X
assignsa
colortoeachinterval,sothatanytwooverlappingintervalsareassigned
di˙erentcolors.Describeandanalyzeane˚cientalgorithmtocomputethe
minimumnumberofcolorsneededtoproperlycolor
X
.Assumethatyour
inputconsistsoftwoarrays
L
[
1..
n
]
and
R
[
1..
n
]
,representingtheleftand
rightendpointsoftheintervalsin
X
.Asusual,ifyouuseagreedyalgorithm,
youmustprovethatitiscorrect.
Apropercoloringofasetofintervalsusing˙vecolors.
178

Exercises
6.
(a)
Foreveryinteger
n
,˝ndafrequencyarray
f
[
1..
n
]
whoseHu˙man
codetreehasdepth
n

1
,suchthatthelargestfrequencyisassmallas
possible.
(b)
Supposethetotallength
N
ofthe
unencoded
messageisboundedbya
polynomialinthealphabetsize
n
.ProvethattheanyHu˙mantreefor
thefrequencies
f
[
1..
n
]
hasdepth
O
(
log
n
)
.
ª
7.
Callafrequencyarray
f
[
1..
n
]

vy
ifitsatis˝estwoconditions:
‹
f
[
1
]
>
f
[
i
]
forall
i
>
1
;thatis,
1
isthe
unique
mostfrequentsymbol.
‹
f
[
1
]


P
n
i
=
1
f
[
i
]
;thatis,atleastan

fractionofthesymbolsare
1
s.
Findthelargestrealnumber

suchthatineveryHu˙mancodeforevery

vyfrequencyarray,symbol
1
isrepresentedbyasinglebit.
[Hint:
Firstprovethat
1
=
3



1
=
2
.]
8.
Describeandanalyzeanalgorithmtocomputeanoptimal
ternary

codeforagivenarrayoffrequencies
f
[
1..
n
]
.Don'tforgettoprovethat
youralgorithmiscorrectfor
all
n
.
9.
DescribeindetailhowtoimplementtheGalhapleystablematching
algorithm,sothatthewserunningtimeis
O
(
n
2
)
,asclaimedearlier
inthischapter.
10.
(a)
ProvethatitispossiblefortheGalhapleyalgorithmtoperform

(
n
2
)
o˙ersbeforetermination.(Youneedtodescribebothasuitableinput
andasequenceof

(
n
2
)
valido˙ers.)
(b)
Describeforanyinteger
n
asetofpreferencesfor
n
doctorsand
n
hospitalsthatforcestheGalhapleyalgorithmtoexecute

(
n
2
)
rounds,
nomatterwhichvalidproposalismadeineachround
.
[Hint:Part(b)
impliespart(a).]
11.
Describeandanalyzeane˚cientalgorithmtodeterminewhetheragiven
setofhospitalanddoctorpreferenceshastoa
unique
stablematching.
12.
Considerageneralizationofthestablematchingproblem,wheresome
doctorsdonotrankallhospitalsandsomehospitalsdonotrankalldoctors,
andadoctorcanbeassignedtoahospitalonlyifeachappearsintheother's
preferencelist.Inthiscase,therearethreeadditionalunstablesituations:
‹
Amatchedhospitalprefersanunmatcheddoctortoitsassignedmatch.
‹
Amatcheddoctorprefersanunmatchedhospitaltoherassignedmatch.
‹
Anunmatcheddoctorandanunmatchedhospitalappearineachother's
preferencelists.
179

4.GreedyAlgorithms
Astablematchinginthissettingmayleavesomedoctorsand/orhospitals
unmatched,eventhoughtheirpreferencelistsarenoy.Forexample,
ifeverydoctorlistsHarvardastheironlyacceptablehospital,andevery
hospitallistsDr.Houseastheironlyacceptableintern,thenonlyHouseand
Harvardwillbematched.
Describeandanalyzeane˚cientalgorithmthatcomputesastable
matchinginthismoregeneralsetting.
[Hint:Reducetoaninstance
whereeverydoctorrankseveryhospitalandviceversa,andtheninvoke
Galhapley.]
13.
TheScandinavianfurniturecompanyFürnihashired
n
driverstodeliver
n
identicalordersto
n
di˙erentaddressesinWilmington,Delaware.Each
driverhastheirownwablisheddeliveryroutethroughWilmington
thatvisitsall
n
addresses.Assumingtheyfollowtheirroutesastheyalways
do,twodriversnevervisitthesameaddressesatthesametime.
Inprinciple,eachofthe
n
driverscandelivertheirfurnituretoanyof
the
n
addresses,butthere'sacomplication.Oneofthedrivershassecretly
wiredproximitysensorsandexplosivestotheJohannshamnsofas(withthe
Strinnegreenstripepattern).Iftwosofasareeveratthesameaddressat
thesametime,bothwillexplode,destroyingboththedeliverytruckand
thebuildingatthataddress.Thiscanonlyhappenifonedriverdeliversan
ordertothataddress,andthenlateranotherdrivervisitsthatsameaddress
whilethefurnitureisstillontheirtruck
.
YourjobastheFürnidispatcheristoassigneachdrivertoadelivery
address.Describeanalgorithmtoassignaddressestodriverssothateachof
the
n
addressesreceivestheirfurnitureorderandtherearenoexplosions.
Forexample,supposeJack'sroutevisits537PaperStreetat6pmand
1888FranklinStreetat8pm,andMarla'sroutevisits537Paperat7pmand
1888Franklinat9pm.ThenJackshoulddeliverto1888Franklin,andMarla
shoulddeliverto537Paper;otherwise,therewouldbeanexplosionat1888
Franklinat8pm.(CuethePixies.)
[Hint:JackandMarlaareabitunstable.]
14.
Supposeyouareasimpleshopkeeperlivinginacountrywith
n
di˙erent
typesofcoins,withvalues
1
=
c
[
1
]
<
c
[
2
]
<

<
c
[
n
]
.(IntheU.S.,
forexample,
n
=
6
andthevaluesare
1
,
5
,
10
,
25
,
50
and
100
cents.)
Yourbelovedandbenevolentdictator,ElGeneralissimo,hasdecreedthat
wheneveryougiveacustomerchange,youmustusethesmallestpossible
numberofcoins,soasnottowearouttheimageofElGeneralissimolovingly
engravedoneachcoinbyservantsoftheRoyalTreasury.
(a)
IntheUnitedStates,thereisasimplegreedyalgorithmthatalways
resultsinthesmallestnumberofcoins:subtractthelargestcoinand
180

Exercises
recursivelygivechangefortheremainder.ElGeneralissimodoesnot
approveofAmericancapitalistgreed.Showthatthereisasetofcoin
valuesforwhichthegreedyalgorithmdoes
not
alwaysgivethesmallest
possibleofcoins.
(b)
NowsupposeElGeneralissimodecidestoimposeacurrencysystem
wherethecoindenominationsareconsecutivepowers
b
0
,
b
1
,
b
2
,...,
b
k
ofsomeinteger
b

2
.ProvethatdespiteElGeneralissimo'sdisapproval,
thegreedyalgorithmdescribedinpart(a)doesmakeoptimalchangein
thiscurrencysystem.
(c)
Describeandanalyzeane˚cientalgorithmtodetermine,givenatarget
amount
T
andasortedarray
c
[
1..
n
]
ofcoindenominations,thesmallest
numberofcoinsneededtomake
T
centsinchange.Assumethat
c
[
1
]=
1
,sothatitispossibletomakechangeforanyamount
T
.
15.
Supposeyouaregivenanarray
A
[
1..
n
]
ofintegers,eachofwhichmaybe
positive,negative,orzero.Acontiguoussubarray
A
[
i
..
j
]
iscalleda
positive
interval
ifthesumofitsentriesisgreaterthanzero.Describeandanalyze
analgorithmtocomputetheminimumnumberofpositiveintervalsthat
covereverypositiveentryin
A
.Forexample,giventhefollowingarrayas
input,youralgorithmshouldoutput
3
.Ifeveryentryintheinputarrayis
negative,youralgorithmshouldoutput
0
.
sum
=
2
z
}|
{
sum
=
1
z
}|
{
sum
=
7
z
}|
{
+
3

5
+
7

4
+
1

8
+
3

7
+
5

9
+
5

2
+
4
16.
Considerthefollowingprocess.Atalltimesyouhaveasinglepositive
integer
x
,whichisinitiallyequalto
1
.Ineachstep,youcaneither
increment
x
or
double
x
.Yourgoalistoproduceatargetvalue
n
.For
example,youcanproducetheinteger
10
infourstepsasfollows:
1
+
1
!
2

2
!
4
+
1
!
5

2
!
10
Obviouslyyoucanproduceanyinteger
n
usingexactly
n

1
increments,but
foralmostallvaluesof
n
,thisishorriblyine˚cient.Describeandanalyze
analgorithmtocomputethe
minimum
numberofstepsrequiredtoproduce
anygiveninteger
n
.
17.
Supposewehave
n
skierswithheightsgiveninanarray
P
[
1..
n
]
,and
n
skis
withheightsgiveninanarray
S
[
1..
n
]
.Describeane˚cientalgorithmto
assignaskitoeachskier,sothattheaveragedi˙erencebetweentheheight
ofaskierandherassignedskiisassmallaspossible.Thealgorithmshould
181

4.GreedyAlgorithms
computeapermutation
˙
suchthattheexpression
1
n
n
X
i
=
1


P
[
i
]

S
[
˙
(
i
)]


isassmallaspossible.
18.
Alicewantstothrowapartyandsheistryingtodecidewhotoinvite.She
has
n
peopletochoosefrom,andsheknowswhichpairsofthesepeople
knoweachother.Shewantstoinviteasmanypeopleaspossible,subjectto
twoconstraints:
‹
Foreachguest,thereshouldbeatleast˝veothergueststhattheyalready
know.
‹
Foreachguest,thereshouldbeatleast˝veothergueststhatthey
don't
alreadyknow.
Describeandanalyzeanalgorithmthatcomputesthelargestpossiblenumber
ofguestsAlicecaninvite,givenalistof
n
peopleandthelistofpairswho
knoweachother.
19.
Supposewearegiventwoarrays
C
[
1..
n
]
and
R
[
1..
n
]
ofpositiveintegers.
An
n

n
matrixof
0
sand
1
s
agreeswith
R
and
C
if,foreveryindex
i
,the
i
throwcontains
R
[
i
]
1
s,andthe
i
thcolumncontains
C
[
i
]
1
s.Describe
andanalyzeanalgorithmthateitherconstructsamatrixthatagreeswith
R
and
C
,orcorrectlyreportsthatnosuchmatrixexists.
20.
You'vejustacceptedajobfromElonMusk,deliveringburritosfromSan
FranciscotoNewYorkCity.YougettodriveaBurritveryVehicle
throughElon'snewTranscontinentalUndergroundBurritveryTube,
whichrunsinadirectlinebetweenthesetwocities.
12
YourBurritveryVehiclerunsonsinglsebatteries,whichmust
bereplacedafteratmost100miles.Theactualfuelisvirtuallyfree,but
thebatteriesareexpensiveandfragile,andthereforemustbeinstalledonly
byo˚cialmembersoftheTranscontinentalUndergroundBurritvery
VehicleeplacementTechnicians'Union.
13
Thus,evenifyoureplace
yourbatteryearly,youmuststillpayfullpriceforeachnewbatterytobe
installed.Moreover,yourVehicleistoosmalltocarrymorethanonebattery
atatime.
12
...andwhichwasclearlymodeledafterMaciejCegªowski's˝ctional
AlWeehauken
BurritoTunn
13
orastheycallthemselvesinGerman,DieTranskontinentaluntergrundburritolieferfahrz
batteriewechseltechnikervereinigung.
182

Exercises
ThereareseveralfuelingstationsalongtheTube;eachstationchargesa
di˙erentpriceforinstallinganewbattery.Beforeyoustartyourtrip,you
carefullyprinttheWikipediapagelistingthelocationsandpricesofevery
fuelingstationalongtheTube.Giventhisinformation,howdoyoudecide
thebestplacestostopforfuel?
Moreformally,supposeyouaregiventwoarrays
D
[
1..
n
]
and
C
[
1..
n
]
,
where
D
[
i
]
isthedistancefromthestartoftheTubetothe
i
thstation,and
C
[
i
]
isthecosttoreplaceyourbatteryatthe
i
thstation.Assumethatyour
tripstartsandendsatfuelingstations(so
D
[
1
]=
0
and
D
[
n
]
isthetotal
lengthofyourtrip),andthatyourcarstartswithanemptybattery(soyou
mustinstallanewbatteryatstation
1
).
(a)
Describeandanalyzeagreedyalgorithmto˝ndtheminimumnumber
ofrefuelingstopsneededtocompleteyourtrip.Don'tforgettoprove
thatyouralgorithmiscorrect.
(b)
Butwhatyoureallywanttominimizeisthetotal
cost
oftravel.Show
thatyourgreedyalgorithminpart(a)does
not
produceanoptimal
solutionwhenextendedtothissetting.
(c)
Describeane˚cientalgorithmtocomputethelocationsofthefuel
stationsyoushouldstopattominimizethetotalcostoftravel.
21.
You'vebeenhiredtostoreasequenceof
n
booksonshelvesinalibrary.The
orderofthebooksis˝xedbythecatalogingsystemandcannotbechanged;
eachshelfmuststoreacontiguousintervalofthegivensequenceofbooks.
Youaregiventwoarrays
H
[
1..
n
]
and
T
[
1..
n
]
,where
H
[
i
]
and
T
[
i
]
are
respectivelytheheightandthicknessofthe
i
thbookinthesequence.All
shelvesinthislibraryhavethesamelength
L
;thetotalthicknessofallbooks
onanysingleshelfcannotexceed
L
.
(a)
Supposeallthebookshavethesameheight
h
andtheshelveshaveheight
largerthan
h
,soeverybook˝tsoneveryshelf.Describeandanalyzea
greedyalgorithmtostorethebooksinasfewshelvesaspossible.
[Hint:
Thealgorithmisobvious,butwhyisitcorrect?]
(b)
Thatwasanicewarmup,butnowhere'stherealproblem.Infactthe
bookshavedi˙erentheights,butyoucanadjusttheheightofeachshelf
tomatchthetallestbookonthatshelf.(Inparticular,youcanchange
theheightofanyemptyshelftozero.)Nowyourtaskistostorethe
bookssothatthesumoftheheightsoftheshelvesisassmallaspossible.
Showthatyourgreedyalgorithmfrompart(a)does
not
alwaysgivethe
bestsolutiontothisproblem.
(c)
Describeandanalyzeanalgorithmto˝ndthebestmatchingbetween
booksandshelvesasdescribedinpart(b).
183

4.GreedyAlgorithms
22.
Astring
w
ofparentheses
(
and
)
is
balanced
ifitsatis˝esoneofthe
followingconditions:
‹
w
istheemptystring.
‹
w
=
(
x
)
forsomebalancedstring
x
‹
w
=
xy
forsomebalancedstrings
x
and
y
Forexample,thestring
w
=
(
(
(
)
)
(
)
(
)
)
(
(
)
(
)
)
(
)
isbalanced,because
w
=
xy
,where
x
=
(
(
(
)
)
(
)
(
)
)
and
y
=
(
(
)
(
)
)
(
)
.
(a)
Describeandanalyzeanalgorithmtodeterminewhetheragivenstring
ofparenthesesisbalanced.
(b)
Describeandanalyzeagreedyalgorithmtocomputethelengthofa
longestbalancedsubsequenceofagivenstringofparentheses.Asusual,
don'tforgettoproveyouralgorithmiscorrect.
Forbothproblems,yourinputisanarray
w
[
1..
n
]
,whereforeach
i
,either
w
[
i
]=
(
or
w
[
i
]=
)
.Bothofyouralgorithmsshouldrunin
O
(
n
)
time.
23.
OnedayAlexgottiredofclimbinginagymanddecidedtotakealarge
groupofclimberfriendsoutsidetoclimb.Theywenttoaclimbingarea
withahugewideboulder,notverytall,withseveralmarkedhandandfoot
holds.Alexquicklydeterminedanllowsetofmovesthathergroupof
friendscanperformtogetfromoneholdtoanother.
Theoverallsystemofholdscanbedescribedbyarootedtree
T
with
n
vertices,whereeachvertexcorrespondstoaholdandeachedgecorresponds
toanallowedmovebetweenholds.Theclimbingpathsconvergeastheygo
uptheboulder,leadingtoauniqueholdatthesummit,representedbythe
rootof
T
.
Alexandherfriends(whoareallexcellentclimbers)decidedtoplaya
game,whereasmanyclimbersaspossiblearesimultaneouslyontheboulder
andeachclimberneedstoperformasequenceof
exactly
k
moves.Each
climbercanchooseanarbitraryholdtostartfrom,andallmovesmustmove
awayfromtheground.Thus,eachclimbertracesoutapathof
k
edges
inthetree
T
,alldirectedtowardtheroot.However,notwoclimbersare
allowedtotouchthesamehold;thepathsfollowedbydi˙erentclimbers
cannotintersectatall.
(a)
Describeandanalyzeagreedyalgorithmtocomputethemaximum
numberofclimbersthatcanplaythisgame.Youralgorithmisgiven
184

Exercises
arootedtree
T
andaninteger
k
asinput,anditshouldcomputethe
largestpossiblenumberofdisjointpathsin
T
,whereeachpathhas
length
k
.Do
not
assumethat
T
isabinarytree.Forexample,giventhe
treebelowasinput,youralgorithmshouldreturntheinteger
8
.
Figure4.6.
Sevendisjointpathsoflength
k
=
3
.Thisis
not
thelargestsuchsetofpathsinthistree.
(b)
Nowsupposeeachvertexin
T
hasanassociated
reward
,andyourgoal
istomaximizethetotalrewardoftheverticesinyourpaths,insteadof
thetotalnumberofpaths.Showthatyourgreedyalgorithmdoes
not
alwaysreturntheoptimalreward.
(c)
Describeane˚cientalgorithmtocomputethemaximumpossiblereward,
asdescribedinpart(b).
24.
Congratulations!YouhavesuccessfullyconqueredCamelot,transforming
theformerbattlhereditarymonarchyintoanancalist
commune,wherecitizenstaketurnstoactasasortofexecutiv˚
feek,butwithallthedecisionsofthato˚cerrati˝edataspecial
eeklymeeting,byasimplemajorityinthecaseofpurelyinternala˙airs,
butbyatwmajorityinthecaseofmoremajor....
Asa˝nalsymbolicact,youordertheRoundTable(surprisingly,an
actualcirculartable)tobesplitintopizzwedgesanddistributedtothe
citizensofCamelotastrophies.Eachcitizenhassubmittedarequestforan
angularwedgeofthetable,speci˝edbytwoanglorexample:SirRobin
theBravemightrequestthewedgefrom
17.23

to
42

,andSirLancelot
thePuremightrequestthe
2

wedgefrom
359

to
1

.Eachcitizenwillbe
happyifandonlyiftheyreceive
precisely
thewedgethattheyrequested.
Unfortunately,someoftheserangesoverlap,sosatisfying
all
thecitizens'
requestsissimplyimpossible.Welcometopolitics.
Describeandanalyzeanalgorithmto˝ndthemaximumnumberof
requeststhatcanbesatis˝ed.
[Hint:Theoutputofyouralgorithmshould
notchangeifyourotatethetable.Donotassumethatanglesareintegers.]
185

4.GreedyAlgorithms
25.
Supposeyouarestandingina˝eldsurroundedbyseverallargeballoons.
YouwanttouseyourbrandnewAcmeBrandZac
TM
topopallthe
balloons,withoutmovingfromyourcurrentlocation.TheZac
TM
shootsaweredlaserbeam,whichpopsalltheballoonsithits.Since
eachshotrequiresenoughenergytopowerasmallcountryforayear,you
wantto˝reasfewshotsaspossible.
Figure4.7.
NineballoonspoppedbyfourshotsoftheZap-O-Matic
TM
The
minimumzap
problemcanbestatedmoreformallyasfollows.Given
aset
C
of
n
circlesintheplane,eachspeci˝edbyitsradiusandthe
(
x
,
y
)
coordinatesofitscenter,computetheminimumnumberofraysfromthe
originthatintersecteverycirclein
C
.Yourgoalisto˝ndane˚cient
algorithmforthisproblem.
(a)
Supposeitispossibletoshootaraythatdoesnotintersectanyballoons.
Describeandanalyzeagreedyalgorithmthatsolvestheminimumzap
probleminthisspecialcase.
[Hint:SeeExercise
4
.]
(b)
Describeandanalyzeagreedyalgorithmwhoseoutputiswithin
1
of
optimal.Thatis,if
m
istheminimumnumberofraysrequiredtohit
everyballoon,thenyourgreedyalgorithmmustoutputeither
m
or
m
+
1
.
(Ofcourse,youmustprovethisfact.)
(c)
Describeanalgorithmthatsolvestheminimumzapproblemin
O
(
n
2
)
time.
ª
(d)
Describeanalgorithmthatsolvestheminimumzapproblemin
O
(
n
log
n
)
time.
Assumeyouhaveasubroutinethattellsyoutherangeofanglesofraysthat
intersectsanarbitrarycircle
c
in
O
(
1
)
time.Thissubroutineisnotdi˚cult
towrite,butit'snottheinterestingpartoftheproblem.
186

[T]hedistributionsandpartitionsofknowledgearenotlikeseverallinesthatmeet
inoneangle,andsotouchbutinapoint,butarelikebranchesofatreethatmeetin
astem,whichhathadimensionandquantityofentirenessandcontinuancebefore
itcometodiscontinueandbreakitselfintoarmsandboughs.
FrancisBacon,
TheAdvancementofLearning
(1605)
Thusyousee,mostnobleSir,howthistypeofsolutionbearslittlerelationshipto
mathematics,andIdonotunderstandwhyyouexpectamathematicianto
produceit,ratherthananyoneelse.
LeonhardEuler,describingtheKönigsburgbridgeproblem
inalettertoCarlLeonhardGottliebEhler(April3,1736)
Well,yaturnleftbythe˙restationinthevillageandtaketheoldpostroadbythe
reservoirand...no,thatwon'tdo.
Besttocontinuestraightonbythetarroaduntilyoureachtheschoolhouseand
thenturnleftontheroadtoBennett'sLakeuntil...no,thatwon'tworkeither.
EastMillinocket,yasay?Cometothinkofit,youcan'tgettherefromhere.
RobertBryanandMarshallDodge,
BertandIandOtherStoriesfromDownEast
(1961)
5
BasicGraphAlgorithms
5.1IntroductionandHistory
Agraphisacollectionofofintegers,pairsofpeople,pairsof
cities,pairsofstars,pairsofcountries,pairsofscienti˝cpapers,pairsofweb
pages,pairsofgamepositions,pairsofrecursivesubproblems,evenpairs
ofgraphs.Mirroringthemostcommonmethodforvisualizinggraphs,the
underlyingobjectsbeingpairedareusuallycalled
vertices
or
nodes
,andthe
pairsthemselvesarecalled
edges
or
arcs
,butinfacttheobjectsandpairscan
beanythingatall.
Oneoftheearliestexamplesofgraphsare
roadnetworks
andmapsthereof.
Romanengineersconstructedanetworkofmorethan400000kmofpublicroads
acrossEurope,westernandcentralAsia,andnorthernAfricaduringtheheight
oftheRomanempire.Travelersontheroadnetworkwouldcarry
itineraria
,
whichwereeithersimplelistsormorepictorialrepresentationsofthelandmarks
anddistancesalongvariousroads.The
TabulaPeutingeriana
,a
187

5.BasicGraphAlgorithms
scrolldepictingtheentireRoman
cursuspublicus
,iswidelybelievedtobea
medievalcopyofarevisionofa
itinerariumpictum
,
commissionedduringthereignofAugustusCaesar.ThePeutingerTableis
notageographicallyaccuratemaoriansdebatewhetheritquali˝esasa
atautanabstractrepresentationoftheroadnetwork,similarto
amodernsubwaymap.Citiesalongeachroadareindicatedbykinksinthe
curverepresentingthatroad;thenamesofthesecitesandthelengthsofroad
segmentsbetweenthemarealsoindicatedonthemap.Thus,themapcontains
enoughinformationto˝ndtheshortestroutebetweenanytwocitiesinthe
Romanempire.SeeFigure
5.1
.
Figure5.1.
AsmallexcerptofKonradMiller's1872restorationofthe
TabulaPeutingeriana
,showingthe
Romanroadfrommodern-dayBirten(
Veteribus
,topleft)throughKöln(
Agripina
)andBonn(
Bonnae
)to
Mainz(
Mogontiaco
,topright),withbranchestoTrier(
AvgTresvirorvm
,center)andMetz(
Matricorvm
,
bottomcenter).(See
ImageCredits
attheendofthebook.)
Oneoftheoldestclassicalapplicationsofgraspeci˝callyt
inrepresentinggenealogies.Complexfamilyhavebeenusedforcenturies
tosettlelegalquestionsaboutmarriage,inheritance,androyalsuccession.Civil
lawintheRomanempire,lateradoptedascanonlawbytheearlyCatholic
Church,forbademarriagebetween˝rstcousinsorcloserrelatives.Intheearly
ninthcentury,theChurchchangedboththerequireddistanceandthemethod
ofcomputation.WheretheRoman
computatiolegalis
requiredthesumof
thedistancestothenearestcommonancestortobeatleastfour,thenewer
computatiocanonica
requiredthemaximumofthetwodistancestobeatleast
seven.In1215,bowingtopracticalconsiderations(andactualpractice),the
Churchrelaxedtheminimumrequireddistanceformarriagetofour.
1
The
leftdiagraminFigure
5.2
illustratesaparticularlyconvolutedcase:Tiriusand
TheburgamarryandhaveasonGaius,afterwhichTiriusdies;Theburgathen
1
Duringthe11thand12thcenturies,thisrestrictiongraduallyexpandedtoincludeuptofour
linksbya˚nity,initiallythroughmarriage,andlaterthroughalsex,betrothal,and
evengodparenting.Forexample,marriagebetweenamanandhissister'shusband'ssister's
husband'ssisterwasformallyforbidden,aswasamarriagebetweenawidowerandhisson's
wife'swidowedmother.Thesea˚nityrequirementsweresigni˝cantlyreducedbutnoteliminated
in1215;theChurchonlyabandonedtheconceptofa˚nity
excopulaillicita
in1917.
188

5.1.IntroductionandHistory
marriesLothar,bearshimason,anddies;˝nally,LotharandBerthamarryand
haveadaughterGemma.CanGaius'ssonlegallymarryGemma'sdaughter?
Figure5.2.
Twodiagramsdescribingacomplexmarriagecase
,fromananonymous15th-centurytrea-
tiseonJohannesAndreae's
Superarboribusconsanguinitatisetaf˙nitatis
,anearly14th-centurytreatise
oncanonlaw.(See
ImageCredits
attheendofthebook.)
Inthelate1600s,FrenchmathematicianPierreVarignondevelopeda
graphicalmethodfor˝ndingtheequilibriumpositionofanetwork
ofropesundertension,buildingonearlierworkbySimonStevinpublished
acenturyearlier.Varignonobservedthatwhentheropesareatequilibrium,
onecandrawagraphwhoseedgesaresegmentsparalleltotheropes,with
lengthsequaltotheforcesalongthoseropes,suchthattheropesmeetingat
anypointinthenetworkde˝neaclosedcycleinthegraph.Varignon'smethod
ofphicalstatiwasnotpublishedincompletedetailuntil1725,twoyears
afterhisdeath.Thesegraphsarenowknownas
reciprocalforcediagrams
or
Maxwonadiagrams
,afterJamesClerkMaxwellandLuigiCremona,who
(alongwithCarlCulmannandothers)developedarichtheoryofreciprocal
diagramsinthelate1800s.
Figure5.3.
Reciprocalforcediagrams(dotted),fromVarignon'sposthumous
Nouvellemécanique,ou
statique,dontleprojetfutdonnéenMDCLXXXVII[Newmechanics,orstatics,whoseprojectwasgiven
in1687]
(See
ImageCredits
attheendofthebook.)
189

5.BasicGraphAlgorithms
Ofcourse,therearemanyotherfamiliarexamplesofgraphs,likeboard
games(datingtoantiquity);verticesandedgesofconvexpolyhedra(formally
studiedbyancientGreekphilosophers,butmucholder);visualizationsofstar
patterns(alreadydevelopedinEastAsiabythe7thcentury
ce
);knight'stours
(describedbyali,Rudra
t
.
a,aandothersinthe9thand10thcenturies),
mazes(introducedintheirmodernformbyGiovanniFontanacirca1420);
geodetictriangulations(introducedbyGemmaFrisiusin1533,andusedto
calculatethecircumferenceoftheearthbyWillebrodSnellin1615andtode˝ne
themeterin1799),LeonhardEuler'swownpartial
2
solutiontotheBridges
ofKönigsburgpuzzle(1735);telegraphandothercommunicationnetworks
(˝rstproposedin1753,developedbyRonalds,Schilling,Gauss,Weber,and
othersintheearly1800s,anddeployedworldwidebythelate1800s);electrical
circuits(formalizedintheearly1800sbyOhm,Maxwell,Kirchho˙,andothers);
molecularstructuralformulas(introducedindependentlybyAugustKekulé
in1857andArchibaldCouperin1858);socialnetworks(˝rststudiedinthe
bysociologistJacobMoreno);digitalelectroniccircuits(proposed
byCharlesSandersPeircein1886,andcastintotheirmodernformbyClaude
Shannonin1937);andyeah,okay,ifyouinsist,themoderninternet.
ThewordfortheabstractmathematicalwascoinedbyJames
Sylvesterin1878,whoadaptedKekulé'scogratodescribecertain
algebraicinvariants,atthesuggestionofhiscolleagueWilliamCli˙ord.The
wordwas˝rstusedforconnectedacyclicgraphsbyArthurCayleyin
1857,althoughtheabstractconceptoftreeshadalreadybeenusedbyGustav
Kirchho˙andKarlvonStaudttenyearsearlier.Thezerothbookongraph
theorywaspublishedbyAndréaguëin1926;DénesK®nigpublished
the˝rstgraphtheorybooktenyearslater.
5.2BasicDe˙nitions
Formally,a(simple)
graph
isapairofsets
(
V
,
E
)
,where
V
isanarbitrary
noy˝niteset,whoseelementsarecalled
vertices
3
or
nodes
,and
E
isa
setofpairsofelementsof
V
,whichwecall
edges
.Inan
undirected
graph,the
edgesareunorderedpairs,orjustsetsofsizetwo;Iusuallywrite
uv
instead
of
f
u
,
v
g
todenotetheundirectededgebetween
u
and
v
.Ina
directed
graph,
theedgesareorderedpairsofvertices;Iusuallywrite
u

v
insteadof
(
u
,
v
)
to
denotethedirectededgefrom
u
to
v
.
2
Eulerdismissedthe˝nalstepofhisally˝ndinganEulertourofagraph
wheneveryvertexhasevensobvious.Euleralsofailedtonoticethatagraphwithan
Eulertourmustbeconnected.The˝rstcompleteproofthatagraphhasanEulertourifandonly
ifitisconnectedandeveryvertexhasevendegreewaspublishedbyCarlHierholzerin1873.
3
ThesingularoftheEnglishwordertiis
vertex
.Similarly,thesingularofis
matrix
,andthesingularofis
index
.Unlessyou'respeakingItalian,thereisnosuch
190

5.2.BasicDe˙nitions
Followingstandard(butadmittedlyconfusing)practice,Iwillalsouse
V
to
denotethe
number
ofverticesinagraph,and
E
todenotethe
number
ofedges.
Thus,inanyundirectedgraphwehave
0

E


V
2

,andinanydirectedgraph
wehave
0

E

V
(
V

1
)
.
The
endpoints
ofanedge
uv
or
u

v
areitsvertices
u
and
v
.Wedistinguish
theendpointsofadirectededge
u

v
bycalling
u
the
tail
and
v
the
head
.
Thede˝nitionofagraphasapairof
sets
forbidsmultipleundirectededges
withthesameendpoints,ormultipledirectededgeswiththesameheadand
thesametail.(Thesamedirectedgraphcancontainbothadirectededge
u

v
anditsreversal
v

u
.)Similarly,thede˝nitionofanundirectededgeasa
set
ofverticesforbidsanundirectededgefromavertextoitself.Graphs
without
loopsandparalleledgesareoftencalled
simple
graphs;noegraphs
aresometimescalled
multigraphs
.Despitetheformalde˝nitionalgap,most
algorithmsforsimplegraphsextendtomultigraphswithlittleornomodi˝cation,
andforthatreason,Iseenoneedforaformalde˝nitionhere.
Foranyedge
uv
inanundirectedgraph,wecall
u
a
neighbor
of
v
andvice
versa,andwesaythat
u
and
v
are
adjacent
.The
degree
ofanodeisitsnumber
ofneighbors.Indirectedgraphs,wedistinguishtwokindsofneighbors.For
anydirectededge
u

v
,wecall
u
a
predecessor
of
v
,andwecall
v
a
successor
of
u
.The

ofavertexisitsnumberofpredecessors;the
o
is
itsnumberofsuccessors.
Agraph
G
0
=(
V
0
,
E
0
)
isa
subgraph
of
G
=(
V
,
E
)
if
V
0

V
and
E
0

E
.
A
propersubgraph
of
G
isanysubgraphotherthan
G
itself.
A
walk
inanundirectedgraph
G
isasequenceofvertices,whereeach
adjacentpairofverticesareadjacentin
G
;informally,wecanalsothinkofa
walkasasequenceofedges.Awalkiscalleda
path
ifitvisitseachvertex
atmostonce.Foranytwovertices
u
and
v
inagraph
G
,wesaythat
v
is
reachable
from
u
if
G
containsawalk(andthereforeapath)between
u
and
v
.
Anundirectedgraphis
connected
ifeveryvertexisreachablefromeveryother
vertex.Everyundirectedgraphconsistsofoneormore
components
,whichare
itsmaximalconnectedsubgraphs;twoverticesareinthesamecomponentif
andonlyifthereisapathbetweenthem.
4
Awalkis
closed
ifitstartsandendsatthesamevertex;a
cycle
isaclosed
walkthatentersandleaveseachvertexatmostonce.Anundirectedgraphis
acyclic
ifnosubgraphisacycle;acyclicgraphsarealsocalled
forests
.A
tree
isa
connectedacyclicgraph,orequivalently,onecomponentofaforest.A
spanning
thingasavertice,matrice,indice,appendice,helice,apice,vortice,radice,simplice,codice,
directrice,dominatrice,Unice,Kleenice,Asterice,Obelice,Dogmatice,Geta˝ce,Cacofonice,
Vitalstatistice,Geriatrice,orJimiHendrice!Ifyouhavetroublerememberingthisrule,stickto

4
Componentsareoftencallednnectedcomponbutthisusageisredundant;co
nentsareconnectedbyde˝nition.
191

5.BasicGraphAlgorithms
tree
ofanundirectedgraph
G
isasubgraphthatisatreeandcontainsevery
vertexof
G
.Agraphhasaspanningtreeifandonlyifitisconnected.A
spanningforest
of
G
isacollectionofspanningtrees,oneforeachcomponent
of
G
.
Directedgraphsrequireslightlydi˙erentde˝nitions.A
directedwalk
isa
sequenceofvertices
v
0

v
1

v
2



v
`
suchthat
v
i

1

v
i
isadirectededgefor
everyindex
i
;directedpathsanddirectedcyclesarede˝nedsimilarly.Vertex
v
is
reachable
fromvertex
u
inadirectedgraph
G
ifandonlyif
G
containsa
directedwalk(andthereforeadirectedpath)from
u
to
v
.Adirectedgraph
is
stronglyconnected
ifeveryvertexisreachablefromeveryothervertex.A
directedgraphis
acyclic
ifitdoesnotcontainadirectedcycle;directedacyclic
graphsareoftencalled
dags
.
5.3RepresentationsandExamples
Themostcommonwaytovisuallyrepresentgraphsisby
drawing
them.A
drawingofagraphmapseachvertextoapointintheplane(typicallydrawnas
asmallcircleorsomeothershape)andeachedgetoacurveorstraightline
segmentbetweenthetwovertices.Agraphis
planar
ifithasadrawingwhere
notwoedgescross;suchadrawingisalsocalledan
embedding
.
5
Thesame
graphcanhavemanydi˙erentdrawings,soitisimportantnottoconfusea
particulardrawingwiththegraphitself.Inparticular,planargraphscanhave
noanardrawings!
Figure5.4.
Twodrawingsofthesamedisconnectedplanargraphwith13vertices,19edges,andtwo
components.Onlythedrawingontheleftisanembedding.
However,drawingsarefarfromtheonlyusefulrepresentationofgraphs.
Forexample,the
intersectiongraph
ofacollectionofgeometricobjectshasa
nodeforeveryobjectandanedgeforeveryintersectingpairofobjects.Whether
aparticulargraphcanberepresentedasanintersectiongraphdependsonwhat
kindofobjectyouwanttouseforthevertices.Di˙erenttypesofe
segments,rectangles,circles,edi˙erentclassesofgraphs.One
particularlyusefultypeofintersectiongraphisan
intervalgraph
,whosevertices
5
Confusingly,thewordisoftenusedasasynonymforevenwhen
theedgesintersect.Pleasedon'tdothat.
192

5.3.RepresentationsandExamples
areintervalsontherealline,withanedgebetweenanytwointervalsthat
overlap.
(a)(b)
Figure5.5.
ThegraphinFigure
5.4
isalsotheintersectiongraphof(a)asetoflinesegmentsand(b)a
setofcircles.
Anothergoodexampleisthe
dependencygraph
ofarecursivealgorithm.
Dependencygraphsaredirectedacyclicgraphs.Theverticesareallthedistinct
recursivesubproblemsthatarisewhenexecutingthealgorithmonaparticular
input.Thereisanedgefromonesubproblemtoanotherifevaluatingthesecond
subproblemrequiresarecursiveevaluationofthe˝rst.Forexample,forthe
Fibonaccirecurrence
F
n
=
8
>
<
>
:
0
if
n
=
0
,
1
if
n
=
1
,
F
n

1
+
F
n

2
otherwise,
theverticesofthedependencygrapharetheintegers
0,1,2,...,
n
,andthe
edgesarethepairs
(
i

1
)

i
and
(
i

2
)

i
foreveryinteger
i
between
2
and
n
.
Figure5.6.
ThedependencygraphofthePi

ngala-Fibonaccirecurrence.
Asamorecomplexexample,recalltherecurrenceforthe
editdistance
problemfromChapter
3
:
Edit
(
i
,
j
)=
8
>
>
>
>
>
<
>
>
>
>
>
:
i
if
j
=
0
j
if
i
=
0
min
8
<
:
Edit
(
i

1,
j
)+
1
Edit
(
i
,
j

1
)+
1
Edit
(
i

1,
j

1
)+[
A
[
i
]
6
=
B
[
j
]]
9
=
;
otherwise
Thedependencygraphofthisrecurrenceisan
m

n
gridofvertices
(
i
,
j
)
connectedbyverticaledges
(
i

1,
j
)

(
i
,
j
)
,horizontaledges
(
i
,
j

1
)

(
i
,
j
)
,
anddiagonaledges
(
i

1,
j

1
)

(
i
,
j
)
.Dynamicprogrammingworkse˚ciently
foranyrecurrencethathasareasonablysmalldependencygraph;aproper
evaluationorderensuresthateachsubproblemisvisited
after
itspredecessors.
193

5.BasicGraphAlgorithms
Figure5.7.
Thedependencygraphoftheeditdistancerecurrence.
Anotherinterestingexampleisthe
con˝gurationgraph
ofagame,puzzle,
ormechanismliketioe,checkers,theRubik'sCube,theTowerofHanoi,
oraTuringmachine.Theverticesofthecon˝gurationgraphareallthevalid
con˝gurationsofthepuzzle;thereisanedgefromonecon˝gurationtoanother
ifitispossibletotransformonecon˝gurationintotheotherwithasingle
simpleov(Obviously,theprecisede˝nitiondependsonwhatmovesare
allowed.)Evenforreasonablysimplemechanisms,thecon˝gurationgraphcan
beextremelycomplex,andwetypicallyonlyhaveaccesstolocalinformation
aboutthecon˝gurationgraph.
Figure5.8.
Thecon˙gurationgraphofthe4-diskTowerofHanoi.
Con˝gurationgraphsarecloserelativesofthe
gametrees
weconsideredin
Chapter
2
,butwithonecrucialdi˙erence.Eachstateofagameappears
exactly
onceinitscon˝gurationgraph,butcanappearmanytimesinitsgametree.In
short,con˝gurationgraphsare
memoized
gametrees!
ateautomata
usedinformallanguagetheorycanbemodeledas
labeleddirectedgraphs.Recallthatadeterministicateautomatonis
formallyde˝nedasae
M
=(

,
Q
,
s
,
A
,

)
,where

isa˝nitesetcalled
the
alphabet
,
Q
isa˝nitesetof
states
,
s
2
Q
isthe
startstate
,
A

Q
isthesetof
194

5.4.DataStructures
acceptingstates
,and

:
Q


!
Q
isa
transitionfunction
.Butitisoftenmore
usefultothinkof
M
asadirectedgraph
G
M
whoseverticesarethestates
Q
,
andwhoseedgeshavetheform
q


(
q
,
a
)
foreverystate
q
2
Q
andsymbol
a
2

.Basicquestionsaboutthelanguage
L
(
M
)
acceptedby
M
canthenbe
phrasedasquestionsaboutthegraph
G
M
.Forexample,
L
(
M
)=
?
ifandonly
ifnoacceptingstate/vertexisreachablefromthestartstate/vertex
s
.
Finally,sometimesonegraphcanbeusedtoimplicitlyrepresentotherlarger
graphs.Agoodexampleofthisimplicitrepresentationisthe
subsetconstruction
,
whichisnormallyusedtoconvertNFAsintoDFAs,butcanbeappliedto
arbitrary
directedgraphsasfollows.Given
any
directedgraph
G
=(
V
,
E
)
,wecande˝ne
anewdirectedgraph
G
0
=(
2
V
,
E
0
)
whoseverticesareall
subsets
ofverticesin
V
,
andwhoseedges
E
0
arede˝nedasfollows:
E
0
:
=

A

B


u

v
2
E
forsome
u
2
A
and
v
2
B

Wecanmechanicallytranslatethisde˝nitionintoanalgorithmtoconstruct
G
0
from
G
,butstrictlyspeaking,thisconstructionisunnecessary,because
G
is
already
an
implicit
representationof
G
0
.
It'simportantnottoconfuseanyoftheseexamples/representationswiththe
actualformal
de˝nition
:Agraphisapairofsets
(
V
,
E
)
,where
V
isan
arbitrary
noy˝niteset,and
E
isasetofpairs(eitherorderedorunordered)of
elementsof
V
.Inshort:Agraphisasetofpairsofthings.
5.4DataStructures
Inpractice,graphsareusuallyrepresentedbyoneoftwostandarddatastru
tures:
adjacencylists
and
adjacencymatrices
.Atahighlevel,bothdatastructures
arearraysindexedbyvertices;thisrequiresthateachvertexhasauniqueinteger
identi˝erbetween
1
and
V
.Inaformalsense,theseintegers
are
thevertices.
AdjacencyLists
Byfarthemostcommondatastructureforstoringgraphsisthe
adjacencylist
.
Anadjacencylistisanarrayoflists,eachcontainingtheneighborsofoneofthe
vertices(ortheoeighborsifthegraphisdirected).
6
Forundirectedgraphs,
eachedge
uv
isstoredtwice,oncein
u
'sneighborlistandoncein
v
'sneighbor
list;fordirectedgraphs,eachedge
u

v
isstoredonlyonce,intheneighbor
listofthetail
u
.Forbothtypesofgraphs,theoverallspacerequiredforan
adjacencylistis
O
(
V
+
E
)
.
6
Attentivestudentsmightnoticethatdespiteisname,anadjacencylistisnotalist.This
nomenclatureisanexampleoftheRedHerringPrinciple:Incomputerscience,asinmathematics,
aredherringisneithernecessarilyrednornecessarilya˝sh.
195

5.BasicGraphAlgorithms
Thereareseveraldi˙erentwaystorepresenttheseneighborlists,butthe
standardimplementationusesasimplelist.Theresultingdata
structureallowsustolistthe(oeighborsofanode
v
in
O
(
1
+
deg
(
v
))
time;
justscan
v
'sneighborlist.Similarly,wecandeterminewhether
u

v
isanedge
in
O
(
1
+
deg
(
u
))
timebyscanningtheneighborlistof
u
.Forundirectedgraphs,
wecanimprovethetimeto
O
(
1
+
min
f
deg
(
u
)
,deg
(
v
)
g
)
bysimultaneously
scanningtheneighborlistsofboth
u
and
v
,stoppingeitherwhenwelocatethe
edgeorwhenwefalloftheendofalist.
Figure5.9.
Anadjacencylistforourexamplegraph.
Ofcourse,linkedlistsarenottheonlydatastructurewecoulduse;any
otherstructurethatsupportssearching,listing,insertion,anddeletionwilldo.
Forexample,wecanreducethetimetodeterminewhether
uv
isanedgeto
O
(
1
+
log
(
deg
(
u
)))
byusingabalancedbinarysearchtreetostoretheneighbors
of
u
,orevento
O
(
1
)
timebyusinganappropriatelyconstructedhashtable.
7
Onecommonimplementationofadjacencylistsisthe
adjacencyarray
,
whichusesasinglearraytostorealledgerecords,withtherecordsofedges
incidenttoeachvertexinacontiguousinterval,andwithaseparatearray
storingtheindexofthe˝rstedgeincidenttoeachvertex.Moreover,itisuseful
tokeeptheintervalsforeachvertexinsortedorder,asshowninFigure
5.10
,
sothatwecancheckin
O
(
logdeg
(
u
))
timewhethertwovertices
u
and
v
are
adjacent.
AdjacencyMatrices
Theotherstandarddatastructureforgraphsisthe
adjacencymatrix
,
8
˝rst
proposedbyGeorgesBrunelin1894.Theadjacencymatrixofagraph
G
isa
V

V
matrixof
0
sand
1
s,normallyrepresentedbyatwonalarray
A
[
1..
V
,1..
V
]
,whereeachentryindicateswhetheraparticularedgeispresent
in
G
.Speci˝cally,forallvertices
u
and
v
:
‹
ifthegraphisundirected,then
A
[
u
,
v
]
:
=
1
ifandonlyif
uv
2
E
,and
7
Thisisa
lot
moresubtlethanitsounds.Mostpopularhashingtechniquesdo
not
guarantee
fastquerytimes,andevenmost
good
hashingmethodscanguaranteeonly
O
(
1
)
expected
time.
See
http://algorithms.wtf
foramorethoroughdiscussionofhashing.
8
Seefootnote
3
.
196

5.4.DataStructures
Figure5.10.
Anabstractadjacencyarrayforourexamplegraph,anditsactualimplementationasa
pairofintegerarrays.
‹
ifthegraphisdirected,then
A
[
u
,
v
]
:
=
1
ifandonlyif
u

v
2
E
.
Forundirectedgraphs,theadjacencymatrixisalways
symmetric
,meaning
A
[
u
,
v
]=
A
[
v
,
u
]
forallvertices
u
and
v
,because
uv
and
vu
arejustdi˙erent
namesforthesameedge,andthediagonalentries
A
[
u
,
u
]
areallzeros.For
directedgraphs,theadjacencymatrixmayormaynotbesymmetric,andthe
diagonalentriesmayormaynotbezero.
abcdefghijklm
a
0100100000000
b
1010110000000
c
0101011000000
d
0010001000000
e
1100011100000
f
0110101000000
g
0011110010000
h
0000100000000
i
0000001000000
j
0000000000111
k
0000000001010
l
0000000001101
m
0000000001010
Figure5.11.
Anadjacencymatrixforourexamplegraph.
Givenanadjacencymatrix,wecandecidein

(
1
)
timewhethertwovertices
areconnectedbyanedgejustbylookingintheappropriateslotinthematrix.
Wecanalsolistalltheneighborsofavertexin

(
V
)
timebyscanningthe
correspondingrow(orcolumn).Thisrunningtimeisoptimalintheworstcase,
butevenifavertexhasfewneighbors,westillhavetoscantheentirerowto
˝ndthemall.Similarly,adjacencymatricesrequire

(
V
2
)
space,regardlessof
howmanyedgesthegraphactuallyhas,sotheyareonlyscientforvery
dense
graphs.
197

5.BasicGraphAlgorithms
Comparison
Table
5.1
summarizestheperformanceofthevariousstandardgraphdata
structures.Stars

indicateexpectedamortizedtimeboundsformaintaining
dynamichashtables.
9
StandardadjacencylistFastadjacencylistAdjacency
(linkedlists)(hashtables)matrix
Space

(
V
+
E
)

(
V
+
E
)

(
V
2
)
Testif
uv
2
EO
(
1
+
min
f
deg
(
u
)
,deg
(
v
)
g
)=
O
(
V
)
O
(
1
)
O
(
1
)
Testif
u

v
2
EO
(
1
+
deg
(
u
))=
O
(
V
)
O
(
1
)
O
(
1
)
List
v
's(out-)neighbors

(
1
+
deg
(
v
))=
O
(
V
)

(
1
+
deg
(
v
))=
O
(
V
)

(
V
)
Listalledges

(
V
+
E
)

(
V
+
E
)

(
V
2
)
Insertedge
uvO
(
1
)
O
(
1
)

O
(
1
)
Deleteedge
uvO
(
deg
(
u
)+
deg
(
v
))=
O
(
V
)
O
(
1
)

O
(
1
)
Table5.1.
Timesforbasicoperationsonstandardgraphdatastructures.
Inlightofthiscomparison,onemightreasonablywonderwhyanyonewould
ever
useanadjacencymatrix;afterall,adjacencylistswithhashtablessupport
thesameoperationsinthesametime,usinglessspace.Themainreasonisthat
forsu˚cientlydensegraphs,adjacencymatricesaresimplerandmoree˚cient
inpractice,becausetheyavoidtheoverheadofchasingpointersandcomputing
hashfunctions;they'rejustcontiguousblocksofmemory.
Similarly,whywouldanyoneuse
linkedlists
inanadjacencyliststructureto
storeneighbors,insteadofbalancedbinarysearchtreesorhashtables?Although
theprimaryreasoninpracticeisalmostsurely
tradition
theyweregood
enoughforDonaldKnuth'scode,theyshouldbegoodenoughforyo
aremoreprincipledarguments.Oneisthatstandardadjacencylistsareinfact
goodenough
formostapplications.Moststandardgraphalgorithmsnever(or
rarely)actuallyaskwhetheranarbitraryedgeispresentorabsent,orattempt
toinsertordeleteedges,andsooptimizingthedatastructurestosupportthose
operationsisunnecessary.
Butinmyopinion,themostcompellingreasonfor
both
standarddata
structuresisthatmanygraphsare
implicitly
representedbyadjacencymatrices
andstandardadjacencylists.Forexample:
‹
Intersectiongraphsareusuallyrepresentedasalistoftheunderlying
geometricobjects.Aslongaswecantestwhethertwoobjectsintersectin
constanttime,wecanapplyanygraphalgorithmtoanintersectiongraphby
pretending
thattheinputgraphisstoredexplicitlyasanadjacencymatrix.
‹
Anydatastructurecomposedfromrecordswithpointersbetweenthemcan
beseenasadirectedgraph.Graphalgorithmscanbeappliedtothesedata
structuresby
pretending
thatthegraphisstoredinastandardadjacencylist.
9
Don'tworryifyoudon'tunderstandthephraseamortiz
198

5.5.Whatever-FirstSearch
‹
Similarly,wecanapplyanygraphalgorithmtoacon˝gurationgraph
as
though
itwererepresentedasastandardadjacencylist,providedwecan
enumerateallpossiblemovesfromagivencon˝gurationinconstanttime
each.
Forthelasttwoexamples,wecanenumeratetheedgesleavinganyvertexin
timeproportionaltoitsdegree,butwe
cannot
necessarilydetermineinconstant
timeiftwoverticesareadjacent.(Isthereapointerfromthisrecordtothat
record?Canwegetfromthiscon˝gurationtothatcon˝gurationinonemove?)
Moreover,weusuallydon'thavetheluxuryofreorganizingthepointersineach
recordorthemovesoutofagivencon˝gurationintoamoree˚cientdata
structure.Thus,astandardadjacencylist,withneighborsstoredinlinkedlists,
istheappropriatemodeldatastructure.
Intherestofthisbook,unlessexplicitlystatedotherwise,alltimebounds
forgraphalgorithmsassumethattheinputgraphisrepresentedbyast
dardadjacencylist.
Similarly,unlessexplicitlystatedotherwise,whenan
exerciseasksyoutodesignandanalyzeagraphalgorithm,youshouldassume
thattheinputgraphisrepresentedinastandardadjacencylist.
5.5Whatever-FirstSearch
Sofarwehaveonlydiscussed
local
operationsongraphs;arguablythemost
fundamental
global
questionwecanaskaboutgraphsis
reachability
.Givena
graph
G
andavertex
s
in
G
,thereachabilityquestionaskswhichverticesare
reachablefrom
s
;thatis,forwhichvertices
v
isthereapathfrom
s
to
v
?For
now,let'sconsideronlyundirectedgraphs;I'llconsiderdirectedgraphsbrie˛y
attheendofthissection.Forundirectedgraphs,theverticesreachablefrom
s
arepreciselytheverticesinthesamecomponentas
s
.
Perhapsthemostnaturalreachabilityaleastforpeoplelikeus
whoareusedtothinkingrecursiv
search
.Thisalgorithmcan
bewritteneitherrecursivelyoriteratively.It'sexactlythesamealgorithmeither
way;theonlydi˙erenceisthatwecanactuallyseetheostackinthe
noveversion.
RecursiveDFS
(
v
)
:
if
v
isunmarked
mark
v
foreachedge
vw
RecursiveDFS
(
w
)
IterativeDFS
(
s
)
:
Push
(
s
)
whilethestackisnotempty
v
 
Pop
if
v
isunmarked
mark
v
foreachedge
vw
Push
(
w
)
199

5.BasicGraphAlgorithms
searchisjustone(perhapsthemostcommon)speciesofa
generalfamilyofgraphtraversalalgorithmsthatIcall
whateversearch
.
Thegenerictraversalalgorithmstoresasetofcandidateedgesinsomedata
structurethatI'llcallaTheonlyimportantpropertiesofaarethat
wecanputstu˙intoitandthenlatertakestu˙backout.Astackisaparticular
typeofbag,butcertainlynottheonlyone.Hereisthegenericalgorithm:
WhateverFirstSearch
(
s
)
:
put
s
intothebag
whilethebagisnotempty
take
v
fromthebag
if
v
isunmarked
mark
v
foreachedge
vw
put
w
intothebag
Iclaimthat
WhateverFirstSearch
markseverynodereachablefrom
s
andnothingelse.Thealgorithmclearlymarkseachvertexin
G
atmost
once.To
showthatitvisitseverynodeinaconnectedgraph
atleast
once,wemodifythe
algorithmslightly;themodi˝cationsareinboldred.Insteadofkeepingvertices
inthebag,themodi˝edalgorithmstorespairsofvertices.Thismodi˝cation
allowsustoremember,wheneverwevisitavertex
v
forthe˝rsttime,which
previousneighborvertexput
v
intothebag.Wecallthisearliervertex
the
parent
of
v
.
WhateverFirstSearch
(
s
)
:
put
(
?
,
s
)
inbag
whilethebagisnotempty
take
(
p
,
v
)
fromthebag
(
?
)
if
v
isunmarked
mark
v
parent
(
v
)
 
p
foreachedge
vw
(
ƒ
)
put
(
v
,
w
)
intothebag
(
??
)
Lemma5.1.
WhateverFirstSearch
(
s
)
markseveryvertexreachablefrom
s
andonlythosevertices.Moreover,thesetofallpairs
(
v
,
parent
(
v
))
with
parent
(
v
)
6
=
?
de˝nesaspanningtreeofthecomponentcontaining
s
.
Proof:
Firstwearguethatthealgorithmmarkseveryvertex
v
thatisreachable
from
s
,byinductiononthesdistancefrom
s
to
v
.Thealgorithm
marks
s
.Let
v
beanyothervertexreachablefrom
s
,andlet
s



u

v
be
anypathfrom
s
to
v
withtheminimumnumberofedges.(Theremustbesuch
apath,because
v
isreachablefrom
s
.)Thepre˝xpath
s



u
isshorter
thantheshortestpathfrom
s
to
u
,sotheinductivehypothesisimpliesthatthe
200

5.6.ImportantVariants
algorithmmarks
u
.Whenthealgorithmmarks
u
,itmustimmediatelyputthe
pair
(
u
,
v
)
intothebag,soitmustlatertake
(
u
,
v
)
outofthebag,atwhichpoint
thealgorithmimmediatelymarks
v
,unlessitwasalreadymarked.
Everypair
(
v
,
parent
(
v
))
with
parent
(
v
)
6
=
?
isactuallyanedgeinthe
underlyinggraph
G
.Weclaimthatforanymarkedvertex
v
,thepathofparent
edges
v

parent
(
v
)

parent
(
parent
(
v
))


eventuallyleadsbackto
s
;weprove
thisclaimbyinductionontheorderinwhichverticesaremarked.Trivially
s
is
reachablefrom
s
,solet
v
beanyothermarkedvertex.Theparentof
v
mustbe
markedbefore
v
ismarked,sotheinductivehypothesisimpliesthattheparent
path
parent
(
v
)

parent
(
parent
(
v
))


leadsto
s
;addingonemoreparentedge
s

parent
(
s
)
establishestheclaim.
Thepreviousclaimimpliesthateveryvertexmarkedbythealgorithmis
reachablefrom
s
,andthatthesetofallparentedgesformsaconnectedgraph.
Becauseeverymarkednodeexcept
s
hasauniqueparent,thenumberofparent
edgesisexactlyonelessthanthenumberofmarkedvertices.Weconcludethat
theparentedgesformatree.
…
Analysis
Therunningtimeofthetraversalalgorithmdependsonwhatdatastructurewe
useforthebutwecanmakeafewgeneralobservations.Let
T
isthetime
requiredtoinsertasingleitemintothebagordeleteasingleitemfromthebag.
Theforloop
(
ƒ
)
isexecutedexactlyonceforeachmarkedvertex,andtherefore
atmost
V
times.Eachedge
uv
inthecomponentof
s
isputintothebagexactly
twice;onceasthepair
(
u
,
v
)
andonceasthepair
(
v
,
u
)
,soline
(
??
)
isexecuted
atmost
2
E
times.Finally,wecan'ttakemorethingsoutofthebagthanweput
in,soline
(
?
)
isexecutedatmost
2
E
+
1
times.Thus,assumingtheunderlying
graph
G
isstoredinastandardadjacencylist,
WhateverFirstSearch
runsin
O
(
V
+
ET
)
time
.(If
G
isstoredinanadjacencymatrix,therunningtimeof
WhateverFirstSearch
increasesto
O
(
V
2
+
ET
)
.)
5.6ImportantVariants
Stack:Depth-First
Ifweimplementtheusinga
stack
,werecoverouroriginal
searchalgorithm.Stackssupportinsertions(push)anddeletions(pop)in
O
(
1
)
timeeach,sothealgorithmrunsin
O
(
V
+
E
)
time
.Thespanningtreeformed
bytheparentedgesiscalleda
spanningtree
.Theexactshape
ofthetreedependsonthestartvertexandontheorderthatneighborsare
visitedinsidetheforloop
(
ƒ
)
,butingeneral,spanningtreesarelong
201

5.BasicGraphAlgorithms
andskinny.Wewillconsiderseveralimportantpropertiesandapplicationsof
searchinChapter
6
.
Queue:Breadth-First
Ifweimplementtheusinga
queue
,wegetadi˙erentgraversal
algorithmcalled
search
.Queuessupportinsertions(push)and
deletions(pull)in
O
(
1
)
timeeach,sothealgorithmrunsin
O
(
V
+
E
)
time
.In
thiscase,the
spanningtree
formedbytheparentedgescontains
shortestpaths
fromthestartvertex
s
toeveryothervertexinitscomponent;
wewillconsidershortestpathsindetailinChapter
8
.Again,theexactshapeof
aspanningtreedependsonthestartvertexandontheorderthat
neighborsarevisitedintheforloop
(
ƒ
)
,butingeneral,spanning
treesareshortandbushy.
Figure5.12.
Adepth-˙rstspanningtreeandabreadth-˙rstspanningtreeofthesamegraph,both
startingatthecentervertex.
PriorityQueue:Best-First
Finally,ifweimplementtheusinga
priorityqueue
,wegetyetanother
familyofalgorithmscalled
search
.Becausethepriorityqueuestores
atmostonecopyofeachedge,insertinganedgeorextractingtheminim
priorityedgerequires
O
(
log
E
)
time,whichimpliesthatsearchrunsin
O
(
V
+
E
log
E
)
time
.
Idescribesearchasaamilyofaratherthanasingle
algorithm,becausetherearedi˙erentmethodstoassignprioritiestotheedges,
andthesechoicesleadtodi˙erentalgorithmicbehavior.I'lldescribethree
wownvariantsbelow,buttherearemanyothers.Inallthreeexamples,
weassumethateveryedge
uv
or
u

v
intheinputgraphhasanoegative
weight
w
(
uv
)
or
w
(
u

v
)
.
First,iftheinputgraphisundirectedandweusetheweightofeachedge
asitspriority,searchconstructsthe
minimumspanningtree
ofthe
componentof
s
.Surprisingly,aslongasalltheedgeweightsaredistinct,the
resultingtreedoes
not
dependonthestartvertexortheorderthatneighbors
202

5.6.ImportantVariants
arevisited;inthiscase,theminimumspanningtreeisactuallyunique.This
instantiationofsearchiscommonly(but,asusual,incorrectly)known
as
Prim'salgorithm
;we'lldiscussthisandotherminimin
moredetailinChapter
7
.
De˝nethe
length
ofapathtobethesumoftheweightsofitsedges.We
canalsocompute
shortestpaths
inweightedgraphsusingsearch,
asfollows.Everymarkedvertex
v
storesadistance
dist
(
v
)
.Initiallyweset
dist
(
s
)=
0
.Foreveryothervertex
v
,whenweset
parent
(
v
)
 
p
,wealsoset
dist
(
v
)
 
dist
(
p
)+
w
(
p

v
)
,andwhenweinserttheedge
v

w
intothepriority
queue,weusethepriority
dist
(
v
)+
w
(
v

w
)
.Assumingalledgeweightsare
positive,
dist
(
v
)
isthelengthoftheshortestpathfrom
s
to
v
.Thisinstantiation
ofsearchiscommonly(but,asusual,strictlyspeaking,incorrectly)
knownas
Dijkstra'salgorithm
;we'llseethisalgorithmagaininChapter
8
.
Finally,de˝nethe
width
ofapathtobethe
minimum
weightofanyedge
inthepath.Asimplemodi˝cationofsearchalgorithm
computes
widestpaths
from
s
toeveryotherreachablevertex;widestpaths
arealsocalled
bottleneckshortestpaths
.Everymarkedvertex
v
storesa
value
width
(
v
)
.Initiallyweset
width
(
s
)=
1
.Foreveryothervertex
v
,when
weset
parent
(
v
)
 
p
,wealsoset
width
(
v
)
 
min
f
width
(
p
)
,
w
(
p

v
)
g
,and
whenweinserttheedge
v

w
intothepriorityqueue,weusethepriority
min
f
width
(
v
)
,
w
(
v

w
)
g
.Widestpathsareusefulinalgorithmsforcomputing
maximum˛ows
,which(youguessedit)we'llconsiderinChapter
10
.
DisconnectedGraphs
WhateverFirstSearch
(
s
)
onlyvisitstheverticesreachablefromasinglestart
vertex
s
.Tovisit
every
vertexin
G
,wecanusethefollowingsimple
function.
WFSAll
(
G
)
:
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
WhateverFirstSearch
(
v
)
Wait,Ihearyouask,whyareyoumakingthissocomplicated?Whynotjust
10
scanthevertexarray?
MarkEveryVertexDuh
(
G
)
:
forallvertices
v
mark
v
10
Thiswordisalmostalwaysasignalthatyouaremissingsomethingimportant.
203

5.BasicGraphAlgorithms
Well,sure,
if
youhaveancompletelistofvertices,thenyoucandothat,but
rememberthatnotallgraphsarerepresentedsoexplicitly.
11
Moreimportantly,
evenifwedohaveanexplicitvertexlist,theorderinwhichthisnaivealgorithm
visitsverticesisdeterminedbytheirorderinthe
datastructure
,notbythe
abstractstructureofthegraph.
Inparticular,unlikeanaivescanthroughthevertices,
WFSAll
visitsall
theverticesinonecomponent,andthenalltheverticesinthenextcomponent,
andsoonthrougheachcomponentoftheinputgraph.Thiscompon
componenttraversalallowsus,forexample,tocountthecomponentsofa
disconnectedgraphusingasinglecounter.
CountComponents
(
G
)
:
count
 
0
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
count
 
count
+
1
WhateverFirstSearch
(
v
)
returncount
Withjustabitmorework,wecanrecordwhichcomponentcontainseachvertex,
insteadofmerelymarkingit.
CountAndLabel
(
G
)
:
count
 
0
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
count
 
count
+
1
LabelOne
(
v
,
count
)
return
count
hh
Labelonecomponent
ii
LabelOne
(
v
,
count
)
:
whilethebagisnotempty
take
v
fromthebag
if
v
isunmarked
mark
v
comp
(
v
)
 
count
foreachedge
vw
put
w
intothebag
WFSAll
markseveryvertexonce,putseveryedgeintothebagonce,and
takeseveryedgeoutofthebagonce,sotheoverallrunningtimeis
O
(
V
+
ET
)
,
where
T
isthetimeforabagoperation.Inparticular,ifwerunsearch
orsearchateveryvertex,theresultingalgorithmstillrequiresonly
O
(
V
+
E
)
time.
Moreover,because
WhateverFirstSearch
computesaspanningtreeof
onecomponent,wecanuse
WFSAll
tocomputeaspanning
forest
oftheentire
11
Ontheotherhand,ifwestoreaampateveryvertexindicatingthelasttimeitwas
thenwecaneveryvin
O
(
1
)
timebyrecordingthestarttimeofour
traversal,andconsideringavertexifitstimestampislaterthantherecordedstart
time.
204

5.7.GraphReductions:FloodFill
graph.Inparticular,searchwithedgeweightsasprioritiescomputes
theminimeightspanningforestin
O
(
V
+
E
log
E
)
.
Shockingly,atleastone
extremely
popularalgorithmstextbookclaimsthat
thiswrappercanonlybeusedwithsearch.
12
Thisclaimis˛atly
incorrect.Infact,the
very˝rst
implementationofsearch,written
around1945byKonradZuseinhisprotanguage
Plankalkül
,wasdevelopedfor
thespeci˝cpurposeofcountingandlabelingthecomponentsofanundirected
graph.
DirectedGraphs
Whatevsearchiseasytoadapttodirectedgraphs;theonlydi˙erenceis
thatwhenwemarkavertex,weputallofits
out
eighborsintothebag.Infact,
ifweareusingstandardadjacencylistsoradjacencymatrices,wedonothave
tochangethecodeatall!
WhateverFirstSearch
(
s
)
:
put
s
intothebag
whilethebagisnotempty
take
v
fromthebag
if
v
isunmarked
mark
v
foreachedge
v

w
put
w
intothebag
Ourearlierproofimpliesthatthealgorithmmarkseveryvertexreachable
from
s
,andthedirectededges
parent
(
v
)

p
de˝nearootedtree,withalledges
directedawayfromtheroot
s
.However,evenifthegraphisconnected,weno
longernecessarilyobtaina
spanning
treeofthegraph,becausereachabilityis
nolongersymmetric.
Onthegrippinghand,
WhateverFirstSearch
doesde˝neaspanningtree
oftheverticesreachablefrom
s
.Moreover,byvaryingtheinstantiationofthe
wecanobtainaspanningtree,aspanningtree,a
minimeightdirectedspanningtree,astree,ora
treeofthosereachablevertices.
5.7GraphReductions:FloodFill
Oneoftheearliestmodernexamplesofwhatevsearchwasproposed
byEdwardMooreintheA
pixelmap
isatwonalarray
12
Toquotedirectly:nlikesearch,whosepredecessorsubgraphformsatree,
thepredecessorsubgraphproducedbyasearchmaybecomposedofseveraltrees,
becausethesearchmayrepeatfrommultipleso
205

5.BasicGraphAlgorithms
whosevaluerepresentcolors;theindividualentriesinthearrayarecalled
pixels
,
anabbreviationof
pictureelements
.
13
A
connectedregion
inapixelmapisa
connectedsubsetofpixelsthatallhavethesamecolor,wheretwopixelsare
consideredadjacentiftheyareimmediatehorizontalorverticalneighbors.The
˛ood˝ll
operation,commonlyrepresentedbyapaintcaninraphics
editingsoftware,changeseverypixelinaconnectedregiontoanewcolor;the
inputtotheoperationconsistsoftheindices
i
and
j
ofonepixelinthetarget
regionandthenewcolor.
Figure5.13.
Anexampleof˝ood˙ll
The˛problemcanbereducedtothereachabilityproblembychasing
thede˝nitions.Wede˝neanundirectedgraph
G
=(
V
,
E
)
,whoseverticesare
theindividualpixels,andwhoseedgesconnectneighboringpixelswiththe
samecolor.Eachconnectedregioninthepixelmapisacomponentof
G
;thus,
the˛problem
reduces
toareachabilityproblemin
G
.Wecansolvethis
reachabilityproblemusingwhatevsearchin
G
,startingatthegivenpixel
(
i
,
j
)
,withoneminormodi˝cation;wheneverwemarkavertex,weimmediately
changeitscolor.Foran
n

n
pixelmap,thegraph
G
has
n
2
verticesandat
most
2
n
2
edges,sowhatevsearchrunsin
O
(
V
+
E
)=
O
(
n
2
)
time
.
Thissimpleexampledemonstratestheessentialingredientsofa
reduction
.
Ratherthansolvingthe˛problemfromscratch,weuseanexisting
algorithmasablsubroutine.
How
whatevsearchworksisutterly
irrelevanthere;allthatmattersisits
speci˝cation
:Givenagraph
G
anda
startingvertex
s
,markeveryvertexin
G
thatisreachablefrom
s
.Likeanyother
subroutine,westillhavetodescribehowtoconstructtheinputandhowto
useitsoutput.Wealsohavetoanalyze
our
resultingalgorithmintermsof
our
inputparameters,nottheverticesandedgesofwhateverintermediategraph
ouralgorithmconstructs.
Nowthatwehaveanalgorithmthatwut
only
noecanapply
twoeasyoptimizationstomakeitfaster,onepracticalandtheothertheoretical:
13
Beforetheadventofmodernrasterdisplaydevicesinthe1960s,pixelsweremorecommonly
knownas
stitches
or
tesserae
,dependingonwhethertheyweremadeofthreadorverysmall
rocks.Theword
pix
becameastandardabbreviationfor
picture(s)
intheearly20thot
longafter
sox
becameacommonpluralof
sock
antingtheearliercolloquialism
piccy
.See
alsovoxel(volumeelement),texel(textureelement),andtaxel(tactileelementand/orbadger).
206

Exercises
‹
Inanactualimplementation,wewouldnotactuallybuildaseparategraph
datastructurefor
G
.Instead,wecanusethepixelmapdirectly
asthough
it
wereastandardadjacencylist,becausewecanlisttheorneighbors
ofanypixelin
O
(
1
)
timeeach.Inparticular,thereisnoneedtoseparately
vertices;wecanusethecolorofthepixelsinstead.
‹
Morecarefulanalysisimpliesthattherunningtimeisproportionalto
thenumberofpixelsintheregionbeing˝llvalently,thenumber
ofverticesincomponentof
G
containingvertex
(
i
,
j
)
chcouldbe
considerablysmallerthan
O
(
n
2
)
.
Exercises
Graphs
1.
Provethatthefollowingde˝nitionsareallequivalent.
‹
Atreeisaconnectedacyclicgraph.
‹
Atreeisonecomponentofaforest.(Aforestisanacyclicgraph.)
‹
Atreeisaconnectedgraphwith
atmost
V

1
edges.
‹
Atreeisaminimallyconnectedgraph;removinganyedgedisconnects
thegraph.
‹
Atreeisanacyclicgraphwith
atleast
V

1
edges.
‹
Atreeisamaximallyacyclicgraph;addinganedgebetweenanytwo
verticescreatesacycle.
‹
Atreeisagraphthatcontainsauniquepathbetweeneachpairof
vertices.
2.
Provethatanyconnectedacyclicgraphwith
n

2
verticeshasatleast
twoverticeswithdegree
1
.Donotusethewordsoreaforany
wownpropertiesoftrees;yourproofshouldfollowentirelyfromthe
de˝nitionsofnnand
3.
Agraph
(
V
,
E
)
is
bipartite
ifthevertices
V
canbepartitionedintotwo
subsets
L
and
R
,suchthateveryedgehasonevertexin
L
andtheotherin
R
.
(a)
Provethateverytreeisabipartitegraph.
(b)
Provethatagraph
G
isbipartiteifandonlyifeverycyclein
G
hasan
evennumberofedges.
(c)
Describeandanalyzeane˚cientalgorithmthatdetermineswhethera
givenundirectedgraphisbipartite.
207

5.BasicGraphAlgorithms
4.
Whenevergroupsofpigeonsgather,theyinstinctivelyestablisha
pecking
order
.Foranypairofpigeons,onepigeonalwayspeckstheother,driving
itawayfromfoodorpotentialmates.Thesamepairofpigeonsalways
choosesthesamepeckingorder,evenafteryearsofseparation,nomatter
whatotherpigeonsarearound.Surprisingly,theoverallpeckingordercan
containcyclorexample,pigeon
i
peckspigeon
j
,whichpeckspigeon
k
,
whichpeckspigeon
`
,whichpeckspigeon
i
.
(a)
Provethatany˝nitepopulationofpigeonscanbeplacedinaprocession
(perhapsaparade?)sothateachpigeonpeckstheprecedingpigeon's
posterior.Prettyplease.
(b)
Supposeyouaregivenadirectedgraphrepresentingthepecking
lationshipsamongasetof
n
pigeons.Thegraphcontainsonevertex
perpigeon,anditcontainsanedge
i

j
ifandonlyifpigeon
i
pecks
pigeon
j
.Describeandanalyzeanalgorithmtocomputeapeckingorder
forthepigeons,asguaranteedbypart(a).
(c)
Provethatforanysetofatleastthreepigeons,eitherthepeckingorder
describedinpart(a)isunique,ortherearethreepigeons
i
,
j
,and
k
,
suchthatpigeon
i
peckspigeon
j
,whichpeckspigeon
k
,whichpecks
pigeon
i
.
5.
An
Eulertour
ofagraph
G
isaclosedwalkthrough
G
thattraversesevery
edgeof
G
exactlyonce.
(a)
Provethatifaconnectedgraph
G
hasanEulertour,theneveryvertex
in
G
hasevendegree.(Eulerprovedthis.)
(b)
Provethatifeveryvertexinaconnectedgraph
G
hasevendegree,then
G
hasanEulertour.(Eulerdid
not
provethis.)
(c)
DescribeandanalyzeanalgorithmtocomputeanEulertourinagiven
graph,orcorrectlyreportthatnosuchtourexists.(Eulervaguelywaved
hishandsatthis.)
6.
The
d
onalhypercubeisthegraphde˝nedasfollows.Thereare
2
d
vertices,eachlabeledwithadi˙erentstringof
d
bits.Twoverticesare
joinedbyanedgeiftheirlabelsdi˙erinexactlyonebit.
(a)
AHamiltoniancycleinagraph
G
isacycleofedgesin
G
thatenterseach
vertexof
G
exactlyonce.Provethatforall
d

2
,the
d
onal
hypercubehasaHamiltoniancycle.
(b)
WhichhypercubeshaveanEulertour(aclosedwalkthattraversesevery
edgeexactlyonce)?
[Hint:Thisisveryeasy.]
208

Exercises
TraversalAlgorithms
7.
Recallthatadirectedgraph
G
is
stronglyconnected
if,foranytwovertices
u
and
v
,thereisapathin
G
from
u
to
v
andapathin
G
from
v
to
u
.
Describeanalgorithmtodetermine,givenan
undirected
graph
G
as
input,whetheritispossibletodirecteachedgeof
G
sothattheresulting
directedgraphisstronglyconnected.
8.
Let
G
beaconnectedgraph,andlet
T
beaspanningtreeof
G
rootedatsomenode
v
.Provethatif
T
isalsoaspanningtree
of
G
rootedat
v
,then
G
=
T
.
9.
ProfessorsEpprichandGoodsteinproposethefollowingoptimizationofthe
genericwhatevsearchalgorithm.Insteadofcheckingwhetherthe
verticeswetakeoutofthebagaremarked,theiralgorithmchecksbeforeit
evenputsthevertexintothebag,therebyensuringthateachvertexisput
intothebagatmostonce.Theiralgorithmalsoassignstheparentofeach
vertexwhenthatvertexismarked.
EagerWFS
(
s
)
:
mark
s
put
s
intothebag
whilethebagisnotempty
take
v
fromthebag
foreachedge
vw
if
w
isunmarked
mark
w
parent
(
w
)
 
v
put
w
intothebag
(a)
Provethat
EagerWFS
(
s
)
markseverynodereachablefrom
s
andnothing
else.Equivalently,provethattheparentedges
v

parent
(
v
)
computed
by
EagerWFS
(
s
)
de˝neaspanningtreeofthecomponentcontaining
s
.
(b)
Provethatifthebagisimplementedasaqueue,
EagerWFS
isequivalent
tosearch,meaningthetwoalgorithmsmarkthesame
verticesinthesameorderandconstructthesamespanningtree.
[Hint:
Whatisthede˝nitionofaqueue?]
(c)
Provethat
EagerWFS
is
never
equivalenttosearch,nomatter
whatdatastructureisusedasthebag(andthus,inparticular,whenthe
bagisastack).
Neither
EagerWFS
nor
RecursiveDFS
specifytheorderthatedges
vw
ateachvertex
v
areconsidered,anddi˙erentedgeordersmaylead
todi˙erentspanningtrees.Thus,youneedtoargue,forsomeexplicit
graph
G
,thatnospanningtreeof
G
producedby
RecursiveDFS
canbe
constructedby
EagerWFS
(using
any
bagdatastructure),orviceversa.
209

5.BasicGraphAlgorithms
10.
Oneoftheearliestpublisheddescriptionsofwhatevsearchasa
genericclassofalgorithmswasbyEdsgerDijkstra,LeslieLamport,Alain
Martin,CarelScholten,andElisabethSte˙ensin1975,aspartofthedesign
ofanautomaticgarbagecollector.Insteadofmaintainingmarkedand
unmarkedvertices,theiralgorithmmaintainsacolorforeachvertex,which
iseitherwhite,gray,orblack.Asusual,inthefollowingalgorithm,we
imaginea˝xedunderlyinggraph
G
.
ThreeColorSearch
(
s
)
:
colorallnodeswhite
color
s
gray
whileatleastonevertexisgray
ThreeColorStep
()
ThreeColorStep
()
:
v
 
anygrayvertex
if
v
hasnowhiteneighbors
color
v
black
else
w
 
anywhiteneighborof
v
parent
(
w
)
 
v
color
w
gray
(a)
Provethat
ThreeColorSearch
maintainsthefollowinginvariantat
alltimes:Noblackvertexisaneighborofawhitevertex.
[Hint:This
shouldbeeasy.]
(b)
Provethatafter
ThreeColorSearch
(
s
)
terminates,allvertices
ablefrom
s
areblack,allverticesnotreachablefrom
s
arewhite,and
thattheparentedges
v

parent
(
v
)
de˝nearootedspanningtreeofthe
componentcontaining
s
.
[Hint:Intuitively,blacknodesareandgraynodesare
theUnlikeourformulationof
WhateverFirstSearch
,however,
theoralgorithmisnotrequiredtoprocessalledgesoutofa
nodeatthesametime.]
(c)
Provethatthefollowingvariantof
ThreeColorSearch
,which
tainsthesetofgrayverticesinastandardstack,isequivalentto
search.
[Hint:Theorderofthelasttwolinesof
T
ColorStackStep
matters!]
ThreeColorStackSearch
(
s
)
:
colorallnodeswhite
color
s
gray
push
s
ontothestack
whileatleastonevertexisgray
ThreeColorStackStep
()
ThreeColorStackStep
()
:
pop
v
fromthestack
if
v
hasnowhiteneighbors
color
v
black
else
w
 
anywhiteneighborof
v
parent
(
w
)
 
v
color
w
gray
push
v
ontothestack
push
w
ontothestack
(d)
Provethatthefollowingvariantof
ThreeColorSearch
,which
tainsthesetofgrayverticesinastandardqueue,is
not
equivalent
210

Exercises
tosearch.
[Hint:Theorderofthelasttwolinesof
ThreeColorQueueStep
doesn'tmatter!]
ThreeColorQueueSearch
(
s
)
:
colorallnodeswhite
color
s
gray
push
s
intothequeue
whileatleastonevertexisgray
ThreeColorQueueStep
()
ThreeColorQueueStep
()
:
pull
v
fromthequeue
if
v
hasnowhiteneighbors
color
v
black
else
w
 
anywhiteneighborof
v
parent
(
w
)
 
v
color
w
gray
push
v
intothequeue
push
w
intothequeue
ª
(e)
Nowsupposethatanotherprocessisaddingedgesto
G
while
T
ColorSearch
isrunning.Thesenewedgescouldviolatethecolor
invariantdescribedinpart(a)andthereforedestroythecorrectness
oftheaparticular,when
ThreeColorSearch
terminates,
someverticesreachablefrom
s
couldbewhite.Thiswouldbedisastrous
ifwearerelyingontomeanbleandthereforesafeto
del
However,iftheotherprocessexplicitlypreservesthecolorinvariant,
wecanstillusetheoralgorithmtosafelyidentifyunreachable
vertices.Wemodelthetwoconcurrentalgorithmsasfollows;the
either/orchoicein
GarbageCollect
andthechoiceofwhichvertices
u
and
w
to
Mutate
areentirelyoutofthemainalgorithm'scontrol.
14
GarbageCollect
(
s
)
:
colorallverticeswhite
color
s
gray
whileatleastonevertexisgray
either
CollectStep
()
or
Mutate
()
CollectStep
()
:
v
 
anygrayvertex
if
v
hasnowhiteneighbors
color
v
black
else
w
 
anywhiteneighborof
v
color
w
gray
14
Thisisa
dramatic
oversimpli˝cationoftheandswectionalgorithms
actuallyusedinmlanguageslikeLuaandGo.Amorethoroughdiscussionof
mdynamicmemorymanagementisunfortunatelybeyondthescopeofthisbook,
exceptfortheFirstCommandment:
ThouShaltNotRollThineOwnGarbageCollector.
211

5.BasicGraphAlgorithms
Mutate
()
:
u
 
anyvertex
w
 
anyvertex
if
uw
isnotanedge
addedge
uw
if
u
isblackand
w
iswhite
color
u
gray
if
u
iswhiteand
w
isblack
color
w
gray
Provethat
GarbageCollect
eventuallyterminateswitheveryvertex
reachablefrom
s
coloredblackandeveryvertexnotreachablefrom
s
coloredwhite.
ª
(f)
Supposeinsteadofrecoloringblackverticesgray,
Mutate
maintainsthe
colorinvariantbycoloringsome
white
verticesgray:
Mutate
()
:
u
 
anyvertex
w
 
anyvertex
if
uw
isnotanedge
addedge
uw
if
u
isblackand
w
iswhite
color
w
gray
if
u
iswhiteand
w
isblack
color
u
gray
Provethat
GarbageCollect
eventuallyterminateswith
s
coloredblack,
everyvertexreachablefromablackvertexcoloredblack,andevery
vertexnotreachablefromablackvertexcoloredwhite.
Reductions
11.
A
numbermaze
isan
n

n
gridofpositiveintegers.Atokenstartsinthe
upperleftcorner;yourgoalistomovethetokentothelowcorner.
Oneachturn,youareallowedtomovethetokenup,down,left,orright;
thedistanceyoumaymovethetokenisdeterminedbythenumberonits
currentsquare.Forexample,ifthetokenisonasquarelabeled
3
,thenyou
maymovethetokenthreestepsup,threestepsdown,threestepsleft,or
threestepsright.However,youareneverallowedtomovethetokeno˙the
edgeoftheboard.
Describeandanalyzeane˚cientalgorithmthateitherreturnsthe
minimumnumberofmovesrequiredtosolveagivennumbermaze,or
correctlyreportsthatthemazehasnosolution.Forexample,giventhe
numbermazeinFigure
5.14
,youralgorithmshouldreturntheinteger
8
.
12.
SnakesandLadders
isaclassicboardgame,originatinginIndianolater
thanthe16thcentury.Theboardconsistsofan
n

n
gridofsquares,
212

Exercises
Figure5.14.
A
5

5
numbermazethatcanbesolvedineightmoves.
numberedconsecutivelyfrom
1
to
n
2
,startinginthebottomleftcornerand
proceedingrowbyrowfrombottomtotop,withrowsalternatingtothe
leftandright.Certainpairsofsquaresinthisgrid,alwaysindi˙erentrows,
areconnectedbyeithera(leadingdown)or(leadingup).
Eachsquarecanbeanendpointofatmostonesnakeorladder.
Youstartwithatokenincell
1
,inthebottomleftcorner.Ineachmove,
youadvanceyourtokenupto
k
positions,forsome˝xedconstant
k
.Ifthe
tokenendsthemoveatthe
top
endofasnake,itslidesdowntothebottom
ofthatsnake.Similarly,ifthetokenendsthemoveatthe
bottom
endofa
ladder,itclimbsuptothetopofthatladder.
Describeandanalyzeanalgorithmtocomputethesmallestnumberof
movesrequiredforthetokentoreachthelastsquareofthegrid.
Figure5.15.
ASnakesandLaddersboard.Upwardstraightarrowsareladders;downwardwavyarrows
aresnakes.
13.
TheinfamousMongolianpuzzlarriorVidrachItkyLedainventedthe
followingpuzzleintheyear1473.Thepuzzleconsistsofan
n

n
grid
ofsquares,whereeachsquareislabeledwithapositiveinteger,andtwo
tokens,oneredandtheotherblue.Thetokensalwayslieondistinctsquares
ofthegrid.Thetokensstartinthetopleftandbottomrightcornersofthe
grid;thegoalofthepuzzleistoswapthetokens.
213

5.BasicGraphAlgorithms
Inasingleturn,youmaymoveeithertokenup,right,down,orleft
bya
distancedeterminedbythe
other
token
.Forexample,iftheredtokenisona
squarelabeled
3
,thenyoumaymovethebluetoken
3
stepsup,
3
stepsleft,
3
stepsright,or
3
stepsdown.However,youmaynotmoveeithertokeno˙
thegrid,andattheendofamovethetwotokenscannotlieonthesame
square.
Describeandanalyzeane˚cientalgorithmthateitherreturnsthe
minimumnumberofmovesrequiredtosolveagivenVidrachItkyLeda
puzzle,orcorrectlyreportsthatthepuzzlehasnosolution.Forexample,
giventhepuzzleinFigure
5.16
,youralgorithmwouldreturnthenumber
5
.
Figure5.16.
A˙ve-movesolutionfora
4

4
VidrachItkyLedapuzzle.
14.
Supposeyouaregivenadirectedgraph
G
=(
V
,
E
)
andtwovertices
s
and
t
.
Describeandanalyzeanalgorithmtodetermineifthereisawalkin
G
from
s
to
t
(possiblyrepeatingverticesand/oredges)whoselengthisdivisible
by
3
.
Forexample,giventhegraphshownbelow,withtheindicatedv
tices
s
and
t
,youralgorithmshouldreturn
True
,becausethewalk
s

w

y

x

s

w

t
haslength6.
15.
Supposeyouaregivenadirectedgraph
G
wheresomeedgesareredandthe
remainingedgesareblue.Describeanalgorithmto˝ndtheshortestwalk
in
G
fromonevertex
s
toanothervertex
t
inwhichnothreeconsecutive
edgeshavethesamecolor.Thatis,ifthewalkcontainstworededgesina
row,thenextedgemustbeblue,andifthewalkcontainstwoblueedgesin
arow,thenextedgemustbered.
Forexample,giventhefollowinggraphasinput,youralgorithmshould
returntheinteger
7
,because
s
!
a
!
b
)
d
!
c
)
a
!
b
!
t
istheshortestlegal
walkfrom
s
to
t
.
214

Exercises
16.
Consideradirectedgraph
G
,whereeachedgeiscoloredeitherred,white,
orblue.Awalkin
G
iscalleda
French˛agwalk
ifitssequenceofedge
colorsisred,white,blue,red,white,blue,andsoon.Moreformally,awalk
v
0

v
1



v
k
isaFrench˛agwalkif,foreveryinteger
i
,theedge
v
i

v
i
+
1
isredif
i
mod3
=
0
,whiteif
i
mod3
=
1
,andblueif
i
mod3
=
2
.
Describeanalgorithmto˝ndallverticesin
G
thatcanbereachedfrom
agivenvertex
v
throughaFrench˛agwalk.
17.
Thereare
n
galaxiesconnectedby
m
intergalactictelays.Each
telayjoinstwogalaxiesandcanbetraversedinbothdirections.Also,
eachtelay
e
hasanassociatedcostof
c
(
e
)
dollars,where
c
(
e
)
isa
positiveinteger.Atelaycanbeusedmultipletimes,butthetollmust
bepaideverytimeitisused.
Judywantstotravelfromgalaxy
s
togalaxy
t
,butteleportationisnot
verypleasantandshewouldliketominimizethenumberoftimessheneeds
toteleport.However,shewantsthetotalcosttobeamultipleof˝vedollars,
becausecarryingsmallchangeisnotpleasanteither.
(a)
Describeandanalyzeanalgorithmtocomputethesmallestnumberof
timesJudyneedstoteleporttotravelfromgalaxy
s
togalaxy
t
sothat
thetotalcostisamultipleof˝vedollars.
(b)
Solvepart(a),butnowassumethatJudyhasacouponthatallowsher
touseexactlyonetelayforfree.
18.
ThreeSeashellsisasolitairegame,playedonaconnectedundirected
graph
G
.Initially,threetokensareplacedondistinctstartvertices
a
,
b
,
c
.
Ineachturn,you
must
move
allthree
tokens,bymovingeachtokenalong
anedgefromitscurrentvertextoanadjacentvertex.Attheendofeach
turn,thethreetokens
must
lieonthreedi˙erentvertices.Yourgoalisto
movethetokensontothreegoalvertices
x
,
y
,
z
;itdoesnotmatterwhich
tokenendsuponwhichgoalvertex.
Figure5.17.
Theinitialcon˙gurationoftheThreeSeashellspuzzleandthe˙rsttwoturnsofasolution.
DescribeandanalyzeanalgorithmtodeterminewhetheragivenThree
Seashellspuzzleissolvable.Yourinputconsistsofthegraph
G
,thestart
vertices
a
,
b
,
c
,andthegoalvertices
x
,
y
,
z
.Youroutputisasinglebit:
True
or
False
.
215

5.BasicGraphAlgorithms
19.
Let
G
beaconnectedundirectedgraph.Supposewestartwithtwocoinson
twoarbitrarilychosenverticesof
G
,andwewanttomovethecoinssothat
theylieonthesamevertexusingasfewmovesaspossible.Ateverystep,
eachcoin
must
movetoanadjacentvertex.
(a)
Describeandanalyzeanalgorithmtocomputetheminimumnumberof
stepstoreachacon˝gurationwherebothcoinsareonthesamevertex,
ortoreportcorrectlythatnosuchcon˝gurationisreachable.Theinput
toyouralgorithmconsistsofagraph
G
=(
V
,
E
)
andtwovertices
u
,
v
2
V
(whichmayormaynotbedistinct).
(b)
Nowsupposetherearethreecoins.Describeandanalyzeanalgorithm
tocomputetheminimumnumberofstepstoreachacon˝gurationwhere
bothcoinsareonthesamevertex,ortoreportcorrectlythatnosuch
con˝gurationisreachable.
(c)
Finally,supposethereare
fortywo
coins.Describeandanalyzean
algorithmtodeterminewhetheritispossibletomoveall
42
coinstothe
samevertex.Again,
every
coinmustmoveat
every
step.Forfullcredit,
youralgorithmshouldrunin
O
(
V
+
E
)
time.
20.
Oneofmydaughter'selementmathworkbooks
15
containsseveral
puzzlesofthefollowingtype:
Completeeachanglemazebelowbytracingapathfromstartto˙nishthat
hasonlyacuteangles.
Describeandanalyzeanalgorithmtosolvearbitraryemazes.
Youaregivenaconnectedundirectedgraph
G
,whoseverticesarepoints
intheplaneandwhoseedgesarelinesegments.Edgesdonotintersect,
exceptattheirendpoints.Forexample,adrawingoftheletter
X
wouldhave
˝veverticesandfouredges,andthe˝rstmazeabovehas18verticesand21
edges.Youarealsogiventwovertices
Start
and
Finish
.
Youralgorithmshouldreturn
True
if
G
containsawalkfrom
Start
to
Finish
thathasonlyacuteangles,and
False
otherwise.Formally,awalk
through
G
isvalidif,foranytwoconsecutiveedges
u

v

w
inthewalk,
either
Ü
uvw
=
ˇ
or
0
<
Ü
uvw
<ˇ=
2
.Assumeyouhaveasubroutinethat
candeterminein
O
(
1
)
timewhethertheanglebetweentwogivensegments
isstraight,obtuse,right,oracute.
15
JasonBattersonandShannonRogers,
BeastAcademyMath:Practice3A
,2012.See
https:
//www.beastacademy.com/resources/printables.php
forseveralmoreexamples.
216

Exercises
21.
Supposeyouaregivenasetof
n
horizontalandverticallinesegmentsand
twopoints
s
and
t
intheplane.Describeane˚cientalgorithmtodetermine
ifthereisapathfrom
s
to
t
thatdoesnotintersectanyofthegivenline
segments.
Eachhorizontallinesegmentisspeci˝edbyitsleftandright
x
ates
anditsunique
y
ate;similarly,eachverticallinesegmentisspeci˝ed
byitsunique
x
ateanditstopandbottom
y
ates.Finally,
thepoints
s
and
t
areeachspeci˝edbytheir
x
and
y
ates.
Figure5.18.
Apathbetweentwopointsinamazeofhorizontalandverticallinesegments.
22.
Everycheesyromancemoviehasascenewheretheromanticcouple,after
alongandfrustratingseparation,suddenlyseeeachotheracrossalong
distance,andthenslowlyapproachoneanotherwithunwaveringeyecontact
asthemusicrollsinandtherainliftsandthesunshinesthroughtheclouds
andthemusicswellsandeveryonestartsdancingwithrainbowsandkittens
andchocolateunicornsand....
16
Supposearomanticcouplgrandcomputersciencetradition,named
Aliceandtheirfavoriteparkattheeastandwestentrancesand
immediatelyestablishntact.Theycan'tjustrundirectlytoeachother;
instead,theymuststayonthepaththatagsthroughtheparkbetween
theeastandwestentrances.Tomaintaintheproperdramatictension,Alice
andBobmusttraversethepathsothattheyalwayslieonadirecteaest
line.
Wecandescribethezigzagpathastwoarrays
X
[
0..
n
]
and
Y
[
0..
n
]
,
containingthe
x
and
y
atesofthecornersofthepath,inorderfrom
thesouthwestendpointtothesoutheastendpoint.The
X
arrayissortedin
increasingorder,and
Y
[
0
]=
Y
[
n
]
.Thepathisasequenceofstraightline
segmentsconnectingthesecorners.
(a)
Suppose
Y
[
0
]=
Y
[
n
]=
0
and
Y
[
i
]
>
0
foreveryotherindex
i
;thatis,
theendpointsofthepatharestrictlybeloweveryotherpointonthepath.
16
Funfact:DamienChazelle,thedirectorof
Whiplash
and
LaLaLand
,isthesonofPrinceton
computerscienceprofessorandelectricguitaristBernardChazelle.
217

5.BasicGraphAlgorithms
Figure5.19.
AliceandBobmeet.Alicewalksbackwardinstep2,andBobwalksbackwardinsteps5
and6.
Provethatforanypath
P
meetingtheseconditions,AliceandBobcan
always
meet.
[Hint:Describeagraphthatmodelsallpossiblelocations
ofthecouplealongthepath.Whataretheverticesofthisgraph?What
aretheedges?Usethe
HandshakeLemma
:Everygraphhasaneven
numberofverticeswithodddegree.]
(b)
Iftheendpointsofthepathare
not
beloweveryothervertex,Aliceand
Bobmightstillbeabletomeet,ortheymightnot.Describeanalgorithm
todecidewhetherAliceandBobcanmeet,withouteitherbreaking
eaesteyecontactorsteppingo˙thepath,giventhearrays
X
[
0..
n
]
and
Y
[
0..
n
]
asinput.
ª
(c)
Describeanalgorithmforpart(b)thatrunsin
O
(
n
)
time.
23.
ThefamouspuzzlkerKanieltheDaneinventedasolitairegameplayed
withtwotokensonan
n

n
squaregrid.Somesquaresofthegridare
markedas
obstacles
,andonegridsquareismarkedasthe
target
.Ineach
turn,theplayermustmoveoneofthetokensfromiscurrentposition
asfar
aspossible
upward,downward,right,orleft,stoppingjustbeforethetoken
hits(1)theedgeoftheboard,(2)anobstaclesquare,or(3)theothertoken.
Thegoalistomoveeitherofthetokensontothetargetsquare.
Forexample,wecansolvethepuzzleshowninFigure
5.20
bymoving
theredtokendownuntilithitstheobstacle,thenmovingthegreentoken
leftuntilithitstheredtoken,andthenmovingtheredtokenleft,down,
right,andup.Theredtokenstopsatthetargetonthe6thmove
because
the
greentokenisjustabovethetargetsquare.
Describeandanalyzeanalgorithmtodeterminewhetheraninstanceof
thispuzzleissolvable.Yourinputconsistoftheinteger
n
,alistofobstacle
locations,thetargetlocation,andtheinitiallocationsofthetokens.The
218

Exercises
Figure5.20.
AninstanceofKanieltheDane'spuzzlethatcanbesolvedinsixmoves.Circlesindicate
initialtokenpositions;blacksquaresareobstacles;thecentersquareisthetarget.
outputofyouralgorithmisasingleboolean:
True
ifthegivenpuzzleis
solvableand
False
otherwise.
[Hint:Don'tforgetaboutthetimerequired
toconstructthegraph.]
ª
24.
RectangleWalk
isanewabstractpuzzlegame,availableforonly99
¢
on
Steam,iOS,Android,XboxOne,Playstation5,NintendoWiiU,Atari2600,
PalmPilot,Commodore64,SinclairZXDECPDPPLATO,
ZuseZ3,Duramesc,OdhnerArithmometer,AnalyticalEngine,Jacquard
Loom,HorologiumMirabileLundense,LeibnizSteppedReckoner,azari's
RobotBand,YanShi'sAutomaton,AntikytheraMechanism,KnottedRope,
IshangoBone,andPileofRocks.
Thegameisplayedonan
n

n
gridofblackandwhitesquares.Theplayer
movesarectanglethroughthisgrid,subjecttothefollowingconditions:
‹
Therectanglemustbealignedwiththegrid;thatis,thetop,bottom,
left,andrightcoordinatesmustbeintegers.
‹
Therectanglemust˝twithinthe
n

n
grid,anditmustcontainatleast
onegridcell.
‹
Therectanglemustnotcontainablacksquare.
‹
Inasinglemove,theplayercanreplacethecurrentrectangle
r
withany
rectangle
r
0
thateithercontains
r
oriscontainedin
r
.
Initially,theplayer'srectangleisa
1

1
squareintheupperrightcorner.
Theplayer'sgoalistoreacha
1

1
squareinthebottomleftcornerusing
asfewmovesaspossible.
Figure5.21.
The˙rst˙vestepsofaRectangleWalk.
219

5.BasicGraphAlgorithms
Describeandanalyzeanalgorithmtocomputethelengthoftheshortest
RectangleWalkinagivenbitmap.Yourinputisanarray
M
[
1..
n
,1..
n
]
,
where
M
[
i
,
j
]=
1
indicatesablacksquareand
M
[
i
,
j
]=
0
indicatesa
whitesquare.Assumethatavalidrectanglewalkexists;inparticular,
M
[
1,1
]=
M
[
n
,
n
]=
0
.Forexample,giventhebitmapshownabove,your
algorithmshouldreturntheinteger18.
[Hint:Don'tforgetaboutthetime
requiredtoconstructthegraph!!]
25.
Racetrack
(alsoknownas
GraphRacers
and
VectorRally
)isatwayer
pacilracinggamethatJe˙playedonthebusin5thgrade.
17
The
gameisplayedwithatrackdrawnonasheetofgraphpaper.Theplayers
alternatelychooseasequenceofgridpointsthatrepresentthemotionofa
cararoundthetrack,subjecttocertainconstraintsexplainedbelow.
velocityposition
(
0,0
)(
1,5
)
(
1,0
)(
2,5
)
(
2,

1
)(
4,4
)
(
3,0
)(
7,4
)
(
2,1
)(
9,5
)
(
1,2
)(
10,7
)
(
0,3
)(
10,10
)
(

1,4
)(
9,14
)
(
0,3
)(
9,17
)
(
1,2
)(
10,19
)
(
2,2
)(
12,21
)
(
2,1
)(
14,22
)
(
2,0
)(
16,22
)
(
1,

1
)(
17,21
)
(
2,

1
)(
19,20
)
(
3,0
)(
22,20
)
(
3,1
)(
25,21
)
Figure5.22.
A16-stepRacetrackrun,ona25

25track.Thisis
not
theshortestrunonthistrack.
Eachcarhasa
position
anda
velocity
,bothwithinteger
x
and
y

coordinates.Asubsetofgridsquaresismarkedasthe
startingarea
,and
anothersubsetismarkedasthe
˝nishingarea
.Theinitialpositionofeachcar
ischosenbytheplayersomewhereinthestartingarea;theinitialvelocityof
eachcarisalways
(
0,0
)
.Ateachstep,theplayeroptionallyincrementsor
decrementseitherorbothcoordinatesofthecar'svelocity;inotherwords,
eachcomponentofthevelocitycanchangebyatmost
1
inasinglestep.The
car'snewpositionisthendeterminedbyaddingthenewvelocitytothecar's
previousposition.Thenewpositionmustbeinsidethetrack;otherwise,the
carcrashesandthatplayerlosestherace.Theraceendswhenthe˝rstcar
reachesapositioninsidethe˝nishingarea.
17
Theactualgameisabitmorecomplicatedthantheversiondescribedhere.See
http:
//harmmade.com/vectorracer/
foranexcellentonlineversion.
220

Exercises
Supposetheracetrackisrepresentedbyan
n

n
arrayofbits,where
each
0
bitrepresentsagridpointinsidethetrack,each
1
bitrepresentsa
gridpointoutsidethetrack,theartingisthe˝rstcolumn,andthe
hingisthelastcolumn.
Describeandanalyzeanalgorithmto˝ndtheminimumnumberofsteps
requiredtomoveacarfromthestartinglinetothe˝nishlineofagiven
racetrack.
26.
A
rollingdiemaze
isapuzzleinvolvingastandarddie(acubewith
numbersoneachside)andagridofsquares.Youshouldimaginethegrid
lyingonatable;thediealwaysrestsonandexactlycoversonesquareof
thegrid.Inasinglestep,youcan
roll
thedie90degreesaroundoneofits
bottomedges,movingittoanadjacentsquareonestepnorth,south,east,
orwest.
Somesquaresinthegridmaybe
blocked
;thediecanneverrestona
blockedsquare.Othersquaresmaybe
labeled
withanumber;wheneverthe
dierestsonalabeledsquare,thenumberonthe
top
faceofthediemust
equalthelabel.Squaresthatareneitherlabelednormarkedare
free
.You
maynotrollthedieo˙theedgesofthegrid.Arollingdiemazeis
solvable
ifitispossibletoplaceadieonthelowerleftsquareandrollittotheupper
rightsquareundertheseconstraints.
Figure5.23.
Rollingadie
Figure
5.24
showsfourrollingdiemazes.Assumingweuseastandard
diewith
1
and
6
onoppositesides,onlythe˝rsttwomazesaresolvable.
Forexample,the˝rstmazeissolvablebybyplacingthedieonthelower
leftsquarewith
1
onthetopface,andthenrollingthedieeast,thennorth,
thennorth,theneast.
Figure5.24.
Fourrollingdiemazes;onlythe˙rsttwoaresolvable.
(a)
Supposetheinputisatwonalarray
L
[
1..
n
,1..
n
]
,whereeach
entry
L
[
i
,
j
]
storesthelabelofthesquareinthe
i
throwand
j
thcolumn,
where
0
meansthesquareisfreeand

1
meansthesquareisblocked.
221

5.BasicGraphAlgorithms
Describeandanalyzeapolynomiaalgorithmtodeterminewhether
thegivenrollingdiemazeissolvable.
ª
(b)
Nowsupposethemazeisspeci˝ed
implicitly
byalistoflabeledand
blockedsquares.Speci˝cally,supposetheinputconsistsofaninteger
M
,
specifyingtheheightandwidthofthemaze,andanarray
S
[
1..
n
]
,
whereeachentry
S
[
i
]
isatriple
(
x
,
y
,
L
)
indicatingthatsquare
(
x
,
y
)
haslabel
L
.Asintheexplicitencoding,label

1
indicatesthatthe
squareisblocked;freesquaresarenotlistedin
S
atall.Describeand
analyzeane˚cientalgorithmtodeterminewhetherthegivenrolling
diemazeissolvable.Forfullcredit,therunningtimeofyouralgorithm
shouldbepolynomialintheinputsize
n
.
[Hint:Youhavesomefreedominhowtoplacetheinitialdie.Thereare
rollingdiemazesthatcanbesolvedonlyiftheinitialpositionischosen
correctly.]
ª
27.
Supposeyouaregivenanarbitrarydirectedgraph
G
inwhicheachedgeis
coloredeitherredorblue,alongwithtwospecialvertices
s
and
t
.
(a)
Describeanalgorithmthateithercomputesawalkfrom
s
to
t
suchthat
thepatternofredandblueedgesalongthewalkisapalindrome,or
correctlyreportsthatnosuchwalkexists.
(b)
Describeanalgorithmthateithercomputesthe
shortest
walkfrom
s
to
t
suchthatthepatternofredandblueedgesalongthewalkisa
palindrome,orcorrectlyreportsthatnosuchwalkexists.
[Hint:Wheredidwelastseepalindromes?]
«
ª
28.
Draughts,alsoknownintheUnitedStatesasisagameplayed
onan
m

m
gridofsquares,alternatelycoloredlightanddark.
18
Thegame
isusuallyplayedonan
8

8
or
10

10
board,buttheruleseasilygeneralize
toanyboardsize.Eachdarksquareisoccupiedbyatmostonegamepiece
(usuallycalleda
checker
intheU.S.),whichiseitherblackorwhite;light
squaresarealwaysempty.Oneplayermovesthewhitepieces;
theothermovestheblackpieces.Aplayerloseswhenherlast
pieceistakeno˙theboard.
18
ThecountingtablesusedbymedievalEnglishgovernmentaccountantswerecoveredbya
greenclothwithblacksquaresinacheckerpattern;dishapedcounterswereplacedinthese
squarestorepresentvalues.Forthisreason,theBritishgovernment'saccountantshavebeen
collectivelyknownsincethe10thcenturyasthe
Exchequer
.Theactualcountingtableswereused
bytheExchequertotallytaxpaymentswellintothe19thcentury.
222

Exercises
Considerthefollowingsimpleversionofthegame,essentiallyAmerican
checkersorBritishdraughts,butwhereeverypieceisaking.
19
Piecescan
bemovedinanyofthefourdiagonaldirections.Oneachturn,aplayer
either
moves
oneofherpiecesonestepdiagonallyintoanemptysquare,
ormakesaseriesof
jumps
withoneofherpieces.Ineachjump,thepiece
movestoanemptysquaretwostepsawayinanydiagonaldirection,but
onlyiftheintermediatesquareisoccupiedbyapieceoftheoppositecolor;
thisenemypieceis
captured
andimmediatelyremovedfromtheboard.All
jumpsinthesameturnmustbemadewiththesamepiece.
DescribeanalgorithmtodecidewhetherWhitecancaptureeveryblack
piece,therebywinningthegame,
inasingleturn
.Theinputconsistsof
thewidthoftheboard(
m
),alistofpositionsofwhitepieces,andalist
ofpositionsofblackpieces.Forfullcredit,youralgorithmshouldrun
in
O
(
n
)
time,where
n
isthetotalnumberofpieces.
[Hint:Thegreedy
kearbitraryjumpsuntilyougetstu
not
always˝nd
awinningsequenceofjumpsevenwhenoneexists.Seeproblem
5
.Parity,
parity,parity.]
Figure5.25.
Whitewinsinoneturn.
Figure5.26.
Whitecannotwininoneturnfromeitherofthesepositions.
19
Mostothervariantsofdraughtshavewhichbehave
very
di˙erentlythankings
intheBritish/Americangame,andwhichmakethisproblem
much
moredi˚cult,aswewillsee
inChapter
12
.
223


And,forthehousiscrinkledtoandfro,
Andhathsoqueinteweyesforto
Forhitisshapenasthemaseiswr
ThertohaveIaremedieinmythoght,
That,byacleweoftwyne,ashehathgoon,
Thesameweyhemayreturneanoon,
Folwingalweythethreed,ashehathcome.
GeoffreyChaucer,
TheLegendofGoodWomen
(c.1385)
'èbelloilmondoecomesonobruttiidissisollevato.
sarebbebelloilmondosecifosseunaregolapergirareneilabirinti,
risposeilmiomaestro.
beautifultheworldis,andhowuglylabyrinthsare,Isaid,relieved.
beautifultheworldwouldbeiftherewereaprocedureformovingthrough
labyrinths,mymasterreplied.]
UmbertoEco,
Ilnomedellarosa
(1980)
Englishtranslation(
TheNameoftheRose
)byWilliamWeaver(1983)
6
Depth-FirstSearch
Inthepreviouschapter,weconsideredagenerica
ortraversingarbitrarygraphs,bothundirectedanddirected.Inthis
chapter,wefocusonaparticularinstantiationofthisalgorithmcalled

search
,andprimarilyonthebehaviorofthisalgorithmindirectedgraphs.
Althoughsearchcanbeaccuratelydescribedas
searchwithastthealgorithmisnormallyimplementedrecursively,rather
thanusinganexplicitstack:
DFS
(
v
)
:
if
v
isunmarked
mark
v
foreachedge
v

w
DFS
(
w
)
225

6.Depth-FirstSearch
Wecanmakethisalgorithmslightlyfaster(inpractice)bycheckingwhether
anodeismarked
before
werecursivelyexploreit.Thismodi˝cationensures
thatwecall
DFS
(
v
)
onlyonceforeachvertex
v
.Wecanfurthermodifythe
algorithmtocomputeotherusefulinformationabouttheverticesandedges,
byintroducingtwoblsubroutines,
PreVisit
and
PostVisit
,whichwe
leaveunspeci˝edfornow.
DFS
(
v
)
:
mark
v
PreVisit
(
v
)
foreachedge
vw
if
w
isunmarked
parent
(
w
)
 
v
DFS
(
w
)
PostVisit
(
v
)
Recallthatanode
w
is
reachable
fromanothernode
v
inadirectedgraph
G

ormoresimply,
v
canreach
w
andonlyif
G
containsadirectedpathfrom
v
to
w
.Let
reach
(
v
)
denotethesetofverticesreachablefrom
v
(including
v
itself).Ifweunmarkallverticesin
G
,andthencall
DFS
(
v
)
,thesetofmarked
verticesisprecisely
reach
(
v
)
.
Reachabilityinundirectedgraphsissymmetric:
v
canreach
w
ifandonly
if
w
canreach
v
.Asaresult,afterunmarkingallverticesofanundirected
graph
G
,calling
DFS
(
v
)
traversestheentirecomponentof
v
,andtheparent
pointersde˝neaspanningtreeofthatcomponent.
Thesituationismoresubtlewithdirectedgraphs,asshowninthe˝gure
below.Eventhoughthegraphisnndi˙erentverticescanreach
di˙erent,andpotentiallyoverlapping,portionsofthegraph.Theparent
pointersassignedby
DFS
(
v
)
de˝neatreerootedat
v
whoseverticesare
precisely
reach
(
v
)
,butthisisnotnecessarilyaspanningtreeofthegraph.
Figure6.1.
Depth-˙rsttreesrootedatdifferentverticesinthesamedirectedgraph.
Asusual,wecanextendourreachabilityalgorithmtotraversethe
entire
inputgraph,evenifitisdisconnected,usingthestandardwrapperfunction
shownontheleftinFigure
6.2
.Hereweaddagenericblsubroutine
226

6.1.PreorderandPostorder
Preprocess
toperformanynecessarypreprocessingforthe
PreVisit
and
PostVisit
functions.
DFSAll
(
G
)
:
Preprocess
(
G
)
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
DFS
(
v
)
DFSAll
(
G
)
:
Preprocess
(
G
)
addvertex
s
forallvertices
v
addedge
s

v
unmark
v
DFS
(
s
)
Figure6.2.
Twoformulationsofthestandardwrapperalgorithmfordepth-˙rstsearch
Alternatively,ifweareallowedtomodifythegraph,wecanaddanew
source
vertex
s
,withedgestoeveryothervertexin
G
,andthenmakeasingle
callto
DFS
(
s
)
,asshownontherightofFigure
6.2
.Nowtheresultingparent
pointersalwaysde˝neaspanningtreeofthe
augmented
inputgraph,butnotof
the
original
inputgraph.Otherwise,thetwowrapperfunctionshaveessentially
identicalbehavior;choosingoneortheotherisentirelyamatterofconvenience.
1
Again,thisalgorithmbehavesslightlydi˙erentlyforundirectedanddirected
graphs.Inundirectedgraphs,aswesawinthepreviouschapter,itiseasyto
adapt
DFSAll
tocountthecomponentsofagraph;inparticular,theparent
pointerscomputedby
DFSAll
de˝neaspanningforestoftheinputgraph,
containingaspanningtreeforeachcomponent.Whenthegraphisdirected,
however,
DFSAll
maydiscoveranynumberofmponbetween
1
and
V
,
evenwhenthegraphisnndependingontheprecisestructureofthe
graphandtheorderinwhichthewrapperalgorithmvisitsthevertices.
6.1PreorderandPostorder
Hopefullyyouarealreadyfamiliarwithpreorderandpostordertraversalsof
rooted
trees
,bothofwhichcanbecomputedusingsearch.Similar
traversalorderscanbede˝nedforarbitrarydirectedgraeniftheyare
disconnectpassingaroundacounter,asshowninFigure
6.3
.Equiv
lently,wecanuseourgenericalgorithmwiththefollowing
subroutines
Preprocess
,
PreVisit
,and
PostVisit
.
Preprocess
(
G
)
:
clock
 
0
PreVisit
(
v
)
:
clock
 
clock
+
1
v
.
pre
 
clock
PostVisit
(
v
)
:
clock
 
clock
+
1
v
.
post
 
clock
1
Theequivalenceofthesetwowrapperfunctionsisaspeci˝cfeatureof
depth
search.
Inparticular,wrapping
breadth
searchinafooptovisiteveryvertexdoes
not
yieldthe
sametraversalorderasaddingasourcevertexandinvokingsearchat
s
.
227

6.Depth-FirstSearch
DFSAll
(
G
)
:
clock
 
0
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
clock
 
DFS
(
v
,
clock
)
DFS
(
v
,
clock
)
:
mark
v
clock
 
clock
+
1
;
v
.
pre
 
clock
foreachedge
v

w
if
w
isunmarked
w
.
parent
 
v
clock
 
DFS
(
w
,
clock
)
clock
 
clock
+
1
;
v
.
post
 
clock
return
clock
Figure6.3.
De˙ningpreorderandpostorderviadepth-˙rstsearch.
Ineitherformulation,thisalgorithmassignsassigns
v
.
pre
(andadvancesthe
clock)justafterpushing
v
ontotherecursionstack,anditassigns
v
.
post
(and
advancestheclock)justbeforepopping
v
o˙therecursionstack.Itfollowsthat
foranytwovertices
u
and
v
,theintervals
[
u
.
pre
,
u
.
post
]
and
[
v
.
pre
,
v
.
post
]
are
eitherdisjointornested.Moreover,
[
u
.
pre
,
u
.
post
]
contains
[
v
.
pre
,
v
.
post
]
ifand
onlyif
DFS
(
v
)
iscalledduringtheexecutionof
DFS
(
u
)
,orequivalently,ifand
onlyif
u
isanancestorof
v
inthe˝nalforestofparentpointers.
After
DFSAll
labelseverynodeinthegraph,thelabels
v
.
pre
de˝nea
preordering
ofthevertices,andthelabels
v
.
post
de˝nea
postordering
ofthe
vertices.
2
Withafewtrivialexceptions,everygraphhasseveraldi˙erent
andpostorderings,dependingontheorderthat
DFS
considersedgesleaving
eachvertex,andtheorderthat
DFSAll
considersvertices.
Fortherestofthischapter,wereferto
v
.
pre
asthe
startingtime
of
v
(or
lessformally,
v
st
v
.
post
asthe
˝nishingtime
of
v
(orlessformally,

v
˝nisandtheintervalbetweenthestartingand˝nishingtimesas
the
activeinterval
of
v
(orlessformally,e
v
isactiv
ClassifyingVerticesandEdges
Duringtheexecutionof
DFSAll
,eachvertex
v
oftheinputgraphhasoneof
threestates:
‹
new
if
DFS
(
v
)
hasnotbeencalled,thatis,if
clock
<
v
.
pre
;
‹
active
if
DFS
(
v
)
hasbeencalledbuthasnotreturned,thatis,if
v
.
pre

clock
<
v
.
post
;
‹
˝nished
if
DFS
(
v
)
hasreturned,thatis,if
v
.
post

clock
.
Becausestartingand˝nishingtimescorrespondtopushesandpopsonthe
recursionstack,avertexisactiveifandonlyifitisontherecursionstack.It
followsthattheactivenodesalwayscompriseadirectedpathin
G
.
2
Confusingly,
both
oftheseordersaresometimescalledPleasedon't
dothat.
228

6.1.PreorderandPostorder
Figure6.4.
Adepth-˙rstforestofadirectedgraph,andthecorrespondingactiveintervalsofitsvertices,
de˙ningthepreordering
abfgchdlokpeinjm
andthepostordering
dkoplhcgfbamjnie
.Forestedgesare
solid;dashededgesareexplainedinFigure
6.5
.
Theedgesoftheinputgraphfallintofourdi˙erentclasses,dependingon
howtheiractiveintervalsintersect.Fixyourfavoriteedge
u

v
.
‹
If
v
isnewwhen
DFS
(
u
)
begins,then
DFS
(
v
)
mustbecalledduringthe
executionof
DFS
(
u
)
,eitherdirectlyorthroughsomeintermediaterecursive
calls.Ineithercase,
u
isaproperancestorof
v
intheforest,and
u
.
pre
<
v
.
pre
<
v
.
post
<
u
.
post
.

If
DFS
(
u
)
calls
DFS
(
v
)
directly,then
u
=
v
.
parent
and
u

v
iscalleda
treeedge
.

Otherwise,
u

v
iscalleda
forwardedge
.
‹
If
v
isactivewhen
DFS
(
u
)
begins,then
v
isalreadyontherecursionstack,
whichimpliestheoppositenestingorder
v
.
pre
<
u
.
pre
<
u
.
post
<
v
.
post
.
Moreover,
G
mustcontainadirectedpathfrom
v
to
u
.Edgessatisfyingthis
conditionarecalled
backedges
.
‹
If
v
is˝nishedwhen
DFS
(
u
)
begins,weimmediatelyhave
v
.
post
<
u
.
pre
.
Edgessatisfyingthisconditionarecalled
crossedges
.
‹
Finally,thefourthordering
u
.
post
<
v
.
pre
isimpossible.
TheseedgeclassesareillustratedinFigure
6.5
.Again,theactualclassi˝cation
ofedgesdependsontheorderinwhich
DFSAll
considersverticesandtheorder
inwhich
DFS
considerstheedgesleavingeachvertex.
229

6.Depth-FirstSearch
Figure6.5.
Classi˙cationofedgesbydepth-˙rstsearch.
Finally,thefollowingkeylemmacharacterizesancestorsanddescendantsin
anyforestaccordingtovertexstatesduringthetraversal.
Lemma6.1.
Fixanarbitrarytraversalofanydirectedgraph
G
.The
followingstatementsareequivalentforallvertices
u
and
v
of
G
.
(a)
u
isanancestorof
v
intheforest.
(b)
u
.
pre

v
.
pre
<
v
.
post

u
.
post
.
(c)
Justafter
DFS
(
v
)
iscalled,
u
isactive.
(d)
Justbefore
DFS
(
u
)
iscalled,thereisapathfrom
u
to
v
inwhichevery
vertex(including
u
and
v
)isnew.
Proof:
First,suppose
u
isanancestorof
v
intheforest.Thenby
de˝nitionthereisapath
P
oftreeedges
u
to
v
.Byinductiononthepath
length,wehave
u
.
pre

w
.
pre
<
w
.
post

u
.
post
foreveryvertex
w
in
P
,and
thuseveryvertexin
P
isnewbefore
DFS
(
u
)
iscalled.Inparticular,wehave
u
.
pre

v
.
pre
<
v
.
post

u
.
post
,whichimpliesthat
u
isactivewhile
DFS
(
v
)
is
executing.
Becauseparentpointerscorrespondtorecursivecalls,
u
.
pre

v
.
pre
<
v
.
post

u
.
post
impliesthat
u
isanancestorof
v
.
Suppose
u
isactivejustafter
DFS
(
v
)
iscalled.Then
u
.
pre

v
.
pre
<
v
.
post

u
.
post
,whichimpliesthatthereisapathof(zeroormore)treeedgesfrom
u
,
throughtheintermediatenodesontherecursionstack(ifany),to
v
.
Finally,suppose
u
isnotanancestorof
v
.Fixanarbitrarypath
P
from
u
to
v
,let
x
bethe˝rstvertexin
P
thatisnotadescendantof
u
,andlet
w
be
thepredecessorof
x
in
P
.Theedge
w

x
guaranteesthat
x
.
pre
<
w
.
post
,and
w
.
post
<
u
.
post
because
w
isadescendantof
u
,so
x
.
pre
<
u
.
post
.Itfollowsthat
x
.
pre
<
u
.
pre
,becauseotherwise
x
wouldbeadescendantof
u
.Becauseactive
intervalsareproperlynested,thereareonlytwopossibilities:
‹
If
u
.
post
<
x
.
post
,then
x
isactivewhen
DFS
(
u
)
iscalled.
‹
If
x
.
post
<
u
.
pre
,then
x
isalready˝nishedwhen
DFS
(
u
)
iscalled.
230

6.2.DetectingCycles
Weconcludethat
every
pathfrom
u
to
v
containsavertexthatisnotnewwhen
DFS
(
u
)
iscalled.
…
6.2DetectingCycles
A
directedacyclicgraph
or
dag
isadirectedgraphwithnodirectedcycles.
Anyvertexinadagthathasnoincomingverticesiscalleda
source
;anyvertex
withnooutgoingedgesiscalleda
sink
.Anisolatedvertexwithnoincident
edgesatallisbothasourceandasink.Everydaghasatleastonesourceand
onesink,butmayhavemorethanoneofeach.Forexample,inthegraphwith
n
verticesbutnoedges,everyvertexisasourceandeveryvertexisasink.
Figure6.6.
Adirectedacyclicgraph.Vertices
e
,
f
,and
j
aresources;vertices
b
,
c
,and
p
aresinks.
Recallfromourearliercaseanalysisthatif
u
.
post
<
v
.
post
foranyedge
u

v
,
thegraphcontainsadirectedpathfrom
v
to
u
,andthereforecontainsadirected
cycle
throughtheedge
u

v
.Thus,wecandeterminewhetheragivendirected
graph
G
isadagin
O
(
V
+
E
)
timebycomputingapostorderingofthevertices
andthencheckingeachedgebybruteforce.
Alternatively,insteadofnumberingthevertices,wecanexplicitlymaintain
thestatusofeachvertexandimmediatelyreturn
False
ifweeverdiscover
anedgetoanactivevertex.Thisalgorithmalsorunsin
O
(
V
+
E
)
time;see
Figure
6.7
.
IsAcyclic
(
G
)
:
forallvertices
v
v
.
status
 
New
forallvertices
v
if
v
.
status
=
New
if
IsAcyclicDFS
(
v
)=
False
return
False
return
True
IsAcyclicDFS
(
v
)
:
v
.
status
 
Active
foreachedge
v

w
if
w
.
status
=
Active
return
False
elseif
w
.
status
=
New
if
IsAcyclicDFS
(
w
)=
False
return
False
v
.
status
 
Finished
return
True
Figure6.7.
Alinear-timealgorithmtodetermineifagraphisacyclic.
231

6.Depth-FirstSearch
6.3TopologicalSort
A
topologicalordering
ofadirectedgraph
G
isatotalorder
˚
onthevertices
suchthat
u
˚
v
foreveryedge
u

v
.Lessformally,atopologicalordering
arrangestheverticesalongahorizontallinesothatalledgespointfromleftto
right.Atopologicalorderingisclearlyimpossibleifthegraph
G
hasadirected
cyclrightmostvertexofthecyclewouldhaveanedgepointingtotheleft!
Ontheotherhand,consideranarbitrarypostorderingofanarbitrary
directedgraph
G
.Ourearlieranalysisimpliesthat
u
.
post
<
v
.
post
foranyedge
u

v
,then
G
containsadirectedpathfrom
v
to
u
,andthereforecontainsa
directedcyclethrough
u

v
.Equivalently,if
G
isacyclic,then
u
.
post
>
v
.
post
for
everyedge
u

v
.Itfollowsthateverydirectedacyclicgraph
G
hasatopological
ordering;inparticular,thereversalofanypostorderingof
G
isatopological
orderingof
G
.
Figure6.8.
ReversedpostorderingofthedagfromFigure
6.6
.
Ifwerequirethetopologicalorderinginaseparatedatastructure,wecan
simplywritetheverticesintoanarrayinreversepostorder,in
O
(
V
+
E
)
time,as
showninFigure
6.9
.
ImplicitTopologicalSort
Butrecordingthetopologicalorderintoaseparatedatastructureisusually
overkill.Inmostapplicationsoftopologicalsort,theorderedlistofthevertices
isnotouractualgoal;rather,wewanttoperformsome˝xedcomputationat
eachvertexofthegraph,eitherintopologicalorderorinreversetopological
order.Fortheseapplications,itisnotnecessaryto
record
thetopologicalorder
atall!
232

6.3.TopologicalSort
TopologicalSort
(
G
)
:
forallvertices
v
v
.
status
 
New
clock
 
V
forallvertices
v
if
v
.
status
=
New
clock
 
TopSortDFS
(
v
,
clock
)
return
S
[
1..
V
]
TopSortDFS
(
v
,
clock
)
:
v
.
status
 
Active
foreachedge
v

w
if
w
.
status
=
New
clock
 
TopSortDFS
(
v
,
clock
)
elseif
w
.
status
=
Active
failgracefully
v
.
status
 
Finished
S
[
clock
]
 
v
clock
 
clock

1
return
clock
Figure6.9.
Explicittopologicalsort
Ifwewanttoprocessadirectedacyclicgraphin
reverse
topologicalorder,
itsu˚cestoprocesseachvertexattheendofitsrecursivesearch.
Afterall,topologicalorderisthesameasreversedpostorder!
PostProcess
(
G
)
:
forallvertices
v
v
.
status
 
New
forallvertices
v
if
v
isunmarked
PostProcessDFS
(
v
)
PostProcessDFS
(
v
)
:
v
.
status
 
Active
foreachedge
v

w
if
w
.
status
=
New
PostProcessDFS
(
w
)
elseif
w
.
status
=
Active
failgracefully
v
.
status
 
Finished
Process
(
v
)
Ifwealready
know
thattheinputgraphisacyclic,wecanfurthersimplifythe
algorithmbysimplymarkingverticesinsteadofrecordingtheirsearchstatus.
PostProcessDag
(
G
)
:
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
PostProcessDagDFS
(
s
)
PostProcessDagDFS
(
v
)
:
mark
v
foreachedge
v

w
if
w
isunmarked
PostProcessDagDFS
(
w
)
Process
(
v
)
Thisisjustthestandardsearchalgorithm,with
PostVisit
renamed
to
Process
!
Becauseitissuchacommonoperationondirectedacyclicgraphs,Isometimes
expresspostorderprocessingofadagidiomaticallyasfollows:
PostProcessDag
(
G
)
:
forallvertices
v
inpostorder
Process
(
v
)
233

6.Depth-FirstSearch
Forexample,ourearlierexplicittopologicalsortalgorithmcanbewrittenas
follows:
TopologicalSort
(
G
)
:
clock
 
V
forallvertices
v
inpostorder
S
[
clock
]
 
v
clock
 
clock

1
return
S
[
1..
V
]
Toprocessadagin
forward
topologicalorder,wecanrecordatopological
orderingoftheverticesintoanarrayandthenrunasimplefoop.Alternatively,
wecanapplysearchtothe
reversal
of
G
,denoted
rev
(
G
)
,obtained
byreplacingeacheach
v

w
withitsreversal
w

v
.Reversingadirectedcycle
givesusanotherdirectedcyclewiththeoppositeorientation,sothereversal
ofadagisanotherdag.Everysourcein
G
isasinkin
rev
(
G
)
andviceversa;it
followsinductivelythateverytopologicalorderingof
rev
(
G
)
isthereversalofa
topologicalorderingof
G
.
3
Thereversalofanydirectedgraph(representedina
standardadjacencylist)canbecomputedin
O
(
V
+
E
)
time;thedetailsofthis
constructionareleftasaneasyexercise.
6.4MemoizationandDynamicProgramming
Ourtopologicalsortalgorithmisarguablythemodelforawideclassofdynamic
programmingalgorithms.Recallthatthe
dependencygraph
ofarecurrence
hasavertexforeveryrecursivesubproblemandanedgefromonesubproblem
toanotherifevaluatingthe˝rstsubproblemrequiresarecursiveevaluation
ofthesecond.Thedependencygraphmustbeacyclic,orthenaïverecursive
algorithmwouldneverhalt.
Evaluatinganyrecurrencewithmemoizationis
exactly
thesameasperf
ingasearchofthedependencygraph.Inparticular,avertexofthe
dependencygraphisifthevalueofthecorrespondingsubproblemhas
alreadybeencomputed.Theblsubroutines
PreVisit
and
PostVisit
areproxiesfortheactualvaluecomputation.SeeFigure
6.10
.
Carryingthisanalogyfurther,evaluatingarecurrence
usingdynamic
gramming
isthesameasevaluatingallsubproblemsinthedependencygraphof
therecurrenceinreversetopologicalerysubproblemisconsidered
after
thesubproblemsitdependson.Thus,
every
dynamicprogramminga
gorithmisequivalenttoapostordertraversalofthedependencygraphofits
underlyingrecurrence!
3
Apostorderingofthereversalof
G
isnotnecessarilythereversalofapostorderingof
G
,
eventhoughbotharetopologicalorderingsof
G
.
234

6.4.MemoizationandDynamicProgramming
Memoize
(
x
)
:
if
value
[
x
]
isunde˝ned
initialize
value
[
x
]
forallsubproblems
y
of
x
Memoize
(
y
)
update
value
[
x
]
basedon
value
[
y
]
˝nalize
value
[
x
]
DFS
(
v
)
:
if
v
isunmarked
mark
v
PreVisit
(
x
)
foralledges
v

w
DFS
(
w
)
PostVisit
(
x
)
Figure6.10.
Memoizedrecursionisdepth-˙rstsearch.Depth-˙rstsearchismemoizedrecursion.
DynamicProgramming
(
G
)
:
forallsubproblems
x
inpostorder
initialize
value
[
x
]
forallsubproblems
y
of
x
update
value
[
x
]
basedon
value
[
y
]
˝nalize
value
[
x
]
Figure6.11.
Dynamicprogrammingispostordertraversal.
However,therearesomeminordi˙erencesbetweenmostdynamic
mingalgorithmsandtopologicalsort.First,inmostdynamicprogramming
algorithms,thedependencygraphis
implicit
nodesandedgesarenot
explicitlystoredinmemory,butratherareencodedbytheunderlying
rence.Butthisdi˙erencereallyisminor;aslongaswecanenumeraterecursive
subproblemsinconstanttimeeach,wecantraversethedependencygraph
exactly
asif
itwereexplicitlystoredinanadjacencylist.
Moresigni˝cantly,mostdynamicprogrammingrecurrenceshavehighly
structureddependencygraphs.Forexample,aswediscussedinChapter
5
,
thedependencygraphfortheeditdistancerecurrenceisaregulargridwith
diagonals,andthedependencygraphforoptimalbinarysearchtreesisan
uppertriangulargridwithallpossiblerightwardandupwardedges.This
regularstructureallowsustoasuitableevaluationorderdirectlyinto
thealgorithm,typicallyasacollectionofnestedloops,sothereisnoneedto
topologicallysortthedependencygraphatruntime.Wepreviouslycalledthe
reversetopologicalorderan
evaluationorder
.
DynamicProgramminginDags
Conversely,wecanusesearchtobuilddynamicprogramming
algorithmsforproblemswithlessstructureddependencygraphs.Forexample,
considerthe
longestpath
problem,whichasksforthepathof
maximum
total
weightfromonenode
s
toanothernode
t
inadirectedgraph
G
withweighted
edges.Ingeneraldirectedgraphs,thelongestpathproblemis(byan
easyreductionfromthetravelingsalesmanproblem;seeChapter
12
),butitis
235

6.Depth-FirstSearch
Figure6.12.
Thedependency
dag
oftheeditdistancerecurrence.
easytoiftheinputgraph
G
isacyclic,wecancomputethelongestpathin
G
in
lineartime,asfollows.
Fixthetargetvertex
t
,andforanynode
v
,let
LLP
(
v
)
denotetheLength
oftheLongestPathin
G
from
v
to
t
.If
G
isadag,thisfunctionsatis˝esthe
recurrence
LLP
(
v
)=
¨
0
if
v
=
t
,
max

`
(
v

w
)+
LLP
(
w
)


v

w
2
E

otherwise,
where
`
(
v

w
)
denotesthegivenweightofedge
v

w
,and
max
?
=

.Inparticular,if
v
isa
sink
butnotequalto
t
,then
LLP
(
v
)=

.
Thedependencygraphforthisrecurrenceistheinputgraph
G
itself:
subproblem
LLP
(
v
)
dependsonsubproblem
LLP
(
w
)
ifandonlyif
v

w
isan
edgein
G
.Thus,wecanevaluatethisrecursivefunctionin
O
(
V
+
E
)
timeby
performingasearchof
G
,startingat
s
.Thealgorithmmemoizes
eachlength
LLP
(
v
)
intoanextra˝eldinthecorrespondingnode
v
.
LongestPath
(
v
,
t
)
:
if
v
=
t
return
0
if
v
.
LLP
isunde˝ned
v
.
LLP
 
foreachedge
v

w
v
.
LLP
 
max

v
.
LLP
,
`
(
v

w
)+
LongestPath
(
w
,
t
)

return
v
.
LLP
Inprinciple,wecantransformthismemoizedrecursivealgorithmintoa
dynamicprogrammingalgorithmviatopologicalsort:
236

6.5.StrongConnectivity
LongestPath
(
s
,
t
)
:
foreachnode
v
inpostorder
if
v
=
t
v
.
LLP
 
0
else
v
.
LLP
 
foreachedge
v

w
v
.
LLP
 
max

v
.
LLP
,
`
(
v

w
)+
w
.
LLP

return
s
.
LLP
Thesetwoalgorithmsarearguablyidenticarecursioninthe˝rstalgorithm
andthefoopinthesecondalgorithmrepresentthe
search!Choosingoneoftheseformulationsovertheotherisentirelyamatter
ofconvenience.
Almostanydynamicprogrammingproblemthatasksforanoptimal
sequence
ofdecisionscanberecastas˝ndinganoptimal
path
insomeassociateddag.For
example,thetextsegmentation,subsetsum,longestincreasingsubsequence,
andeditdistanceproblemsweconsideredinChapters
2
and
3
canallbe
reformulatedas˝ndingeitheralongestpathorashortestpathinadag,possibly
withweightedverticesoredges.Ineachcase,thedaginquestionisthe
dependencygraphoftheunderlyingrecurrence.Ontheotherhand,
shadynamicprogrammingproblems,like˝ndingoptimalbinarysearch
treesormaximumindependentsetsintrees,cannotberecastas˝ndingan
optimal
path
inadag.
6.5StrongConnectivity
Let'sgobacktotheproperde˝nitionofconnectivityindirectedgraphs.Recall
thatonevertex
u
can
reach
anothervertex
v
inadirectedgraph
G
if
G
contains
adirectedpathfrom
u
to
v
,andthat
reach
(
u
)
denotesthesetofallvertices
that
u
canreach.Twovertices
u
and
v
are
stronglyconnected
if
u
canreach
v
and
v
canreach
u
.Adirectedgraphisstronglyconnectedifandonlyifevery
pairofverticesisstronglyconnected.
Tediousde˝nitiosingimpliesthatstrongconnectivityisanequivalence
relationoverthesetofverticesofanydirectedgraph,justlikeconnectivityin
undirectedgraphs.Theequivalenceclassesofthisrelationarecalledthe
strongly
connectedcomponents
moresimply,the
strongcomponents
f
G
.Equi
alently,astrongcomponentof
G
isamaximalstronglyconnectedsubgraph
of
G
.Adirectedgraph
G
isstronglyconnectedifandonlyif
G
hasexactlyone
strongcomponent;attheotherextreme,
G
isadagifandonlyifeverystrong
componentof
G
consistsofasinglevertex.
The
strongcomponentgraphscc
(
G
)
isanotherdirectedgraphobtained
from
G
bycontractingeachstrongcomponenttoasinglevertexandcollapsing
237

6.Depth-FirstSearch
paralleledges.(Thestrongcomponentgraphissometimesalsocalledthe
metph
or
condensation
of
G
.)It'snothardtoprove(hint,hint)that
scc
(
G
)
isalwaysadag.Thus,atleastinprinciple,itispossibletotopologicallyorder
thestrongcomponentsof
G
;thatis,theverticescanbeorderedsothatevery
back
edgejoinstwoedgesinthesamestrongcomponent.
Figure6.13.
Thestrongcomponentsofagraph
G
andthestrongcomponentgraph
scc
(
G
)
.
Itisstraightforwardtocomputethestrongcomponentofasinglevertex
v
in
O
(
V
+
E
)
time.Firstwecompute
reach
(
v
)
viawhatevsearch.Then
wecompute
reach

1
(
v
)=
f
u
j
v
2
reach
(
u
)
g
bysearchingthereversalof
G
.
Finally,thestrongcomponentof
v
istheintersection
reach
(
v
)
\
reach

1
(
v
)
.In
particular,wecandeterminewhethertheentiregraphisstronglyconnectedin
O
(
V
+
E
)
time.
Similarly,wecancompute
all
thestrongcomponentsinadirectedgraph
bycombiningthepreviousalgorithmwithourstandardwrapperfunction.
However,theresultingalgorithmrunsin
O
(
VE
)
time;thereareatmost
V
strong
components,andeachrequires
O
(
E
)
timetodiscover,evenwhenthegraphisa
dag.Surelywecandobetter!Afterall,weonlyneed
O
(
V
+
E
)
timetodecide
whethereverystrongcomponentisasinglevertex.
6.6StrongComponentsinLinearTime
Infact,thereareseveralalgorithmstocomputestrongcomponentsin
O
(
V
+
E
)
time,allofwhichrelyonthefollowingobservation.
Lemma6.2.
Fixatraversalofanydirectedgraph
G
.Eachstrong
component
C
of
G
containsexactlyonenodethatdoesnothaveaparentin
C
.
(Eitherthisnodehasaparentinanotherstrongcomponent,orithasnoparent.)
Proof:
Let
C
beanarbitrarystrongcomponentof
G
.Consideranypathfrom
onevertex
v
2
C
toanothervertex
w
2
C
.Everyvertexonthispathcanreach
w
,
andthuscanreacheveryvertexin
C
;symmetrically,everynodeonthispathcan
bereachedby
v
,andthuscanbereachedbyeveryvertexin
C
.Weconclude
thateveryvertexonthispathisalsoin
C
.
238

6.6.StrongComponentsinLinearTime
Let
v
bethevertexin
C
withtheearlieststartingtime.If
v
hasaparent,
then
parent
(
v
)
startsbefore
v
andthuscannotbein
C
.
Nowlet
w
beanothervertexin
C
.Justbefore
DFS
(
v
)
iscalled,everyvertex
in
C
isnew,sothereisapathofnewverticesfrom
v
to
w
.Lemma
6.1
now
impliesthat
w
isadescendantof
v
intheforest.Everyvertexonthe
pathoftreeedges
v
to
w
liesin
C
;inparticular,
parent
(
w
)
2
C
.
…
Thepreviouslemmaimpliesthateachstrongcomponentofadirected
graph
G
de˝nesaconnectedsubtreeofanyforestof
G
.Inparticular,
foranystrongcomponent
C
,thevertexin
C
withtheearlieststartingtimeisthe
lowestcommonancestorofallverticesin
C
;wecallthisvertexthe
root
of
C
.
Figure6.14.
Strongcomponentsarecontiguousinthedepth-˙rstforest.
I'llpresenttwoalgorithms,bothofwhichfollowthesameintuitiveoutline.
Let
C
beanystrongcomponentof
G
thatisasinkin
scc
(
G
)
;wecall
C
a
sink
component
.Equivalently,
C
isasinkcomponentifthereachofanyvertex
in
C
isprecisely
C
.Wecan˝ndallthestrongcomponentsin
G
byrepeatedly
˝ndingavertex
v
insomesinkcomponent(somehow),˝ndingthevertices
reachablefrom
v
,andremovingthatsinkcomponentfromtheinputgraph,
untilnoverticesremain.Thisisn'tquiteanalgorithmyet,becauseit'snotclear
howto˝ndavertexinasinkcomponent!
StrongComponents
(
G
)
:
count
 
0
while
G
isnoy
C
 
?
count
 
count
+
1
v
 
anyvertexinasinkcomponentof
G
hh
Magic!
ii
forallvertices
w
in
reach
(
v
)
w
.
label
 
count
add
w
to
C
remove
C
anditsincomingedgesfrom
G
Figure6.15.
Almostanalgorithmtocomputestrongcomponents.
239

6.Depth-FirstSearch
KosarajuandSharir'sAlgorithm
At˝rstglance,˝ndingavertexinasinkcomponent
quickly
seemsquitedi˚cult.
However,it'sactuallyquiteeasyto˝ndavertexina
source
componstrong
componentof
G
thatcorrespondstoa
source
in
scc
(
G
)
singsearch.
Lemma6.3.
Thelastvertexinanypostorderingof
G
liesinasourcecomponent
of
G
.
Proof:
Fixatraversalof
G
,andlet
v
bethelastvertexintheresulting
postordering.Then
DFS
(
v
)
mustbethelastdirectcallto
DFS
madebythe
wrapperalgorithm
DFSAll
.Moreover,
v
istherootofoneofthetreesin
theforest,soanynode
x
with
x
.
post
>
v
.
pre
isadescendantof
v
.
Finally,
v
istherootofitsstrongcomponent
C
.
Forthesakeofargument,supposethereisanedge
x

y
suchthat
x
62
C
and
y
2
C
.Then
x
canreach
y
,and
y
canreach
v
,so
x
canreach
v
.Because
v
istherootof
C
,vertex
y
isadescendantof
v
,andthus
v
.
pre
<
y
.
pre
.Theedge
x

y
guaranteesthat
y
.
pre
<
x
.
post
andtherefore
v
.
pre
<
x
.
post
.Itfollows
that
x
isadescendantof
v
.Butthen
v
canreach
x
(throughtreeedges),
contradictingourassumptionthat
x
62
C
.
…
Itiseasytocheck(hint,hint)that
rev
(
scc
(
G
))=
scc
(
rev
(
G
))
foranydirected
graph
G
.Thus,the
last
vertexinapostorderingof
rev
(
G
)
liesina
sink
component
oftheoriginalgraph
G
.Thus,ifwetraversethegraphasecondtime,wherethe
wrapperfunctionfollowsareversepostorderingof
rev
(
G
)
,theneachcallto
DFS
visitsexactlyonestrongcomponentof
G
.
4
Puttingeverythingtogether,weobtainthealgorithmshowninFigure
6.16
,
whichcountsandlabelsthestrongcomponentsofanydirectedgraphin
O
(
V
+
E
)
time.Thisalgorithmwasdiscovered(butneverpublished)byRaoKosaraju
in1978,andlaterindependentlyrediscoveredbyMichaSharirin1981.
5
The
Kohariralgorithmhastwophases.The˝rstphaseperformsa
searchof
rev
(
G
)
,pushingeachvertexontoastackwhenitis˝nished.Inthe
secondphase,weperforma
whatever
traversaloftheoriginalgraph
G
,
consideringverticesintheordertheyappearonthestack.Thealgorithmlabels
eachvertexwiththerootofitsstrongcomponent(withrespecttothesecond
traversal).
Figure
6.17
showstheKohariralgorithmrunningonourexample
graph.Withonlyminormodi˝cationstothealgorithm,wecanalsocompute
thestrongcomponentgraph
scc
(
G
)
in
O
(
V
+
E
)
time.
4
Again:Areversepostorderingof
rev
(
G
)
isnotthesameasapostorderingof
G
.
5
TherearerumorsthatthesamealgorithmappearsintheRussianliteratureevenbefore
Kosaraju,butIhaven'tfoundareliablesourceforthatrumoryet.
240

6.6.StrongComponentsinLinearTime
KosarajuSharir
(
G
)
:
S
 
newemptystack
forallvertices
v
unmark
v
v
.
root
 
None
hh
Phase1:Pushinpostorderinrev(G)
ii
forallvertices
v
if
v
isunmarked
PushPostRevDFS
(
v
,
S
)
hh
Phase2:DFSagaininstackorder
ii
while
S
isnoy
v
 
Pop
(
S
)
if
v
.
root
=
None
LabelOneDFS
(
v
,
v
)
PushPostRevDFS
(
v
,
S
)
:
mark
v
foreachedge
u

v
hh
Reversed!
ii
if
u
isunmarked
PushPostRevDFS
(
u
,
S
)
Push
(
v
,
S
)
LabelOneDFS
(
v
,
r
)
:
v
.
root
 
r
foreachedge
v

w
if
w
.
root
=
None
LabelOneDFS
(
w
,
r
)
Figure6.16.
TheKosaraju-Sharirstrongcomponentsalgorithm
Figure6.17.
TheKosaraju-Shariralgorithminaction.Top:Depth-˙rsttraversalofthereversedgraph.
Bottom:Depth-˙rsttraversaloftheoriginalgraph,visitingrootverticesinreversedpostorderfromthe
˙rsttraversal.
241

6.Depth-FirstSearch
ª
Tarjan'sAlgorithm
Anearlierbutconsiderablymoresubtlelinalgorithmtocomputestrong
componentswaspublishedbyBobTarjanin1972.
6
Intuitively,Tarjan'salgorithm
identi˝esa
source
componentof
G
,it,andthenv˝ndsthe
remainingstrongcomponents;however,theentirecomputationhappensduring
asinglesearch.
Fixanarbitrarytraversalofsomedirectedgraph
G
.Foreach
vertex
v
,let
low
(
v
)
denotethesmallest
startingtime
amongallverticesreachable
from
v
byapathoftreeedgesfollowedby
atmostone
noedge.Trivially,
low
(
v
)

v
.
pre
,because
v
canreachitselfthroughzerotreeedgesfollowedby
zeronoedges.Tarjanobservedthatsinkcomponentscanbecharacterized
intermsofthis
low
function.
Lemma6.4.
Avertex
v
istherootofasinkcomponentof
G
ifandonlyif
low
(
v
)=
v
.
pre
and
low
(
w
)
<
w
.
pre
foreveryproperdescendant
w
of
v
.
Proof:
First,let
v
beavertexsuchthat
low
(
v
)=
v
.
pre
.Thenthereisnoedge
w

x
where
w
isadescendantof
v
and
x
.
pre
<
v
.
pre
.Ontheotherhand,
v
cannotreachanyvertex
y
suchthat
y
.
pre
>
v
.
post
.Itfollowsthat
v
can
reachonlyitsdescendants,andthereforeanydescendantof
v
canreachonly
descendantsof
v
.Inparticular,
v
cannotreachitsparent(ifithasone),so
v
is
therootofitsstrongcomponent.
Nowsupposeinadditionthat
low
(
w
)
<
w
.
pre
foreverydescendant
w
of
v
.
Theneachdescendant
w
canreachanothervertex
x
(whichmustbeanother
descendantof
v
)suchthat
x
.
pre
<
w
.
pre
.Thus,byinduction,everydescendant
of
v
canreach
v
.Itfollowsthatthedescendantsof
v
comprisethestrong
component
C
whoserootis
v
.Moreover,
C
mustbeasinkcomponent,because
v
cannotreachanyvertexoutsideof
C
.
Ontheotherhand,suppose
v
istherootofasinkcomponent
C
.Then
v
canreachanothervertex
w
ifandonlyif
w
2
C
.But
v
canreachallofits
descendants,andeveryvertexin
C
isadescendantof
v
,so
v
'sdescendants
comprise
C
.If
low
(
w
)=
w
.
pre
foranyothernode
w
2
C
,then
w
wouldbe
anotherrootof
C
,whichisimpossible.
…
Computing
low
(
v
)
foreveryvertex
v
viasearchisstraightforward;
seeFigure
6.18
.
Lemma
6.4
impliesthatafterrunning
FindLow
,wecanidentifytheroot
of
every
sinkcomponentin
O
(
V
+
E
)
time(byaglobalwhatevsearch),
6
Accordingtolegend,Kosarajuapparentlydiscoveredhisalgorithm
during
analgorithms
lecture.HewassupposedtopresentTarjan'salgorithm,butheforgothisnotes,sohehadto
makeupsomethingelseonthe˛y.TheonlyaspectofthisstorythatI˝ndsurprisingisthat
nobodytellsitaboutSharirorTarjan.
242

6.6.StrongComponentsinLinearTime
FindLow
(
G
)
:
clock
 
0
forallvertices
v
unmark
v
forallvertices
v
if
v
isunmarked
FindLowDFS
(
v
)
FindLowDFS
(
v
)
:
mark
v
clock
 
clock
+
1
v
.
pre
 
clock
v
.
low
 
v
.
pre
foreachedge
v

w
if
w
isunmarked
FindLowDFS
(
w
)
v
.
low
 
min
f
v
.
low
,
w
.
low
g
else
v
.
low
 
min
f
v
.
low
,
w
.
pre
g
Figure6.18.
Computing
low
(
v
)
foreveryvertex
v
.
andthenmarkanddeletethosesinkcomponentsin
O
(
V
+
E
)
additionaltime
(bycallingwhatevsearchateachroot),andthenrecurse.Unfortunately,
theresultingalgorithmmightrequire
V
iterations,eachremovingonlyasingle
vertex,naivelygivingusatotalrunningtimeof
O
(
VE
)
.
Tospeedupthisstrategy,Tarjan'salgorithmmaintainsanauxiliarystackof
vertices(separatefromtherecursionstack).Wheneverwestartanewvertex
v
,
wepushitontothestack.Wheneverwe˝nishavertex
v
,wecompare
v
.
low
with
v
.
pre
.Thenthe
˝rst
timewediscoverthat
v
.
low
=
v
.
pre
,weknowthree
things:
‹
Vertex
v
istherootofasinkcomponent
C
.
‹
Allverticesin
C
appearconsecutivelyatthetopoftheauxiliarystack.
‹
The
deepest
vertexin
C
ontheauxiliarystackis
v
.
Atthispoint,wecanidentifytheverticesin
C
bypoppingthemo˙theauxiliary
stackonebyone,stoppingwhenwepop
v
.
Wecoulddeletetheverticesin
C
andrecursivelycomputethestrong
componentsoftheremaininggraph,butthatwouldbewasteful,becausewe
wouldrepeat
verbatim
allcomputationdonebeforevisiting
v
.Instead,we
label
eachvertexin
C
,identifying
v
astherootofitsstrongcomponent,and
thenignorelabeledverticesfortherestofthesearch.Formally,this
modi˝cationchangesthede˝nitionof
low
(
v
)
tothesmalleststartingtimeamong
allvertices
inthesamestrongcomponentas
v
that
v
canreachbyapathof
treeedgesfollowedbyatmostonenoedge.Buttoprovecorrectness,it's
easiertoobservethatignoringlabeledverticesleadsthealgorithmtoexactly
thesamebehaviorasactuallydeletingthem.
Finally,Tarjan'salgorithmisshowninFigure
6.19
,withthenecessary
modi˝cationsfrom
FindLow
(Figure
6.18
)indicatedinboldred.Therunning
timeofthealgorithmcanbesplitintotwoparts.Eachvertexispushedonto
S
onceandpoppedo˙
S
once,sothetotaltimespentmaintainingtheauxiliary
stack(theredstu˙)is
O
(
V
)
.Ifweignoretheauxiliarystackmaintenance,the
243

6.Depth-FirstSearch
restofthealgorithmisjustastandardsearch.Weconcludethatthe
algorithmrunsin
O
(
V
+
E
)
time
.
Tarjan
(
G
)
:
clock
 
0
S
 
newemptystack
forallvertices
v
unmark
v
v
.
root
 
None
forallvertices
v
if
v
isunmarked
TarjanDFS
(
v
)
TarjanDFS
(
v
)
:
mark
v
clock
 
clock
+
1
v
.
pre
 
clock
v
.
low
 
v
.
pre
Push
(
S
,
v
)
foreachedge
v

w
if
w
isunmarked
TarjanDFS
(
w
)
v
.
low
 
min
f
v
.
low
,
w
.
low
g
else
if
w
.
root
=
None
v
.
low
 
min
f
v
.
low
,
w
.
pre
g
if
v
.
low
=
v
.
pre
repeat
w
 
Pop
(
S
)
w
.
root
 
v
until
w
=
v
Figure6.19.
Tarjan'sstrongcomponentsalgorithm.
Exercises
Depth-˙rstsearch,topologicalsort,andstrongcomponents
0.
(a)
Describeanalgorithmtocomputethereversal
rev
(
G
)
ofadirectedgraph
in
O
(
V
+
E
)
time.
(b)
Provethatforeverydirectedgraph
G
,thestrongcomponentgraph
scc
(
G
)
isacyclic.
(c)
Provethat
scc
(
rev
(
G
))=
rev
(
scc
(
G
))
foreverydirectedgraph
G
.
(d)
Fixanarbitrarydirectedgraph
G
.Foranyvertex
v
of
G
,let
S
(
v
)
denote
thestrongcomponentof
G
thatcontains
v
.Forallvertices
u
and
v
of
G
,
provethat
u
canreach
v
in
G
ifandonlyif
S
(
u
)
canreach
S
(
v
)
in
scc
(
G
)
.
1.
Adirectedgraph
G
is
nnected
if,foreverypairofvertices
u
and
v
,
either
u
isreachablefrom
v
or
v
isreachablefrom
u
(orboth).
(a)
Giveanexampleofadirectedacyclicgraphwithauniquesourcethatis
not
nnected.
(b)
Describeandanalyzeanalgorithmtodeterminewhetheragivendirected
acyclic
graphisnnected.
244

Exercises
(c)
Describeandanalyzeanalgorithmtodeterminewhetheranarbitrary
directedgraphisnnected.
2.
ThepolicedepartmentinthecityofSoobananahasmadeeverystreet
inthecityonay.Despitewidespreadcomplaintsfromconfusedmotorists,
themayorclaimsthatitispossibletolegallydrivefromanyintersectionin
Soobananatoanyotherintersection.
(a)
Thecityneedstoeitherverifyorrefutethemayor'sclaim.Formalizethis
problemintermsofgraphs,andthendescribeandanalyzeanalgorithm
tosolveit.
(b)
Afterrunningyouralgorithmfrompart(a),themayorreluctantlyadmits
thatshewas
lying
misinformed.Callanintersection
x
good
if,forany
intersection
y
thatonecanlegallyreachfrom
x
,itispossibletolegally
drivefrom
y
backto
x
.Nowthemayorclaimsthatover95%ofthe
intersectionsinSoobananaaregood.Describeandanalyzean
e˚cientalgorithmtoverifyorrefuteherclaim.
Forfullcredit,bothalgorithmsshouldruninlineartime.
3.
Supposewearegivenadirectedacyclicgraph
G
withauniquesource
s
andauniquesink
t
.Avertex
v
=
2f
s
,
t
g
iscalledan
(
s
,
t
)
vertex
if
everypathfrom
s
to
t
passesthrough
v
,orequivalently,ifdeleting
v
makes
t
unreachablefrom
s
.Describeandanalyzeanalgorithmto˝nd
every
(
s
,
t
)
vertexin
G
.
Figure6.20.
Adirectedacyclicgraphwiththree
(
s
,
t
)
-cutvertices.
4.
Avertex
v
inaconnectedundirectedgraph
G
iscalleda
cutvertex
ifthe
subgraph
G

v
(obtainedbyremoving
v
from
G
)isdisconnected.
Figure6.21.
Anundirectedgraphwithfourcutvertices.
245

6.Depth-FirstSearch
(a)
Describealinalgorithmthatdetermines,givenanundirected
graph
G
andavertex
v
,whether
v
isacutvertexin
G
.Whatisthe
runningtimeto˝ndallcutverticesbytryingyouralgorithmforeach
vertex?
(b)
Let
T
beaspanningtreeofanundirectedgraph
G
.
i.
Provethattherootof
T
isacutvertexof
G
ifandonlyifithasmore
thanonechildin
T
.
ii.
Provethatanovertex
v
isacutvertexof
G
ifandonlyifat
leastonedescendant(in
T
)ofeachchildof
v
(in
T
)isaneighbor
(in
G
)ofsomeproperancestorof
v
(in
T
).
[Hint:Theseclaimsnolongerholdif
T
notaspanningtree
and/or
G
isadirectedgraph.]
(c)
Describeanalgorithmthatidenti˝eseverycutvertexinagiven
rectedgraphin
O
(
V
+
E
)
time.
5.
Anedge
e
inaconnectedundirectedgraph
G
iscalleda
bridge
(ora
cutedge
)
ifthesubgraph
G

e
(obtainedbyremoving
e
from
G
)isdisconnected.
(a)
Given
G
andedge
e
describealinalgorithmthatdetermines
whether
e
isabridgeornot.Whatistherunningtimeto˝ndallbridges
bytryingyouralgorithmforeachedge?
(b)
Let
T
beanarbitraryspanningtreeof
G
.Provethat
every
bridgesof
G
is
alsoanedgein
T
.Thisclaimimpliesthat
G
hasatmost
V

1
bridges.
Howdoesthisinformationimproveyouralgorithmfrompart(a)to˝nd
allbridges?
(c)
Nowsupposeweroot
T
atanarbitraryvertex
r
.Foranyvertex
v
,let
T
v
denotethesubtreeof
T
rootedat
v
;forexample,
T
r
=
T
.Let
uv
bean
arbitraryedgeof
T
,where
u
istheparentof
v
.Provethat
uv
isabridge
of
G
ifandonlyif
uv
istheonlyedgein
G
withexactlyoneendpoint
in
T
v
.
(d)
Describealinalgorithmtoidentifyeverybridgein
G
.
[Hint:
Let
T
beaspanningtreeof
G
.]
6.
The
transitiveclosure
G
T
ofadirectedgraph
G
isadirectedgraphwith
thesameverticesas
G
,thatcontainsanyedge
u

v
ifandonlyifthereisa
directedpathfrom
u
to
v
in
G
.A
transitivereduction
of
G
isagraphwith
thesmallestpossiblenumberofedgeswhosetransitiveclosureis
G
T
.The
samegraphmayhaveseveraltransitivereductions.
(a)
Describeane˚cientalgorithmtocomputethetransitiveclosureofa
givendirectedgraph.
246

Exercises
(b)
Provethatadirectedgraph
G
hasa
unique
transitivereductionifand
onlyif
G
isacyclic.
(c)
Describeane˚cientalgorithmtocomputeatransitivereductionofa
givendirectedgraph.
7.
Oneoftheoldestalgorithmsforexploringarbitraryconnectedgraphswas
proposedbyGastonTarryin1895,asasystematicprocedureforsolving
mazes.
7
TheinputtoTarry'salgorithmisanundirectedgraph
G
;however,
foreaseofpresentation,weformallyspliteachundirectededge
uv
intotwo
directededges
u

v
and
v

u
.(Inanactualimplementation,thissplitis
trivial;thealgorithmsimplyusesthegivenadjacencylistfor
G
asthough
G
weredirected.)
Tarry
(
G
)
:
unmarkallverticesof
G
coloralledgesof
G
white
s
 
anyvertexin
G
RecTarry
(
s
)
RecTarry
(
v
)
:
mark
v
hh

v

ii
ifthereisawhitearc
v

w
if
w
isunmarked
color
w

v
green
color
v

w
red
©
hh
averse
v

w

ii
RecTarry
(
w
)
elseifthereisa
green
arc
v

w
color
v

w
red
©
hh
averse
v

w

ii
RecTarry
(
w
)
WeinformallysaythatTarry'salgorithmvertex
v
everytime
itmarks
v
,anditvedge
v

w
whenitcolorsthatedge
red
and
recursivelycalls
RecTarry
(
w
)
.Unlikeourearliergraphtraversalalgorithm,
Tarry'salgorithmcanmarksamevertexmultipletimes.
(a)
DescribehowtoimplementTarry'salgorithmsothatitrunsin
O
(
V
+
E
)
time.
(b)
Provethatnodirectededgein
G
istraversedmorethanonce.
(c)
Whenthealgorithmvisitsavertex
v
forthe
k
thtime,exactlyhowmany
edgesinto
v
are
red
,andexactlyhowmanyedgesoutof
v
are
red
?
[Hint:Considerthestartingvertex
s
separatelyfromtheothervertices.]
(d)
Proveeachvertex
v
isvisitedatmost
deg
(
v
)
times,exceptthestarting
vertex
s
,whichisvisitedatmost
deg
(
s
)+
1
times.Thisclaimimmediately
impliesthat
Tarry
(
G
)
terminates.
(e)
Provethatthelastvertexvisitedby
Tarry
(
G
)
isthestartingvertex
s
.
7
EvenoldergraversalalgorithmsweredescribedbyCharlesTrémauxin1882,by
ChristianWienerin1873,byCarlHierholzerin1873,and(implicitly)byLeonhardEulerin1736.
Inparticular,Wiener'salgorithmisequivalenttosearchinconnectedundirected
graphs.
247

6.Depth-FirstSearch
(f)
Foreveryvertex
v
that
Tarry
(
G
)
visits,provethatalledgesinto
v
and
outof
v
are
red
when
Tarry
(
G
)
halts.
[Hint:Considertheverticesin
theorderthattheyaremarkedforthe˝rsttime,startingwith
s
,and
provetheclaimbyinduction.]
(g)
Provethat
Tarry
(
G
)
visitseveryvertexof
G
.Thisclaimandtheprevious
claimimplythat
Tarry
(
G
)
traverseseveryedgeof
G
exactlyonce.
8.
ConsiderthefollowingvariantofTarry'sgraversalalgorithm;this
varianttraversesgreenedgeswithoutrecoloringthemredandassignstwo
numericallabelstoeveryvertex:
Tarry2
(
G
)
:
unmarkallverticesof
G
coloralledgesof
G
white
s
 
anyvertexin
G
RecTarry
2
(
s
,1
)
RecTarry2
(
v
,
clock
)
:
if
v
isunmarked
v
.
pre
 
clock
;
clock
 
clock
+
1
mark
v
ifthereisawhitearc
v

w
if
w
isunmarked
color
w

v
green
color
v

w
red
RecTarry
2
(
w
,
clock
)
elseifthereisagreenarc
v

w
v
.
post
 
clock
;
clock
 
clock
+
1
RecTarry
2
(
w
,
clock
)
Proveordisprovethefollowingclaim:When
Tarry
2
(
G
)
halts,thegreen
edgesde˝neaspanningtreeandthelabels
v
.
pre
and
v
.
post
de˝neapreorder
andpostorderlabelingthatareallconsistentwithasinglesearch
of
G
.Inotherwords,proveordisprovethat
Tarry
2producesthesame
output
assearch,eventhoughitvisitstheedgesinacompletely
di˙erentorder.
9.
Youhaveacollectionof
n
land
m
goldkeys.Eachkeyunlocks
at
most
onebox.However,eachboxmightbeunlockedbyonekey,bymultiple
keys,orbynokeysatall.Thereareonlytwowaystoopeneachboxonceit
islocked:Unlockitproperly(whichrequireshavingonematchingkeyin
yourhand),orsmashittobitswithahammer.
Yourbabybrother,wholovesplayingwithshinyobjects,hassomehow
managedtolockallyourkeysinsidetheboxes!Luckily,yourhomesecurity
systemrecordedeverything,soyouknowexactlywhichkeys(ifany)are
insideeachbox.Youneedtogetallthekeysbackoutoftheboxes,because
theyaremadeofgold.Clearlyyouhavetosmashatleastonebox.
(a)
Yourbabybrotherhasfoundthehammerandiseagerlyeyeingone
oftheboxes.Describeandanalyzeanalgorithmtodetermineifitis
248

Exercises
possibletoretrieveallthekeyswithoutsmashinganyboxexceptthe
oneyourbrotherhaschosen.
(b)
Describeandanalyzeanalgorithmtocomputetheminimumnumberof
boxesthatmustbesmashedtoretrieveallthekeys.
10.
Supposeyouareteachinganalgorithmscourse.Inyoursecondmidterm,
yougiveyourstudentsadrawingofagraphandaskthentoindicatea
searchtreeandasearchtreerootedataparticular
vertex.Unfortunately,onceyoustartgradingtheexam,yourealizethatthe
graphyougavethestudentshasseveralsuchspanningartoomany
tolist.Instead,youneedawaytotellwhethereachstudent'ssubmissionis
correct!
Ineachofthefollowingproblems,supposeyouaregivenaconnected
graph
G
,astartvertex
s
,andaspanningtree
T
of
G
.
(a)
Suppose
G
is
undirected
.Describeandanalyzeanalgorithmtodecide
whether
T
isa
depth
spanningtreerootedat
s
.
(b)
Suppose
G
is
undirected
.Describeandanalyzeanalgorithmtodecide
whether
T
isa
breadth
spanningtreerootedat
s
.
[Hint:It'snot
enoughfor
T
tobeanunweightedstree.Yes,thisisthe
rightchapterforthisproblem!]
(c)
Suppose
G
is
directed
.Describeandanalyzeanalgorithmtodecide
whether
T
isa
breadth
spanningtreerootedat
s
.
[Hint:Solve
part(b)˝rst.]
(d)
Suppose
G
is
directed
.Describeandanalyzeanalgorithmtodecide
whether
T
isa
depth
spanningtreerootedat
s
.
11.
Severalmodernprogramminglanguages,includingJavaScript,Python,
Perl,andRuby,includeafeaturecalled
parallelassignment
,whichallows
multipleassignmentoperationstobeencodedinasinglelineofcode.For
example,thePythoncode
x,y=0,1
simultaneouslysets
x
to
0
and
y
to
1
.
Thevaluesofthesideoftheassignmentarealldeterminedby
the
old
valuesofthevariables.Thus,thePythoncode
a,b=b,a
swapsthe
valuesof
a
and
b
,andthefollowingPythoncodecomputesthe
n
thFibonacci
number:
deffib(n):
prev,curr=1,0
whilen>0:
prev,curr,n=curr,prev+curr,n-1
returncurr
Supposetheinterpreteryouarewritingneedstoconverteveryparallel
assignmentintoanequivalentsequenceofindividualassignments.For
249

6.Depth-FirstSearch
example,theparallelassignment
a,b=0,1
canbeserializedineither
either
a=0;b=1
or
a=0;b=1
uttheparallelassignment
x,y=x+1,x+y
canonlybeserializedas
y=x+y;x=x+1
.Serializationmayrequireoneor
moreadditionaltemporaryvariables;forexample,serializing
a,b=b,a
requiresonetemporaryvariable,andserializing
x,y=x+y,x-y
requirestwo
temporaryvariables.
(a)
Describeanalgorithmtodeterminewhetheragivenparallelassignment
canbeserializedwithoutadditionaltemporaryvariables.
(b)
Describeanalgorithmtodeterminewhetheragivenparallelassignment
canbeserializedwith
exactlyone
additionaltemporaryvariable.
Assumethatthegivenparallelassignmentinvolvesonlysimpleinteger
variables(noindirectionviapointersorarrays);novariableappearsonthe
leftsidemorethanonce;andexpressionsontherightsidehavenoside
e˙ects.Don'tworryaboutthedetailsofparsingtheassignmentstatement;
justassume(butdescribe!)anappropriategraphrepresentation.
DynamicProgramming
12.
Supposewearegivenadirectedacyclicgraph
G
whosenodesrepresentjobs
andwhoseedgesrepresentprecedenceconstraints;thatis.eachedge
u

v
indicatesthejob
u
mustbecompletedbeforejob
v
begins.Eachnode
v
also
hasaweight
T
(
v
)
indicatingthetimerequiredtoexecutejob
v
.
(a)
Describeanalgorithmtodeterminetheshortestintervaloftimeinwhich
alljobsin
G
canbeexecuted.
(b)
Supposethe˝rstjobstartsattime
0
.Describeanalgorithmtodetermine,
foreachvertex
v
,theearliesttimewhenjob
v
canbegin.
(c)
Nowdescribeanalgorithmtodetermine,foreachvertex
v
,the
latest
time
whenjob
v
canbeginwithoutviolatingtheprecedenceconstraintsor
increasingtheoverallcompletiontime(computedinpart(a)),assuming
thateveryjobexcept
v
startsatitsearlieststarttime(computedin
part(b)).
13.
Let
G
beadirectedacyclicgraphwithauniquesource
s
andauniquesink
t
.
(a)
A
Hamiltonianpath
in
G
isadirectedpathin
G
thatcontainseveryvertex
in
G
.Describeanalgorithmtodeterminewhether
G
hasaHamiltonian
path.
(b)
Supposethe
vertices
of
G
haveweights.Describeane˚cientalgorithm
to˝ndthepathfrom
s
to
t
withmaximumtotalweight.
250

Exercises
(c)
Supposewearealsogivenaninteger
`
.Describeane˚cientalgorithm
to˝ndthemaximeightpathfrom
s
to
t
thatcontainsatmost
`
edges.(Assumethereisatleastonesuchpath.)
(d)
Supposesomeoftheverticesof
G
aremarkedas
important
,andwe
arealsogivenaninteger
k
.Describeane˚cientalgorithmto˝ndthe
maximeightpathfrom
s
to
t
thatvisitsatleast
k
importantvertices.
(Assumethereisatleastonesuchpath.)
(e)
Describeanalgorithmtocomputethenumberofpathsfrom
s
to
t
in
G
.
(Assumethatyoucanaddarbitrarilylargeintegersin
O
(
1
)
time.)
14.
Let
G
beadirectedacyclicgraphwhoseverticeshavelabelsfromsome˝xed
alphabet,andlet
A
[
1..
`
]
beastringoverthesamealphabet.Anydirected
pathin
G
hasalabel,whichisastringobtainedbyconcatenatingthelabels
ofitsvertices.
(a)
Describeanalgorithmthateither˝ndsapathin
G
whoselabelis
A
or
correctlyreportsthatthereisnosuchpath.
(b)
Describeanalgorithmto˝ndthe
number
ofpathsin
G
whoselabelis
A
.
(Assumethatyoucanaddarbitrarilylargeintegersin
O
(
1
)
time.)
(c)
Describeanalgorithmto˝ndthelongestpathin
G
whoselabelisa
subsequenceof
A
.
(d)
Describeanalgorithmto˝ndthe
shortest
pathin
G
whoselabelisa
supersequence
of
A
.
(e)
Describeanalgorithmto˝ndapathin
G
whoselabelhasminimumedit
distancefrom
A
.
15.
A
polygonalpath
isasequenceoflinesegmentsjoinedthe
endpointsoftheselinesegmentsarecalledthe
vertices
ofthepath.The
length
ofapolygonalpathisthesumofthelengthsofitssegments.A
polygonalpathwithvertices
(
x
1
,
y
1
)
,
(
x
2
,
y
2
)
,...,
(
x
k
,
y
k
)
is
monotonically
increasing
if
x
i
<
x
i
+
1
and
y
i
<
y
i
+
1
foreveryindex
i
ormally,each
vertexofthepathisaboveandtotherightofitspredecessor.
Figure6.22.
Amonotonicallyincreasingpolygonalpathwithsevenverticesthroughasetofpoints
251

6.Depth-FirstSearch
Supposeyouaregivenaset
S
of
n
pointsintheplane,representedastwo
arrays
X
[
1..
n
]
and
Y
[
1..
n
]
.Describeandanalyzeanalgorithmtocompute
thelengthofthelongestmonotonicallyincreasingpathwithverticesin
S
.
Assumeyouhaveasubroutine
Length
(
x
,
y
,
x
0
,
y
0
)
thatreturnsthelength
ofthesegmentfrom
(
x
,
y
)
to
(
x
0
,
y
0
)
.
16.
Foranytwonodes
u
and
w
inadirectedacyclicgraph
G
,the
interval
G
[
u
,
w
]
istheunionofalldirectedpathsin
G
from
u
to
v
.Equivalently,
G
[
u
,
w
]
consistsofallvertices
v
suchthat
v
2
reach
(
u
)
and
w
2
reach
(
x
)
,
togetherwithalltheedgesin
G
connectingthosevertices.
Supposewearegivenadirectedacyclicgraph
G
,inwhicheveryvertex
hasanumericalweight,whichmaybepositive,negative,orzero.
(a)
Describeane˚cientalgorithmto˝ndthemaximeightinterval
in
G
,wheretheweightofeachintervalisthesumoftheweightsofits
vertices.
(b)
Describeane˚cientalgorithmto˝ndthelargestvertexweightinevery
intervalin
G
.Youralgorithmshouldcomputeatwonalarray
MaxWt
[
1..
V
,1..
V
]
whereeachentry
MaxWt
[
u
,
w
]
isthemaximum
weightamongallverticesintheinterval
G
[
u
,
w
]
.Inparticular,if
G
[
u
,
w
]
isempty,then
MaxWt
[
u
,
w
]
shouldbe

.
17.
Let
G
beadirectedacyclicgraphwhoseverticeshavelabelsfromsome˝xed
alphabet.Anydirectedpathin
G
hasalabel,whichisastringobtainedby
concatenatingthelabelsofitsvertices.Recallthata
palindrome
isastring
thatisequaltoitsreversal.
(a)
Describeandanalyzeanalgorithmto˝ndthelengthofthelongest
palindromethatisthelabelofapathin
G
.Forexample,giventhegraph
inFigure
6.23
,youralgorithmshouldreturntheinteger
6
,whichisthe
lengthofthepalindrome
HANNAH
.
Figure6.23.
Adagwhoselongestpalindromepathlabelhaslength
6
.
252

Exercises
(b)
Describeanalgorithmto˝ndthelongestpalindromethatisa
sequenceofthelabelofapathin
G
.
(c)
Suppose
G
hasasinglesource
s
andasinglesink
t
.Describeanalgorithm
to˝ndtheshortestpalindromethatisasupersequenceofthelabelofa
pathin
G
from
s
to
t
.
18.
Supposeyouaregiventwodirectedacyclicgraphs
G
and
H
inwhichevery
nodehasa
label
fromsome˝nitealphabet;di˙erentnodesmayhavethe
samelabel.Thelabelofa
path
ineitherdagisthestringobtainedby
concatenatingthelabelsofitsvertices.
(a)
Describeandanalyzeanalgorithmtocomputethelengthofthelongest
stringthatisboththelabelofapathin
G
andthelabelofapathin
H
.
(b)
Describeandanalyzeanalgorithmtocomputethelengthofthelongest
stringthatisbothasubsequenceofthelabelofapathin
G
anda
subsequenceofthelabelofapathin
H
.
(c)
Describeandanalyzeanalgorithmtocomputethelengthoftheshortest
stringthatisbothasupersequenceofthelabelofapathin
G
anda
supersequenceofthelabelofapathin
H
.
[Hint:Thisiseasierthanit
looks.]
19.
Let
G
beanarbitrary(
not
necessarilyacyclic)directedgraphinwhichevery
vertex
v
hasanintegerweight
w
(
v
)
.
(a)
Describeanalgorithmto˝ndthelongestdirectedpathin
G
whosevertex
weightsde˝neanincreasingsequence.
(b)
Describeandanalyzeanalgorithmtodeterminethemaximeight
vertexreachablefromeachvertexin
G
.Thatis,foreachvertex
v
,your
algorithmneedstocompute
maxreach
(
v
)
:
=
max
f
w
(
x
)
j
x
2
reach
(
v
)
g
.
20.
(a)
Supposeyouaregivenadirectedacyclicgraph
G
with
n
verticesandan
integer
k

n
.Describeane˚cientalgorithmto˝ndasetofatmost
k
vintpathsthatvisiteveryvertexin
G
.
(b)
Nowsupposetheedgesoftheinputdag
G
haveweights,whichmaybe
positive,negative,orzero.Describeane˚cientalgorithmto˝ndaset
ofatmost
k
vintpaths
withminimumtotalweight
thatvisit
everyvertexin
G
.
Youralgorithmsshouldrunin
O
(
n
k
+
c
)
timeforsomesmallconstant
c
.
Asinglevertexisapathwithweightzero.(Wewillseeamoree˚cient
algorithmforpart(a)inChapter
11
.)
253

6.Depth-FirstSearch
21.
KrisisaprofessionalrockclimberwhoiscompetingintheU.S.climbing
nationals.ThecompetitionrequiresKristouseasmanyholdsonthe
climbingwallaspossible,usingonlytransitionsthathavebeenexplicitly
allowedbythero.
Theclimbingwallhas
n
holds.Krisisgivenalistof
m
pairs
(
x
,
y
)
of
holds,eachindicatingthatmovingdirectlyfromhold
x
tohold
y
isallowed;
however,movingdirectlyfrom
y
to
x
isnotallowedunlessthelistalso
includesthepair
(
y
,
x
)
.Krisneedsto˝gureoutasequenceofallowed
transitionsthatusesasmanyholdsaspossible,sinceeachnewholdincreases
hisscorebyonepoint.TherulesallowKristochoosethe˝rstandlasthold
inhisclimbingroute.Therulesalsoallowhimtouseeachholdasmany
timesashelikes;however,onlythe˝rstuseofeachholdincreasesKris's
score.
(a)
De˝nethenaturalgraphrepresentingtheinput.Describeandanalyze
analgorithmtosolveKris'sclimbingproblemifyouareguaranteedthat
theinputgraphisadag.
(b)
DescribeandanalyzeanalgorithmtosolveKris'sclimbingproblemwith
norestrictionsontheinputgraph.
BothofyouralgorithmsshouldoutputthemaximumpossiblescorethatKris
canearn.
22.
Thereare
n
galaxiesconnectedby
m
intergalactictelays.Each
telayjoinstwogalaxiesandcanbetraversedinbothdirections.
However,thecompanythatrunsthetelayshasestablishedan
extremelylucrativecoststructure:Anyonecanteleport
further
fromtheir
homegalaxyatnocostwhatsoever,butteleporting
toward
theirhomegalaxy
isprohibitivelyexpensive.
Judyhasdecidedtotakeasabbaticaltouroftheuniversebyvisitingas
manygalaxiesaspossible,startingatherhomegalaxy.Tosaveontravel
expenses,shewantstoteleportawayfromherhomegalaxyateverystep,
exceptfortheverylastteleporthome.
(a)
Describeandanalyzeanalgorithmtocomputethemaximumnumberof
galaxiesthatJudycanvisit.Yourinputconsistsofanundirectedgraph
G
with
n
verticesand
m
edgesdescribingthetelaynetwork,an
integer
1

s

n
identifyingJudy'shomegalaxy,andanarray
D
[
1..
n
]
containingthedistancesofeachgalaxyfrom
s
.
ª
(b)
Justbeforeembarkingonheruniversaltour,Judywinsthespacelottery,
givingherjustenoughmoneytoa˙ord
two
teleportstowardherhome
galaxy.Describeanewalgorithmtocomputethemaximumnumberof
distinctgalaxiesJudycanvisit.Shecanvisitthesamegalaxymorethan
once,butcrucially,onlythe˝rstvisitcountstowardhertotal.
254

Exercises
23.
TheDoctorandRiverSongdecidetoplayagameonadirectedacyclic
graph
G
,whichhasonesource
s
andonesink
t
.
8
Eachplayerhasatokenononeoftheverticesof
G
.Atthestartofthe
game,TheDoctor'stokenisonthesourcevertex
s
,andRiver'stokenison
thesinkvertex
t
.Theplayersalternateturns,withTheDoctormoving˝rst.
Oneachofhisturns,theDoctormoveshistokenforwardalongadirected
edge;oneachofherturns,Rivermoveshertoken
backward
alongadirected
edge.
Ifthetwotokensevermeetonthesamevertex,Riverwinsthegame.
ello,SweetiIftheDoctor'stokenreaches
t
orRiver'stokenreaches
s
beforethetwotokensmeet,thentheDoctorwinsthegame.
Describeandanalyzeanalgorithmtodeterminewhowinsthisgame,
assumingbothplayersplayperfectly.Thatis,iftheDoctorcanwin
no
matterhowRivermoves
,thenyouralgorithmshouldoutputand
ifRivercanwin
nomatterhowtheDoctormoves
,youralgorithmshould
outputv(Whyarethesetheonlytwopossibilities?)Theinputto
youralgorithmisthegraph
G
.
¨
ª
24.
Let
x
=
x
1
x
2
...
x
n
beagiven
n
stringoversome˝nitealphabet

,
andlet
A
beadeterministicatemachinewith
m
statesoverthesame
alphabet.
(a)
Describeandanalyzeanalgorithmtocomputethelengthofthelongest
subsequenceof
x
thatisacceptedby
A
.Forexample,if
A
acceptsthe
language
(
AR
)

and
x
=
A
B
R
AC
A
DAB
R
A
,youralgorithmshouldoutputthe
number4,whichisthelengthofthesubsequence
ARAR
.
(b)
Describeandanalyzeanalgorithmtocomputethelengthofthes
estsupersequenceof
x
thatisacceptedby
A
.Forexample,if
A

ceptsthelanguage
(
ABCDR
)

and
x
=
ABRACADABRA
,youralgorithm
shouldoutputthenumber25,whichisthelengthofthesupersequence
AB
CD
RA
B
C
DR
A
BC
D
R
AB
CD
RA
BCDR
.
Analyzeyouralgorithmsintermsofthelength
n
oftheinputstring,the
number
m
ofstatesintheatemachine,andthesizeofthealphabet

.
25.
Not
every
dynamicprogrammingalgorithmcanbemodeledas˝nding
anoptimalpaththroughadirectedacyclicgraph,buteverydynamic
programmingalgorithmdoesprocesssomeunderlyingdependencygraph
inpostorder.
8
Thelabels
s
and
t
areabbreviationsfortheUntempered
S
chismandthe
T
imeVortex,or
theShiningWorldoftheSevenSystems(alsoknownasGallifrey)andTrenzalore,orSkaroand
Telos,orSomethingelseT.It'sallverycomplicated,nevermind.
255

6.Depth-FirstSearch
(a)
Supposewearegivenadirectedacyclicgraph
G
whereeverynodestores
anumericalsearchkey.Describeandanalyzeanalgorithmto˝ndthe
largestbinarysearchtreethatisasubgraphof
G
.
(b)
Supposewearegivenadirectedacyclicgraph
G
andtwovertices
s
and
t
.
Describeanalgorithmtocomputethenumberofdirectedpathsin
G
from
s
to
t
.(Assumethatanyarithmeticoperationrequires
O
(
1
)
time.)
(c)
Let
G
beadirectedacyclicgraphwiththefollowingfeatures:
‹
G
hasasinglesource
s
andseveralsinks
t
1
,
t
2
,...,
t
k
.
‹
Eachedge
v

w
hasanassociatedweight
p
(
v

w
)
between
0
and
1
.
‹
Foreachnovertex
v
,thetotalweightofalledgesleaving
v
is
1
;thatis,
P
w
p
(
v

w
)=
1
.
Theweights
p
(
v

w
)
de˝nearandomwalkin
G
fromthesource
s
tosome
sink
t
i
;afterreachinganynovertex
v
,thewalkfollowsedge
v

w
withprobability
p
(
v

w
)
.Allprobabilitiesaremutuallyindependent.
Describeandanalyzeanalgorithmtocomputetheprobabilitythatthis
randomwalkreachessink
t
i
,foreveryindex
i
.(Assumethateach
arithmeticoperationtakesonly
O
(
1
)
time.)
256

Wemustallhangtogether,gentlemen,
orelseweshallmostassuredlyhangseparately.
BenjaminFranklin,atthesigningofthe
DeclarationofIndependence(July4,1776)
Irememberseekingadvicefromcouldithave
whetherthisworkwasworthsubmittingforpublication;thereasoningitusesisso
verysimple....Fortunatelyheadvisedmetogoahead,andmanyyearspassed
beforeanotherofmypublicationsbecameaswell-knownasthisverysimpleone.
JosephKruskal,describinghisshortest-spanning-subtreealgorithm(1997)
.
CleanALLthethings!
AllieBrosh,
ThisisWhyI'llNeverbeanAdult

HyperboleandaHalf
,June17,2010.
7
MinimumSpanningTrees
Supposewearegivenaconnected,undirected,
weighted
graph.Thisisa
graph
G
=(
V
,
E
)
togetherwithafunction
w
:
E
!
R
thatassignsareal
weight
w
(
e
)
toeachedge
e
,whichmaybepositive,negative,orzero.Thischapter
describesseveralalgorithmsto˝ndthe
minimumspanningtree
of
G
,thatis,
thespanningtree
T
thatminimizesthefunction
w
(
T
)
:
=
X
e
2
T
w
(
e
)
.
SeeFigure
7.1
foranexample.
7.1DistinctEdgeWeights
Anannoyingsubtletyintheproblemstatementisthatweightedgraphscan
havemorethanonespanningtreewiththesameminimumweight;inparticular,
ifeveryedgein
G
hasweight
1
,then
every
spanningtreeof
G
isaminimum
257

7.MinimumSpanningTrees
Figure7.1.
Aweightedgraphanditsminimumspanningtree.
spanningtree,withweight
V

1
.Thisambiguitycomplicatesthedevelopment
ofouralgorithms;everythingwouldbemuchsimplerifwecouldsimply
assume
thatminimumspanningtreesareunique.
Fortunately,thereisaneasyconditionthatimpliestheuniquenesswewant.
Lemma7.1.
Ifalledgeweightsinaconnectedgraph
G
aredistinct,then
G
has
auniqueminimumspanningtree.
1
Proof:
Let
G
beanarbitraryconnectedgraphwithtwominimumspanning
trees
T
and
T
0
;weneedtoprovethatsomepairofedgesin
G
havethesame
weight.Theproofisessentiallyagreedyexchangeargument.
Eachofourspanningtreesmustcontainanedgethattheothertreeomits.
Let
e
beaminimeightedgein
T
n
T
0
,andlet
e
0
beaminimeight
edgein
T
0
n
T
(breakingtiesarbitrarily).Withoutlossofgenerality,suppose
w
(
e
)

w
(
e
0
)
.
Thesubgraph
T
0
[f
e
g
containsexactlyonecycle
C
,whichpassesthrough
theedge
e
.Let
e
00
be
any
edgeofthiscyclethatis
not
in
T
.Atleastonesuch
edgemustexist,because
T
isatree.(Wemayormaynothave
e
00
=
e
0
.)Because
e
2
T
,weimmediatelyhave
e
00
6
=
e
andtherefore
e
00
2
T
0
n
T
.Itfollowsthat
w
(
e
00
)

w
(
e
0
)

w
(
e
)
.
Nowconsiderthespanningtree
T
00
=
T
0
+
e

e
00
.(Thisnewtree
T
00
might
beequalto
T
.)Weimmediatelyhave
w
(
T
00
)=
w
(
T
0
)+
w
(
e
)

w
(
e
00
)

w
(
T
0
)
.
But
T
0
isa
minimum
spanningtree,sowemusthave
w
(
T
00
)=
w
(
T
0
)
;inother
words,
T
00
isalsoaminimumspanningtree.Weconcludethat
w
(
e
)=
w
(
e
00
)
,
whichcompletestheproof.
…
Ifwealreadyhaveanalgorithmthatassumesdistinctedgeweights,wecan
stillrunitongraphswheresomeedgeshaveequalweights,aslongaswehave
aconsistentmethodforbreakingties.Onesuchmethodusesthefollowing
1
Theconverseofthislemmaisfalse;aconnectedgraphwithrepeatededgeweightscanstill
haveauniqueminimumspanningtree.Asatrivialexample,suppose
G
isatree!
258

7.2.TheOnlyMinimumSpanningTreeAlgorithm
algorithminplaceofsimpleweightcomparisons.
ShorterEdge
takesasinput
fourintegers
i
,
j
,
k
,
l
,representingfour(notnecessarilydistinct)vertices,and
decideswhichofthetwoedges
(
i
,
j
)
and
(
k
,
l
)
hasllweight.(Because
theinputgraphundirected,thepairs
(
i
,
j
)
and
(
j
,
i
)
representthesameedge.)
ShorterEdge
(
i
,
j
,
k
,
l
)
if
w
(
i
,
j
)
<
w
(
k
,
l
)
thenreturn
(
i
,
j
)
if
w
(
i
,
j
)
>
w
(
k
,
l
)
thenreturn
(
k
,
l
)
if
min
(
i
,
j
)
<
min
(
k
,
l
)
thenreturn
(
i
,
j
)
if
min
(
i
,
j
)
>
min
(
k
,
l
)
thenreturn
(
k
,
l
)
if
max
(
i
,
j
)
<
max
(
k
,
l
)
thenreturn
(
i
,
j
)
hh
ifmax(i,j)
>
max(k,l)
ii
return
(
k
,
l
)
InlightofLemma
7.1
andthistikingrule,wewillsafelyassumefor
therestofthischapterthatedgeweightsare
always
distinct,andtherefore
minimumspanningtreesare
always
unique.Inparticular,wecanfreelydiscuss
the
minimumspanningtreewithnoconfusion.
7.2TheOnlyMinimumSpanningTreeAlgorithm
Therearemanyalgorithmstocomputeminimumspanningtrees,butalmostall
ofthemareinstancesofthefollowinggenericstrategy.Thesituationissimilar
tographtraversal,whereseveraldi˙erentalgorithmsareallvariantsofthe
generictraversalalgorithmwhatevsearch.
Thegenericminimumspanningtreealgorithmmaintainsanacyclic
graph
F
oftheinputgraph
G
,whichwewillcallthe
intermediatespanningforest
.
Atalltimes,
F
satis˝esthefollowinginvariant:
F
isasubgraphoftheminimumspanningtreeof
G
.
Initially,
F
consistsof
V
onertextrees.Thegenericalgorithmconnectstrees
in
F
byaddingcertainedgesbetweenthem.Whenthealgorithmhalts,
F
consistsofasinglespanningtree;ourinvariantimpliesthatthismustbethe
minimumspanningtreeof
G
.Obviously,wehavetobecarefulabout
which
edgesweaddtotheevolvingforest,becausenoteveryedgeisintheminimum
spanningtree.
Atanystageofitsevolution,theintermediatespanningforest
F
induces
twospecialtypesofedgesintherestofthegraph.
‹
Anedgeis
useless
ifitisnotanedgeof
F
,butbothitsendpointsareinthe
samecomponentof
F
.
‹
Anedgeis
safe
ifitistheminimeightedgewithexactlyoneendpoint
insomecomponentof
F
.
259

7.MinimumSpanningTrees
Thesameedgecouldbesafefortwodi˙erentcomponentsof
F
.Someedgesof
G
n
F
areneithersafenoruseless;wecalltheseedges
undecided
.
Allminimumspanningtreealgorithmsarebasedontwosimpleobservations.
The˝rstobservationwasprovedbyRobertPrimin1957(althoughitisimplicit
inseveralearlieralgorithms),andthesecondisimmediate.
Lemma7.2(Prim).
Theminimumspanningtreeof
G
containseverysafeedge.
Proof:
Infactweprovethefollowingstrongerstatement:For
any
subset
S
of
theverticesof
G
,theminimumspanningtreeof
G
containstheminimeight
edgewithexactlyoneendpointin
S
.Likethepreviouslemma,weprovethis
claimusingagreedyexchangeargument.
Let
S
beanarbitrarysubsetofverticesof
G
,andlet
e
bethelightestedge
withexactlyoneendpointin
S
.(Ourassumptionthatalledgeweightsare
distinctimpliesthat
e
isunique.)Let
T
beanarbitraryspanningtreethatdoes
not
contain
e
;weneedtoprovethat
T
is
not
theminimumspanningtreeof
G
.
Because
T
isconnected,itcontainsapathfromoneendpointof
e
tothe
other.Becausethispathstartsatavertexof
S
andendsatavertexnotin
S
,it
mustcontainatleastoneedgewithexactlyoneendpointin
S
;let
e
0
be
any
such
edge.Because
T
isacyclic,removing
e
0
from
T
yieldsaspanning
forest
with
exactlytwocomponents,onecontainingeachendpointof
e
.Thus,adding
e
tothisforestgivesusanewspanningtree
T
0
=
T

e
0
+
e
.Thede˝nitionof
e
implies
w
(
e
0
)
>
w
(
e
)
,whichimpliesthat
T
0
hassmallertotalweightthan
T
.
Thus,
T
isnottheminimumspanningtreeof
G
,whichcompletestheproof.
…
Figure7.2.
Everysafeedgeisintheminimumspanningtree.Blackverticesareinthesubset
S
.
Lemma7.3.
Theminimumspanningtreecontainsnouselessedge.
Proof:
Addinganyuselessedgeto
F
wouldintroduceacycle.
…
Ourgenericminimumspanningtreealgorithmrepeatedlyadds
safe
edges
totheevolvingforest
F
.If
F
isnotyetconnected,theremustbeatleastone
safeedge,becausetheinputgraph
G
isconnected.Thus,nomatterwhichsafe
edgesweaddineachiteration,ourgenericalgorithmeventuallyconnects
F
.
Byinduction,Lemma
7.2
impliesthattheresultingtreeisinfacttheminimum
260

7.3.Bor·vka'sAlgorithm
spanningtree.Wheneverweaddnewedgesto
F
,someundecidededgesmay
becomesafe,andotherundecidededgesmaybecomeuseless.(Onceanedge
becomesuseless,itstaysuselessforever.)Tofullyspecifyaparticularalgorithm,
wemustdescribe
which
safeedge(s)toaddineachiteration,andhowto˝nd
thoseedges.
7.3Bor·vka'sAlgorithm
Theoldestandarguablysimplestminimumspanningtreealgorithmwasdisco
eredbytheCzechmathematicianOtakarBor·vkain1926,aboutayearafter
Jind°ichSaxelaskedhimhowtoconstructanelectricalnetworkconnecting
severalcitiesusingtheleastamountofwire.
2
Thealgorithmwasrediscoveredby
GustavChoquetin1938,rediscoveredagainbyateamofPolishmathematicians
ledbyJózef−ukaszewiczin1951,andrediscoveredagainbyGeorgeSollinin
1961.AlthoughSollinneverpublishedhisrediscovery,itwascarefullydescribed
andcreditedinoneofthe˝rsttextbooksongraphalgorithms;asaresult,this
algorithmissometimescalledollin'sa
TheBor·vka/Choquet/Flewierkauubrzycki/
Prim/Sollin/Brosh
3
algorithmcanbesummarizedinoneline:
Bor·vka
:
Add
ALL
thesafeedges
andrecurse.
Figure7.3.
Bor·vka'salgorithmrunontheexamplegraph.Thickrededgesarein
F
;dashededgesare
useless.Arrowspointalongeachcomponent'ssafeedge.Thealgorithmendsafterjusttwoiterations.
HereisBor·vka'salgorithminmoredetail.Thealgorithmcallsthe
Cou
AndLabel
algorithm
fromChapter
5
(onpage
204
)tocountthecomponents
of
F
andlabeleachvertex
v
withaninteger
comp
(
v
)
indicatingitscomponent.
2
SaxelwasanemployeeoftheWestMoravianPowerCompany,describedbyBor·vkaas
erytalentedandwhowaslaterexecutedbytheNazisasapersonofJewish
descent.
3
Goreadeverythingin
HyperboleandaHalf
.Andthengobuythebook.Andanextracopy
foryourcat.What'sthat?Youdon'thaveacat?Whatkindofamonsterareyou?Gogetacat,
andthenbuyitanextracopyof
HyperboleandaHalf
.
261

7.MinimumSpanningTrees
Bor·vka
(
V
,
E
)
:
F
=(
V
,
?
)
count
 
CountAndLabel
(
F
)
while
count
>
1
AddAllSafeEdges
(
E
,
F
,
count
)
count
 
CountAndLabel
(
F
)
return
F
Itremainsonlytodescribehowtoidentifyandaddallthesafeedgesto
F
.
Suppose
F
hasmorethanonecomponent,sinceotherwisewe'realreadydone.
Thefollowingsubroutinecomputesanarray
safe
[
1..
V
]
ofsafeedges,where
safe
[
i
]
istheminimeightedgewithoneendpointinthe
i
thcomponent
of
F
,byabruteforceexaminationofeveryedgein
G
.Foreachedge
uv
,if
u
and
v
areinthesamecomponent,then
uv
iseitheruselessoralreadyanedge
in
F
.Otherwise,wecomparetheweightof
uv
totheweightsof
safe
[
comp
(
u
)]
and
safe
[
comp
(
v
)]
andupdatethearrayentriesifnecessary.Oncewehave
identi˝edallthesafeedges,weaddeachedge
safe
[
i
]
to
F
.
AddAllSafeEdges
(
E
,
F
,
count
)
:
for
i
 
1
to
count
safe
[
i
]
 
Null
foreachedge
uv
2
E
if
comp
(
u
)
6
=
comp
(
v
)
if
safe
[
comp
(
u
)]=
Null
or
w
(
uv
)
<
w
(
safe
[
comp
(
u
)])
safe
[
comp
(
u
)]
 
uv
if
safe
[
comp
(
v
)]=
Null
or
w
(
uv
)
<
w
(
safe
[
comp
(
v
)])
safe
[
comp
(
v
)]
 
uv
for
i
 
1
to
count
add
safe
[
i
]
to
F
Eachcallto
CountAndLabel
runsin
O
(
V
)
time,becausetheforest
F
has
atmost
V

1
edges.
AddAllSafeEdges
runsin
O
(
V
+
E
)
time,becausewespend
constanttimeoneachvertex,eachedgeof
G
,andeachcomponentof
F
.Because
theinputgraphisconnected,wehave
V

E
+
1
.Itfollowsthateachiteration
ofthewhileloopof
Bor·vka
takes
O
(
E
)
time.
Eachiterationreducesthenumberofcomponentsof
F
byatleastafactor
oftwtheworstcase,thecomponentsof
F
coalesceinpairs.Because
F
initiallyhas
V
components,thewhileloopiteratesatmost
O
(
log
V
)
times.We
concludethattheoverallrunningtimeofBor·vka'salgorithmis
O
(
E
log
V
)
.
ThisistheMSTAlgorithmYouWant
Despiteitsrelativelyobscureorigin,earlyWesternalgorithmsresearcherswere
awareofBor·vka'salgorithm,butdismisseditasbeingoocompli
262

7.4.Jarník's'Algorithm
Asaresult,despiteitssimplicityande˚ciency,mostalgorithmsanddata
structurestextbooksunfortunatelydonotevenmentionBor·vka'salgorithm.
Thisomissionisaseriousmistake;Bor·vka'salgorithmhasseveraldistinct
advantagesoverotherclassicalMSTalgorithms.
‹
Bor·vka'salgorithmoftenrunsfasterthanits
O
(
E
log
V
)
wserunning
time.Thenumberofcomponentsin
F
candropbysigni˝cantlymorethana
factorof
2
inasingleiteration,reducingthenumberofiterationsbelowthe
wse
d
log
2
V
e
.
‹
AslightreformulationofBor·vka'salgorithm(actuallyclosertoBor·vka's
originalpresentation)actuallyrunsin
O
(
E
)
timeforabroadclassof
interestinggraphs,includinggraphsthatcanbedrawnintheplanewithout
edgecrossings.Incontrast,thetimeanalysisfortheothertwoalgorithms
appliesto
all
graphs.
‹
Bor·vka'salgorithmallowsforsigni˝cantparallelism;ineachiteration,
eachcomponentof
F
canbehandledinaseparateindependentthread.
Thisimplicitparallelismallowsforevenfasterperformanceonmulticoreor
distributedsystems.Incontrast,theothertwoclassicalMSTalgorithmsare
intrinsicallyserial.
‹
Severalmorerecentminimalgorithmsarefasterevenin
theworstcasethantheclassicalalgorithmsdescribedhere.
All
ofthese
fasteralgorithmsaregeneralizationsofBor·vka'salgorithm.
Inshort,ifyoueverneedtoimplementaminimalgorithm,
useBor·vka.Ontheotherhand,ifyouwantto
provethingsabout
minimum
spanningtreese˙ectively,youreallyneedtoknowthenexttwoalgorithmsas
well.
7.4Jarník's'Algorithm
Thenextoldestminimumspanningtreealgorithmwas˝rstdescribedbythe
CzechmathematicianVojt¥chJarníkina1929lettertoBor·vka;Jarníkpublished
hisdiscoverythefollowingyear.Thealgorithmwasindependentlyrediscovered
byJosephKruskalin1956,(arguably)byRobertPrimin1957,byHarryLoberman
andArnoldWeinbergerin1957,and˝nallybyEdsgerDijkstrain1958.Prim,
LobermandandWeinberger,andDijkstraall(eventually)knewofandeven
citedKruskal'spaper,butsinceKruskalalsodescribedtwootherminim
salgorithmsinthesamepaper,
this
algorithmisusuallycalled
aorsometimesPrim/Dijkstraaeventhoughby
1958Dijkstraalreadyhadanotheralgorithm(inappropriately)namedafterhim.
InJarník'salgorithm,theintermediateforest
F
hasonlyonenontrivial
component
T
;alltheothercomponentsareisolatedvertices.Initially,
T
consists
263

7.MinimumSpanningTrees
ofasinglearbitraryvertexofthegraph.Thealgorithmrepeatsthefollowing
stepuntil
T
spansthewholegraph:
Jarník
:Repeatedlyadd
T
'ssafeedgeto
T
.
Figure7.4.
Jarník'salgorithmrunontheexamplegraph,startingwiththebottomvertex.Ateachstage,
thickrededgesarein
T
,anarrowpointsalong
T
'ssafeedge;anddashededgesareuseless.
ToimplementJarník'salgorithm,wekeepalltheedgesadjacentto
T
in
apriorityqueue.Whenwepulltheminimeightedgeoutofthepriority
queue,we˝rstcheckwhetherbothofitsendpointsarein
T
.Ifnot,weaddthe
edgeto
T
andthenaddthenewneighboringedgestothepriorityqueue.In
otherwords,Jarník'salgorithmisavariantofasdescribedat
theendofChapter
5
!Ifweimplementtheunderlyingpriorityqueueusinga
standardbinaryheap,Jarník'salgorithmrunsin
O
(
E
log
E
)=
O
(
E
log
V
)
time.
ª
ImprovingJarník'sAlgorithm
WecanimproveJarník'salgorithmusingamorecomplexpriorityqueuedata
structurecalleda
Fibonacciheap
,˝rstdescribedbyMichaelFredmanand
RobertTarjanin1984.Justlikebinaryheaps,Fibonacciheapssupportthe
standardpriorityqueueoperations
Insert
,
ExtractMin
,and
DecreaseKey
.
However,unlikestandardbinaryheaps,whichrequire
O
(
log
n
)
timeforevery
operation,Fibonacciheapssupport
Insert
and
DecreaseKey
inconstant
amortized
time.Theamortizedcostof
ExtractMin
isstill
O
(
log
n
)
.
4
4
Amortizedtimeisanaccountingtrickthatallowsustoignoreinfrequent˛uctuationsin
thetimeforasingledatastructureoperation.AFibonacciheapcanexecuteanyintermixed
sequenceof
I
Insert
s,
D
DecreaseKey
s,and
X
ExtractMin
sin
O
(
I
+
D
+
X
log
n
)
time,inthe
worstcase.Sothe
average
Insert
andthe
average
DecreaseKey
eachtakeconstanttime,and
the
average
ExtractMin
takes
O
(
log
n
)
time;however,someindividualoperationsmaytake
264

7.5.Kruskal'sAlgorithm
Toapplythisfasterdatastructure,wekeepthe
vertices
of
G
inthepriority
queueinsteadofedges,wherethepriorityofeachvertex
v
iseithertheminim
weightedgebetween
v
andtheevolvingtree
T
,or
1
ifthereisnosuchedge.
Wecan
Insert
alltheverticesintothepriorityqueueatthebeginningofthe
algorithm;then,wheneverweaddanewedgeto
T
,wemayneedtodecrease
theprioritiesofsomeneighboringvertices.
Tomakethedescriptioneasier,webreakthealgorithmintotwoparts.
JarníkInit
initializesthepriorityqueue;
JarníkLoop
isthemainalgorithm.
Theinputconsistsoftheverticesandedgesofthegraph,alongwiththestart
vertex
s
.Foreachvertex
v
,wemaintainbothitspriority
priority
(
v
)
andthe
incidentedge
edge
(
v
)
suchthat
w
(
edge
(
v
))=
priority
(
v
)
.
Jarník
(
V
,
E
,
s
)
:
JarníkInit
(
V
,
E
,
s
)
JarníkLoop
(
V
,
E
,
s
)
JarníkInit
(
V
,
E
,
s
)
:
foreachvertex
v
2
V
nf
s
g
if
vs
2
E
edge
(
v
)
 
vs
priority
(
v
)
 
w
(
vs
)
else
edge
(
v
)
 
Null
priority
(
v
)
 1
Insert
(
v
)
JarníkLoop
(
V
,
E
,
s
)
:
T
 
(
f
s
g
,
?
)
for
i
 
1
to
j
V
j
1
v
 
ExtractMin
add
v
and
edge
(
v
)
to
T
foreachneighbor
u
of
v
if
u
=
2
T
and
priority
(
u
)
>
w
(
uv
)
edge
(
u
)
 
uv
DecreaseKey
(
u
,
w
(
uv
))
Figure7.5.
Jarník'sminimumspanningtreealgorithm,readytobeusedwithaFibonacciheap
Theoperations
Insert
and
ExtractMin
areeachcalled
O
(
V
)
timesonce
foreachvertexexcept
s
,and
DecreaseKey
iscalled
O
(
E
)
times,atmosttwice
foreachedge.Thus,ifweuseaFibonacciheap,theimprovedalgorithmrunsin
O
(
E
+
V
log
V
)
time
,whichisfasterthanBor·vka'salgorithmunless
E
=
O
(
V
)
.
Inpractice,however,thisimprovementisrarelyfasterthanthenaive
implementationusingabinaryheap,unlessthegraphisextremelylargeand
dense.TheFibonacciheapalgorithmsarequitecomplex,andthehidden
constantsinboththerunningtimeandspacearesigni˝otoutrageous,
butcertainlybiggerthanthehiddenconstant
1
inthe
O
(
log
n
)
timeboundfor
binaryheapoperations.
7.5Kruskal'sAlgorithm
Thelastminimumspanningtreealgorithmwe'llconsiderwas˝rstdescribedby
JosephKruskalin1956,inthesamepaperwhereherediscoveredJarnik'sa
longerintheworstcase.Amortizationuses
statistical
averagingoverthesequenceofoperations;
thereisnoassumptionofrandomnesshere,eitherintheinputdataorinthealgorithm.
265

7.MinimumSpanningTrees
rithm.Kruskalwasmotivatedbytypewrittentranslation(ofobscure
ofBor·vka'soriginalpaperthathadbeenoatingarothePrincetonmath
department.KruskalfoundBor·vka'salgorithmecessarilyela
5
Thesamealgorithmwasrediscoveredin1957byHarryLobermanandArnold
Weinberger,butsomehowavoidedbeingrenamedafterthem.
Likeourearlierminimpanningtreealgorithms,Kruskal'salgorithmhas
amemorableonedescription:
Kruskal
:Scanalledgesbyincreasingweight;ifanedgeissafe,additto
F
.
Figure7.6.
Kruskal'salgorithmrunontheexamplegraph.Thickrededgesarein
F
;thindashededges
areuseless.
Thesimplestmethodtoscantheedgesinincreasingweightorderisto
sort
theedgesbyweight,in
O
(
E
log
E
)
time,andthenuseasimplefoopoverthe
sortededgelist.Aswewillseeshortly,thispreliminarysortingdominatesthe
runningtimeofthealgorithm.
Becauseweexaminetheedgesinorderfromlightesttoheaviest,anyedge
weexamineissafeifandonlyifitsendpointsareindi˙erentcomponentsofthe
forest
F
.Supposeweencounteranedge
e
thatjoinstwocomponents
A
and
B
butisnotsafe.Thentheremustbealighteredge
e
0
withexactlyoneendpoint
in
A
.Butthisisimpossible,because(inductively)everypreviouslyexamined
edgehasbothendpointsinthesamecomponentof
F
.
JustasinBor·vka'salgorithm,eachvertexof
F
needsto"know"which
componentof
F
containsit.UnlikeBor·vka'salgorithm,however,wedo
5
Tobefair,Bor·vka's˝rstpaper
was
unnecessarilyelaborate,inpartbecauseitwaswritten
formathematiciansintheformallanguageof(linear)algebra,ratherthaninthelanguageof
graphs.Bor·vka'sfollowuppaper,alsopublishedin1927butinanelectrotechnicaljournal,was
writteninplainlanguageforamuchbroaderaudience,essentiallyinitscurrentmodernform.
KruskalwasapparentlyunawareofBor·vka'ssecondpaper.StupidIronCurtain.
266

7.5.Kruskal'sAlgorithm
notrecomputeallcomponentlabelsfromscratcheverytimeweaddanedge.
Instead,whentwocomponentsarejoinedbyanedge,thesmallercomponent
inheritsthelabelofthelargercomponent;thatis,wetraversethesmaller
component(viawhatevsearch).Thistraversalrequires
O
(
1
)
timefor
eachvertexinthesmallercomponent.Eachtimethecomponentlabelofa
vertexchanges,thecomponentof
F
containingthatvertexgrowsbyatleasta
factorof
2
;thus,eachvertexlabelchangesatmost
O
(
log
V
)
times.Itfollows
thatthe
total
timespentupdatingvertexlabelsisonly
O
(
V
log
V
)
.
Moregenerally,Kruskal'salgorithmmaintainsapartitionoftheverticesof
G
intodisjointsubsets(inourcase,thecomponentsof
F
),usingadatastructure
thatsupportsthefollowingoperations:
‹
MakeSet
(
v
)
Createasetcontainingonlythevertex
v
.
‹
Find
(
v
)
Returnanidenti˝eruniquetothesetcontaining
v
.
‹
Union
(
u
,
v
)
Replacethesetscontaining
u
and
v
withtheirunion.(This
operationdecreasesthenumberofsets.)
Here'sacompletedescriptionofKruskal'salgorithmintermsoftheseoperations:
Kruskal
(
V
,
E
)
:
sort
E
byincreasingweight
F
 
(
V
,
?
)
foreachvertex
v
2
V
MakeSet
(
v
)
for
i
 
1
to
j
E
j
uv
 
i
thlightestedgein
E
if
Find
(
u
)
6
=
Find
(
v
)
Union
(
u
,
v
)
add
uv
to
F
return
F
Aftertheinitialsort,thealgorithmperformsexactly
V
MakeSet
operations
(oneforeachvertex),
2
E
Find
operations(twoforeachedge),and
V

1
Union
operations(oneforeachedgeintheminimumspanningtree).Wejustdescribed
adisjodatastructureforwhich
MakeSet
and
Find
require
O
(
1
)
time,
and
Union
runsin
O
(
log
V
)
amortized
time.Usingthisimplementation,the
totaltimespentmaintainingthesetpartitionis
O
(
E
+
V
log
V
)
.
6
Butrecallthatwealreadyneed
O
(
E
log
E
)=
O
(
E
log
V
)
timejusttosortthe
edges.Becausethisislargerthanthetimespentmaintainingthe
Unio
datastructure,theoverallrunningtimeofKruskal'salgorithmis
O
(
E
log
V
)
,
6
Adi˙erentdisjodatastructure,whichusesastrategycalled
uniowithpath
compression
,performseach
Union
or
Find
in
O
(

(
V
))
amortizedtime,where

isthealmo
bnstant
inverseAckermanfunction
.Ifyoudon'tfeellikeconsultingWikipedia,just
thinkof

(
V
)
as
4
.Usingthisimplementation,thetotaltimespentmaintainingthesetpartition
is
O
(
E

(
V
))
,whichisslightlyfasterwhen
V
islargeand
E
isverycloseto
V
.
267

7.MinimumSpanningTrees
exactlythesameasBor·vka'salgorithm,orJarník'salgorithmwithanormal
(nonacci)heap.
Exercises
1.
Let
G
=(
V
,
E
)
beanarbitraryconnectedgraphwithweightededges.
(a)
Provethatforanycyclein
G
,theminimumspanningtreeof
G
excludes
themaximeightedgeinthatcycle.
(b)
Proveordisprove:Theminimumspanningtreeof
G
includesthe
minimeightedgein
every
cyclein
G
.
2.
Throughoutthischapter,weassumedthatnotwoedgesintheinputgraph
haveequalweights,whichimpliesthattheminimumspanningtreeisunique.
Infact,aweakerconditionontheedgeweightsimpliesMSTuniqueness.
(a)
Describeaneightedgraphthathasauniqueminimumspanning
tree,eventhoughtwoedgeshaveequalweights.
(b)
Provethataneightedgraph
G
hasa
unique
minimumspanning
treeifandonlyifthefollowingconditionshold:
‹
Foranypartitionoftheverticesof
G
intotwosubsets,theminim
weightedgewithoneendpointineachsubsetisunique.
‹
Themaximeightedgeinanycycleof
G
isunique.
(c)
Describeandanalyzeanalgorithmtodeterminewhetherornotagraph
hasauniqueminimumspanningtree.
3.
Mostclassicalminimalgorithmsusethenotionsof
andseledgesdescribedinthetext,butthereisanalternateformulation.
Let
G
beaweightedundirectedgraph,wheretheedgeweightsaredistinct.
Wesaythatanedge
e
is
dangerous
ifitisthelongestedgeinsomecycle
in
G
,and
useful
ifitdoesnotlieinanycyclein
G
.
(a)
Provethattheminimumspanningtreeof
G
containseveryusefuledge.
(b)
Provethattheminimumspanningtreeof
G
doesnotcontainany
dangerousedge.
(c)
Describeandanalyzeane˚cientimplementationofthefollowing
algorithm,˝rstdescribedbyJosephKruskalinthesame1956paper
whereheproposedskal'saExaminetheedgesof
G
in
decreasing
order;ifanedgeisdangerous,removeitfrom
G
.
[Hint:It
won'tbeasfastasKruskal'susualalgorithm.]
4.
(a)
Describeandanalyzeanalgorithmtocomputethe
maximum
eight
spanningtreeofagiveneightedgraph.
268

Exercises
(b)
A
feedbackedgeset
ofanundirectedgraph
G
isasubset
F
oftheedges
suchthateverycyclein
G
containsatleastoneedgein
F
.Inother
words,removingeveryedgein
F
makesthegraph
G
acyclic.Describe
andanalyzeafastalgorithmtocomputetheminimeightfeedback
edgesetofagiveneightedgraph.
5.
Supposewearegivenbothanundirectedgraph
G
withweightededgesand
aminimumspanningtree
T
of
G
.
(a)
Describeanalgorithmtoupdatetheminimumspanningtreewhenthe
weightofasingleedge
e
isdecreased.
(b)
Describeanalgorithmtoupdatetheminimumspanningtreewhenthe
weightofasingleedge
e
isincreased.
Inbothcases,theinputtoyouralgorithmistheedge
e
anditsnewweight;
youralgorithmsshouldmodify
T
sothatitisstillaminimumspanningtree.
[Hint:Considerthecases
e
2
T
and
e
62
T
separately.]
6.
(a)
Describeandanalyzeanalgorithmto˝ndthe
secondsmallestspanning
tree
ofagivengraph
G
,thatis,thespanningtreeof
G
withsmallest
totalweightexceptfortheminimumspanningtree.
ª
(b)
Describeandanalyzeane˚cientalgorithmtocompute,givenaweighted
undirectedgraph
G
andaninteger
k
,the
k
spanningtreesof
G
with
smallestweight.
7.
Agraph
G
=(
V
,
E
)
is
dense
if
E
=

(
V
2
)
.Describeamodi˝cationof
Jarník'sminimpanningtreealgorithmthatrunsin
O
(
V
2
)
time
pendentof
E
)whentheinputgraphisdense,usingonlyelementarydata
struparticular,
without
usingFibonacciheaps.Thisvariantof
Jarník'salgorithmwas˝rstdescribedbyEdsgerDijkstrain1958.
8.
Minimpanningtreealgorithmsareoftenformulatedusinganoperation
called
edgecontraction
.Tocontracttheedge
uv
,weinsertanewnode,
redirectanyedgeincidentto
u
or
v
(except
uv
)tothisnewnode,andthen
delete
u
and
v
.Aftercontraction,theremaybemultipleparalleledges
betweenthenewnodeandothernodesinthegraph;weremoveallbutthe
lightestedgebetweenanytwonodes.
Thethreeclassicalminimpanningtreealgorithmsdescribedinthis
chaptercanallbeexpressedcleanlyintermsofcontractionasfollows.All
threealgorithmsstartbymakingacleancopy
G
0
oftheinputgraph
G
andthenrepeatedlycontractsafeedgesin
G
0
;theminimumspanningtree
consistsofthecontractededges.
269

7.MinimumSpanningTrees
Figure7.7.
Contractinganedgeandremovingredundantparalleledges.
‹
Bor·vka
:Markthelightestedgeleavingeachvertex,contractall
markededges,andrecurse.
‹
Jarník
:Repeatedlycontractthelightestedgeincidenttosome˝xed
rootvertex.
‹
Kruskal
:Repeatedlycontractthelightestedgeinthegraph.
(a)
DescribeanalgorithmtoexecuteasinglepassofBor·vka'scontraction
algorithmin
O
(
V
+
E
)
time.Theinputgraphisrepresentedinan
adjacencylist.
(b)
Consideranalgorithmthat˝rstperforms
k
passesofBor·vka'sco
tionalgorithm,andthenrunsJarník'salgorithm(
with
aFibonacciheap)
ontheresultingcontractedgraph.
i.
Whatistherunningtimeofthishybridalgorithm,asafunctionof
V
,
E
,and
k
?
ii.
Forwhichvalueof
k
isthisrunningtimeminimized?Whatisthe
resultingrunningtime?
(c)
Callafamilyofgraphs
nice
ifithasthefollowingproperties:
‹
Contractinganedgeofanicegraphyieldsanothernicegraph.
‹
Everynicegraphwith
V
verticeshasonly
O
(
V
)
edges.
Forexample,planargraphsthatcanbedrawnintheplanewith
nocrossingnice.Contractinganyedgeofaplanargraph
leavesasmallerplanargraph,andEuler'sformulaimpliesthatevery
planargraphwith
V
verticeshasatmost
3
V

6
edges.
ProvethatBor·vka'scontractionalgorithmcomputestheminimum
spanningtreeofanynicegraphin
O
(
V
)
time.
9.
Considerapathbetweentwovertices
s
and
t
inaundirectedweighted
graph
G
.The
width
ofthispathistheminimumweightofanyedgeinthe
path.The
bottleneckdistance
between
s
and
t
isthewidthofthewidest
pathfrom
s
to
t
.(Iftherearenopathsfrom
s
to
t
,thebottleneckdistance
is

;ontheotherhand,thebottleneckdistancefrom
s
toitselfis
1
.)
(a)
Provethatthe
maximum
spanningtreeof
G
containswidestpaths
between
every
pairofvertices.
270

Exercises
Thebottleneckdistancebetween
s
and
t
is
9
.
(b)
Describeanalgorithmtosolvethefollowingproblemin
O
(
V
+
E
)
time:
Givenaundirectedweightedgraph
G
,twovertices
s
and
t
,anda
weight
W
,isthebottleneckdistancebetween
s
and
t
atmost
W
?
(c)
Suppose
B
isthebottleneckdistancebetween
s
and
t
.
i.
Provethatdeletinganyedgewithweightlessthan
B
doesnotchange
thebottleneckdistancebetween
s
and
t
.
ii.
Provethat
contracting
anyedgewithweight
greater
than
B
does
notchangethebottleneckdistancebetween
s
and
t
.(Ifcontraction
createsparalleledges,deleteallbutthe
heaviest
edgebetweeneach
pairofnodes.)
ª
(d)
Describeanalgorithmtocomputeaminimeneckpathbetween
s
and
t
in
O
(
V
+
E
)
time.
[Hint:Startby˝ndingthemedieightedge
in
G
.]
10.
Bor·vka'salgorithmcanbereformulatedtouseastandarddisjo
datastructuretoidentifysafeedges,justlikeKruskal'salgorithm,instead
ofexplicitlycountingandlabelingcomponentsoftheevolvingspanning
forest
F
ineachiteration.
Inthisvariant,eachcomponentof
F
isrepresentedbyan

;each
vertex
v
storesapointer
parent
(
v
)
toitsparent,orto
v
itselfif
v
istheroot
ofitsThesubroutine
Find
(
v
)
returnstherootof
v
'sbut
alsoapplies
pathcompression
,reassigningallparentpointersfrom
v
tothe
roottopointdirectlytotheroot,tospeedupfuture
Find
operations.
7
The
subroutine
Union
combinestwointoonebymakingoneofthetwo
rootnodestheparentoftheother.
8
7
Pathcompressionisaformofmemoization!
8
Normally,
Union
isimplementedmorecarefullytoensurethattherootofthelargeror
olderdoesnotchange;however,thosedetailsdon'tmatterhere.
271

7.MinimumSpanningTrees
Find
(
v
)
:
if
parent
(
v
)=
v
return
v
else
¯
v
 
Find
(
parent
(
v
))
parent
(
v
)
 
¯
v
return
¯
v
Union
(
u
,
v
)
:
¯
u
 
Find
(
u
)
¯
v
 
Find
(
v
)
either
parent
(
¯
u
)
 
¯
v
or
parent
(
¯
v
)
 
¯
u
Inthemodi˝edversionofBor·vka'salgorithm,inadditiontotheparent
pointers,therootvertex
¯
v
ofeachcomponentof
F
maintainsanedge
safe
(
¯
v
)
,
which(attheendof
FindSafeEdges
)isthelightestedgewithoneendpoint
inthatcomponent.
FindSafeEdges
(
V
,
E
)
:
foreachvertex
v
2
V
safe
(
v
)
 
Null
found
 
False
foreachedge
uv
2
E
¯
u
 
Find
(
u
)
¯
v
 
Find
(
v
)
if
¯
u
6
=
¯
v
if
safe
(
¯
u
)=
Null
or
w
(
uv
)
<
w
(
safe
(
¯
u
))
safe
(
¯
u
)
 
uv
if
safe
(
¯
v
)=
Null
or
w
(
uv
)
<
w
(
safe
(
¯
v
))
safe
(
¯
v
)
 
uv
found
 
True
return
found
AddSafeEdges
(
V
,
E
,
F
)
:
foreachvertex
v
2
V
if
safe
(
v
)
6
=
Null
xy
 
safe
(
v
)
if
Find
(
x
)
6
=
Find
(
y
)
Union
(
x
,
y
)
add
xy
to
F
Bor·vka
(
V
,
E
)
:
F
=
?
foreachvertex
v
2
V
parent
(
v
)
 
v
while
FindSafeEdges
(
V
,
E
)
AddSafeEdges
(
V
,
E
,
F
)
return
F
Provethateachcallto
FindSafeEdges
and
AddSafeEdges
requiresonly
O
(
E
)
time.
[Hint:Whatisthedepthofthewhen
FindSafeEdges
ends?]
Itfollowsthatthisvariantof
Bor·vka
alsorunsin
O
(
E
log
V
)
time.
272

IstudymyBibleasIgatherapples.FirstIshakethewholetree,thattheripestmight
fall.ThenIclimbthetreeandshakeeachlimb,andtheneachbranchandtheneach
twig,andthenIlookundereachleaf.
attributedtoMartinLuther(c.1500)
Lifeisanunfoldment,andthefurtherwetravelthemoretruthwecancomprehend.
Tounderstandthethingsthatareatourdooristhebestpreparationfor
understandingthosethatliebeyond.
attributedtoHypatiaofAlexandria(c.400)byElbertHubbard
in
LittleJourneystotheHomesofGreatTeachers
(1908)
Yourmindwillanswermostquestionsifyoulearntorelaxandwaitfortheanswer.
Likeoneofthosethinkingmachines,youfeedinyourquestion,sitback,andwait...
WilliamS.Burroughs,
NakedLunch
(1959)
Themethodsgiveninthispaperrequirenoforesightoringenuity,
andhencedeservetobecalledalgorithms.
EdwardR.Moore,ShortestPathThroughaMaze(1959)
8
ShortestPaths
Supposewearegivenaweighted
directed
graph
G
=(
V
,
E
,
w
)
withtwospecial
vertices,andwewantto˝ndtheshortestpathfroma
source
vertex
s
toa
target
vertex
t
.Thatis,wewantto˝ndthedirectedpath
P
startingat
s
andending
at
t
thatminimizesthefunction
w
(
P
)
:
=
X
u

v
2
P
w
(
u

v
)
.
Forexample,ifIwanttoanswerthequestionthefastestwaytodrive
frommyoldapartmentinChampaign,Illinoistomywife'soldapartmentin
Columbus,OhiImightuseagraphwhoseverticesarecities,edgesare
roads,weightsaredrivingtimes,
s
isChampaign,and
t
isColumbus.
1
The
graphisdirected,becausedrivingtimesalongthesameroadmightbedi˙erent
1
WestonChurch,northonProspect,eastonsouthoneastonAirportExpressway,
northoneastonnorthonGrandview,easton5th,northonOlentangyRiver,easton
Dodridge,northonHigh,westonKelso,southonNeil.Dependingontra˚c.WeliveinUrbana
now.
273

8.ShortestPaths
indi˙erentdirections.(Atonetime,therewasaspeedtraponjusteastof
theIndiana/Ohioborder,butonlyforeastboundtra˚c.)
8.1ShortestPathTrees
Almosteveryalgorithmknownforcomputingshortestpathsfromonevertex
toanotheractuallysolves(largeportionsof)thefollowingmoregeneral
single
sourceshortestpath
or
SSSP
problem:Findshortestpathsfromthesource
vertex
s
to
every
othervertexinthegraph.Thisproblemisusuallysolvedby
˝ndinga
shortestpathtree
rootedat
s
thatcontainsallthedesiredshortest
paths.
It'snothardtoseethatifshortestpathsareunique,thentheyformatree,
becauseanysubpathofashortestpathisitselfashortestpath.Ifthereare
multipleshortestpathstosomevertices,wecanalwayschooseoneshortest
pathtoeachvertexsothattheunionofthepathsisatree.Ifthereareshortest
pathsfrom
s
totwovertices
u
and
v
thatdiverge,thenmeet,thendivergeagain,
wecanmodifyoneofthepathswithoutchangingitslength,sothatthetwo
pathsonlydivergeonce.
Figure8.1.
If
s

a

b

c

d

v
(solid)and
s

a

x

y

d

u
(dashed)areshortestpaths,then
s

a

b

c

d

u
(alongthetop)isalsoashortestpath.
Althoughtheyarebothoptimalspanningtrees,streesand
minimumspanningtreesareverydi˙erentcreatures.Streesare
rootedanddirected;minimumspanningtreesareunrootedandundirected.
Streesaremostnaturallyde˝nedfordirectedgraphs;minimum
spanningtreesaremorenaturallyde˝nedforundirectedgraphs.Ifedgeweights
aredistinct,thereisonlyoneminimumspanningtree,buteverysourcevertex
inducesadi˙erentstree;moreover,itispossiblefor
every
shortest
pathtreetouseadi˙erentsetofedgesfromtheminimumspanningtree.
ª
8.2NegativeEdges
Formostsproblems,wheretheedgeweightscorrespondtodistance
orlengthortime,itisnaturaltoassumethatalledgeweightsarenoegative,
orevenpositive.However,formanyapplicationsofsalgorithms,
itisnaturaltoconsideredgeswithnegativeweight.Forexample,theweight
274

ª
8.2.NegativeEdges
Figure8.2.
Aminimumspanningtreeandashortestpathtreeofthesameundirectedgraph.
ofanedgemightrepresentthe
cost
ofmovingfromonevertextoanother,so
negativeightedgesrepresenttransitionswithnegativecost,orequivalently,
transitionsthatearnapro˝t.
Negativeedgesareathorninthesideofmostsproblems,
becausethepresenceofanegative
cycle
mightimplythatshortestpathsmaynot
bewend.Tobeprecise,ashortestpathfrom
s
to
t
existsifandonlyif
thereisatleastonepathfrom
s
to
t
,butthereisnopathfrom
s
to
t
thattouches
anegativecycle.For
any
pathfrom
s
to
t
thattouchesanegativecycle,thereis
ashorterpathfrom
s
to
t
thatgoesaroundthecycleonemoretime.
2
Thus,if
atleastonepathfrom
s
to
t
touchesanegativecycle,thereisnoshortestpath
from
s
to
t
.
Figure8.3.
Thereisnoshortestwalkfrom
s
to
t
.
Inpartbecauseweneedtoconsidernegativeedgeweights,thischapter
explicitlyconsiders
only
directedgraphs.Allofthealgorithmsdescribedhere
alsoworkforundirectedgraphswithessentiallytrivialmodi˝cations,
ifand
onlyif
negativeedgesareprohibited.Correctlyhandlingnegativeedgesin
undirectedgraphsisconsiderablymoresubtle.Wecannotsimplyreplaceevery
undirectededgewithapairofdirectededges,becausethiswouldtransformany
negativeedgeintoashortnegativecycle.Subpathsofan
undirected
shortestpath
thatcontainsanegativeedgeare
not
necessarilyshortestpaths;consequently,
thesetofallundirectedshortestpathsfromasinglesourcevertexmaynot
de˝neatree,evenifshortestpathsareunique.
2
Technically,weshouldbediscussingshortest
walks
here,ratherthanshortest
paths
,butthe
abuseofterminologyisstandard.If
s
canreach
t
,theremustbeashortestsimplepathfrom
s
to
t
;it'sjustNPtocompute(whentherearenegativecycles),byaneasyreductionfromthe
Hamiltonianpathproblem.Ontheotherhand,ifthereisashortest
walk
from
s
to
t
,thatwalk
mustbeasimplepath,andthereforemustbetheshortestsimplepathfrom
s
to
t
.Blerg.
275

8.ShortestPaths
Figure8.4.
Anundirectedgraphwhereshortestpathsfrom
s
areuniquebutdonotde˙neatree.
Acompletetreatmentofundirectedgraphswithnegativeedgesisbeyond
thescopeofthisbook.Iwillonlymention,forpeoplewhowanttofollowup
viaGoogle,thata
single
shortestpathinanundirectedgraphwithnegative
edgescanbecomputedin
O
(
VE
+
V
2
log
V
)
time,byareductiontomaximum
weightedmatching.
8.3TheOnlySSSPAlgorithm
Justlikegraphtraversalandminimumspanningtrees,manydi˙erentSSSP
algorithmscanbedescribedasspecialcasesofasinglegenericalgorithm,˝rst
proposedbyLesterFordin1956andindependentlydescribedbyGeorgeDantzig
in1957
3
andagainbyGeorgeMintyin1958.Eachvertex
v
inthegraphstores
twovalues,which(inductively)describea
tentative
shortestpathfrom
s
to
v
.
‹
dist
(
v
)
isthelengthofthetentativeshortest
s
€
v
path,or
1
ifthereisno
suchpath.
‹
pred
(
v
)
isthepredecessorof
v
inthetentativeshortest
s
€
v
path,or
Null
ifthereisnosuchvertex.
Thepredecessorpointersautomaticallyde˝neatentatives
tree
rootedat
s
;thesepointersareexactlythesameastheparentpointersin
ourgenericgraphtraversalalgorithm.Atthebeginningofthealgorithm,we
initializethedistancesandpredecessorsasfollows:
InitSSSP
(
s
)
:
dist
(
s
)
 
0
pred
(
s
)
 
Null
forallvertices
v
6
=
s
dist
(
v
)
 1
pred
(
v
)
 
Null
Duringtheexecutionofthealgorithm,anedge
u

v
is
tense
if
dist
(
u
)+
w
(
u

v
)
<
dist
(
v
)
.If
u

v
istense,thetentativeshortestpath
s
€
v
isclearlyincorrect,
becausethepath
s
€
u

v
isshorter.Wecancorrect(oratleastimprove)this
obviousoverestimateby
relaxing
theedgeasfollows:
3
Speci˝cally,Dantzigshowedthattheshortestpathproblemcanbephrasedasalinear
programmingproblem,andthendescribedaninterpretationofhissimplexmethodintermsof
theoriginalgraph.Hisdescriptionis(morally)equivalenttoFord'srelaxationstrategy.
276

8.3.TheOnlySSSPAlgorithm
Relax
(
u

v
)
:
dist
(
v
)
 
dist
(
u
)+
w
(
u

v
)
pred
(
v
)
 
u
Nowthateverythingissetup,Ford'sgenericalgorithmhasasimpleone
description:
Repeatedlyrelaxtenseedges,untiltherearenomoretenseedges.
FordSSSP
(
s
)
:
InitSSSP
(
s
)
whilethereisatleastonetenseedge
Relax
anytenseedge
If
FordSSSP
eventuallyterminates(becausetherearenomoretenseedges),
thenthepredecessorpointerscorrectlyde˝neastree,andeach
value
dist
(
v
)
istheactualsdistancefrom
s
to
v
.Inparticular,if
s
cannotreach
v
,then
dist
(
v
)=
1
,andifanynegativecycleisreachablefrom
s
,
thenthealgorithmneverterminates.
ThecorrectnessofFord'sgenericalgorithmfollowsfromthefollowingseries
ofsimplerclaims:
1.
Atanymomentduringtheexecutionofthealgorithm,foreveryvertex
v
,
thedistance
dist
(
v
)
iseither
1
orthelengthofawalkfrom
s
to
v
.This
claimcanbeprovedbyinductiononthenumberofrelaxations.
2.
Ifthegraphhasnonegativecycles,then
dist
(
v
)
iseither
1
orthelength
ofsome
simplepath
from
s
to
v
.Speci˝cally,if
dist
(
v
)
isthelengthof
awalkfrom
s
to
v
thatcontainsadirectedcycle,thatcyclemusthave
negativelength.Thisclaimimpliesthatif
G
hasnonegativecycles,the
relaxationalgorithmeventuallyhalts,becausethereareonlya˝nite
numberofsimplepathsin
G
.
3.
Ifnoedgein
G
istense,thenforeveryvertex
v
,thedistance
dist
(
v
)
isthelengthofthepredecessorpath
s


pred
(
pred
(
v
))

pred
(
v
)

v
.
Speci˝cally,if
v
violatesthisconditionbutitspredecessor
pred
(
v
)
does
not,theedge
pred
(
v
)

v
istense.
4.
Ifnoedgein
G
istense,thenforeveryvertex
v
,thepathofpredecessor
edges
s



pred
(
pred
(
v
))

pred
(
v
)

v
isinfactashortestpathfrom
s
to
v
.Speci˝cally,if
v
violatesthisconditionbutitspredecessor
u
insome
shortestpath
doesnot,theedge
u

v
istense.Thisclaimalsoimplies
thatif
G
hasanegativecycle,thensomeedgeis
always
tense,sothe
genericalgorithmneverhalts.
SofarIhaven'tsaidanythingabouthowto˝ndtenseedges,orwhichtense
edge(s)torelaxifthereismorethanone.Justlikewhatevsearch,there
277

8.ShortestPaths
areseveraldi˙erentinstantiationsofFord'sgenericrelaxationalgorithm.Unlike
whatevsearch,however,thee˚ciencyandcorrectnessofeachsearch
strategydependsonthestructureoftheinputgraph.
Therestofthischapterconsidersthefourmostcommoninstantiations
ofFord'salgorithm,eachofwhichisthebestchoiceforadi˙erentclassof
inputgraphs.I'llleavetheremainingdetailsofthegenericcorrectnessproof
asexercises,andinsteadgive(moreinformative,selfntained)correctness
proofsforeachofthesefourspeci˝calgorithms.
8.4UnweightedGraphs:Breadth-FirstSearch
Inthesimplestspecialcaseoftheshortestpathproblem,alledgeshaveweight
1
,
andthelengthofapathisjustthenumberofedges.Thisspecialcasecanbe
solvedbyaspeciesofourgenericgraversalalgorithmcalled

search
.searchisoftenattributedtoEdwardMoore,whodescribed
itin1957(asAlgorithmasthe˝rstpublishedmethodto˝ndtheshortest
paththroughamaze.
4
EspeciallyinthecontextofVLSIwiringandrobotpath
planning,searchissometimesattributedtoChinYangLee,who
describedseveralapplicationsofMoore'sAlgorithm(withpropercreditto
Moore)in1961.However,in1945,morethanadecadebeforeMooreconsidered
mazes,KonradZusedescribedanimplementationofsearch,asa
methodtocountandlabelthecomponentsofadisconnectedgraph.
6
4
MoorewasmotivatedbyaweaknessinClaudeShannon'smazrobot
whichShannondesignedandconstructedin1950.(Theseususedamemoizedversionof
˝rstsearch,implementedusingelectromechanicalrelays;thiswasalmostcertainlythe˝rst
implementation
ofsearchingraphs.)AccordingtoMoore,thismachinewas
usedwithamazewhichhadmorethanonesolution,avisitoraskedwhyithadnotbeenbuilt
toalways˝ndtheshortestpath.ShannonandIeachattemptedto˝ndeconomicalmethods
ofdoingthisbymachine.Hefoundseveralmethodssuitableforanalogcomputation,
5
andI
obtainedthesea
5
Analogmethodsforcomputingshortestpathsthroughmazeshavebeenproposedusing
ballbearings,˛uid/plasma˛ow,chemicalreactionwaves,chemotaxis,resistornetworks,electric
circuitswithLEDs,memristornetworks,glowdischargeinmicro˛uidicchips,growingplants,
slimemold,amoebas,ants,bees,nematodes,andtourists.
6
KonradZusewasoneoftheearlypioneersofcomputing;hedesignedandbuilthis˝rst
programmablecomputer(laterdubbedtheZ1)inthelate1930sfrommetalstripsandrodsinhis
parents'livingroom;theZ1anditsoriginalblueprintsweredestroyedbyaBritishairraidin1944.
Zuse's1945PhDthesisdescribesthevery˝rstevelprogramminglanguage,called
Plankalkül
.
The˝rstcompleteexampleofaPlankalkülprograminZuse'sthesisisanimplementationof
searchtocountcomponents,alongwithapseudocodeexplanationandanillustrated
traceofthealgorithm'sexecutiononadisconnectedgraphwitheightvertices.Due
tothecollapseoftheNazigovernment,ZusewasunabletosubmithisPhDthesis,andPlankalkül
remainedunpublisheduntil1972.The˝rstPlankalkülcompilerwas˝nallyimplementedin1975
byJoachimHohmann.
278

8.4.UnweightedGraphs:Breadth-FirstSearch
searchmaintainsautqueueofvertices,which
initiallycontainsonlythesourcevertex
s
.Ateachiteration,thealgorithm
Pull
s
avertex
u
fromthefrontofthequeueandexamineseachofitsoutgoingedges
u

v
.Wheneverthealgorithmdiscoversanoutgoingtenseedge
u

v
,itrelaxes
thatedgeand
Push
esvertex
v
ontothequeue.Thealgorithmendswhenthe
queuebecomesempty.
BFS
(
s
)
:
InitSSSP
(
s
)
Push
(
s
)
whilethequeueisnotempty
u
 
Pull
()
foralledges
u

v
if
dist
(
v
)
>
dist
(
u
)+
1
hh
if
u

v
istense
ii
dist
(
v
)
 
dist
(
u
)+
1
hh
relax
u

v
ii
pred
(
v
)
 
u
Push
(
v
)
searchissomewhateasiertoanalyzeifwebreakitsexecution
into
phases
,byintroducinganimaginary
token
.Beforewe
Pull
anyvertices,
we
Push
thetokenintothequeue.Thecurrentphaseendswhenwe
Pull
the
tokenoutofthequeue;webeginthenextphasewhenwe
Push
thetokeninto
thequeueagain.Thus,the˝rstphaseconsistsentirelyofscanningthesource
vertex
s
.Thealgorithmendswhenthequeuecontains
only
thetoken.The
modi˝edalgorithmisshowninFigure
8.5
,andFigure
8.6
showsanexampleof
thisalgorithminaction.Letmeemphasizethatthesemodi˝cationsaremerely
aconvenienceforanalysis;withorwithoutthetoken,thealgorithm
Push
esand
Pull
sverticesinthesameorder,scansedgesinthesameorder,andoutputs
exactlythesamedistancesandpredecessors.
BFSWithToken
(
s
)
:
InitSSSP
(
s
)
Push
(
s
)
Push
(
ú
)
hh
startthe˙rstphase
ii
whilethequeuecontainsatleastonevertex
u
 
Pull
()
if
u
=
ú
Push
(
ú
)
hh
startthenextphase
ii
else
foralledges
u

v
if
dist
(
v
)
>
dist
(
u
)+
1
hh
if
u

v
istense
ii
dist
(
v
)
 
dist
(
u
)+
1
hh
relax
u

v
ii
pred
(
v
)
 
u
Push
(
v
)
Figure8.5.
Breadth-˙rstsearchwithanend-of-phasetoken(
ú
);boldredlinesareonlyforanalysis.
279

8.ShortestPaths
Figure8.6.
Acompleterunofbreadth-˙rstsearchinadirectedgraph.Verticesarepulledfromthe
queueintheorder
s
ú
bd
ú
cag
ú
fe
ú
h
ú
ú
,where
ú
istheend-of-phasetoken.Boldverticesare
inthequeueattheendofeachphase.Boldedgesdescribetheevolvingshortestpathtree.
Letmeemphasizethatinthefollowinglemma,
dist
(
v
)
isjustavariable
maintainedbythealgorithm.While
dist
(
v
)
intuitively
representsatentative
sdistance,wecannotassume(yet)that
dist
(
v
)
iseveractuallyequal
tothetruesdistancefrom
s
to
v
.Don'tworry;we'llgetthere.
Lemma8.1.
Foreveryinteger
i

0
andeveryvertex
v
,attheendofthe
i
th
phase,either
dist
(
v
)=
1
or
dist
(
v
)

i
,and
v
isinthequeueifandonlyif
dist
(
v
)=
i
.
Proof:
Theproofproceedsbyinductionon
i
.Thebasecase
i
=
0
is
forward:Atthestartofthe˝rstphasetheendofthezerothphathe
queuecontainsonlythestartvertex
s
andthetoken
ú
,and
InitSSSP
justset
dist
(
s
)
 
0
and
dist
(
v
)
 1
forall
v
6
=
s
.
So˝xaninteger
i
>
0
.Theinductivehypothesisimpliesthatatthe
start
of
the
i
thphase,thequeuecontainseveryvertex
u
with
dist
(
u
)=
i

1
,followed
bythetoken
ú
.Inotherwords,thequeuelookslikethis:
Ô
ú
i

1
i

1

i

1
Ô
Thus,beforewe
Pull
thetoken
ú
fromthequeue,endingthe
i
thphase,we
Pull
every
vertex
u
with
dist
(
u
)=
i

1
.
Foreachsuchvertex
u
,weconsidereveryoutgoingedge
u

v
.If
u

v
is
tense,weset
dist
(
v
)
 
dist
(
u
)+
1
,sothat
dist
(
v
)=
i
,andthenimmediately
280

8.4.UnweightedGraphs:Breadth-FirstSearch
Push
v
intothequeue.Thesearetheonlyassignmentstodistancelabels
duringthe
i
thphase.Thus,byinduction,duringtheentire
i
thphase,thequeue
containssomeverticeswithdistancelabel
i

1
,followedbythetoken,followed
bysomeverticeswithdistancelabel
i
:
Ô
i

i
ú
i

1

i

1
Ô
Inparticular,justbeforethe
i
thphaseends,thequeuecontainsthetoken,
followedbysomeverticeswithdistancelabel
i
.
Ô
ii

i
ú
Ô
Moreover,vertex
v
appearsinthis˝nalqueueifandonlyif
dist
(
v
)
waschanged
duringthe
i
thphase.Thus,attheendofthe
i
thphase,thequeuecontains
every
vertex
v
with
dist
(
v
)=
i
.
…
Lemma
8.1
impliesthatthemainbodyof
BFS
assignsdistancelabelsinno
decreasingorder;ontheotherhand,thedistancelabel
dist
(
v
)
ofeachvertex
v
neverincreases.Itfollowsthatforeachvertex
v
,theline
dist
(
v
)
 
dist
(
u
)+
1

isexecuted
atmostonce
,duringphase
dist
(
v
)
.Similarly:
‹
Eachpredecessorpointer
pred
(
v
)
ischangedatmostonce,duringphase
dist
(
v
)
.
‹
Eachvertex
v
is
Push
edintothequeueatmostonce,duringphase
dist
(
v
)
.
‹
Eachvertex
u
is
Pull
edfromthequeueatmostonce,duringphase
dist
(
u
)+
1
.
‹
Foreachedge
u

v
,thecomparison
dist
(
v
)
>
dist
(
u
)+
1
isperformed
atmostonce,duringphase
dist
(
u
)+
1
.
Altogether,theseobservationsimplythatsearchrunsin
O
(
V
+
E
)
time
.Intuitively,wecanthinkoftheverticesinthequeueasaavefro
expandingmonotonicallyoutwardfromthesourcevertex
s
,passingovereach
vertexandedgeofthegraphatmostonce.Thisexpandingwavefrontanalogy
wasalreadyproposedbyChinYangLeein1961,inspiredbyvisualizations
producedbyhisimplementationofMoore'sAlgorithmA.
Theseobservationsalsoimplythatwecanreplacethecondition
dist
(
v
)
>
dist
(
u
)+
1
bythe(arguably)simplertest
dist
(
v
)=
1
Thendistances
playthesameroleasthemarksmaintainedbyothergraversalalgorithms,
whichensurethateachvertexisvisitedonlyonce.Speci˝cally,avertexis
ifandonlyifitsdistancelabelis˝nite.
Butwestillneedtoprovethatthe˝naldistancelabelsarecorrect!
Theorem8.2.
When
BFS
ends,
dist
(
v
)
isthelengthoftheshortestpathin
G
from
s
to
v
,foreveryvertex
v
.
281

8.ShortestPaths
Proof:
Fixanarbitraryvertex
v
,andconsideranarbitrarypath
v
0

v
1



v
`
in
G
,where
v
0
=
s
and
v
`
=
v
.Iclaimthat
dist
(
v
j
)

j
foreachindex
j
;in
particular
dist
(
v
)

`
.Wecanprovethisclaimbyinductionon
j
asfollows.
‹
Trivially
dist
(
v
0
)=
dist
(
s
)=
0
.
‹
Foranyindex
j
>
0
,theinductionhypothesisimplies
dist
(
v
j

1
)

j

1
.
Immediatelyafterwe
Pull
vertex
v
j

1
fromthequeue,either
dist
(
v
j
)

dist
(
v
j

1
)+
1
already,orweset
dist
(
v
j
)
 
dist
(
v
j

1
)+
1
.Ineithercase,we
have
dist
(
v
j
)

dist
(
v
j

1
)+
1

j
.
Wejustprovedthat
dist
(
v
)
isatmostthelengthofan
arbitrary
pathfrom
s
to
v
;
itfollowsthat
dist
(
v
)
isatmostthelengthofthe
shortest
pathfrom
s
to`
v
.
Asimilarinductionproofimpliesthat
dist
(
v
)
isthelengthofthepredecessor
path
s



pred
(
pred
(
v
))

pred
(
v
)

v
,sothismustbetheshortestpath.
…
8.5DirectedAcyclicGraphs:Depth-FirstSearch
Shortestpathsarealsoeasytocomputeindirectedacyclicgraphs,evenwhen
theedgesareweighted,andinparticular,evenwhensomeedgeshavenegative
weight.(Wedon'thavetoworryaboutnegativecycles,becausebyde˝nition,
dagsdon'thave
any
cycles!)Indeed,thisisacompletelystandarddynamic
programmingalgorithm.
Let
G
beadirectedgraphwithweightededges,andlet
s
bethe˝xedstart
vertex.Foranyvertex
v
,let
dist
(
v
)
denotethelengthoftheshortestpathin
G
from
s
to
v
.Thisfunctionsatis˝esthefollowingsimplerecurrence:
dist
(
v
)=
¨
0
if
v
=
s
min
u

v
(
dist
(
u
)+
w
(
u

v
))
otherwise
Infact,thisidentityholdsfor
all
directedgraphs,butitisonlya
recurrence
fordirectedacyclicgraphs.Iftheinputgraph
G
containedacycle,arecursive
evaluationofthisfunctionwouldfallintoanin˝niteloop;however,because
G
isadag,eachrecursivecallvisitsanearliervertexintopologicalorder.
Thedependencygraphforthisrecurrenceisthereversaloftheinputgraph
G
:
subproblem
dist
(
v
)
dependson
dist
(
u
)
ifandonlyif
u

v
isanedgein
G
.Thus,
wecomputethedistanceofeveryin
O
(
V
+
E
)
time
byperforminga
searchinthereversalof
G
andconsideringverticesinpostorder.Equivalently,
wecanconsidertheverticesintheoriginalgraph
G
intopologicalorder,as
showninFigure
8.7
.
TheresultingdynamialgorithmisanotherexampleofFord's
genericrelaxationalgorithm!Tomakethisconnectionclearer,wecanmovethe
initialization
dist
(
v
)
outsidethemainloopandaddcomputationofpredecessor
pointers,asshowninFigure
8.8
.Figure
8.9
showsthisalgorithminaction.
282

8.5.DirectedAcyclicGraphs:Depth-FirstSearch
DagSSSP
(
s
)
:
forallvertices
v
intopologicalorder
if
v
=
s
dist
(
v
)
 
0
else
dist
(
v
)
 1
foralledges
u

v
if
dist
(
v
)
>
dist
(
u
)+
w
(
u

v
)
hh
if
u

v
istense
ii
dist
(
v
)
 
dist
(
u
)+
w
(
u

v
)
hh
relax
u

v
ii
Figure8.7.
Computingshortestpathsinadagusingdynamicprogramming
DagSSSP
(
s
)
:
InitSSSP
(
s
)
forallvertices
v
intopologicalorder
foralledges
u

v
if
u

v
istense
Relax
(
u

v
)
Figure8.8.
ComputingshortestpathsinadagusingFord'salgorithm.(Thesearethesamealgorithm.)
Figure8.9.
Computingshortestpathsinadag,byrelaxing
incoming
edgesintopologicalorder.In
eachiteration,boldedgesindicatepredecessors,andtheboldvertexisabouttobescanned.Compare
withFigure
8.10
.
.
283

8.ShortestPaths
DagSSSP
di˙ersfromsearchandotherinstancesofFord's
relaxationstrategyinoneminorrespect.Whenevertheseothers
algorithmsconsideravertex,theyattempttorelaxeachofits
outgoing
edges,
intuitively
pushing
thewavefrontforwardfromthesource;whereas,
DagSSSP
attemptstorelaxeachofthe
incoming
edgesofeachvertex,intuitively
pulling
thewavefrontforward.
However,ifwemodify
DagSSSP
torelaxoutgoingedgesinsteadofincoming
edges,weobtainanotheralgorithmthatcomputesshortestpathsindags
in
O
(
V
+
E
)
time
andthatmorecloselyresemblesourothers
algorithms.
PushDagSSSP
(
s
)
:
InitSSSP
(
s
)
forallvertices
u
intopologicalorder
forall
outgoing
edges
u

v
if
u

v
istense
Relax
(
u

v
)
Figure
8.10
showsanexecutionofthismodi˝edalgorithmonthesame
graphasFigure
8.9
.Thecorrectnessof
PushDagSSSP
followsimmediately
fromthecorrectnessofFord'sgeneralrelaxationstrategy,butit'snothardto
provecorrectnessdirectly,byinductionovertheverticesintopologicalorder.
8.6Best-First:Dijkstra'sAlgorithm
IfwereplacetheFIFOqueueinsearchwithapriorityqueue,where
thekeyofavertex
v
isitstentativedistance
dist
(
v
)
,weobtainanalgorithm
˝rstlisin1957byateamofresearchersattheCaseInstituteof
TechnologyledbyMichaelLeyzorek,inanannualprojectreportfortheCombat
DevelopmentDepartmentoftheUSArmyElectronicProvingGround.Thesame
algorithmwasindependentlydiscoveredbyEdsgerDijkstrain1956(butnot
publisheduntil1959),againbyGeorgeMintysometimebefore1960,andagain
byPeterWhitingandJohnHillierin1960.Anearlyidenticalalgorithmwas
alsodescribedbyGeorgeDantzigin1958.Althoughseveralearlysourcescalled
ity'sathisapproachisnowuniversallyknownas
ainfullaccordancewithStigler'sLaw.
7
Pseudocodeforthisalgorithm
isshowninFigure
8.11
.
Aneasyinductionproofimpliesthat,atalltimesduringtheexecutionofthis
algorithm,anedge
u

v
istenseifandonlyifvertex
u
iseitherinthepriority
7
Iwillfollowthiscommonconvention,despitethehistoricalinaccuracy,partlybecauseI
don'tthinkanybodywantstoreadabouttheeyzohnso
Deraandpartlybecausepapersthataren't
actually
published
don'tcount.
284

8.6.Best-First:Dijkstra'sAlgorithm
Figure8.10.
Computingshortestpathsinadag,byrelaxing
outgoing
edgesintopologicalorder.In
eachiteration,boldedgesindicatepredecessors,andtheboldvertexisabouttobescanned.Compare
withFigure
8.9
.
Dijkstra
(
s
)
:
InitSSSP
(
s
)
Insert
(
s
,0
)
whilethepriorityqueueisnotempty
u
 
ExtractMin
()
foralledges
u

v
if
u

v
istense
Relax
(
u

v
)
if
v
isinthepriorityqueue
DecreaseKey
(
v
,
dist
(
v
))
else
Insert
(
v
,
dist
(
v
))
Figure8.11.
Dijkstra'salgorithm.
285

8.ShortestPaths
queueoristhevertexmostrecently
Extract
edfromthepriorityqueue.Thus,
Dijkstra'salgorithmisaninstanceofFord'sgeneralstrategy,whichimpliesthat
itcorrectlycomputesshortestpaths,providedtherearenonegativecyclesin
G
.
NoNegativeEdges
Dijkstra'salgorithmisparticularlywvedwhentheinputgraphhasno
negativeightedges.Inthissetting,thealgorithmintuitivelyexpandsa
wavefrontoutwardfromthesourcevertex
s
,passingoververticesinincreasing
orderoftheirdistancefrom
s
,similarlytosearch.Figure
8.12
showsthealgorithminaction.
Figure8.12.
The˙rstfouriterationsofDijkstra'salgorithmonagraphwithnonegativeedges.Ineach
iteration,boldedgesindicatepredecessors;shadedverticesareinthepriorityqueue;andtheboldvertex
isabouttobescanned.Theremainingiterationsdonotchangethedistancesortheshortest-pathtree.
WecanderiveaselfntainedproofofcorrectnessforDijkstra'salgorithm
inthissettingbyformalizingthiswavefrontintuition.Foreachinteger
i
,let
u
i
denotethevertexreturnedbythe
i
thcallto
ExtractMin
,andlet
d
i
bethe
valueof
dist
(
u
i
)
justafterthis
Extract
ion.Inparticular,wehave
u
1
=
s
and
d
1
=
0
.Wecannotassumeatthispointthatthevertices
u
i
aredistinct;in
principle,thesamevertexmightbe
Extract
edmorethanonce.
Lemma8.3.
If
G
hasnonegativeightedges,thenforall
i
<
j
,wehave
d
i

d
j
.
Proof:
Assume
G
hasnonegativeweightedges.Fixanarbitraryindex
i
;to
provethelemma,itsu˚cestoprovethat
d
i
+
1

d
i
.Therearetwocasesto
consider.
286

8.6.Best-First:Dijkstra'sAlgorithm
‹
If
G
containstheedge
u
i

u
i
+
1
,andthisedgeisrelaxedduringthe
i
th
iterationofthemainloop,thenattheendofthe
i
thiteration,wehave
dist
(
u
i
+
1
)=
dist
(
u
i
)+
w
(
u
i

u
i
+
1
)

dist
(
u
i
)
,becausealledgeweightsare
noegative.
‹
Otherwise,atthestartofthe
i
thiteration,
u
i
+
1
mustalreadybeinthe
priorityqueue,anditmusthavepriority
dist
(
u
i
+
1
)

dist
(
u
i
)
,because
u
i
is
thevertexreturnedby
ExtractMin
.Moreover,
dist
(
u
i
+
1
)
doesnotchange
duringthe
i
thiteration.
Inbothcases,weconcludethat
d
i
+
1

d
i
.Thelemmanowfollowsimmediately
byinductionon
i
.
…
Lemma8.4.
If
G
hasnonegativeightedges,eachvertexof
G
is
Extract
ed
fromthepriorityqueueatmostonce.
Proof:
Suppose
v
is
Extract
edmorethanonce.Speci˝cally,suppose
v
is
Extract
edinthe
i
thiterationofthemainloop,re
Insert
edduringthe
j
th
iteration,andre
Extract
edduringthe
k
thiteration,forsomeindices
i
<
j
<
k
.
Theninthenotationofthepreviousproof,wehave
v
=
u
i
=
u
k
.
Thedistancelabel
dist
(
v
)
neverincreases.Moreover,
dist
(
v
)
strictlydecreases
duringthe
j
thiteration,justbefore
v
isre
Insert
ed.Itfollowsthat
d
i
>
d
k
.
Therefore,bythepreviouslemma,
G
hasatleastonenegativeightedge.
…
Lemma
8.4
immediatelyimpliesthateachvertexisscannedatmostonce,
andthusthateachedgeisrelaxedatmostonce.However,unlikein
search,eachdistancelabel
dist
(
v
)
canchangemultipletimes.The˝rsttime
dist
(
v
)
changesfrom
1
,we
Insert
v
intothepriorityqueue;afterthat,each
changeto
dist
(
v
)
isfollowedbyacallto
DecreaseKey
.After
v
is
Extract
ed
fromthepriorityqueue,itsdistancelabelneverchanges.
Therestofthecorrectnessproofisalmostidenticaltosearch.
Theorem8.5.
If
G
hasnonegativeightedges,thenwhen
Dijkstra
ends,
dist
(
v
)
isthelengthoftheshortestpathin
G
from
s
to
v
,foreveryvertex
v
.
Proof:
Fixanarbitraryvertex
v
,andconsideranarbitrarypath
v
0

v
1



v
`
in
G
,where
v
0
=
s
and
v
`
=
v
.Foranyindex
j
,let
L
j
denotethelengthofthe
subpath
v
0

v
1



v
j
.Weprovebyinductionthat
dist
(
v
j
)

L
j
forall
j
.
‹
Trivially
dist
(
v
0
)=
dist
(
s
)=
0
=
L
0
.
‹
Foranyindex
j
>
0
,theinductionhypothesisimplies
dist
(
v
j

1
)

L
j

1
.
Immediatelyafterwe
Pull
vertex
v
j

1
fromthequeue,either
dist
(
v
i
)

dist
(
v
j

1
)+
w
(
v
j

1

v
j
)
already,orweset
dist
(
v
i
)
 
dist
(
v
j

1
)+
w
(
v
j

1

v
j
)
.
Ineithercase,wehave
dist
(
v
j
)

dist
(
v
j

1
)+
w
(
v
j

1

v
j
)

L
j

1
+
w
(
v
j

1

v
j
)=
L
j
.
287

8.ShortestPaths
Wejustprovedthat
dist
(
v
)
isatmostthelengthof
every
pathfrom
s
to
v
;it
followsthat
dist
(
v
)
isatmostthelengthofthe
shortest
pathfrom
s
to
v
.
Ontheotherhand,asimilarinductionproofimpliesthat
dist
(
v
)
isthelength
ofthepredecessorpath
s



pred
(
pred
(
v
))

pred
(
v
)

v
.
…
Itremainsonlytoboundthealgorithm'srunningtime.Altogether
Dijkstra
performsatmost
E
DecreaseKey
operations,andatmost
V
Insert
and
ExtractMin
operations.Thus,ifweimplementtheunderlyingpriorityqueue
usingastandardbinaryheap,whichsupportseachoperationin
O
(
log
V
)
time,
Dijkstra
runsin
O
(
E
log
V
)
time
.
8
Ifweknowinadvancethatourinputgraphswill
never
havenegativeedges,
wecansimplifyDijkstra'salgorithmslightly,by
Insert
ingeveryvertexintothe
priorityqueueintheinitializationphase,andthenonlycalling
DecreaseKey
in
themainloop,asshowninFigure
8.13
.ThisistheversionofDijkstra'salgorithm
presentedbymostalgorithmstextbooks,Wikipedia,andevenDijkstra'soriginal
paper;it'salsotheversionofDijkstra'salgorithmthatIdescribedas
inChapter
5
.
NonnegativeDijkstra
(
s
)
:
InitSSSP
(
s
)
forallvertices
v
Insert
(
v
,
dist
(
v
))
whilethepriorityqueueisnotempty
u
 
ExtractMin
()
foralledges
u

v
if
u

v
istense
Relax
(
u

v
)
DecreaseKey
(
v
,
dist
(
v
))
Figure8.13.
Dijkstra'salgorithmveryslightlysimpli˙edforgraphswithoutnegativeedges.Differences
from
Dijkstra
areboldred.
ª
NegativeEdges
However,
NonnegativeDijkstra
does
not
correctlycomputeshortestpaths
ingraphswithnegativeedges.Moreover,evenwhenalledgeweightsare
8
Spapersfromthe1950snevermentionedpriorityqueues.Dijkstraproposeda
orcescanofallverticesonthewavefrontateveryiteration;hisoriginalalgorithmruns
in
O
(
V
2
)
time
,whichisactuallyfasterthanthebinpimplementationwhen
E
=

(
V
2
)
!
Mintyproposedaorcescanofall
edges
u

v
suchthat
dist
(
u
)
is˝nitebut
dist
(
v
)
isnot;
thus,hisoriginalalgorithmrunsin
O
(
VE
)
time.Theuseofapriorityqueue,implementedas
abinaryheap,toobtainnearrunningtimewasproposedbyDonaldJohnsonin1977.
Therunningtimecanbeimprovedto
O
(
E
+
V
log
V
)
usingamorecomplexpriorityqueuedata
structurecalleda
Fibonacciheaps
.Thereareevenfasteralgorithms,usingevenmoresophisticated
priorityqueues,forthespecialcaseofintegeredgeweights.
288

8.7.RelaxALLtheEdges:Bellman-Ford
positive,
NonnegativeDijkstra
isnofasterthan
Dijkstra
(eitherintheory
orinpractice).Forbothofthesereasons,Ithink
Dijkstra
ismoredeserving
ofthenameathan
NonnegativeDijkstra
.EvenEdsger
Dijkstrawouldhaveagreedthatacorrectalgorithmthatissometimes(andin
practice,rarely)slowisbetterthanafastalgorithmthatdoesn'talwayswork!
Unfortunately,whentheinputgraphhasnegativeedges,thefamiliar
wavefrointuitionisnolongeraccurate.Thesamevertexcanbe
Extract
edmultipletimes;thesameedgecanberelaxedmultipletimes;and
distancesmightnotbediscoveredinincreasingorder.Figure
8.15
showsan
exampleexecutionwherethetopleftvertexis
Extracted
sixtimes,andthe
topthreeedgesareeachrelaxedtwice.
Forgraphswithoutnegativecycles,butnootherrestrictionsonedgeweights,
thewserunningtimeof
Dijkstra
isactuallyexponential.Figure
8.14
showsparticularlysimplefamilyofgraphs(duetoDouglasShierandChristoph
Witzgall)thatforces
Dijkstra
toperform

(
2
V
=
2
)
relaxations.
9
Amorecomplex
familyofgraphs(whichI'llleaveasanexercise)forces

(
2
V
)
relaxations,which
istheworstpossible.
Inpractice
,however,Dijkstra'salgorithmisusuallyfast
evenforgraphswithnegativeedges.
Figure8.14.
Adirectedgraphwithnegativeedgesthatforces
Dijkstra
toruninexponentialtime.
8.7RelaxALLtheEdges:Bellman-Ford
ThesimplestimplementationofFord'sgenericsalgorithmwas
˝rstsketchedbyAlfonsoShimbelin1954,describedinmoredetailbyEdward
Moorein1957,andindependentlyrediscoveredbyMaxWoodburyandGeorge
Dantzigin1957,byRichardBellmanin1958,andbyGeorgeMintyin1958.
(NeitherWoodburyandDantzignorMintypublishedtheiralgorithms.)Infull
compliancewithStigler'sLaw,thealgorithmisalmostuniversallyknownas
ord
,
10
becauseBellmanexplicitlyusedFord's1956formulationof
9
Amusingly,ShierandWitzgall'sexampleisadagwithonly
O
(
V
)
edges,whichimpliesthat
shortestpathscanbecomputedinonly
O
(
V
)
time,evenifwe
didn't
alreadynoticethatthe
agpathalongthetop
is
theshortestpathtree.
10
Iwillfollowthiscommonconvention,despitethehistoricalinaccuracy,partlybecauseI
don'tthinkanyonereallywantsreadaboutthehimbel/Moore/Woodbantzig/
Ford/Kalaba/MintyaandpartlybecauseI'mtiredofpeoplelookingatmefunny
whenItalkabouthimbel'sa
289

8.ShortestPaths
Figure8.15.
AcompleterunofDijkstra'salgorithmonagraphwithnegativeedges.Ateachiteration,
boldedgesindicatepredecessors;shadedverticesareinthepriorityqueue;andtheboldvertexisthe
nexttobescanned.ComparewithFigure
8.17
.
290

8.7.RelaxALLtheEdges:Bellman-Ford
relaxingedges,althoughsomeauthorsrefertola
11
andafew
earlysourcesreferto
TheShimbel/Moore/Woodbantzig/ord/Kalaba/Minty/
Brosh
12
algorithmcanbesummarizedinoneline:
Bellmaord
:Relax
ALL
thetenseedges,thenrecurse.
BellmanFord
(
s
)
InitSSSP
(
s
)
whilethereisatleastonetenseedge
foreveryedge
u

v
if
u

v
istense
Relax
(
u

v
)
Thefollowinglemmaisthekeytoprovingbothcorrectnessande˚ciency
oford.Foreveryvertex
v
andnoegativeinteger
i
,let
dist

i
(
v
)
denotethelengthoftheshortest
walk
in
G
from
s
to
v
consistingof
atmost
i
edges.Inparticular,
dist

0
(
s
)=
0
and
dist

0
(
v
)=
1
forall
v
6
=
s
.
Lemma8.6.
Foreveryvertex
v
andnoegativeinteger
i
,after
i
iterationsof
themainloopof
BellmanFord
,wehave
dist
(
v
)

dist

i
(
v
)
.
Proof:
Theproofproceedsbyinductionon
i
.Thebasecase
i
=
0
istrivial,
soassume
i
>
0
.Fixavertex
v
,andlet
W
betheshortestwalkfrom
s
to
v
consistingofatmost
i
edges(breakingtiesarbitrarily).Byde˝nition,
W
has
length
dist

i
(
v
)
.Therearetwocasestoconsider.
‹
Suppose
W
hasnoedges.Then
W
mustbethetrivialwalkfrom
s
to
s
,so
v
=
s
and
dist

i
(
s
)=
0
.Weset
dist
(
s
)
 
0
in
InitSSSP
,and
dist
(
s
)
can
neverincrease,sowealwayshave
dist
(
s
)

0
.
‹
Otherwise,let
u

v
bethelastedgeof
W
.Theinductionhypothesisimplies
thatafter
i

1
iterations,
dist
(
u
)

dist

i

1
(
u
)
.Duringthe
i
thiterationof
theouterloop,whenweconsidertheedge
u

v
intheinnerloop,either
dist
(
v
)
<
dist
(
u
)+
w
(
u

v
)
already,orweset
dist
(
v
)
 
dist
(
u
)+
w
(
u

v
)
.
Inbothcases,wehave
dist
(
v
)

dist

i

1
(
u
)+
w
(
u

v
)=
dist

i
(
v
)
.Asusual,
dist
(
v
)
cannotincrease(although
dist
(
v
)
mightdecreasefurtherbeforethe
i
thiterationoftheouterloopends).
11
ThisnameismostlikelyareferencetoRichardBellmanandRobertKalaba's1965monograph
ondynamicprogrammingandcontroltheory,whichdescribesBellman'salgorithm.Bellmanand
KalabaalsopublishedanextensionofBellman'salgorithmin1960thatcomputes
k
thshortest
paths,foranyconstant
k
.
12
Goreadeverythingin
HyperboleandaHalf
again.Andthenadoptanothercat,soyoucan
buyitanothercopyofthebook.
291

8.ShortestPaths
Inbothcases,weconcludethat
dist
(
v
)

dist

i
(
v
)
attheendofthe
i
th
iteration.
…
Iftheinputgraphhasnonegativecycles,theshortestwalkfrom
s
toany
othervertexisasimplepathwithatmost
V

1
edges;itfollowsthat
Bellma
Ford
haltswiththecorrectsdistancesafteratmost
V

1
iterations.
Saiddi˙erently,ifanyedgeisstilltenseafter
V

1
iterations,thentheinput
graphmustcontainanegativecycle!Thus,wecanrewritethealgorithmmore
concretelyasfollows:
BellmanFord
(
s
)
InitSSSP
(
s
)
repeat
V

1
times
foreveryedge
u

v
if
u

v
istense
Relax
(
u

v
)
foreveryedge
u

v
if
u

v
istense
returnegativecycl
Eachiterationoftheinnerlooptriviallyrequires
O
(
E
)
time,sotheoverall
algorithmrunsin
O
(
VE
)
time
.Thus,ordis
always
e˚cient,evenif
thegraphhasnegativeedges,andinfactevenifthegraphhasnegative
cycles
.
Ifalledgeweightsarenoegative,however,Dijkstra'salgorithmisfaster,
atleastintheworstcase.(Inpractice,Dijkstra'salgorithmisoftenfasterthan
ordevenforgraphswithnegativeedges.)
Moore'sImprovement
NeitherMoorenorBellmandescribedtheordalgorithmintheformI've
presentedhere.Moorepresentedhisversionofthealgorithm("AlgorithmD")in
thesamepaperthatproposedsearch("AlgorithmA")forunweighted
graphs;indeed,thetwoalgorithmsarenearlyidentical.AlthoughMoore's
algorithmhasthesame
O
(
VE
)
wserunningtimeas
BellmanFord
,itis
oftensigni˝cantlyfasterinpractice,intuitivelybecauseitavoidscheckingedges
thatareousnottense.
Moorederivedhisweightedsalgorithmbymakingtwom
cationsto
search
.First,replaceeach
+
1
with
+
w
(
u

v
)
"inthe
innermostloop,totaketheedgeweightsintoaccount.Second,checkwhether
avertexisalreadyintheFIFOqueuebefore
Insert
ingit,sothatthequeue
alwayscontainsatmostonecopyofeachvertex.
13
13
Moore'salgorithmisstill
correct
withoutthischeck,butthe
O
(
VE
)
timeboundisnot.
292

8.7.RelaxALLtheEdges:Bellman-Ford
Followingourearlieranalysisofsearch,I'llintroducea
ú
tobreaktheexecutionofthealgorithmintophases.Justlike
search,eachphasebeginswhenthetokenis
Push
edintothequeue,andends
whenthetokenis
Pull
edoutofthequeueagain.JustlikeBFS,thealgorithm
endswhenthequeuecontains
only
thetoken.Theresultingalgorithmisshown
inFigure
8.16
.
Moore
(
s
)
:
InitSSSP
(
s
)
Push
(
s
)
Push
(
ú
)
hh
startthe˙rstphase
ii
whilethequeuecontainsatleastonevertex
u
 
Pull
()
if
u
=
ú
Push
(
ú
)
hh
startthenextphase
ii
else
foralledges
u

v
if
u

v
istense
Relax
(
u

v
)
if
v
isnotalreadyinthequeue
Push
(
v
)
Figure8.16.
Moore'sshortest-pathalgorithm.Boldredlinesinvolvingthetoken
ú
areonlyforanalysis.
Becausethequeuecontainsatmostonecopyofeachvertexatanytime,
eachvertexis
Pull
edfromthequeueatmostonceineachphase,andtherefore
eachedge
u

v
ischeckedfortensenessatmostonceineachphase.Moreover,
everyedgethatistensewhenaphasebeginsisrelaxedduringthatphase.
(Someedgesthatbecometenseduringthephasemightalsoberelaxedduring
thatphase,andsomerelaxededgesmightbecometenseagaininthesame
phase.)Thus,
Moore
canbeviewedasare˝nementof
BellmanFord
that
usesaqueuetomaintaintenseedges,ratherthantestingeveryedgebybrute
force.Inparticular,asimilarinductiveproofestablishesthefollowinganalogue
ofLemma
8.6
:
Lemma8.7.
Foreveryvertex
v
andnoegativeinteger
i
,after
i
phasesof
Moore
,wehave
dist
(
v
)

dist

i
(
v
)
.
Thus,iftheinputgraphhasnonegativecycles,
Moore
haltsafteratmost
V

1
phases.Ineachphase,wescaneachvertexatmostonce,sowerelax
eachedgeatmostonce,sothewserunningtimeofasinglephaseis
O
(
E
)
.Thus,theoverallrunningtimeof
Moore
is
O
(
VE
)
.Inpractice,however,
Moore
oftencomputesshortestpathsconsiderablyfasterthan
BellmanFord
,
becauseitonlyscansanedge
u

v
if
dist
(
u
)
waschangedinthepreviousphase.
Iftheinputgraphcontainsanegativecycle,
Moore
neverhalts.Fortunately,
like
BellmanFord
,itiseasytomodifyMoore'salgorithmtoreportnegative
293

8.ShortestPaths
Figure8.17.
AcompleterunofMoore'salgorithmonadirectedgraphwithnegativeedges.Nodesare
pulledfromthequeueintheorder
s
ú
abc
ú
df
ú
de
ú
d
ú
ú
,where
ú
istheend-of-phasetoken.At
thestartofeachphase,boldedgesindicatepredecessors,andshadedverticesareinthevertexqueue.
ComparewithFigures
8.6
and
8.15
.
cyclesiftheyexist.Perhapstheeasiestmodi˝cationisto
actually
maintaina
token,andcountthenumberoftimesthetokenis
Pull
edfromthequeue.Then
theinputgraphcontainsanegativecycleifandonlyifthequeueisnoy
immediatelyafterthetokenis
Pull
edforthe
(
V

1
)
thtime.
DynamicProgrammingFormulation
Likealmosteverythingelsewithhisnameonit,RichardBellmanderivedthe
salgorithmviadynamicprogramming.Asusual,we
needtostartwitharecursivede˝nitionofshortestpathdistances.It'stempting
tousethesameidentitythatweexploitedfordirectedacyclicgraphs:
dist
(
v
)=
¨
0
if
v
=
s
min
u

v
(
dist
(
u
)+
w
(
u

v
))
otherwise
Unfortunately,iftheinputgraphisnotadag,thisrecurrencedoesn'twork!
Supposetheinputgraphcontainsthedirectedcycle
u

v

w

u
.Tocompute
dist
(
w
)
we˝rstneed
dist
(
v
)
,andtocompute
dist
(
v
)
we˝rstneed
dist
(
u
)
,but
tocompute
dist
(
u
)
we˝rstneed
dist
(
w
)
.Iftheinputgraphhasanydirected
cycles,wegetstuckinanin˝niteloop!
294

8.7.RelaxALLtheEdges:Bellman-Ford
Tosupportaproperrecurrence,weneedtoaddanadditionalstructural
parametertothedistancefunction,whichdecreasesmonotonicallyateach
recursivecall,de˝nedsothatthefunctionistrivialtoevaluatewhenthe
parameterreaches
0
.Bellmanchose
themaximumnumberofedges
asthis
additionalparameter.
14
Asinourearlieranalysis,let
dist

i
(
v
)
denotethelengthoftheshortestwalk
from
s
to
v
consistingofatmost
i
edges.Bellmanobservedthatthisfunction
obeysthefollowing
Bellman'sequationrecurrence:
dist

i
(
v
)=
8
>
>
>
<
>
>
>
:
0
if
i
=
0
and
v
=
s
1
if
i
=
0
and
v
6
=
s
min
¨
dist

i

1
(
v
)
min
u

v
(
dist

i

1
(
u
)+
w
(
u

v
))
«
otherwise
Let'sassumethatthegraphhasnonegativecycles,soourgoalistocompute
dist

V

1
(
v
)
foreveryvertex
v
.Hereisastraightforwarddynami
evaluationofthisrecurrence,where
dist
[
i
,
v
]
storesthevalueof
dist

i
(
v
)
.
Correctnessofthe˝nalsdistancesfollowsfromthecorrectnessof
therecurrence,andthe
O
(
VE
)
runningtimeisobvious.Thisisessentiallyhow
Bellmanpresentedhissalgorithm.
BellmanFordDP
(
s
)
dist
[
0,
s
]
 
0
foreveryvertex
v
6
=
s
dist
[
0,
v
]
 1
for
i
 
1
to
V

1
foreveryvertex
v
dist
[
i
,
v
]
 
dist
[
i

1,
v
]
foreveryedge
u

v
if
dist
[
i
,
v
]
>
dist
[
i

1,
u
]+
w
(
u

v
)
dist
[
i
,
v
]
 
dist
[
i

1,
u
]+
w
(
u

v
)
Wecantransformthisdynamicprogrammingalgorithmintoouroriginal
formulationof
BellmanFord
throughashortseriesofminoroptimizations.
First,eachiterationoftheoutermostloopconsiderseachedge
u

v
exactlyonce,
buttheorderinwhichweconsiderthoseedgesdoesn'tactuallymatter.Thus,
wecansafelyremoveonelevelofindentationfromthelastthreelines!The
modi˝edalgorithmmayconsideredgesinadi˙erent
order
,butitstillcorrectly
computes
dist

i
(
v
)
forall
i
and
v
.
14
Aswe'llseeinthenextchapter,thisisnottheonlyreasonablechoice.
295

8.ShortestPaths
BellmanFordDP2
(
s
)
dist
[
0,
s
]
 
0
foreveryvertex
v
6
=
s
dist
[
0,
v
]
 1
for
i
 
1
to
V

1
foreveryvertex
v
dist
[
i
,
v
]
 
dist
[
i

1,
v
]
foreveryedge
u

v
if
dist
[
i
,
v
]
>
dist
[
i

1,
u
]+
w
(
u

v
)
dist
[
i
,
v
]
 
dist
[
i

1,
u
]+
w
(
u

v
)
Nextwechangetheindicesinthelasttwolinesfrom
i

1
to
i
.This
changemaycausethedistances
dist
[
i
,
v
]
toapproachthetrues
distancesmorequicklythanbefore,butthealgorithmcorrectlycomputesthe
trueshortestpathdistances.Insteadof
dist
[
i
,
v
]
=
dist

i
(
v
)
,wenowhave
dist
[
i
,
v
]

dist

i
(
v
)
forall
i
and
v
,mirroringLemmas
8.6
and
8.7
.
BellmanFordDP3
(
s
)
dist
[
0,
s
]
 
0
foreveryvertex
v
6
=
s
dist
[
0,
v
]
 1
for
i
 
1
to
V

1
foreveryvertex
v
dist
[
i
,
v
]
 
dist
[
i

1,
v
]
foreveryedge
u

v
if
dist
[
i
,
v
]
>
dist
[
i
,
u
]+
w
(
u

v
)
hh
not
i

1
!
ii
dist
[
i
,
v
]
 
dist
[
i
,
u
]+
w
(
u

v
)
hh
not
i

1
!
ii
Butthisalgorithmisalittlesilly.Inthe
i
thiterationoftheoutermostloop,we
˝rstcopythe
(
i

1
)
throwofthearray
dist
[

,

]
tothe
i
throw,andthenmodify
theelementsofthe
i
throw.Sowereallydon'tneedatwonalarrayat
all;theiterationindex
i
iscompletelyredundant!Inour˝nalmodi˝cation,we
maintainonlyaononalarrayoftentativedistances.
BellmanFordFinal
(
s
)
dist
[
s
]
 
0
foreveryvertex
v
6
=
s
dist
[
v
]
 1
for
i
 
1
to
V

1
foreveryedge
u

v
if
dist
[
v
]
>
dist
[
u
]
+
w
(
u

v
)
dist
[
v
]
 
dist
[
u
]
+
w
(
u

v
)
This˝naldynamicprogrammingalgorithmisalmostidenticaltoouroriginal
formulationof
BellmanFord
!The˝rstthreelinesinitializetheshortestpath
distances,andthelasttwolinesrelaxtheedge
u

v
ifthatedgeistense.
296

Exercises
BellmanFordFinal
ismissingonlytwofeaturesofourearlierformulation:It
doesnotmaintainpredecessorpointersordetectnegativecycles.Fortunately,
addingthosefeaturesisstraightforward.
Exercises
0.
Let
G
beadirectedgraphwitharbitraryedgeweights(whichmaybepositive,
negative,orzero),possiblywithnegativecycles,andlet
s
beanarbitrary
vertexof
G
.
(a)
Supposeeveryvertex
v
storesanumber
dist
(
v
)
(butnopredecessor
pointers).Describeandanalyzeanalgorithmtodeterminewhether
dist
(
v
)
isthesdistancefrom
s
to
v
,foreveryvertex
v
.
(b)
Supposeinsteadthateveryvertex
v
6
=
s
storesapointer
pred
(
v
)
to
anothervertexin
G
(butnodistances).Describeandanalyzean
algorithmtodeterminewhetherthesepredecessorpointersde˝nea
singlurceshortestpathtreerootedat
s
.
1.
A
loopedtree
isaweighted,directedgraphbuiltfromabinarytreebyadding
anedgefromeveryleafbacktotheroot.Everyedgehasnoegative
weight.
Aloopedtree.
(a)
HowmuchtimewouldDijkstra'salgorithmrequiretocomputethe
shortestpathbetweentwovertices
u
and
v
inaloopedtreewith
n
nodes?
(b)
Describeandanalyzeafasteralgorithm.
2.
Supposewearegivenadirectedgraph
G
withweightededgesandtwo
vertices
s
and
t
.
(a)
Describeandanalyzeanalgorithmto˝ndtheshortestpathfrom
s
to
t
whenexactlyoneedgein
G
hasnegativeweight.
[Hint:Modify
Dijkstra'salgorithm.Ordon't.]
297

8.ShortestPaths
(b)
Describeandanalyzeanalgorithmto˝ndtheshortestpathfrom
s
to
t
whenexactly
k
edgesin
G
havenegativeweight.Howdoestherunning
timeofyouralgorithmdependon
k
?
3.
Supposewearegivenanundirectedgraph
G
inwhichevery
vertex
hasa
positiveweight.
(a)
Describeandanalyzeanalgorithmto˝nda
spanningtree
of
G
with
minimumtotalweight.(Thetotalweightofaspanningtreeisthesum
oftheweightsofitsvertices.)
(b)
Describeandanalyzeanalgorithmto˝nda
path
in
G
fromonegiven
vertex
s
toanothergivenvertex
t
withminimumtotalweight.(Thetotal
weightofapathisthesumoftheweightsofitsvertices.)
[Hint:Oneoftheseproblemsistrivial.]
4.
Foranyedge
e
inanygraph
G
,let
G
n
e
denotethegraphobtainedby
deleting
e
from
G
.Supposewearegivenagraph
G
andtwovertices
s
and
t
.The
replacementpaths
problemasksustocomputethes
distancefrom
s
to
t
in
G
n
e
,for
every
edge
e
of
G
.Theoutputisanarray
of
E
distances,oneforeachedgeof
G
.
(a)
Suppose
G
isa
directed
graph,andtheshortestpathfromvertex
s
to
vertex
t
passesthrough
every
vertexof
G
.Describeanalgorithmtosolve
thisspecialcaseofthereplacementpathsproblemin
O
(
E
log
V
)
time.
ª
(b)
Describeanalgorithmtosolvethereplacementpathsproblemfor
arbitrary
undirected
graphsin
O
(
E
log
V
)
time.
Inbothsubproblems,youmayassumethatalledgeweightsarenoegative.
[Hint:Ifwedeleteanedgeoftheoriginalshortestpath,howdotheold
andnewshortestpathsoverlap?]
5.
Let
G
=(
V
,
E
)
beaconnecteddirectedgraphwithnoegativeedgeweights,
let
s
and
t
beverticesof
G
,andlet
H
beasubgraphof
G
obtainedbydeleting
someedges.Supposewewanttoreinsertexactlyoneedgefrom
G
back
into
H
,sothattheshortestpathfrom
s
to
t
intheresultinggraphisasshort
aspossible.Describeandanalyzeanalgorithmthatchoosesthebestedge
toreinsert,in
O
(
E
log
V
)
time.
6.
(a)
Describeandanalyzeamodi˝cationofordthatactuallyreturns
anegativecycleifanysuchcycleisreachablefrom
s
,oras
treeifthereisnosuchcycle.Themodi˝edalgorithmshouldstillrunin
O
(
VE
)
time.
298

Exercises
(b)
Describeandanalyzeamodi˝cationofordthatcomputesthe
correctshortestpathdistancesfrom
s
toeveryothervertexoftheinput
graph,evenifthegraphcontainsnegativecycles.Speci˝cally,ifany
walkfrom
s
to
v
containsanegativecycle,youralgorithmshouldend
with
dist
(
v
)=

;otherwise,
dist
(
v
)
shouldcontainthelengthofthe
shortestpathfrom
s
to
v
.Themodi˝edalgorithmshouldstillrunin
O
(
VE
)
time.
ª
(c)
Repeatparts(a)and(b),butforFord'sgenericrelaxationalgorithm.
Youmayassumethattheunmodi˝edalgorithmhaltsin
O
(
2
V
)
stepsif
thereisnonegativecycle;yourmodi˝edalgorithmsshouldalsorunin
O
(
2
V
)
time.
7.
ConsiderthefollowingevenlooservariantofFord'sgenericrelaxation
algorithm:
FellmanBored
(
s
)
:
InitSSSP
(
s
)
for
i
 
1
towhatever,man,Idon'tcare
e
i
 
anyedgein
G
if
e
i
istense
Relax
(
e
i
)
Provethatif
FellmanBored
examinestheedgesofanywalk
W
starting
from
s
,inorderalong
W
,thenthelastdistancelabelin
W
isatmost
thelengthof
W
.Moreformally:Iftheedgesofanywalk
v
0

v
1



v
`
,
where
v
0
=
s
,de˝nea
subsequence
oftheedges
e
1
,
e
2
,
e
3
,...
examinedby
FellmanBored
,thenwehave
dist
(
v
`
)

P
`
i
=
1
w
(
v
i

1

v
i
)
.
[Hint:This
propertyisalmosteasiertoprovethanitistostatecorrectly.]
8.
ThisproblemconsidersseveralwaystodetectnegativecyclesusingFord's
genericrelaxationalgorithm.
(a)
Provethatif
pred
(
s
)
everchangesafter
InitSSSP
,thentheinputgraph
containsanegativecyclethrough
s
.
(b)
Showthat
pred
(
s
)
mightneverchangeafter
InitSSSP
,evenwhenthe
inputgraphcontainsanegativecyclethrough
s
.
(c)
Let
P
denotethecurrentgraphofpredecessoredges
pred
(
v
)

v
,and
let
X
denotethesetofallcurrently
ten
seedges;bothofthesesetsevolve
asthealgorithmexecutes.Provethattheinputgraphhasnonegative
cyclesifandonlyif
P
[
X
isalwaysadag.
(d)
Let
R
denotethesetofalledgesthathavebeenrelaxedsofar;thisset
growsasthealgorithmexecutes.Provethattheinputgraphhasno
negativecyclesifandonlyif
R
isalwaysadag.
299

8.ShortestPaths
ª
9.
ProvethatDijkstra'salgorithmperforms

(
2
V
)
relaxationsintheworstcase
whenedgesareallowedtohavenegativeweight,eveniftheunderlying
graphisacyclic.Speci˝cally,foreverypositiveinteger
n
,constructa
n
ertex
dag
G
n
withweightededges,suchthatDijkstra'salgorithmcalls
Relax

(
2
n
)
timeswhen
G
n
istheinputgraph.
[Hint:Binarycounter.]
ª
10.
ProvethatFord'sgenericrelaxationalgorithm(andthereforeDijkstra's
algorithm)haltsafteratmost
O
(
2
V
)
relaxations,unlesstheinputgraph
containsanegativecycle.
[Hint:SeeProblem
8(d)
.]
11.
Supposeyouaregivenadirectedgraph
G
inwhich
everyedgehasnegative
weight
,andasourcevertex
s
.Describeandanalyzeane˚cientalgorithm
thatcomputesthesdistancesfrom
s
toeveryothervertexin
G
.
Speci˝cally,foreveryvertex
t
:
‹
If
t
isnotreachablefrom
s
,youralgorithmshouldreport
dist
(
t
)=
1
.
‹
If
G
hasacyclethatisreachablefrom
s
,and
t
isreachablefromthatcycle,
thenthesdistancefrom
s
to
t
isnotwed,because
therearepaths(formally,walks)from
s
to
t
ofarbitrarilylargenegative
length.Inthiscase,youralgorithmshouldreport
dist
(
t
)=

.
‹
Ifneitherofthetwopreviousconditionsapplies,youralgorithmshould
reportthecorrectsdistancefrom
s
to
t
.
12.
Althoughwetypicallyspeakofshortestpathbetweentwonodes,single
graphcouldcontainseveralminimengthpathswiththesameendpoints.
Evenforweightedgraphs,itisoftendesirabletochooseaminimeight
pathwiththefewestedges;callthisa
bestpath
from
s
to
t
.Supposeweare
givenadirectedgraph
G
withpositiveedgeweightsandasourcevertex
s
in
G
.Describeandanalyzeanalgorithmtocompute
best
pathsin
G
from
s
toeveryothervertex.
Figure8.18.
Four(ofmany)equal-lengthshortestpaths.The˙rstpathistheshortestpath.
13.
Describeandanalyzeanalgorithmtodeterminethe
number
ofshortest
pathsfromasourcevertex
s
toatargetvertex
t
inanarbitrarydirected
graph
G
withweightededges.Youmayassumethatalledgeweightsare
positiveandthatallnecessaryarithmeticoperationscanbeperformedin
300

Exercises
O
(
1
)
time.
[Hint:Computeshortestpathdistancesfrom
s
toeveryother
vertex.Throwawayalledgesthatcannotbepartofashortestpathfrom
s
toanothervertex.What'sleft?]
14.
YoujustdiscoveredyourbestfriendfromelementaryschoolonTwitbook.
Youbothwanttomeetassoonaspossible,butyouliveintwodi˙erent
citesthatarefarapart.Tominimizetraveltime,youagreetomeetatan
intermediatecity,andthenyousimultaneouslyhopinyourcarsandstart
drivingtowardeachother.Butwhere
exactly
shouldyoumeet?
Youaregivenaweightedgraph
G
=(
V
,
E
)
,wherethevertices
V
represent
citiesandtheedges
E
representroadsthatdirectlyconnectcities.Each
edge
e
hasaweight
w
(
e
)
equaltothetimerequiredtotravelbetweenthe
twocities.Youarealsogivenavertex
p
,representingyourstartinglocation,
andavertex
q
,representingyourfriend'sstartinglocation.
Describeandanalyzeanalgorithmto˝ndthetargetvertex
t
thatallows
youandyourfriendtomeetasquicklyaspossible.
15.
YouarehiredasacyclistfortheGiggleHighwayViewproject,whichwill
provideevelimagesalongtheentireUSnationalhighwaysystem.
Asapilotproject,youareaskedtoridetheGiggleHighwaView
GearCarboBicyclefromGiggleplinPortland,Oregonto
esbinWilliamsburg,Brooklyn,NewYork.
Youareahopelessca˙eineaddict,butlikemostGiggleemployeesyou
arealsoaco˙eesnob;youonlydrinkindependentlyroasted,ed,
organic,swn,singlespresso,unadulteratedby
milkorsugar,thankyou
very
much.Aftereachespressoshot,youcanbike
upto
L
milesbeforesu˙eringaca˙einwalmigraine.
GigglehelpfullyprovidesyouwithamapoftheUnitedStates,intheform
ofanundirectedgraph
G
,whoseverticesrepresentco˙eeshopsthatsell
independentlyroastededorganicswnsingl
originespresso,andwhoseedgesrepresenthighwayconnectionsbetween
them.Eachedge
e
islabeledwiththelength
`
(
e
)
ofthecorresponding
stretchofhighway.Naturally,thereareacceptableespressostandsatboth
Giggleo˚ces,representedbytwospeci˝cvertices
s
and
t
inthegraph
G
.
(a)
Describeandanalyzeanalgorithmtodeterminewhetheritispossible
tobikefromtheGiggleplextoGigglesburgwithoutsu˙eringaca˙ein
withdrawalmigraine.
(b)
Youdiscoverthatbywearingamoreexpensivefedora,youcanincrease
thedistance
L
thatyoucanbikebetweenespressoshots.Describe
andanalyzeandalgorithmto˝ndtheminimumvalueof
L
thatallows
301

8.ShortestPaths
youtobikefromtheGiggleplextoGigglesburgwithoutsu˙eringa
ca˙einwalmigraine.
(c)
Whenyoureporttoyoursupervisor(whomGigglerecentlyhiredaway
fromtheircompetitorÜnter)thattherideisimpossible,shedemands
tolookatyourmap.Iseetheproblem;thereareno
Starbucks
on
thismaAsyoulookoninhorror,shehandsyouanupdatedgraph
G
0
thatincludesavertexforeveryStarbuckslocationintheUnitedStates,
helpfullymarkedinStarbucksGreen(Pantone
®
3425C).
Describeandanalyzeanalgorithmto˝ndtheminimumnumber
ofStarbuckslocationsyoumustvisittobikefromtheGiggleplexto
Gigglesburgwithoutsu˙eringaca˙einwalmigraine.More
formally,youralgorithmshould˝ndtheminimumnumberofgreen
verticesonanypathin
G
0
from
s
to
t
thatusesonlyedgesoflengthat
most
L
.
16.
Supposeyouaregivenadirectedgraph
G
=(
V
,
E
)
withnoegatively
weightededgesandtwovertices
s
and
t
.Describeandanalyzeanalgorithm
to˝ndtheshortestwalkin
G
from
s
to
t
(possiblyrepeatingverticesand/or
edges)whosenumberofedgesisdivisibleby
3
.
Forexample,giventhegraphshownbelow,withtheindicatedvertices
s
and
t
,andwithalledgeshavingweight
1
,youralgorithmshouldreturn
6
,
whichisthelengthofthewalk
s

w

y

x

s

w

t
haslength6.
17.
Supposeyouaregivenadirectedgraph
G
withnoegativelyweighted
edges,wheresomeedgesareredandtheremainingedgesareblue.Describe
analgorithmto˝ndtheshortestwalkin
G
fromonevertex
s
toanother
vertex
t
inwhichnothreeconsecutiveedgeshavethesamecolor.Thatis,if
thewalkcontainstworededgesinarow,thenextedgemustbeblue,andif
thewalkcontainstwoblueedgesinarow,thenextedgemustbered.
Forexample,giventhefollowinggraphasinput,whereeveryred
edgehasweight
1
andeveryblueedgehasweight
2
,youralgorithm
shouldreturntheinteger
9
,becausetheshortestlegalwalkfrom
s
to
t
is
s
!
a
!
b
)
d
!
c
)
a
!
b
!
c
.
302

Exercises
18.
Consideradirectedgraph
G
,whereeachedgehasanoegativeweight,
andeachedgeiscoloredeitherred,white,orblue.Awalkin
G
iscalled
a
French˛agwalk
ifitssequenceofedgecolorsisred,white,blue,red,
white,blue,andsoon.Moreformally,awalk
v
0

v
1



v
k
isaFrench
˛agwalkif,foreveryinteger
i
,theedge
v
i

v
i
+
1
isredif
i
mod3
=
0
,white
if
i
mod3
=
1
,andblueif
i
mod3
=
2
.
Describeanalgorithmto˝ndthe
shortest
French˛agwalksfromone
startingvertex
s
toeveryothervertexin
G
.
19.
Thereare
n
galaxiesconnectedby
m
intergalactictelays.Each
telayjoinstwogalaxiesandcanbetraversedinbothdirections.Also,
eachtelay
e
hasanassociatedcostof
c
(
e
)
dollars,where
c
(
e
)
isa
positiveinteger.Atelaycanbeusedmultipletimes,butthetollmust
bepaideverytimeitisused.
Judywantstotravelfromgalaxy
s
togalaxy
t
ascheaplyaspossible.
However,shewantsthetotalcosttobeamultipleof˝vedollars,because
carryingsmallchangeisnotpleasanteither.
(a)
Describeandanalyzeanalgorithmtocomputetheminimumtotalcost
oftravelingfromgalaxy
s
togalaxy
t
,subjecttotherestrictionthatthe
totalcostisamultipleof˝vedollars.
(b)
Solvepart(a),butnowassumethatJudyhasacouponthatallowsher
touseexactlyonetelayforfree.
20.
Aftermovingtoanewcity,youdecidetochooseawalkingroutefromyour
hometoyournewo˚ce.Togetagooddailyworkout,yourroutemust
consistofanuphillpath(forexercise)followedbyadownhillpath(tocool
down),orjustanuphillpath,orjustadownhillpath.(You'llwalkthesame
pathhome,soyou'llgetexerciseonewayortheother.)Butyoualsowant
the
shortest
paththatsatis˝estheseconditions,sothatyouactuallygetto
workontime.
Yourinputconsistsofanundirectedgraph
G
,whoseverticesrepresent
intersectionsandwhoseedgesrepresentroadsegments,alongwithastart
vertex
s
andatargetvertex
t
.Everyvertex
v
hasanassociatedvalue
h
(
v
)
,
whichistheheightofthatintersectionabovesealevel,andeachedge
uv
hasanassociatedvalue
`
(
uv
)
,whichisthelengthofthatroadsegment.
(a)
Describeandanalyzeanalgorithmto˝ndtheshortestwnhill
walkfrom
s
to
t
.Assumeallvertexheightsaredistinct.
(b)
Nowsupposeweallowsomeorallvertexheightstobeequal.Describe
andanalyzeanalgorithmto˝ndtheshortestthendowalk
from
s
to
t
;youmayuse˛atedgesinboththeand
portionsofyourwalk.
303

8.ShortestPaths
(c)
Finally,supposeyoudiscoverthatthereisnopathfrom
s
to
t
withthe
structureyouwant.Describeanalgorithmto˝ndapathfrom
s
to
t
thatalternatesbetweenandsubpathsasfewtimes
aspossible,andhasminimumlengthamongallsuchpaths.
21.
AftergraduatingfromSoobananaUniversityyouacceptajobwith

R
s,theleadingtravelingagencyforpeoplewhohateto˛y.
Yourjobistobuildasystemtohelpcustomersplanairplanetripsfromone
citytoanother.Allofyourcustomersareafraidof˛ying(andbyextension,
airports),soanytripyouplanneedstobeasshortaspossible.Youknowall
thedepartureandarrivaltimesofallthe˛ightsontheplanet.
Supposeoneofyourcustomerswantsto˛yfromcity
X
tocity
Y
.
Describeanalgorithmto˝ndasequenceof˛ightsthatminimizesthe
total
timeintransit
lengthoftimefromtheinitialdeparturetothe˝nal
arrival,includingtimeatintermediateairportswaitingforconnecting˛ights.
22.
InExercise
20
fromChapter
5
,youdesignedanalgorithmtodecidewhether
agiven
emaze
issolvable.Inthisproblem,youwilldesign
algorithmsto˝ndthe
shortest
walkthroughagivenemaze,for
twodi˙erentde˝nitionsof"l
Completeeachanglemazebelowbytracingapathfromstartto˙nishthat
hasonlyacuteangles.
Yourinputisaconnectedundirectedgraph
G
whoseverticesarepoints
intheplaneandwhoseedgesarelinesegments.Edgesdonotintersect,
exceptattheirendpoints.Forexample,adrawingoftheletter
X
would
have˝veverticesandfouredges;the˝rstmazeabovehas14verticesand21
edges.Youarealsogiventwovertices
Start
and
Finish
.
Awalkfrom
Start
to
Finish
in
G
is
valid
ifitcontainsonlyacuteangles,
ormoreformally,foranytwoconsecutiveedges
u

v

w
,either
Ü
uvw
=
ˇ
or
0
<
Ü
uvw
<ˇ=
2
.Assumeyoucandeterminein
O
(
1
)
timewhetherthe
anglebetweentwogivensegmentsisstraight,obtuse,right,oracute.
(a)
Describeanalgorithmtocomputeavalidwalkfrom
Start
to
Finish
that
traversesasfewsegmentsaspossible.(Ifyourwalktraversesthesame
segmenttwice,countittwice.)
(b)
Describeanalgorithmtocomputeavalidwalkfrom
Start
to
Finish
that
makesasfewturnsaspossible.
[Hint:Thisis
not
thesameaspart(a).]
304

Exercises
(c)
Describeanalgorithmtocomputeavalidwalkfrom
Start
to
Finish
whose
totalEuclideanlengthisassmallaspossible.(Assumeyoucanalso
computethelengthofanysegmentin
O
(
1
)
time.)
23.
AfteragruelingmidtermattheSCenterforFakeNewsDetection,
youdecidetotakethebushome.Sinceyouplannedahead,youhavea
schedulethatliststhetimesandlocationsofeverystopofeverybusin
Soobanana.Unfortunately,nosinglebusvisitsboththeS
Centerandyourhome;youmustchangebusesatleastonce.Thereare
exactly
b
di˙erentbuses.Eachbusstartsat12:00:01
am
,makesexactly
n
stops,and˝nallystopsrunningat11:59:59
pm
.Busesalwaysrunexactlyon
schedule,andyouhaveanaccuratewatch.Finally,youarefartootiredto
walkbetweenbusstops.
(a)
Describeandanalyzeanalgorithmtodeterminethesequenceofbus
ridesthatgetsyouhomeasearlyaspossible.Yourgoalistominimize
your
arrivaltime
,notthetimeyouspendtraveling.
(b)
Oh,no!ThemidtermwasheldonHalloween,andthestreetsareinfested
withzombies!TheSoobananaMassTransitDistrictdoesn'thave
thefundingtoaddadditionalbusesorinstallzombifbusstops,
especiallyforonlyonenightayear.Describeandanalyzeanalgorithm
todetermineasequenceofbusridesthatminimizes
thetotaltimeyou
spendwaitingatbusstops
;youdon'tcarehowlateyougethomeor
howmuchtimeyouspendonbuses.(Assumeyoucanwaitinsidethe
SCenteruntilyour˝rstbusisjustabouttoleave.)
24.
The˝rstmorningafterreturningfromagloriousspringbreak,Alicewakes
todiscoverthathercarwon'tstart,soshehastogettoherclassesat
SoobananaUniversitybypublictransit.Shehasacompletetransit
scheduleforPoobananaCounty.Thebusroutesarerepresentedinthe
schedulebyadirectedgraph
G
,whoseverticesrepresentbusstopsand
whoseedgesrepresentbusroutesbetweenthosestops.Foreachedge
u

v
,
theschedulerecordsthreepositiverealnumbers:
‹
`
(
u

v
)
isthelengthofthebusridefromstop
u
tostop
v
(inminutes)
‹
f
(
u

v
)
isthe˝rsttime(inminutespast12am)thatabusleavesstop
u
forstop
v
.
‹

(
u

v
)
isthetimebetweensuccessivedeparturesfromstop
u
tostop
v
(inminutes).
Thus,the˝rstbusforthisrouteleaves
u
attime
f
(
u

v
)
andarrivesat
v
at
time
f
(
u

v
)+
`
(
u

v
)
,thesecondbusleaves
u
attime
f
(
u

v
)+

(
u

v
)
and
arrivesat
v
attime
f
(
u

v
)+

(
u

v
)+
`
(
u

v
)
,thethirdbusleaves
u
attime
305

8.ShortestPaths
f
(
u

v
)+
2


(
u

v
)
andarrivesat
v
attime
f
(
u

v
)+
2


(
u

v
)+
`
(
u

v
)
,
andsoon.
Alicewantstoleavesfromstop
s
(herhome)atacertaintimeandarrive
atstop
t
(TheSCenter)asquicklyaspossible.IfAlicearrivesata
stopononebusattheexacttimethatanotherbusisscheduledtoleave,she
cancatchthesecondbus.Becauseshe'sastudentatSPU,Alicecanridethe
busforfree,soshedoesn'tcarehowmanytimesshehastochangebuses.
Describeandanalyzeanalgorithmto˝ndtheearliesttimeAlicecan
reachherdestination.Yourinputconsistsofthedirectedgraph
G
=(
V
,
E
)
,
thevertices
s
and
t
,thevalues
`
(
e
)
,
f
(
e
)
,

(
e
)
foreachedge
e
2
E
,and
Alice'sstartingtime(inminutespast12am).
[Hint:Inthisrareinstance,itmaybeeasiertomodifythealgorithm,
insteadofmodifyingtheinputgraph.]
25.
MulderandScullyhavecomputed,foreveryroadintheUnitedStates,
theexactprobabilitythatsomeonedrivingonthatroad
won't
beabducted
byaliens.AgentMulderneedstodrivefromLangley,VirginiatoArea51,
Nevada.Whatrouteshouldhetakesothathehastheleastchanceofbeing
abducted?
Moreformally,youaregivenadirectedgraph
G
=(
V
,
E
)
,whereevery
edge
e
hasanindependentsafetyprobability
p
(
e
)
.The
safety
ofapathis
theproductofthesafetyprobabilitiesofitsedges.Designandanalyzean
algorithmtodeterminethesafestpathfromagivenstartvertex
s
toagiven
targetvertex
t
.Youmayassumethatallnecessaryarithmeticoperations
canbeperformedin
O
(
1
)
time.
Forexample,withtheprobabilitiesshownabove,ifMuldertriestodrive
directlyfromLangleytoArea51,hehasa
50%
chanceofgettingthere
withoutbeingabducted.IfhestopsinMemphis,hehasa
0.7

0.9
=
63%
chanceofarrivingsafely.Ifhestops˝rstinMemphisandtheninLasVegas,
hehasa
1

0.7

0.1

0.5
=
96.5%
chanceofbeingabducted!(That'show
theygotElvis,youknow.)
306

Exercises
¨
26.
OnanovernightcampingtripinSunnydaleNationalPark,youarewoken
fromarestlesssleepbyascream.Asyoucrawloutofyourtenttoinvestigate,
aterri˝edparkrangerrunsoutofthewoods,coveredinbloodandclutching
acrumpledpieceofpapertohischest.Ashereachesyourtent,hegasps,
out...while...you...thruststhepaperintoyourhands,andfallsto
theground.Checkinghispulse,youdiscoverthattherangerisstonedead.
Youlookdownatthepaperandrecognizeamapofthepark,drawn
asanundirectedgraph,whereverticesrepresentlandmarksinthepark,
andedgesrepresenttrailsbetweenthoselandmarks.(Trailsstartandend
atlandmarksanddonotcross.)Yourecognizeoneoftheverticesasyour
currentlocation;severalverticesontheboundaryofthemaparelabeled
EXIT.
Oncloserexamination,younoticethatsomeone(perhapsthepoordead
parkranger)haswrittenarealnumberbetween0and1nexttoeachvertex
andeachedge.Ascrawlednoteonthebackofthemapindicatesthata
numbernexttoanedgeistheprobabilityofencounteringavampirealong
thecorrespondingtrail,andanumbernexttoavertexistheprobabilityof
encounteringavampireatthecorrespondinglandmark.(Vampirescan't
standeachother'scompany,soyou'llneverseemorethanonevampireon
thesametrailoratthesamelandmark.)Thenotewarnsyouthatstepping
o˙themarkedtrailswillresultinaslowandpainfuldeath.
Youglancedownatthecorpseatyourfeet.Yes,hisdeathcertainly
lookedpainful.Wait,wasthatatwitch?Arehisteethgettinglonger?After
drivingatentstakethroughtheundeadranger'sheart,youwiselydecideto
immediately
leavetheparkasfastaspossible.
Describeandanalyzeane˚cientalgorithmto˝ndapathfromyour
currentlocationtoanarbitraryEXITnode,suchthatthetotal
expected
number
ofvampiresencounteredalongthepathisassmallaspossible.Be
suretoaccountfor
both
thevertexprobabilities
and
theedgeprobabilities.
[Hint:Evenwithoutthevertexprobabilities,thisisnotthesameasthe
previousproblem!]
307


Thetreewhich˙llsthearmsgrewfromthetiniestsprout;
thetowerofninestoreysrosefroma(small)heapofearth;
thejourneyofathousandlicommencedwithasinglestep.
Lao-Tzu,
TaoTeChing
,chapter64(6thcentury
bce
),
translatedbyJamesLegge(1891)
AndIwouldwalk˙vehundredmiles,
AndIwouldwalk˙vehundredmore,
Justtobethemanwhowalksathousandmiles
Tofalldownatyourdoor.
TheProclaimers,mGonnaBe(500
SunshineonLeith
(2001)
Almostthere...Almostthere...
RedLeader[DreweHenley],
StarWars
(1977)
9
All-PairsShortestPaths
9.1Introduction
Inthepreviouschapter,wediscussedseveralalgorithmsto˝ndtheshortest
pathsfromasinglesourcevertex
s
toeveryothervertexofthegraph,by
constructingashortestpathtreerootedat
s
.Theshortestpathtreespeci˝es
twopiecesofinformationforeachnode
v
inthegraph:
‹
dist
(
v
)
isthelengthoftheshortestpathfrom
s
to
v
;
‹
pred
(
v
)
isthesecoastvertexintheshortestpathfrom
s
to
v
.
Inthischapter,weconsiderthemoregeneral
allpairsshortestpath
problem,
whichasksfortheshortestpathfrom
every
possiblesourcetoeverypossible
destination.Foreverypairofvertices
u
and
v
,wewanttocomputethefollowing
information:
‹
dist
(
u
,
v
)
isthelengthoftheshortestpathfrom
u
to
v
;
‹
pred
(
u
,
v
)
isthesecoastvertexontheshortestpathfrom
u
to
v
.
309

9.All-PairsShortestPaths
Theseintuitivede˝nitionsexcludeafewboundarycases,allofwhichwe
alreadysawinthepreviouschapter.
‹
Ifthereisnopathfrom
u
to
v
,thenthereisno
shortest
pathfrom
u
to
v
;in
thiscase,wede˝ne
dist
(
u
,
v
)=
1
and
pred
(
u
,
v
)=
Null
.
‹
Ifthereisanegativecyclebetween
u
and
v
,thentherearepaths
1
from
u
to
v
witharbitrarilynegativelength;inthiscase,wede˝ne
dist
(
u
,
v
)=

and
pred
(
u
,
v
)=
Null
.
‹
Finally,if
u
doesnotlieonanegativecycle,thentheshortestpathfrom
u
to
itselfhasnoedges,andthereforedoesn'thavealastedge;inthiscase,we
de˝ne
dist
(
u
,
u
)=
0
and
pred
(
u
,
u
)=
Null
.
Thedesiredoutputoftheashortestpathproblemisapairof
V

V
arrays,
onestoringall
V
2
sdistances,
2
theotherstoringall
V
2
predecessors.
Inthischapter,I'llfocusalmostexclusivelyoncomputingthedistancearray.
Thepredecessorarray,fromwhichwecancomputetheactualshortestpaths,
canbecomputedwithonlyminormodi˝cations(hint,hint).
9.2LotsofSingleSources
Themostobvioussolutiontotheashortestpathproblemistoruna
singlurceshortestpathalgorithm
V
times,onceforeachpossiblesource
vertex.Speci˝cally,to˝lltheononalsubarray
dist
[
s
,

]
,weinvokea
singlurcealgorithmstartingatthesourcevertex
s
.
ObviousAPSP
(
V
,
E
,
w
)
:
foreveryvertex
s
dist
[
s
,

]
 
SSSP
(
V
,
E
,
w
,
s
)
Therunningtimeofthisalgorithmobviouslydependsonwhichsinglurce
shortestpathalgorithmweuse.Justasinthesinglurcesetting,thereare
fournaturaloptions,dependingonthestructureofthegraphanditsedge
weights:
‹
Iftheedgesofthegraphareunweighted,searchgivesusan
overallrunningtimeof
O
(
VE
)
=
O
(
V
3
)
.
‹
Ifthegraphisacyclic,scanningtheverticesintopologicalorderalsogives
usanoverallrunningtimeof
O
(
VE
)
=
O
(
V
3
)
.
1
formally,walks
2
Backwhenroadmapsusedtobeprintedonpaperandhadtobesearchedmanually,it
wasfairlycommonforthemtoincludeatriangularancetablTo˝ndthedistancefrom
ChampaigntoColumbus,forexample,youwouldlookintherowlabeledandthe
columnlabeledolumbu
310

9.3.Reweighting
‹
Ifalledgeweightsarenoegative,Dijkstra'salgorithmgivesusarunning
timeto
O
(
VE
log
V
)
=
O
(
V
3
log
V
)
.
3
‹
Finally,inthemostgeneralsetting,theordalgorithmgivesusan
overallrunningtimeof
O
(
V
2
E
)
=
O
(
V
4
)
.
9.3Reweighting
Negativeedgesslowusdownsigni˝cantly;canwegetridofthem?Onesimple
ideathatoccurstomanypeopleisincreasingtheweightsofalltheedges
bythesameamountsothatalltheweightsbecomepositive,sothatwecan
useDijkstra'salgorithminsteadoford.Unfortunately,thissimple
ideadoesn'twork,intuitivelybecauseourtwonaturalnotionsofare
incompatiblwithmoreedgescanhavesmallertotalweightthanpaths
withfeweredges.Ifweincreasealledgeweightsatthesamerate,pathswith
moreedgesgetlongerfasterthanpathswithfeweredges;asaresult,the
shortestpathbetweentwoverticesmightchange.
Figure9.1.
Increasingalltheedgeweightsby2changestheshortestpathfrom
s
to
t
.
However,thereisamoresubtlemethodforreweightingedgesthatdoes
preserveshortestpaths.ThisreweightingmethodisoftenattributedtoDonald
Johnson,whodescribeditsapplicationtoshortestpathalgorithmsin1973.But
infact,Johnsonattributedthemethodtoa1972paperofJackEdmondsand
RichardKarp.ThesamemethodwasalsodescribedbyNobuakiTomizawain
1971,andinaslightlydi˙erentformbyDelbertFulkersonin1961.
Supposeeachvertex
v
hassomeassociated
price
ˇ
(
v
)
,whichmightbe
positive,negative,orzero.Wecande˝neanewweightfunction
w
0
asfollows:
w
0
(
u

v
)=
ˇ
(
u
)+
w
(
u

v
)

ˇ
(
v
)
Togivesomeintuition,imaginethatwhenweleavevertex
u
,wehavetopayan
exittaxof
ˇ
(
u
)
,andwhenweenter
v
,weget
ˇ
(
v
)
asanentrancegift.
It'snothardtoshowthatshortestpathswiththenewweightfunction
w
0
areexactlythesameasshortestpathswiththeoriginalweightfunction
w
.In
3
Again,ifwereplacethebinaryheapinourimplementationofDijkstra'salgorithmwith
anunsortedarray,theoverallrunningtimebecomes
O
(
V
3
)
(nomatterhowmanyedgesthe
graphhas),andifwereplacethebinaryheapwithaFibonacciheap,therunningtimedropsto
O
(
V
(
E
+
V
log
V
))=
O
(
VE
+
V
2
log
V
)=
O
(
V
3
)
.
311

9.All-PairsShortestPaths
fact,for
any
path
u
€
v
fromonevertex
u
toanothervertex
v
,wehave
w
0
(
u
€
v
)=
ˇ
(
u
)+
w
(
u
€
v
)

ˇ
(
v
)
.
Wepay
ˇ
(
u
)
inexitfees,plustheoriginalweightofofthepath,minusthe
ˇ
(
v
)
entrancegift.Ateveryintermediatevertex
x
onthepath,weget
ˇ
(
x
)
asan
entrancegift,butthenimmediatelypayitbackasanexittax!Sinceallpaths
from
u
to
v
changelengthbyexactlythesameamount,theshortestpathfrom
u
to
v
doesnotchange.(Pathsbetweendi˙erentpairsofverticescouldchange
lengthsbydi˙erentamounts,sotheirordercouldchange.)
9.4Johnson'sAlgorithm
Johnson'sashortestpathalgorithmcomputesacost
ˇ
(
v
)
foreachvertex,
sothatthenewweightofeveryedgeisnoegative,andthencomputesshortest
pathswithrespecttothenewweightsusingDijkstra'salgorithm.
First,supposetheinputgraphhasavertex
s
thatcanreach
all
theother
vertices.Johnson'salgorithmcomputestheshortestpathsfrom
s
totheother
vertices,usingord(whichdoesn'tcareiftheedgeweightsaren
tive),andthenreweightsthegraphusingthepricefunction
ˇ
(
v
)=
dist
(
s
,
v
)
.
Thenewweightofeveryedgeis
w
0
(
u

v
)=
dist
(
s
,
u
)+
w
(
u

v
)

dist
(
s
,
v
)
.
Thesenewweightsarenoegative
because
ordhalted!Recallthat
anedge
u

v
is
tense
if
dist
(
s
,
u
)+
w
(
u

v
)
<
dist
(
s
,
v
)
,andthatsinglurce
shortestpathalgorithmseliminatealltenseedges.(Iforddetects
anegativecycle,Johnson'salgorithmaborts,becauseshortestpathsarenot
wed.)
Ifthereisnosuitablevertex
s
thatcanreacheverything,thennomatter
wherewestartord,someoftheresultingvertexpriceswillbein˝nite.
Toavoidthisissue,we
always
addanewvertex
s
tothegraph,withzeight
edgesfrom
s
totheothervertices,but
no
edgesgoingbackinto
s
.Thisaddition
doesn'tchangetheshortestpathsbetweenanypairoforiginalvertices,because
therearenopathsinto
s
.
CompletepseudocodeforJohnson'salgorithmisshowninFigure
9.2
.The
runningtimeofthisalgorithmisdominatedbythecallstoDijkstra'salgorithm.
Speci˝cally,wespend
O
(
VE
)
timerunning
BellmanFord
once,
O
(
VE
log
V
)
timerunning
Dijkstra
V
times,and
O
(
V
+
E
)
timedoingotherbookkeeping.
Thus,theoverallrunningtimeis
O
(
VE
log
V
)
=
O
(
V
3
log
V
)
.
4
Negativeedges
don'tslowusdownafterall!
4
...assumingthedefaultbinpimplementation;seethepreviousfootnote.
312

9.5.DynamicProgramming
JohnsonAPSP
(
V
,
E
,
w
)
:
hh
Addanarti˙cialsource
ii
addanewvertex
s
foreveryvertex
v
addanewedge
s

v
w
(
s

v
)
 
0
hh
Computevertexprices
ii
dist
[
s
,

]
 
BellmanFord
(
V
,
E
,
w
,
s
)
if
BellmanFord
foundanegativecycle
failgracefully
hh
Reweighttheedges
ii
foreveryedge
u

v
2
E
w
0
(
u

v
)
 
dist
[
s
,
u
]+
w
(
u

v
)

dist
[
s
,
v
]
hh
Computereweightedshortestpathdistances
ii
foreveryvertex
u
dist
0
[
u
,

]
 
Dijkstra
(
V
,
E
,
w
0
,
u
)
hh
Computeoriginalshortest-pathdistances
ii
foreveryvertex
u
foreveryvertex
v
dist
[
u
,
v
]
 
dist
0
[
u
,
v
]

dist
[
s
,
u
]+
dist
[
s
,
v
]
Figure9.2.
Johnson'sall-pairsshortestpathsalgorithm
9.5DynamicProgramming
Wecanalsosolvetheashortestpathproblemdirectlyusingdynamic
programming,insteadofinvokingasinglurcealgorithm.For
dense
graphs,
where
E
=

(
V
2
)
,thedynamicprogrammingapproacheventuallyyieldsan
algorithmthatisbothsimplerand(slightly)fasterthanJohnson'salgorithm.
Fortherestofthischapter,Iwillassumethattheinputgraphcontainsno
negativecycles.
Asusualfordynamicprogrammingalgorithms,we˝rstneedarecurrence.
Justasinthesinglurcesetting,theourecursivede˝nition
dist
(
u
,
v
)=
¨
0
if
u
=
v
min
x

v

dist
(
u
,
x
)+
w
(
x

v
)

otherwise
onlyworkswhentheinputgraphisadag;anydirectedcyclesdrivethe
recurrenceintoanin˝niteloop.
Wecanbreakthisin˝niteloopbyintroducingasanadditionalparameter,
exactlyaswedidforord;let
dist
(
u
,
v
,
`
)
denotethelengthofthe
shortestpathfrom
u
to
v
thatuses
atmost
`
edges
.Theshortestpathbetween
anytwoverticestraversesatmost
V

1
edges,sothetruesdistance
is
dist
(
u
,
v
,
V

1
)
.Bellman'ssinglurcerecurrenceadaptstothissetting
313

9.All-PairsShortestPaths
immediately:
dist
(
u
,
v
,
`
)=
8
>
>
>
<
>
>
>
:
0
if
`
=
0
and
u
=
v
1
if
`
=
0
and
u
6
=
v
min
¨
dist
(
u
,
v
,
`

1
)
min
x

v
(
dist
(
u
,
x
,
`

1
)+
w
(
x

v
))
«
otherwise
Turningthisrecurrenceintoadynamicprogrammingalgorithmisstraightf
ward;theresultingalgorithmrunsin
O
(
V
2
E
)
=
O
(
V
4
)
time.
ShimbelAPSP
(
V
,
E
,
w
)
:
forallvertices
u
forallvertices
v
if
u
=
v
dist
[
u
,
v
,0
]
 
0
else
dist
[
u
,
v
,0
]
 1
for
`
 
1
to
V

1
forallvertices
u
forallvertices
v
6
=
u
dist
[
u
,
v
,
`
]
 
dist
[
u
,
v
,
`

1
]
foralledges
x

v
if
dist
[
u
,
v
,
`
]
>
dist
[
u
,
x
,
`

1
]+
w
(
x

v
)
dist
[
u
,
v
,
`
]
 
dist
[
u
,
x
,
`

1
]+
w
(
x

v
)
Thisalgorithmwas˝rstsketchedbyAlfonsoShimbelin1954.
5
Justlike
Bellman'sformulationoford,wedon'tneedtheinnerloopover
vertices
v
ortheiterationindex
`
.Themodi˝edalgorithmisshownbelow.
AllPairsBellmanFord
(
V
,
E
,
w
)
:
forallvertices
u
forallvertices
v
if
u
=
v
dist
[
u
,
v
]
 
0
else
dist
[
u
,
v
]
 1
for
`
 
1
to
V

1
forallvertices
u
foralledges
x

v
if
dist
[
u
,
v
]
>
dist
[
u
,
x
]+
w
(
x

v
)
dist
[
u
,
v
]
 
dist
[
u
,
x
]+
w
(
x

v
)
5
Shimbelassumedtheinputwasacomplete
V

V
matrixofdistances,sohisoriginal
algorithmactuallyrunsin
O
(
V
4
)
timenomatterhowmanyedgesthegraphhas.
314

9.6.DivideandConquer
Givenhowwederivedit,itshouldcomeasnosurprisethattheresulting
algorithmisexactlythesameasinterleaving
V
di˙erentexecutionsof
Ford,eachwithadi˙erentsourcevertex.Inparticular,forallvertices
u
and
v
,
afterthe
`
thiterationofthemainfoop,
dist
[
u
,
v
]
is
atmost
thelengthofthe
shortestpathfrom
u
to
v
containingatmost
`
edges.
9.6DivideandConquer
Butwecanmakeamoresigni˝cantimprovement,suggestedbyMichaelFischer
andAlbertMeyerin1971.Bellman'srecurrencebreakstheshortestpathintoa
slightlyshorterpathandasingleedge,byconsideringallpossiblepredecessors
ofthetargetvertex.Instead,let'sbreaktheshortestpathsintotwoshorter
shortestpathsatthe
middle
vertex.Thisideagivesusadi˙erentrecurrence
forthesamefunction
dist
(
u
,
v
,
`
)
.Hereweneedtostopatthebasecase
`
=
1
insteadof
`
=
0
,becauseapathwithatmostoneedgehasnolvertex.
Tosimplifytherecurrenceslightly,let'sde˝ne
w
(
v

v
)=
0
foreveryvertex
v
.
dist
(
u
,
v
,
`
)=
(
w
(
u

v
)
if
i
=
1
min
x

dist
(
u
,
x
,
`=
2
)+
dist
(
x
,
v
,
`=
2
)

otherwise
Asstated,thisrecurrenceonlyworkswhen
`
isapowerof
2
,sinceotherwisewe
mighttryto˝ndtheshortestpathwith(atmost)afractionalnumberofedges!
Butthat'snotreallyaproblem;
dist
(
u
,
v
,
`
)
isthetruesdistance
from
u
to
v
forall
`

V

1
;inparticular,wecanuse
`
=
2
d
lg
V
e
<
2
V
.
Onceagain,adynamicprogrammingsolutionisstraightforward.Evenbefore
wewritedownthealgorithm,wecantelltherunningtimeis
O
(
V
3
log
V
)
e
needtoconsider
V
possiblevaluesof
u
,
v
,and
x
,butonly
d
lg
V
e
possiblevalues
of
`
.InthefollowingpseudocodeforFischerandMeyer'salgorithm,thearray
entry
dist
[
u
,
v
,
i
]
storesthevalueof
dist
(
u
,
v
,2
i
)
.
FischerMeyerAPSP
(
V
,
E
,
w
)
:
forallvertices
u
forallvertices
v
dist
[
u
,
v
,0
]
 
w
(
u

v
)
for
i
 
1
to
d
lg
V
e
hh
`
=
2
i
ii
forallvertices
u
forallvertices
v
dist
[
u
,
v
,
i
]
 1
forallvertices
x
if
dist
[
u
,
v
,
i
]
>
dist
[
u
,
x
,
i

1
]+
dist
[
x
,
v
,
i

1
]
dist
[
u
,
v
,
i
]
 
dist
[
u
,
x
,
i

1
]+
dist
[
x
,
v
,
i

1
]
Unlikeourearlieralgorithms,
FischerMeyerAPSP
is
not
thesameas
V
invocationsofanysinglurcesalgorithm;inparticular,the
315

9.All-PairsShortestPaths
innermostloopdoes
not
simplyrelaxtenseedges.Nevertheless,wecanstill
removethelastdimensionofthetable,using
dist
[
u
,
v
]
everywhereinplaceof
dist
[
u
,
v
,
i
]
,justaswedidinordandourearlierdynamicprogramming
algorithm;thisreducesthespacefrom
O
(
V
3
)
to
O
(
V
2
)
.Thismorepolished
algorithmwasdescribedbyLeyzorek
etal.
in1957,inthesamepaperwhere
theydescribeDijkstra'salgorithm.
LeyzorekAPSP
(
V
,
E
,
w
)
:
forallvertices
u
forallvertices
v
dist
[
u
,
v
]
 
w
(
u

v
)
for
i
 
1
to
d
lg
V
e
hh
`
=
2
i
ii
forallvertices
u
forallvertices
v
forallvertices
x
if
dist
[
u
,
v
]
>
dist
[
u
,
x
]+
dist
[
x
,
v
]
dist
[
u
,
v
]
 
dist
[
u
,
x
]+
dist
[
x
,
v
]
9.7FunnyMatrixMultiplication
Thereisaverycloseconnection(˝rstobservedbyShimbel,andlater
dentlybyBellman)betweencomputingshortestpathsinadirectedgraphand
computingpowersofasquarematrix.Comparethefollowingalgorithmfor
squaringan
n

n
matrix
A
withtheinnerloopof
FischerMeyerAPSP
.(I've
slightlymodi˝edthenotationinthesecondalgorithmtomakethesimilarity
clearer.)
MatrixSquare
(
A
)
:
for
i
 
1
to
n
for
j
 
1
to
n
A
0
[
i
,
j
]
 
0
for
k
 
1
to
n
A
0
[
i
,
j
]
 
A
0
[
i
,
j
]+
A
[
i
,
k
]

A
[
k
,
j
]
FischerMeyerInnerLoop
(D):
forallvertices
u
forallvertices
v
D
0
[
u
,
v
]
 1
forallvertices
x
D
0
[
u
,
v
]
 
min

D
0
[
u
,
v
]
,
D
[
u
,
x
]+
D
[
x
,
v
]

The
only
di˙erencebetweenthesetwoalgorithmsisthatthesecondalgorithm
usesadditioninsteadofmultiplication,andminimizationinsteadofaddition.For
thisreason,theshortestpathinnerloopissometimesreferredtoas
oranormatrixmultiplication.
316

9.7.FunnyMatrixMultiplication
Oursloweralgorithm
ShimbelAPSP
isthestandarditerativealgorithmfor
computingthe
(
V

1
)
thspowoftheweightmatrix
w
.The˝rst
setofloopssetsupthesidentitymatrix,with
0
sonthemaindiagonal
and
1
everywhereelse,andeachiterationofthesecondmainloopcomputes
thenextspow
FischerMeyerAPSP
replacesthisiterativemethod
forcomputingpowerswithrepeatedsquaring,exactlyaswesawattheendof
Chapter
1
.Onceagain,weseethein˛uenceofancientEgyptian
‡rpedon‹ptai
!
Therearefasterdinqueralgorithmsfor(standard)matrixm
plication,similartoKaratsuba'sdinqueralgorithmformultiplying
integers.The˝rstsuchalgorithm,describedbyVolkerStrassenin1969,reduces
theproblemofmultiplyingtwo
n

n
matricesto
seven
instancesofmultiplying
two
n
=
2

n
=
2
matrices;Strassen'salgorithmrunsin
O
(
n
lg7
)=
O
(
n
2.807355
)
.
Strassen'salgorithmhasbeenimprovedmanytimesoverthelast˝ftyyears;as
of2018,
thefastestultiplicationalgorithmknown
runsin
O
(
n
2.372864
)
time.
6
Unfortunately,
all
ofthesefasteralgorithmsusesubtraction,andthere's
noequivalentofsubtraction.(What'stheinverseoperationformin?)
Soatleastforgeneralgraphs,there'snoobviouswaytospeeduptheinnerloop
ofourdynamicprogrammingalgorithms.
ButotobvioudoesnotmeanssiblInfact,thereareseveral
signi˝cantlyfasteralgorithmsfor
specialcases
oftheashortestpaths
problem.Oneofthenicestisasimplerandomizedalgorithmdiscoveredin
1991byZviGalilandOdedMargalit,andfurthersimpli˝edin1992byRaimund
Seidel,thatcomputesashortestpath
distances
in
unweighted,undirected
graphsin
O
(
M
(
V
)
log
V
)
expected
time,where
M
(
n
)=
O
(
n
2.372864
)
isthetime
requiredto(seriously)multiplytwo
n

n
integermatrices.
7
Galil,Margalit,and
Seidel'sapproachhassincebeenextendedtocomputeactualshortestpaths,
deterministically,indirectedgraphs,withsmallintegeredgeweights,instrongly
subcubictime.
Ontheotherhand,despiteconsiderableprogressinthesmaeight
setting,nobodyknowshowtocomputeashortestpathsformoregeneral
edgeweightsin
O
(
V
2.999999
)
time,foranynumberof
9
s.Moreover,thereis
someevidencethatsuchanalgorithmisimpossible!Somaybeotobviou
doesmeanssiblafterall.
6
Determiningtheminimumtimerequiredtomultiplytwoarbitrary
n

n
matricesisa
loandingopenproblem;manypeoplebelievethereisanundiscoveredalgorithmthatruns
in
O
(
n
2
+
"
)
timeforany
">
0
,orpossiblyevenin
O
(
n
2
)
time.
7
RaimundSeidel.Ontheaprobleminunweightedundirectedgraphs.
JournalofComputerandSystemSciences
,1995.Thisisoneofthefewalgorithms
paperswhere(inthe1992conferenceversionatleast)thealgorithmiscompletelydescribed
andanalyzed
intheabstract
ofthepaper.Seealso:NogaAlon,ZviGalil,OdedMargalit*.On
theexponentoftheallpairsshortestpathproblem.
JournalofComputerandSystemSciences
1997.
317

9.All-PairsShortestPaths
9.8(Kleene-Roy-)Floyd-Warshall(-Ingerman)
Ourfastdynamicprogrammingalgorithmisstillafactorof
O
(
log
V
)
slower
intheworstcasethanthestandardimplementationofJohnson'salgorithm.
Adi˙erentformulationofshortestpathsthatremovesthislogarithmicfactor
wasproposedtwicein1962,˝rstbyRobertFloydandlaterindependentlyby
PeterIngerman,bothslightlygeneralizinganalgorithmofStephenWarshall
publishedearlierinthesameyear.Infact,Warshall'salgorithmwaspreviously
discoveredbyBernardRoyin1959,andtheunderlyingrecursionpatternwas
usedbyStephenKleene
8
in1951.
Warshall's(andRoy'sandKleene's)insightwastouseadi˙erentthird
parameterinthedynamicprogrammingrecurrence.Insteadofconsidering
pathswithalimitednumberofedges,theyconsideredpathsthatcanpass
throughonlycertainvertices.Here,ssthromeansenterand
leavforexample,thepath
w

x

y

z
startsat
w
,
passesthrough
x
and
y
,
andendsat
z
.
Numbertheverticesarbitrarilyfrom
1
to
V
.Foreverypairofvertices
u
and
v
andeveryinteger
r
,wede˝neapath
ˇ
(
u
,
v
,
r
)
asfollows:
ˇ
(
u
,
v
,
r
)
istheshortestpath(ifany)from
u
to
v
thatpasses
throughonlyverticesnumberedatmost
r
.
Inparticular,
ˇ
(
u
,
v
,
V
)
isthetrueshortestpathfrom
u
to
v
.KleeneandRoy
andWarshallallobservedthatthesepathshaveasimplerecursivestructure.
Figure9.3.
Recursivestructureoftherestrictedshortestpath
ˇ
(
u
,
v
,
r
)
.
‹
Thepath
ˇ
(
u
,
v
,0
)
can'tpassthroughanyintermediatevertices,soitmust
betheedge(ifany)from
u
to
v
.
‹
Foranyinteger
r
>
0
,either
ˇ
(
u
,
v
,
r
)
passesthroughvertex
r
oritdoesn't.

If
ˇ
(
u
,
v
,
r
)
passesthroughvertex
r
,itconsistsofasubpathfrom
u
to
r
,
followedbyasubpathfrom
r
to
v
.Bothofthosesubpathspassthrough
onlyverticesnumberedatmost
r

1
;moreover,thosesubpathsareas
shortaspossiblewiththisrestriction.Sothetwosubpathsmustbe
ˇ
(
u
,
r
,
r

1
)
and
ˇ
(
r
,
v
,
r

1
)
.
8
PronouncedayknnotororaorSpeci˝cally,
Kleenedescribedaninductiveproofthatevery˝niteautomatahasanequivalentregular
sion;Kleene'sinductionpatternisessentiallyidenticaltotheFlWarshallrecurrence.
318

9.8.(Kleene-Roy-)Floyd-Warshall(-Ingerman)

Ontheotherhand,if
ˇ
(
u
,
v
,
r
)
doesnotpassthroughvertex
r
,thenit
passesthroughonlyverticesnumberedatmost
r

1
,anditmustbe
the
shortest
pathwiththisrestriction.Sointhiscase,wemusthave
ˇ
(
u
,
v
,
r
)=
ˇ
(
u
,
v
,
r

1
)
.
Nowlet
dist
(
u
,
v
,
r
)
denotethe
length
ofthepath
ˇ
(
u
,
v
,
r
)
.Therecursive
structureof
ˇ
(
u
,
v
,
r
)
immediatelyimpliesthefollowingrecurrence:
dist
(
u
,
v
,
r
)=
8
>
<
>
:
w
(
u

v
)
if
r
=
0
min
¨
dist
(
u
,
v
,
r

1
)
dist
(
u
,
r
,
r

1
)+
dist
(
r
,
v
,
r

1
)
«
otherwise
Ourgoalistocompute
dist
(
u
,
v
,
V
)
forallvertices
u
and
v
.Onceagain,
thisrecurrencecanbeevaluatedbyastraightforwarddynamicprogramming
algorithmin
O
(
V
3
)
time
.
KleeneAPSP
(
V
,
E
,
w
)
:
forallvertices
u
forallvertices
v
dist
[
u
,
v
,0
]
 
w
(
u

v
)
for
r
 
1
to
V
forallvertices
u
forallvertices
v
if
dist
[
u
,
v
,
r

1
]
<
dist
[
u
,
r
,
r

1
]+
dist
[
r
,
v
,
r

1
]
dist
[
u
,
v
,
r
]
 
dist
[
u
,
v
,
r

1
]
else
dist
[
u
,
v
,
r
]
 
dist
[
u
,
r
,
r

1
]+
dist
[
r
,
v
,
r

1
]
Likeallourpreviousdynamicprogrammingalgorithmsforshortestpaths,we
cansimplify
KleeneAPSP
byremovingthethirddimensionofthememoization
table.Also,becausewechosethevertexnumberingarbitrarily,there'sno
reasontorefertoitexplicitlyinthepseudocode.We˝nallyarriveatFloyd's
improvementofWarshall'salgorithm:
FloydWarshall
(
V
,
E
,
w
)
:
forallvertices
u
forallvertices
v
dist
[
u
,
v
]
 
w
(
u

v
)
forallvertices
r
forallvertices
u
forallvertices
v
if
dist
[
u
,
v
]
>
dist
[
u
,
r
]+
dist
[
r
,
v
]
dist
[
u
,
v
]
 
dist
[
u
,
r
]+
dist
[
r
,
v
]
It'sinterestingtocompare
FloydWarshall
withourearlier,slightlyslower
dynamicprogrammingalgorithm
LeyzorekAPSP
.Insteadof
O
(
log
V
)
passes
319

9.All-PairsShortestPaths
throughalltriplesofvertices,
FloydWarshall
requiresonlyasinglepass,but
onlybecauseitusesadi˙erentnestingorderforthethreeloops!
Exercises
1.
(a)
Describeamodi˝cationof
LeyzorekAPSP
thatreturnsanarrayof
predecessorpointers,inadditiontothearrayofshortestpathdistances,
stillin
O
(
V
3
log
V
)
time.
(b)
Describeamodi˝cationof
FloydWarshall
thatreturnsanarrayof
predecessorpointers,inadditiontothearrayofshortestpathdistances,
stillin
O
(
V
3
)
time.
2.
Allofthealgorithmsdiscussedinthischapterfailifthegraphcontainsa
negativecycle.Johnson'salgorithmdetectsthenegativecycleintheinitia
izationphase(viaord)andaborts;thedynamicprogramming
algorithmsjustreturnincorrectresults.However,
all
ofthesealgorithmscan
bemodi˝edtoreturncorrectsdistances,eveninthepresence
ofnegativecycles.Speci˝cally,forallvertices
u
and
v
:
‹
If
u
cannotreach
v
,thealgorithmshouldreturn
dist
[
u
,
v
]=
1
.
‹
If
u
canreachanegativecyclethatcanreach
v
,thealgorithmshould
return
dist
[
u
,
v
]=

.
‹
Otherwise,thereisashortestpathfrom
u
to
v
,sothealgorithmshould
returnitslength.
(a)
Describehowtomodify
Johnson'salgorithm
toreturnthecorrect
sdistances,evenifthegraphhasnegativecycles.
(b)
Describehowtomodify
LeyzorekAPSP
toreturnthecorrects
pathdistances,evenifthegraphhasnegativecycles.
(c)
Describehowtomodify
FlWarshall
toreturnthecorrects
distances,evenifthegraphhasnegativecycles.
3.
Thealgorithmsdescribedinthischaptercanalsobemodi˝edtoreturnan
explicitdescriptionofsomenegativecycleintheinputgraph
G
,ifoneexists,
insteadofonlyreportingwhetherornot
G
containsanegativecycle.
(a)
Describehowtomodify
Johnson'salgorithm
toreturneitherthearray
ofallsdistancesoranegativecycle.
(b)
Describehowtomodify
LeyzorekAPSP
toreturneitherthearrayofall
sdistancesoranegativecycle.
(c)
Describehowtomodify
FlWarshall
toreturneitherthearrayofall
sdistancesoranegativecycle.
320

Exercises
Inallcases,iftheinputgraphcontainsmorethanonenegativecycle,your
algorithmsmaychooseonearbitrarily.
4.
Let
G
=(
V
,
E
)
beadirectedgraphwithweightededges;edgeweightscan
bepositive,negative,orzero,buttherearenonegativecycles.
(a)
Describeane˚cientalgorithmthateither˝ndsacycleoflengthzero
in
G
,orcorrectlyreportsthatnosuchcycleexists.
(b)
Describeane˚cientalgorithmthatconstructsasubgraph
H
of
G
with
thefollowingproperties:
‹
Everyvertexof
G
isavertexof
H
.
‹
Everydirectedcyclein
H
haslength
0
.
‹
Everydirectedcycleoflength
0
in
G
isalsoacyclein
H
.
Inparticular,iftherearenozesin
G
,then
H
hasnoedges.
5.
Let
G
=(
V
,
E
)
beadirectedgraphwithweightededges;edgeweightscan
bepositive,negative,orzero.Supposetheverticesof
G
arepartitioned
into
k
disjointsubsets
V
1
,
V
2
,...,
V
k
;thatis,everyvertexof
G
belongsto
exactlyonesubset
V
i
.Foreach
i
and
j
,let

(
i
,
j
)
denotetheminimum
sdistancebetweenverticesin
V
i
andverticesin
V
j
:

(
i
,
j
)=
min

dist
(
v
i
,
v
j
)


v
i
2
V
i
and
v
j
2
V
j

.
Describeanalgorithmtocompute

(
i
,
j
)
forall
i
and
j
.Forfullcredit,your
algorithmshouldrunin
O
(
VE
+
kV
log
V
)
time.
6.
Inthisproblemwewilldiscoverhowyou,yes
you
,canbeemployedby
WallStreetandcauseamajoreconomiccollapse!The
arbitrage
business
isamonkingschemethattakesadvantageofdi˙erencesincurrency
exchange.Inparticular,suppose1USdollarbuys120Japaneseyen,1yen
buys0.01euros,and1eurobuys1.2USdollars.Then,atraderstartingwith
$1canconverttheirmoneyfromdollarstoyen,thenfromyentoeuros,
and˝nallyfromeurosbacktodollars,endingwith$1.44!Thecycleof
currencies
$
!
¥
!
e
!
$
iscalledan
arbitragecycle
.Ofcourse,˝nding
andexploitingarbitragecyclesbeforethepricesarecorrectedrequires
extremelyfastalgorithms.
Suppose
n
di˙erentcurrenciesaretradedinyourcurrencymarket.You
aregiventhematrix
Exch
[
1..
n
,1..
n
]
ofexchangeratesbetweeneverypair
ofcurrencies;foreach
i
and
j
,oneunitofcurrency
i
canbetradedfor
Exch
[
i
,
j
]
unitsofcurrency
j
.(Do
not
assumethat
Exch
[
i
,
j
]

Exch
[
j
,
i
]=
1
.)
(a)
Describeanalgorithmthatreturnsanarray
MaxAmt
[
1..
n
]
,where
MaxAmt
[
i
]
isthemaximumamountofcurrency
i
thatyoucanobtain
321

9.All-PairsShortestPaths
bytrading,startingwithoneunitofcurrency
1
,assumingthereareno
arbitragecycles.
(b)
Describeanalgorithmtodeterminewhetherthegivenmatrixofcurrency
exchangeratescreatesanarbitragecycle.
(c)
Modifyyouralgorithmfrompart(b)toactuallyreturnanarbitrage
cycle,ifitexists.
7.
MortyneedstoretrieveastabilizedplumbusfromtheClackspireLabyrinth.
HemustenterthelabyrinthusingRick'sinterdimensionalportalgun,traverse
theLabyrinthtoaplumbus,thentakethatplumbusthroughtheLabyrinth
toa˛eebtobestabilized,and˝nallytakethestabilizedplumbusback
totheoriginalportaltoreturnhome.Plumbusesarestabilizedby˛eeb
juice,whichany˛eebwillreleaseimmediatelyafterbeingremovedfromits
˛eebhole.Anunstabilizedplumbuswillexplodeifitiscarriedmorethan
137˛inksfromitsoriginalstorageunit.TheClackspireLabyrinthsmellslike
farts,soMortywantstospendaslittletimethereaspossible.
RickhasgivenMortyadetailedmapoftheClackspireLabyrinth,which
consistofadirectedgraph
G
=(
V
,
E
)
withnoegativeedgeweights
(indicatingdistancein˛inks),alongwithtwodisjointsubsets
P
ˆ
V
and
F
ˆ
V
,indicatingtheplumbusstorageunitsand˛eebholes,respectively.
Mortyneedstoidentifyastartvertex
s
,aplumbusstorageunit
p
2
P
,anda
˛eebhole
f
2
F
,suchthatthesdistancefrom
p
to
f
isatmost
137˛inkslong,andthelengthoftheshortestwalk
s
€
p
€
f
€
s
isasshortas
possible.
Describeandanalyzeanalgo(burp)rithmtoso(burp)olveMorty's
lem.YoucanassumethatitisinfactpossibleforMortytosucceed.
8.
Let
G
=(
V
,
E
)
beadirectedgraphwithweightededges;edgeweightscould
bepositive,negative,orzero.
(a)
Howwouldwedeleteanarbitraryvertex
v
fromthisgraph,without
changingthesdistancebetweenanyotherpairofvertices?
Describeanalgorithmthatconstructsadirectedgraph
G
0
=(
V
nf
v
g
,
E
0
)
withweightededges,suchthatthesdistancebetweenany
twoverticesin
G
0
isequaltothesdistancebetweenthe
sametwoverticesin
G
,in
O
(
V
2
)
time.
(b)
Nowsupposewehavealreadycomputedallsdistancesin
G
0
.
Describeanalgorithmtocomputethesdistancesinthe
originalgraph
G
from
v
toeveryothervertex,andfromeveryother
vertexto
v
,allin
O
(
V
2
)
time.
322

Exercises
(c)
Combineparts(a)and(b)intoanotherashortestpathalgorithm
thatrunsin
O
(
V
3
)
time.(Theresultingalgorithmis
almost
thesameas
FlWarshall
!)
9.
Suppose
A
and
B
are
boolean
n

n
matrices.The
boolean
or

product
of
A
and
B
isthe
n

n
matrix
C
de˝nedasfollows:
C
[
i
,
j
]
:
=
_
k

A
[
i
,
k
]
^
B
[
k
,
j
]

(a)
Reducebooleanmatrixmultiplicationtosmatrixmultiplication.
Thatis,givenasubroutine
MinPlusMultiply
thatcomputesthe
plusproductoftwo
n

n
matricesin
T
(
n
)
time,describeandanalyze
analgorithm
BooleanMatrixMultiply
thatmultipliestwoboolean
matricesin
O
(
T
(
n
))
time.
(b)
Reducebooleanmatrixmultiplicationtostandardmatrixmultiplication.
Thatis,givenasubroutine
MatrixMultiply
thatcomputesthestandard
productoftwo
n

n
matricesin
T
(
n
)
time,describeandanalyze
analgorithm
BooleanMatrixMultiply
thatmultipliestwoboolean
matricesin
O
(
T
(
n
))
time.
10.
The
transitiveclosure
ofadirectedgraph
G
containsanedge
u

v
ifandonly
ifthereisadirectedpathfrom
u
to
v
in
G
.Forthisproblem,assumewe
canmultiplytwo
n

n
booleanmatricesin
O
(
n
!
)
time,forsomeconstant
2

!<
3
.(Problem
9(b)
implies
!

2.372864
.)
(a)
Describeanalgorithmtocomputethetransitiveclosureofan
n
ertex
directedgraphin
O
(
n
!
log
n
)
time.
(b)
Nowsuppose
G
isadirected
acyclic
graph.Describeanalgorithmto
computethetransitiveclosureof
G
in
O
(
n
!
)
time.
[Hint:Dowhatyou
alwaysdowithdags,andthendivideandconquer.Usethefactthat
!

2
.]
(c)
Finally,describeanalgorithmtocomputethetransitiveclosureofan
arbitrary
directedgraphin
O
(
n
!
)
time.
[Hint:Dowhatyoualwaysdo
toturnanarbitrarydirectedgraphintoadag.]
(d)
Nowlet'sreversethepreviousreduction.Givenasubroutine
Tra
Closure
thatcomputesthetransitiveclosureofan
n
ertexdirected
graphin
O
(
n

)
time,forsomeconstant
2

<
3
,describeandanalyze
analgorithmforbooleanmatrixmultiplicationthatrunsin
O
(
n

)
time.
11.
Provethatthefollowingrecursivealgorithmcorrectlycomputesa
sdistancesin
O
(
n
3
)
time.Forsimplicity,youmayassume
n
isapowerof
2
.Asusual,thearray
D
ispassed
byreference
tothehelper
323

9.All-PairsShortestPaths
function
RecAPSP
.
[Hint:Thisisajumbledversionof
FloyWarshall
,with
signi˝cantlybettercachebehavior.
9
]
RecursiveAPSP
(
V
,
E
,
w
)
:
n
 j
V
j
for
i
 
1
to
n
for
j
 
1
to
n
if
i
=
j
D
[
i
,
j
]
 
0
if
i

j
2
E
D
[
i
,
j
]
 
w
(
i

j
)
else
D
[
i
,
j
]
 1
RecAPSP
(
D
,
n
,1,1,1
)
return
D
[
1..
n
,1..
n
]
RecAPSP
(
D
,
n
,
i
,
j
,
k
)
:
if
n
=
1
D
[
i
,
j
]
 
min

D
[
i
,
j
]
,
D
[
i
,
k
]+
D
[
j
,
k
]

else
m
 
n
=
2
RecAPSP
(
D
,
n
=
2,
i
,
j
,
k
)
RecAPSP
(
D
,
n
=
2,
i
,
j
,
k
+
m
)
RecAPSP
(
D
,
n
=
2,
i
,
j
+
m
,
k
)
RecAPSP
(
D
,
n
=
2,
i
,
j
+
m
,
k
+
m
)
RecAPSP
(
D
,
n
=
2,
i
+
m
,
j
,
k
)
RecAPSP
(
D
,
n
=
2,
i
+
m
,
j
,
k
+
m
)
RecAPSP
(
D
,
n
=
2,
i
+
m
,
j
+
m
,
k
)
RecAPSP
(
D
,
n
=
2,
i
+
m
,
j
+
m
,
k
+
m
)
ª
12.
Let
G
=(
V
,
E
)
beanundirected,unweighted,connected,
n
ertexgraph,
representedbyanadjacencymatrix
A
[
1..
n
,1..
n
]
.Inthisproblem,wewill
deriveSeidel'scalgorithmtocomputethe
n

n
matrix
D
[
1..
n
,1..
n
]
ofsdistancesin
G
usingfastmatrixmultiplication.Assumethat
wehaveasubroutine
MatrixMultiply
thatcomputesthestandardproduct
oftwo
n

n
matricesin
O
(
n
!
)
time,forsomeunknownconstant
!

2
.
(a)
Let
G
2
denotethegraphwiththesameverticesas
G
,wheretwovertices
areconnectedbyaedgeifandonlyiftheyareconnectedbyapathof
lengthatmost
2
in
G
.Describeanalgorithmtocomputetheadjacency
matrixof
G
2
usingasinglecallto
MatrixMultiply
and
O
(
n
2
)
additional
time.
(b)
Supposewediscoverthat
G
2
isacompletegraph.Describeanalgorithm
tocomputethematrix
D
ofshortestpathdistancesin
G
in
O
(
n
2
)
additionaltime.
(c)
Supposewerecursivelycomputethematrix
D
2
ofsdistances
in
G
2
.Provethatthesdistancein
G
fromnode
i
tonode
j
iseither
2

D
2
[
i
,
j
]
or
2

D
2
[
i
,
j
]

1
.
(d)
Nowsuppose
G
2
is
not
acompletegraph.Let
X
=
D
2

A
,andlet
deg
(
i
)
denotethedegreeofvertex
i
intheoriginalgraph
G
.Provethatthe
sdistancefromnode
i
tonode
j
in
G
is
2

D
2
[
i
,
j
]
ifand
onlyif
X
[
i
,
j
]

D
2
[
i
,
j
]

deg
(
i
)
.
9
JooPark,MichaelPenner,andViktorK.Prasanna.Optimizinggraphalgorithmsfor
improvedcacheperformance.
IEEETrans.ParallelandDistributedSystems
2004.
Forasigni˝cantgeneralizationtoawiderclassofdynamicprogrammingproblems,seeRezaul
AlamChowdhuryandVijayaRamachandran.liviousdynamicprogramming.
Proc.17th
SODA
2006.
324

Exercises
(e)
Describeanalgorithmtocomputethematrix
D
ofsdistances
in
G
in
O
(
n
!
log
n
)
time.
13.
GideonYuvalproposedthefollowingreductionfromsmatrixm
plicationtostandardmatrixmultiplicationin1976.Supposewearegiven
twointegers
n

n
matrices
A
and
B
ofintegers,eachofwhoseentriesis
between
0
and
M
,andwewanttocomputetheirsproductmatrix
C
,
de˝nedbysetting
C
[
i
,
k
]=
min
j
(
A
[
i
,
j
]+
B
[
j
,
k
])
forallindices
i
and
k
.De˝netwonew
n

n
matrices
A
0
and
B
0
,where
A
0
[
i
,
j
]=
n
M

A
[
i
,
j
]
and
B
0
[
i
,
j
]=
n
M

B
[
i
,
j
]
.
Finally,let
C
0
bethe(standard)productof
A
0
and
B
0
,de˝nedbysetting
C
0
[
i
,
k
]=
P
j
A
0
[
i
,
j
]

B
0
[
j
,
k
]
.
(a)
Describeanalgorithmtoconstruct
A
0
from
A
usingonlystandardinteger
arithmeticoperations(
+
,

,

).
(b)
Describeanalgorithmtoextractthesproduct
C
from
C
0
,using
onlystandardintegerarithmeticoperations(
+
,

,

).
10
(c)
Supposewecancomputethestandardproductoftwo
n

n
integer
tricesusing
O
(
n
!
)
arithmeticoperations,forsomeconstant
2

!<
3
.
HowmanyarithmeticoperationsdoesYuval'salgorithmneedtocompute
thesproduct
C
?
(d)
Givenasingle
n

n
integermatrix
A
,howmanyarithmeticoperationsare
requiredtocomputethe
n
thpowerof
A
usingYuval'salgorithm?
(Recallthatif
A
istheweightedadjacencymatrixofagraph,thenthe
n
thpowerof
A
isthematrixofsdistances.)
(e)
Whydoesn'tYuval'salgorithmimplyanashortestpathalgorithm
thatisfasterthanFlWarshallfor
arbitrary
edgeweights?Howare
wecheating?
10
Inparticular,do
not
uselogarithmsordivisionorthe˛oorfunction
b
x
c
.Trustisa
canofwormsyoudo
not
wanttoopen.
325


Aprocesscannotbeunderstoodbystoppingit.Understandingmustmovewith
the˝owoftheprocess,mustjoinitand˝owwithit.
TheFirstLawofMentat,inFrankHerbert's
Dune
(1965)
Contrarytoexpectation,˝owusuallyhappensnotduringrelaxingmomentsof
leisureandentertainment,butratherwhenweareactivelyinvolvedinadif˙cult
enterprise,inataskthatstretchesourmentalandphysicalabilities....Flowishard
toachievewithouteffort.Flowisnotwastingtime.
MihalyCsíkszentmihályi,
Flow:ThePsychologyofOptimalExperience
(1990)
There'sadifferencebetweenknowingthepathandwalkingthepath.
Morpheus[LaurenceFishburne],
TheMatrix
(1999)
10
MaximumFlows&MinimumCuts
IntheU.S.AirForceresearcherTheodoreE.HarrisandretiredU.S.
ArmygeneralFrankS.Rosswroteaclassi˝edreportstudyingtherailnetwork
thatlinkedtheSovietUniontoitssatellitecountriesinEasternEurope.The
networkwasmodeledasagraphwith44vertices,representinggeographic
regions,and105edges,representinglinksbetweenthoseregionsintherail
network.Eachedgewasgivenaweight,representingtherateatwhichmaterial
couldbeshippedfromoneregiontothenext.Essentiallybytrialanderror,they
determinedboththemaximumamountofstu˙thatcouldbemovedfromRussia
intoEurope,aswellasthecheapestwaytodisruptthenetworkbyremoving
links(orinlessabstractterms,blowinguptraintracks),whichtheycalled
bottlenTheirreport,whichincludedthedrawingofthenetworkin
Figure
10.1
,wasonlydeclassi˝edin1999.
1
1
IlearnedthisstoryfromAlexanderSchrijver'sfascinatingsurveynthehistoryof
combinatorialoptimization(tilltheHossreportwasdeclassi˝edatSchrijver's
request.FordandFulkerson(whowewillmeetshortly)creditHarrisforformulatingthe
327

10.MaximumFlows&MinimumCuts
Figure10.1.
HarrisandRoss'smapoftheWarsawPactrailnetwork.(See
ImageCredits
attheendof
thebook.)
Thisoneofthe˝rstrecordedapplicationsofthe
maximum˛ow
and
minimumcut
problems.Forbothproblems,theinputisadirectedgraph
G
=(
V
,
E
)
withtwospecialvertices
s
and
t
,calledthe
source
and
target
.Asin
previouschapters,Iwillwrite
u

v
todenotethedirectededgefromvertex
u
tovertex
v
.Intuitively,themaximum˛owproblemasksforthemaximumrate
atwhichsomeresourcecanbemovedfrom
s
to
t
;theminimumcutproblem
asksfortheminimumdamageneededtoseparate
s
from
t
.
10.1Flows
An
(
s
,
t
)
ow
(orjusta
˛ow
ifthesourceandtargetverticesareclearfromco
text)isafunction
f
:
E
!
R
thatsatis˝esthefollowing
conservationconstraint
ateveryvertex
v
exceptpossibly
s
and
t
:
X
u
f
(
u

v
)=
X
w
f
(
v

w
)
.
InEnglish,thetotal˛owinto
v
isequaltothetotal˛owoutof
v
.Tokeepthe
notationsimple,wede˝ne
f
(
u

v
)=
0
ifthereisnoedge
u

v
inthegraph.
The
value
ofthe˛ow
f
,denoted
j
f
j
,isthetotalnet˛owoutofthesource
vertex
s
:
j
f
j
:
=
X
w
f
(
s

w
)

X
u
f
(
u

s
)
.
maximowproblem,althoughtheprecisechronologyissomewhatmuddled;HarrisandRoss
thankGeorgeDantzigorassistanceinformulatingtheprobl
328

10.2.Cuts
It'snothardtoprovethat
j
f
j
isalsoequaltothetotalnet˛ow
into
thetarget
vertex
t
,asfollows.Tosimplifynotation,let
@
f
(
v
)
denotethetotalnet˛ow
outofanyvertex
v
:
@
f
(
v
)
:
=
X
u
f
(
u

v
)

X
w
f
(
v

w
)
.
Theconservationconstraintimpliesthat
@
f
(
v
)=
0
oreveryvertex
v
except
s
and
t
,so
X
v
@
f
(
v
)=
@
f
(
s
)+
@
f
(
t
)
.
Ontheotherhand,any˛owthatleavesonevertexmustenteranothervertex,so
wemusthave
P
v
@
f
(
v
)=
0
.Itfollowsimmediatelythat
j
f
j
=
@
f
(
s
)=

@
f
(
t
)
.
Nowsupposewehaveanotherfunction
c
:
E
!
R

0
thatassignsano
negative
capacity
c
(
e
)
toeachedge
e
.Wesaythata˛ow
f
is
feasible
(with
respectto
c
)if
0

f
(
e
)

c
(
e
)
foreveryedge
e
.Mostofthetimeweconsider
only˛owsthatarefeasiblewithrespecttosome˝xedcapacityfunction
c
.Wesay
thata˛ow
f
saturates
edge
e
if
f
(
e
)=
c
(
e
)
,and
avoids
edge
e
if
f
(
e
)=
0
.The
maximum˛owproblem
istocomputeafeasible
(
s
,
t
)
owinagivendirected
graph,withagivencapacityfunction,whosevalueisaslargeaspossible.
Figure10.2.
Afeasible
(
s
,
t
)
-˝owwithvalue10.Eachedgeislabeledwithits˝ow/capacity.
10.2Cuts
An
(
s
,
t
)

(orjust
cut
ifthesourceandtargetverticesareclearfromcontext)
isapartitionoftheverticesintodisjointsubsets
S
and
T

S
[
T
=
V
and
S
\
T
=
?

s
2
S
and
t
2
T
.
Ifwehaveacapacityfunction
c
:
E
!
R

0
,the
capacity
ofacutisthesum
ofthecapacitiesoftheedgesthatstartin
S
andendin
T
:
k
S
,
T
k
:
=
X
v
2
S
X
w
2
T
c
(
v

w
)
.
(Again,if
v

w
isnotanedgeinthegraph,weassume
c
(
v

w
)=
0
.)Noticethat
thede˝nitionisasymmetric;edgesthatstartin
T
andendin
S
areunimportant.
329

10.MaximumFlows&MinimumCuts
The
minimumcutproblem
istocomputean
(
s
,
t
)
whosecapacityisas
smallaspossible.
Figure10.3.
An
(
s
,
t
)
-cutwithcapacity15.Eachedgeislabeledwithitscapacity.
Intuitively,theminimumcutisthecheapestwaytodisruptall˛owfrom
s
to
t
.Indeed,itisnothardtoshowthefollowingrelationshipbetween˛ows
andcuts:
Lemma10.1.
Let
f
be
any
feasible
(
s
,
t
)
ow,andlet
(
S
,
T
)
be
any
(
s
,
t
)

Thevalueof
f
isatmostthecapacityof
(
S
,
T
)
.Moreover,
j
f
j
=
k
S
,
T
k
ifand
onlyif
f
saturateseveryedgefrom
S
to
T
andavoidseveryedgefrom
T
to
S
.
Proof:
Chooseyourfavorite˛ow
f
andyourfavoritecut
(
S
,
T
)
,andthenfollow
thebouncinginequalities:
j
f
j
=
@
f
(
s
)
[byde˝nition]
=
X
v
2
S
@
f
(
v
)
[conservationconstraint]
=
X
v
2
S
X
w
f
(
v

w
)

X
v
2
S
X
u
f
(
u

v
)
[math,de˝nitionof
@
]
=
X
v
2
S
X
w
62
S
f
(
v

w
)

X
v
2
S
X
u
62
S
f
(
u

v
)
[removingedgesfrom
S
to
S
]
=
X
v
2
S
X
w
2
T
f
(
v

w
)

X
v
2
S
X
u
2
T
f
(
u

v
)
[de˝nitionofcut]

X
v
2
S
X
w
2
T
f
(
v

w
)
[because
f
(
u

v
)

0
]

X
v
2
S
X
w
2
T
c
(
v

w
)
[because
f
(
v

w
)

c
(
v

w
)
]
=
k
S
,
T
k
[byde˝nition]
Inthesecondstep,wearejustaddingzeros,because
@
f
(
v
)=
0
foreveryvertex
v
2
S
nf
s
g
.Inthefourthstep,weareremoving˛owvalues
f
(
x

y
)
where
330

10.3.TheMax˝ow-MincutTheorem
both
x
and
y
arein
S
,becausetheyappearinbothsums:positivelywhen
v
=
x
and
w
=
y
,andnegativelywhen
v
=
y
and
u
=
x
.
The˝rstinequalitiesinthisderivationisactuallyanequalityifandonlyif
f
avoidseveryedgefrom
T
to
S
.Similarly,thesecondinequalityisactuallyan
equalityifandonlyif
f
saturateseveryedgefrom
S
to
T
.
…
Thislemmaimmediatelyimpliesthatif
j
f
j
=
k
S
,
T
k
,then
f
mustbea
maximum˛ow,and
(
S
,
T
)
mustbeaminimumcut.
10.3TheMax˝ow-MincutTheorem
Surprisingly,inevery˛ownetwork,thereisafeasible
(
s
,
t
)
ow
f
andan
(
s
,
t
)

cut
(
S
,
T
)
suchthat
j
f
j
=
k
S
,
T
k
.Thisisthefamous
Max˛owcutTheorem
,
˝rstprovedbyLesterFord(ofsfame)andDelbertFulkersonin
1954andindependentlybyPeterElias,AmielFeinstein,andClaudeShannon
(ofinformatioandmazfame)in1956.
TheMax˝ocutTheorem.
Inevery˛ownetworkwithsource
s
and
target
t
,thevalueofthemaximum
(
s
,
t
)
owis
equal
tothecapacityofthe
minimum
(
s
,
t
)

FordandFulkersonprovedthistheoremasfollows.Fixagraph
G
,vertices
s
and
t
,andacapacityfunction
c
:
E
!
R

0
.Theproofwillbeeasierifweassume
that
G
is
reduced
,meaningthereisatmostoneedgebetweenanytwovertices
u
and
v
.Inparticular,either
c
(
u

v
)=
0
or
c
(
v

u
)=
0
.Thisassumptioniseasy
toenforce:Subdivideeachedge
u

v
in
G
withanewvertex
x
,replacing
u

v
withapath
u

x

v
,andde˝ne
c
(
u

x
)=
c
(
x

v
)=
c
(
u

v
)
.Themodi˝ed
graphhasthesamemaximum˛owvalueandminimumcutcapacityasthe
originalgraph.
Figure10.4.
Enforcingtheone-directionassumption.
Let
f
beanarbitraryfeasible
(
s
,
t
)
owin
G
.Wede˝neanewcapacity
function
c
f
:
V

V
!
R
,calledthe
residualcapacity
,asfollows:
c
f
(
u

v
)=
8
>
<
>
:
c
(
u

v
)

f
(
u

v
)
if
u

v
2
E
f
(
v

u
)
if
v

u
2
E
0
otherwise
331

10.MaximumFlows&MinimumCuts
Intuitively,theresidualcapacityofanedgeindicateshowmuch
more
˛owcanbe
pushedthroughthatedge.Because
f

0
and
f

c
,theseresidualcapacities
arealwaysnoegative.Itispossibletohave
c
f
(
u

v
)
>
0
evenif
u

v
isnotan
edgeintheoriginalgraph
G
.Thus,wede˝nethe
residualgraph
G
f
=(
V
,
E
f
)
,
where
E
f
isthesetofedgeswhoseresidualcapacityispositive.Mostresidual
graphsare
not
reduced;inparticular,if
0
<
f
(
u

v
)
<
c
(
u

v
)
,thentheresidual
graph
G
f
containsboth
u

v
anditsreversal
v

u
.
Figure10.5.
A˝ow
f
inaweightedgraph
G
andthecorrespondingresidualgraph
G
f
.
Nowwehavetwocasestoconsider:Eitherthereisadirectedpathfromthe
sourcevertex
s
tothetargetvertex
t
intheresidualgraph
G
f
,orthereisn't.
Firstsupposetheresidualgraph
G
f
containsadirectedpath
P
from
s
to
t
;we
call
P
an
augmentingpath
.Let
F
=
min
u

v
2
P
c
f
(
u

v
)
denotethemaximum
amountof˛owthatwecanpushthrough
P
.Wede˝neanew˛ow
f
0
:
E
!
R
(intheoriginalgraph)asfollows:
f
0
(
u

v
)=
8
>
<
>
:
f
(
u

v
)+
F
if
u

v
2
P
f
(
u

v
)

F
if
v

u
2
P
f
(
u

v
)
otherwise
Figure10.6.
Anaugmentingpathwithvalue
F
=
5
andtheresultingaugmented˝ow
f
0
.
Iclaimthatthisnew˛ow
f
0
isfeasiblewithrespecttotheoriginalcapacities
c
,
meaning
f
0

0
and
f
0

c
everywhere.Consideranedge
u

v
intheoriginal
graph
G
.Therearethreecasestoconsider.
‹
Iftheaugmentingpath
P
contains
u

v
,then
f
0
(
u

v
)=
f
(
u

v
)+
F
>
f
(
u

v
)

0
332

10.3.TheMax˝ow-MincutTheorem
because
f
isfeasible,and
f
0
(
u

v
)=
f
(
u

v
)+
F
byde˝nitionof
f
0

f
(
u

v
)+
c
f
(
u

v
)
byde˝nitionof
F
=
f
(
u

v
)+
c
(
u

v
)

f
(
u

v
)
byde˝nitionof
c
f
=
c
(
u

v
)
Duh.
‹
Iftheaugmentingpath
P
containsthereversededge
v

u
,then
f
0
(
u

v
)=
f
(
u

v
)

F
<
f
(
u

v
)

c
(
u

v
)
,
againbecause
f
isfeasible,and
f
0
(
u

v
)=
f
(
u

v
)

F
byde˝nitionof
f
0

f
(
u

v
)

c
f
(
v

u
)
byde˝nitionof
F
=
f
(
u

v
)

f
(
u

v
)
byde˝nitionof
c
f
=
0
Duh.
‹
Finally,ifneither
u

v
nor
v

u
isintheaugmentingpath,then
f
0
(
u

v
)=
f
(
u

v
)
,andtherefore
0

f
0
(
u

v
)

c
(
u

v
)
,because
f
isfeasible.
So
f
isindeedfeasible.
Finally,onlythe˝rstedgeintheaugmentingpathleaves
s
,whichimplies
j
f
0
j
=
j
f
j
+
F
>
j
f
j
.Thus,
f
0
isafeasible˛owwithlargervaluethan
f
.We
concludethatifthereisapathfrom
s
to
t
intheresidualgraph
G
f
,then
f
is
not
amaximum˛ow.
Ontheotherhand,supposetheresidualgraph
G
f
does
not
containadirected
pathfrom
s
to
t
.Let
S
bethesetofverticesthatarereachablefrom
s
in
G
f
,
andlet
T
=
V
n
S
.Thepartition
(
S
,
T
)
isclearlyan
(
s
,
t
)
Foreveryvertex
u
2
S
and
v
2
T
,wehave
c
f
(
u

v
)=(
c
(
u

v
)

f
(
u

v
))+
f
(
v

u
)=
0.
Thefeasibilityof
f
implies
c
(
u

v
)

f
(
u

v
)

0
and
f
(
v

u
)

0
,soinfactwe
musthave
c
(
u

v
)

f
(
u

v
)=
0
and
f
(
v

u
)=
0
.Inotherwords,our˛ow
f
saturateseveryedgefrom
S
to
T
andavoidseveryedgefrom
T
to
S
.Lemma
10.1
nowimpliesthat
j
f
j
=
k
S
,
T
k
,whichmeans
f
isamaximum˛owand
(
S
,
T
)
isaminimumcut.
Thiscompletestheproof!
…
333

10.MaximumFlows&MinimumCuts
10.4FordandFulkerson'saugmenting-pathalgorithm
FordandFulkerson'sproofoftheMax˛ocutTheoremimmediately
gestsanalgorithmtocomputemaximum˛ows:Startingwiththezero˛ow,
repeatedlyaugmentthe˛owalong
any
pathfrom
s
to
t
intheresidualgraph,
untilthereisnosuchpath.
Thisalgorithmhasanimportantbutstraightforwardcorollary:
IntegralityTheorem.
Ifallcapacitiesina˛ownetworkareintegers,then
thereisamaximum˛owsuchthatthe˛owthrougheveryedgeisaninteger.
Proof:
Wearguebyinductionthataftereachiterationoftheaugmentingpath
algorithm,all˛owvaluesandallresidualcapacitiesareintegers.
‹
Beforethe˝rstiteration,all˛owvaluesare
0
(whichisaninteger),and
allresidualcapacitiesaretheoriginalcapacities,whichareintegersby
de˝nition.
‹
Ineachlateriteration,theinductionhypothesisimpliesthatthecapacity
F
oftheaugmentingpathisaninteger,soaugmentingchangesthe˛owon
eachedge,andthereforetheresidualcapacityofeachedge,byaninteger.
Inparticular,eachiterationoftheaugmentingpathalgorithmincreasesthe
valueofthe˛owbyapositiveinteger.Itfollowsthatthealgorithmeventually
haltsandreturnsamaximum˛ow.
…
Ifeveryedgecapacityisaninteger,thenconservatively,theFn
algorithmhaltsafteratmost
j
f

j
iterations,where
f

istheactualmaximum
˛ow.Ineachiteration,wecanbuildtheresidualgraph
G
f
andperforma
whatevto˝ndanaugmentingpathin
O
(
E
)
time.Thus,inthis
setting,thealgorithmrunsin
O
(
E
j
f

j
)
timeintheworstcase.
JackEdmondsandRichardKarpobservedthatthisrunningtimeanalysis
isessentiallytight.ConsidertheodenetworkinFigure
10.7
,where
X
is
somelargeinteger.Themaximum˛owinthisnetworkisclearly
2
X
.However,
Fnmightalternatebetweenpushingoneunitof˛owalongthe
augmentingpath
s

u

v

t
andthenpushingoneunitof˛owalongthe
augmentingpath
s

v

u

t
,leadingtoarunningtimeof

(
X
)=

(
j
f

j
)
.
Figure10.7.
EdmondsandKarp'sbadexamplefortheFord-Fulkersonalgorithm.
334

10.4.FordandFulkerson'saugmenting-pathalgorithm
FordandFulkerson'salgorithmisusuallyfastinpractice,anditisalwaysfast
whenthemaximum˛owvalue
j
f

j
issmall,butwithoutfurtherconstraintson
theaugmentingpaths,thisis
not
ane˚cientalgorithminworstcase.Edmonds
andKarp'sbadexamplenetworkcanbedescribedusingonly
O
(
log
X
)
bits;thus,
therunningtimeofFnisactually
exponential
intheinputsize.
ª
IrrationalCapacities
Butwhatifthecapacitiesare
not
integers?Ifwemultiplyallthecapacitiesby
thesame(positive)constant,themaximum˛owincreaseseverywherebythe
sameconstantfactor.Itfollowsthatifalltheedgecapacitiesare
rational
,then
theFnalgorithmeventuallyhalts,althoughstillinexponentialtime
(inthenumberofbitsusedtodescribedtheinput).
However,ifweallow
irrational
capacities,thealgorithmcanactuallyloop
forever,always˝ndingsmallerandsmalleraugmentingpaths.Worseyet,this
in˝nitesequenceofaugmentationsmaynotevenconvergetothemaximum˛ow,
oreventoasigni˝cantfractionofthemaximum˛ow!Thesmallestnetwork
thatexhibitsthisbadbehaviorwasdiscoveredbyUriZwickin1993.
2
ConsidertheodenetworkshowninFigure
10.8
.Sixofthenineedges
havesomelargeintegercapacity
X
,twohavecapacity
1
,andonehascapacity
˚
=(
p
5

1
)
=
2
ˇ
0.618034
,chosensothat
1

˚
=
˚
2
.Toprovethatthe
Fnalgorithmcangetstuck,wecanwatchtheresidualcapacitiesof
thethreehorizontaledgesasthealgorithmprogresses.(Theresidualcapacities
oftheothersixedgeswillalwaysbeatleast
X

3
.)
Figure10.8.
UriZwick'snon-terminating˝owexample,andthreeaugmentingpaths.
SupposetheFnalgorithmstartsbychoosingthecentrala
mentingpath,shownatthetopofFigure
10.8
.Thethreehorizontaledges,in
2
In1962,FordandFulkersondescribedamorecomplexnetwork,with10verticesand48
edges,withthesamebadbehavior.
335

10.MaximumFlows&MinimumCuts
orderfromlefttoright,nowhaveresidualcapacities
1
,
0
,and
˚
.Suppose
inductivelythatthehorizontalresidualcapacitiesare
˚
k

1
,
0
,and
˚
k
forsome
noegativeinteger
k
.
1.
Augmentalongpath
B
,adding
˚
k
tothe˛ow;theresidualcapacitiesare
now
˚
k
+
1
,
˚
k
,and
0
.
2.
Augmentalongpath
C
,adding
˚
k
tothe˛ow;theresidualcapacitiesare
now
˚
k
+
1
,
0
,and
˚
k
.
3.
Augmentalongpath
B
,adding
˚
k
+
1
tothe˛ow;theresidualcapacities
arenow
0
,
˚
k
+
1
,and
˚
k
+
2
.
4.
Augmentalongpath
A
,adding
˚
k
+
1
tothe˛ow;theresidualcapacities
arenow
˚
k
+
1
,
0
,and
˚
k
+
2
.
Itfollowsbyinductionthatafter
4
n
+
1
augmentationsteps,thehorizontaledges
haveresidualcapacities
˚
2
n

2
,
0
,and
˚
2
n

1
.Asthenumberofaugmentations
growstoin˝nity,thevalueofthe˛owconvergesto
1
+
2
1
X
i
=
1
˚
i
=
1
+
2
1

˚
=
4
+
p
5
<
7,
eventhoughthemaximum˛owvalueisclearly
2
X
+
1
˛
7
.
Practicareadersmightwonderwhyanyoneshouldcareabout
irrationalcapacities;afterall,computerscan'trepresentanythingbut(small)
integersor(smalldyadic)rationalsexactly.Goodquestion!Themathematician's
answeristhattherestrictiontointegercapacitiesisliterally
arti˝cial
;it'san
artifact
ofdigitalcomputationalhardware(orperhapstheotherwiseirrelevant
lawsofphysics),notaninherentfeatureoftheabstractcomputationalproblem.
Butamorepracticalreasonisthatthebehaviorofthealgorithmwithirrational
inputstellsussomethingaboutitswsebehavior
inpractice
with˛
pointcapacitile!Evenwithveryreasonablecapacities,acareless
implementationofFncouldenteranin˝niteloop,simplybecause
ofro˙error,withoutevercomingclosetothecorrectanswer.
10.5CombiningandDecomposingFlows
Flowsarenormallyde˝nedasfunctionsontheedgesofagraphsatisfyingcertain
constraintsatthevertices.However,˛owshaveasecondcharacterizationthat
ismorenaturalandusefulincertaincontexts.
Consideranarbitrarygraph
G
withsourcevertex
s
andtargetvertex
t
.Fix
anytwo
(
s
,
t
)
ows
f
and
g
andanytworealnumbers

and

,andconsider
thefunction
h
:
E
!
R
de˝nedbysetting
h
(
u

v
)
:
=


f
(
u

v
)+


g
(
u

v
)
336

10.5.CombiningandDecomposingFlows
foreveryedge
u

v
;wecanwritethisde˝nitionmoresimplyas
h
=

f
+

g
.
Straightforwardde˝nitiosingimpliesthat
h
isalsoan
(
s
,
t
)
owwithvalue
j
h
j
=

j
f
j
+

j
g
j
.Moregenerally,anylinearcombinationof
(
s
,
t
)
owsisalso
an
(
s
,
t
)
ow.
Itturnsoutthatany
(
s
,
t
)
owcanbewrittenasaweightedsumof˛ows
withaspecialstructure.Foranydirectedpath
P
from
s
to
t
,wede˝nea
corresponding
path˛ow
asfollows:
P
(
u

v
)=
8
>
<
>
:
1
if
u

v
2
P
,

1
if
v

u
2
P
,
0
otherwise.
Straightforwardde˝nitiosingimpliesthatthefunction
P
:
E
!
R
isindeed
an
(
s
,
t
)
owwithvalue
1
.Iamdeliberatelyoverloadingthevariable
P
tomean
boththepath(asequenceofverticesanddirectededges)andtheunit˛ow
alongthatpath.
Similarly,foranydirectedcycle
C
,wede˝neacorresponding
cycle˛ow
by
setting
C
(
u

v
)=
8
>
<
>
:
1
if
u

v
2
C
,

1
if
v

u
2
C
,
0
otherwise.
Again,itiseasytoverifythat
C
:
E
!
R
isan
(
s
,
t
)
owwithvaluezero.
Ourearlierargumentimpliesthatanylinearcombinationofpath˛owsand
cycle˛owsisanother˛ow;thisweightedsumiscalleda
˛owdecomposition
.
Moreover,
every
noegative˛owhasa˛owdecompositionwiththefollowing
specialstructure.
FlowDecompositionTheorem.
Everynoegative
(
s
,
t
)
ow
f
canbe
tenasapositivelinearcombinationofdirected
(
s
,
t
)
anddirectedcycles.
Moreover,adirectededge
u

v
appearsinatleastoneofthesepathsorcycles
ifandonlyif
f
(
u

v
)
>
0
,andthetotalnumberofpathsandcyclesisatmost
thenumberofedgesinthenetwork.
Proof:
Weprovethetheorembyinductiononthenumberofedgescarrying
noero˛ow,intuitivelybyrunningtheFnalgorithmbackward.
Aslongasatleastoneedgeinthegraphcarriespositive˛ow,wecan˝ndeither
an
(
s
,
t
)
oradirectedcyclethatcarries˛ow.Subtractingasmuch˛ow
aspossiblefromthatpathorcycleemptiesatleastoneedge,sotheRecursion
Fairycangiveustherestofthedecomposition.
Toformalizethisargument,we˝rstconsiderthespecialcaseof
circulations
;
theseare˛owswithvalue
0
,where˛owisconservedat
every
vertex.Fixan
337

10.MaximumFlows&MinimumCuts
Figure10.9.
Decomposingacirculationintoweighteddirectedcycles.
arbitrarycirculation
f
inanarbitrary˛ownetwork,andlet
#
f
denotethe
numberofedges
u

v
suchthat
f
(
u

v
)
>
0
.Weprovethat
f
canbedecomposed
intoapositivelinearcombinationofatmost
max
f
0,#
f

1
g
cycles,byinduction
on
#
f
.Therearethreecasestoconsider:
‹
If
#
f
=
0
,then
f
isvacuouslyalinearcombinationofzerocycles.
‹
Suppose
f
(
u

v
)
>
0
forasingledirectedcycleofedges
u

v
.Then
#
f

2
,
and
f
istriviallyalinearcombinationofonecycle.
‹
Otherwise,pickanarbitraryedge
u

v
with
f
(
u

v
)
>
0
.Consideran
trarywalk
v
0

v
1

v
2


with
v
0
=
u
and
v
1
=
v
,suchthat
f
(
v
i

1

v
i
)
>
0
foreveryindex
i
.Theconservationconstraintimpliesthateveryvertexwith
incoming˛owalsohasoutgoing˛ow,sowecanmakethiswalkarbitrarily
long;inparticular,thewalkmusteventuallyvisitsomevertexmorethan
once.Let
k
bethesmallestindexsuchthat
v
j
=
v
k
forsomeindex
j
<
k
.
Thesubwalk
v
j

v
j

1



v
k
isasimpledirectedcycle
C
.
De˝ne
F
:
=
min
e
2
C
f
(
e
)
,andconsiderthefunction
f
0
:
=
f

F

C
,or
moreverbosely,
f
0
(
u

v
)
:
=
(
f
(
u

v
)

F
if
u

v
2
C
,
f
(
u

v
)
otherwise.
Straightforwardde˝nitiosingshowsthat
f
0
isanotherfeasible
lationin
G
.Thereisatleastoneedge
e
2
C
suchthat
f
(
e
)=
F
,and
therefore
f
0
(
e
)=
0
,whichimplies
#
f
0

#
f

1
.Sincefeweredgescarry
˛owin
f
0
thanin
f
,theRecursionFairycandecompose
f
0
intoatmost
#
f
0

1

#
f

2
cycles.Adding
F
unitsof˛owaroundcycle
C
givesusa
˛owdecompositionfor
f
;moresuccinctly:
f
=
f
0
+
F

C
.
338

10.5.CombiningandDecomposingFlows
Nowlet
f
beanarbitrary
(
s
,
t
)
owinanarbitrary˛ownetwork,suchthat
j
f
j
>
0
.Addanedge
t

s
tothenetwork,andde˝neacirculation
f
0
bysetting
f
0
(
t

s
)=
j
f
j
and
f
0
(
u

v
)=
f
(
u

v
)
foreveryoriginaledge
u

v
;observethat
#
f
0
=
#
f
+
1

2
.Thepreviousargumentimpliesthatthecirculation
f
0
isa
positivelinearcombinationofatmost
#
f
0

1
directedcycles.Deletingtheedge
t

s
givesusadecompositionoftheoriginal˛ow
f
intoatmost
#
f
0

1
=
#
f
pathsandcycles.Speci˝cally,cyclesin
f
0
thatinclude
t

s
become
(
s
,
t
)

in
f
,andcyclesin
f
0
thatdonotinclude
t

s
remaincyclesin
f
.
…
TheproofoftheFlowDecompositionTheoremimpliesstrongerresultsin
twointerestingspecialcases.
‹
Anycirculationcanbedecomposedintoaweightedsumofcycles;nopaths
arenecessary.
‹
Any
acyclic
(
s
,
t
)
owcanbedecomposedintoaweightedsumof
(
s
,
t
)

nocyclesarenecessary.
Moreover,bycanceling˛owcyclesuntilnomoreremain,wecantransformany
˛owintoanacyclic˛owwiththesamevalue.Inparticular,every˛ownetwork
supportsamaximum
(
s
,
t
)
owthatisacyclic.
Theproofalsoimmediatelytranslatesdirectlyintoanalgorithm,similar
toFn,todecomposeany
(
s
,
t
)
owintopathsandcycles.The
algorithmrepeatedlyseekseitheradirected
(
s
,
t
)
oradirectedcycleinthe
remaining˛ow,andthensubtractsasmuch˛owaspossiblealongthatpathor
cycle,untilthe˛owisempty.Wecan˝nda˛owpathorcyclein
O
(
V
)
timeas
follows:
‹
Ifanyedgeleaving
s
haspositive˛ow,followanarbitrarywalkfrom
s
inthe
˛owgraphuntiliteitherreaches
t
(givingusa˛owpath)orreachessome
vertexforthesecondtime(givingusa˛owcycle).
‹
Ifnoedgeleaving
s
haspositive˛ow,˝ndanyothervertex
v
withpositive
out˛ow,andfollowanarbitrarywalkfrom
v
inthe˛owgraphuntilitreaches
somevertexforthesecondtime(givingusa˛owcycle).
Inbothcases,theconservationconstraintimpliesthatthisalgorithmwillnever
getstuck.Eachiterationtakes
O
(
V
)
timeandremovesatleastoneedgefrom
the˛owgraph;thus,theentiredecompositionalgorithmrunsin
O
(
VE
)
time
.
Flowdecompositionsprovideanaturallowerboundontherunningtimeof
anymaximowalgorithmthatbuildsthe˛owonepathorcycleatatime.
Every˛owcanbedecomposedintoatmost
E
pathsandcycles,eachofwhichuses
atmost
V
edges,sotheoverallcomplexityofthe˛owdecompositionis
O
(
VE
)
.
Moreover,itiseasytoconstruct˛owsforwhich
every
˛owdecomposition
hascomplexity

(
VE
)
.Thus,anymaximowalgorithmthatexplicitly
constructsa˛owonepathorcycleataparticular,anyimplementation
339

10.MaximumFlows&MinimumCuts
ofFordandFulkerson'saugmentingpathausttake

(
VE
)
timein
theworstcase.
10.6EdmondsandKarp'sAlgorithms
FordandFulkerson'salgorithmdoesnotspecifywhichpathintheresidual
graphtoaugment;thepoorwsebehaviorofthealgorithmcanbeblamed
onpoorchoicesfortheaugmentingpath.Intheearly1970s,JackEdmondsand
RichardKarppublishedtwonaturalrulesforchoosingaugmentingpaths,both
ofwhichledtomoree˚cientalgorithms.
FattestAugmentingPaths
EdmondsandKarp's˝rstruleisessentiallyagreedyalgorithm:
Choosetheaugmentingpathwithlargestbottleneckvalue.
It'snothardtoshowthatthemaximeneck
(
s
,
t
)
inadirectedgraph
canbecomputedin
O
(
E
log
V
)
timeusingatraversal,similarto
Jarník'sminimalgorithmorDijkstra'ssalgorithm.
Thealgorithmgrowsadirectedtree
T
,rootedat
s
,onevertexatatime,by
repeatedlyaddingthepacityedgeleaving
T
to
T
,until
T
contains
apathfrom
s
to
t
.Alternately,onecouldemulateKruskal'sa
edgesoneatatimeindecreasingcapacityorderuntilthereisapathfrom
s
to
t
lthoughthisapproachislesse˚cient,atleastwhenthegraphisdirected.
Tocompletetheanalysisofthe˛owalgorithm,weneedan
upperboundonthenumberofiterationsbeforethealgorithmhalts.Infact,
forarbitraryrealcapacities,thealgorithmmay
never
halt;seeExercise
18
.For
integercapacities,however,wecanboundthenumberofiterationsasafunction
ofthemaximum˛owvalue
j
f

j
,asfollows.
Let
f
beany˛owin
G
,andlet
f
0
bethemaximum˛ow
inthecurrent
residualgraph
G
f
.(Atthebeginningofthealgorithm,
G
f
=
G
and
f
0
=
f

.)
Wehavealreadyprovedthat
f
0
canbedecomposedintoatmost
E
pathsand
cycles.Asimpleaveragingargumentimpliesthatatleastoneofthepathsinthis
decompositionmustcarryatleast
j
f
0
j
=
E
unitsof˛ow.Itfollowsimmediately
thatthe
fattest
(
s
,
t
)
in
G
f
carriesatleast
j
f
0
j
=
E
unitsof˛ow.
Thus,augmenting
f
alongthemaximeneckpathin
G
f
multiplies
thevalueoftheremainingmaximum˛owin
G
f
byafactorofatmost
1

1
=
E
.
Inotherwords,theresidualmaximum˛owvalue
decaysexponentially
withthe
numberofiterations.After
E

ln
j
f

j
iterations,themaximum˛owvaluein
G
f
isatmost
j
f

j
(
1

1
=
E
)
E

ln
j
f

j
<
j
f

j
e

ln
j
f

j
=
1.
340

10.6.EdmondsandKarp'sAlgorithms
(That'sEuler'sconstant
e
,nottheedge
e
.Sorry.)Inparticular,after
E

ln
j
f

j
iterations,theresidualmaximum˛owvalueislessthan
1
.
Ifallcapacitiesare
integers
,theresidualmaximum˛owvalueisalsoaninteger,soitmustbe
0
;in
otherwords,
f
isamaximum˛ow!
Weconcludethatforgraphswithintegercapacities,theEdmo
attestalgorithmrunsin
O
(
E
2
log
E
log
j
f

j
)
time.Unlikethewse
runningtimeofrawFn,thistimeboundisactuallyapolynomial
functionoftheinputsize.
JustliketheoriginalFnalgorithm,the"fattestpath"algorithm
cangetstuckinanin˝niteloopinnetworkswitharbitraryrealcapacities.
However,ouranalysisimpliesthatevenifthealgorithmneverhalts,itmaintains
a˛ow
f
thatapproachesamaximum˛owinthelimit.
ShortestAugmentingPaths
ThesecondEdmorulewasactuallyproposedasapracticalheuristic
byFordandFulkersonintheiroriginalmaximowpaper;avariantofthis
rulewasindependentlyproposedin1970bytheRussianmathematicianYe˝m
Dinitz.
3
Choosetheaugmentingpathwiththesmallestnumberofedges.
Theshortestaugmentingpathcanbefoundin
O
(
E
)
timebyrunning
searchintheresidualgraph.Surprisingly,theresultingalgorithmhaltsaftera
polynomialnumberofiterations,independentoftheactualedgecapacities!
Theproofofthispolynomialupperboundreliesontwoobservations
abouttheevolutionoftheresidualgraph.Let
f
i
bethecurrent˛owafter
i
augmentationsteps,let
G
i
bethecorrespondingresidualgraph.Inparticular,
f
0
iszeroeverywhereand
G
0
=
G
.Foreachvertex
v
,let
level
i
(
v
)
denotethe
unweightedsdistancefrom
s
to
v
in
G
i
,orequivalently,the
level
of
v
inasearchtreeof
G
i
rootedat
s
.Inparticular,ifthereisno
pathfrom
s
to
v
in
G
i
,then
level
i
(
v
)=
1
(because
min
?
=
1
).
Our˝rstobservationisthatthelevelofavertexcanonlyincreaseovertime.
Lemma10.2.
level
i
(
v
)

level
i

1
(
v
)
forallvertices
v
andallintegers
i
>
0
.
Proof:
Fixanarbitrarypositiveinteger
i
>
0
andanarbitraryvertex
v
.We
provetheclaimbyinductionon
level
i
(
v
)
(and
not
ontheinteger
i
).Asan
inductivehypothesis,assumeforeveryvertex
u
suchthat
level
i
(
u
)
<
level
i
(
v
)
,
that
level
i
(
u
)

level
i

1
(
u
)
.Therearethreecasestoconsider.
3
Speci˝cally,Dinitzdiscoveredamorecomplexmaximowalgorithm,whilehewas
astudentinanalgorithmsclasstaughtbyGeorgyAdelsoVelsky(theAVinAVLtrees),in
responsetoanassexercise.Dinitz'salgorithmalsopushes˛owsalongshortestpaths,but
withadditionalbookkeepingtoreducetherunningtimefrom
O
(
VE
2
)
to
O
(
V
2
E
)
.
341

10.MaximumFlows&MinimumCuts
‹
If
v
=
s
,weimmediatelyhave
level
i
(
s
)=
level
i

1
(
s
)=
0
.
‹
Ifthereisnopathfrom
s
to
v
in
G
i
,then
level
i
(
v
)=
1
level
i

1
(
v
)
.
‹
Otherwise,let
s



u

v
beanyunweightedshortestpathfrom
s
to
v
in
thegraph
G
i
.Becausethisisashortestpath,wehave
level
i
(
v
)=
level
i
(
u
)+
1
,
sotheinductivehypothesisimplies
level
i
(
u
)

level
i

1
(
u
)
.Tocompletethe
proof,weneedtoshowthat
level
i

1
(
u
)

level
i

1
(
v
)

1
.Wehavetwo
subcasestoconsider.

If
u

v
isanedgein
G
i

1
,then
level
i

1
(
v
)

level
i

1
(
u
)+
1
,becausethe
levelsarede˝nedbytraversal.

Ontheotherhand,if
u

v
isnotanedgein
G
i

1
,thenitsreversal
v

u
mustbeanedgeinthe
i
thaugmentingpath,whichbyde˝nition
istheshortestpathfrom
s
to
t
in
G
i

1
.Itfollowsthat
level
i

1
(
v
)=
level
i

1
(
u
)

1

level
i

1
(
u
)
+
1
.
Inbothsubcases,weconcludethat
level
i
(
v
)=
level
i
(
u
)+
1

level
i

1
(
u
)+
1

level
i

1
(
v
)
.
…
Wheneverweaugmentthe˛ow,thebottleneckedgeintheaugmenting
pathdisappearsfromtheresidualgraph,andsomeedgesinthe
reversal
ofthe
augmentingpathmayppear.Oursecondobservationisthatanedge
cannotappearordisappeartoomanytimes.
Lemma10.3.
DuringtheexecutionoftheEdmons
pathalgorithm,eachedge
u

v
disappearsfromtheresidualgraph
G
f
atmost
V
=
2
times.
Proof:
Suppose
u

v
isintworesidualgraphs
G
i
and
G
j
+
1
,butnotinanyof
theintermediateresidualgraphs
G
i
+
1
,...,
G
j
,forsome
i
<
j
.Then
u

v
must
beinthe
i
thaugmentingpath,so
level
i
(
v
)=
level
i
(
u
)+
1
,and
v

u
mustbe
onthe
j
thaugmentingpath,so
level
j
(
v
)=
level
j
(
u
)

1
.Thepreviouslemma
impliesthat
level
j
(
u
)=
level
j
(
v
)+
1

level
i
(
v
)+
1
=
level
i
(
u
)+
2.
Inotherwords,betweenthedisappearanceandreappearanceof
u

v
,the
distancefrom
s
to
u
increasedbyatleast
2
.Becauseeveryleveliseitherless
than
V
orin˝nite,thenumberofdisappearancesisatmost
V
=
2
.
…
Nowwecanderiveanupperboundonthenumberofiterations.Becauseeach
edgedisappearsatmost
V
=
2
times,thereareatmost
EV
=
2
edgedisappearances
overall.Butatleastoneedgedisappearsoneachiteration,sothealgorithm
musthaltafteratmost
EV
=
2
iterations.Finally,eachiterationrequires
O
(
E
)
time,sotheoverallalgorithmrunsin
O
(
VE
2
)
time
.
342

10.7.FurtherProgress
10.7FurtherProgress
Thisisnowhereneartheendofthestoryformaximowalgorithms.Decades
offurtherresearchhaveledtoseveralfasteralgorithms,someofwhichare
summarizedinFigure
10.10
.
4
Allthelistedalgorithmslistedcomputea
maximum˛owinseveraliterations.Mostofthesealgorithmshavetwovariants:
asimplerversionthatperformseachiterationbybruteforce,andafaster
variantthatusessophisticateddatastructurestomaintainaspanningtreeof
the˛ownetwork,sothateachiterationcanbeperformed(andthespanning
treeupdated)inlogarithmictime.Thereisnoreasontobelievethatthebest
algorithmsknownsofarareoptimal;indeed,maximum˛owsarestillavery
activeareaofresearch.
TechniqueDirectWithdynamictreesSource(s)
Blocking˝ow
O
(
V
2
E
)
O
(
VE
log
V
)
[Dinitz;Karzanov;EvenandItai;
SleatorandTarjan]
Networksimplex
O
(
V
2
E
)
O
(
VE
log
V
)
[Dantzig;GoldfarbandHao;
Goldberg,Grigoriadis,andTarjan]
Push-relabel(generic)
O
(
V
2
E
)
[GoldbergandTarjan]
Push-relabel(FIFO)
O
(
V
3
)
O
(
VE
log
(
V
2
=
E
))
[GoldbergandTarjan]
Push-relabel(highestlabel)
O
(
V
2
p
E
)
[CheriyanandMaheshwari;Tunçel]
Push-relabel-addgames
O
(
VE
log
E
=
(
V
log
V
)
V
)
[CheriyanandHagerup;
King,Rao,andTarjan]
Pseudo˝ow
O
(
V
2
E
)
O
(
VE
log
V
)
[Hochbaum]
Pseudo˝ow(highestlabel)
O
(
V
3
)
O
(
VE
log
(
V
2
=
E
))
[HochbaumandOrlin]
IncrementalBFS
O
(
V
2
E
)
O
(
VE
log
(
V
2
=
E
))
[Goldberg,Held,Kaplan,Tarjan,
andWerneck]
Compactnetworks
O
(
VE
)
[Orlin]
Figure10.10.
Severalpurelycombinatorialmaximum-˝owalgorithmsandtheirrunningtimes.
Thefastestknown(purelycombinatorial)maximowalgorithm,
nouncedbyJamesOrlinin2012,runsin
O
(
VE
)
time
,exactlymatchingthe
wsecomplexityofa˛owdecomposition.ThedetailsofOrlin'salgorithm
arefarbeyondthescopeofthisbook;inadditiontohisownnewtechniques,
Orlinusesseveralolderalgorithmsanddatastructuresasblackboxes,mostof
whicharethemselvesquitecomplicated.Inparticular,Orlin'salgorithmdoes
not
constructanexplicit˛owdecomposition;infact,forgraphswithonly
O
(
V
)
edges,anextensionofhisalgorithmactuallyrunsinonly
O
(
V
2
=
log
V
)
time!
Nevertheless,forpurposesofanalyzingalgorithmsthat
use
maximum˛ows,
4
Tokeepthistableshort,Ihavedeliberatelyomittedalgorithmswhoserunningtimedepends
onedgecapacitiesorthemaximum˛owvalue.Evenwiththisrestriction,thelistisembarrassingly
incomplete!
343

10.MaximumFlows&MinimumCuts
thisisthetimeboundyoushouldcite.Sowritethefollowingsentenceonyour
cheatsheetsandciteitinyourhomeworks:
Maximum˛owscanbecomputedin
O
(
VE
)
time.
Finally,fastermaximowalgorithmsareknownfor
pacity
n
works,whereeveryedgehascapacity
1
.In1973,AlexanderKarzanovproved
thatDinitz'sblowa˝rstalgorithmlistedinthetable
abovin
O
(
min
f
V
2
=
3
,
E
1
=
2
g
E
)
timeinthissetting.(Thistimebound
appearstobreakthe

(
VE
)
˛owdecompositionbarrier,butinfactKarzanov's
analysisimpliesthatany˛owinapacitynetworkcanbedecomposed
intopathswithtotalcomplexity
O
(
min
f
V
2
=
3
,
E
1
=
2
g
E
)
.)Thiswasthefastest
algorithmknowninthissettingforfourdecades.Karzanov'srecordwas˝nally
brokenin2013,whenAleksanderM¡dryannouncedatrulyremarkablealgorithm
thatcomputesmaximum˛owsinpacitynetworksin
O
(
E
10
=
7
polylog
E
)
time.Again,thedetailsofM¡dry'salgorithmarefarbeyondthescopeofthis
book,orindeedtheexpertiseofitsauthor.
Exercises
0.
Supposeyouaregivenadirectedgraph
G
=(
V
,
E
)
,twovertices
s
and
t
,
acapacityfunction
c
:
E
!
R
+
,andasecondfunction
f
:
E
!
R
.Describe
analgorithmtodeterminewhether
f
isamaximum
(
s
,
t
)
owin
G
.
1.
Let
f
and
f
0
betwofeasible
(
s
,
t
)
owsina˛ownetwork
G
,suchthat
j
f
0
j
>
j
f
j
.Provethatthereisafeasible
(
s
,
t
)
owwithvalue
j
f
0
jj
f
j
inthe
residualnetwork
G
f
.
2.
Let
u

v
beanarbitraryedgeinanarbitrary˛ownetwork
G
.Provethatif
thereisaminimum
(
s
,
t
)

(
S
,
T
)
suchthat
u
2
S
and
v
2
T
,thenthereis
no
minimumcut
(
S
0
,
T
0
)
suchthat
u
2
T
0
and
v
2
S
0
.
3.
Let
(
S
,
T
)
and
(
S
0
,
T
0
)
beminimum
(
s
,
t
)
insome˛ownetwork
G
.Prove
that
(
S
\
S
0
,
T
[
T
0
)
and
(
S
[
S
0
,
T
\
T
0
)
arealsominimum
(
s
,
t
)
in
G
.
4.
Let
G
bea˛ownetworkthatcontainsanopposingpairofedges
u

v
and
v

u
,bothwithpositivecapacity.Let
G
0
bethe˛ownetworkobtainedfrom
G
bydecreasingthecapacitiesofbothoftheseedgesby
min
f
c
(
u

v
)
,
c
(
v

u
)
g
.
Inotherwords:
‹
If
c
(
u

v
)
>
c
(
v

u
)
,changethecapacityof
u

v
to
c
(
u

v
)

c
(
v

u
)
anddelete
v

u
.
344

Exercises
‹
If
c
(
u

v
)
<
c
(
v

u
)
,changethecapacityof
v

u
to
c
(
v

u
)

c
(
u

v
)
anddelete
u

v
.
‹
Finally,if
c
(
u

v
)=
c
(
v

u
)
,deleteboth
u

v
and
v

u
.
Figure10.11.
Enforcingtheone-directionassumption.
(a)
Provethateverymaximum
(
s
,
t
)
owin
G
0
isalsoamaximum
(
s
,
t
)
ow
in
G
.(Thus,bysimplifying
every
opposingpairofedgesin
G
,weobtain
anewreduced˛ownetworkwiththesamemaximum˛owvalueas
G
.)
(b)
Provethateveryminimum
(
s
,
t
)
in
G
isalsoaminimum
(
s
,
t
)

in
G
0
andviceversa
.
(c)
Provethatthereisatleastonemaximum
(
s
,
t
)
owin
G
thatis
not
a
maximum
(
s
,
t
)
owin
G
0
.
5.
(a)
Describeane˚cientalgorithmtodeterminewhetheragiven˛ow
networkcontainsa
unique
maximum
(
s
,
t
)
ow.
(b)
Describeane˚cientalgorithmtodeterminewhetheragiven˛ow
networkcontainsa
unique
minimum
(
s
,
t
)

(c)
Describea˛ownetworkthatcontainsauniquemaximum
(
s
,
t
)
owbut
doesnotcontainauniqueminimum
(
s
,
t
)

(d)
Describea˛ownetworkthatcontainsauniqueminimum
(
s
,
t
)
but
doesnotcontainauniquemaximum
(
s
,
t
)
ow.
6.
An
(
s
,
t
)
owinanetwork
G
is
acyclic
iftherearenodirectedcycleswhere
everyedgehasapositive˛owvalue;thatis,thesubgraphofedgeswith
positive˛owvalueisadag.
(a)
Describeandanalyzeanalgorithmtocomputean
acyclic
maximum
(
s
,
t
)
owinagiven˛ownetwork.Youralgorithmshouldhavethesame
asymptoticrunningtimeasFn.
(b)
Describeandanalyzeanalgorithmtodeterminewhether
every
maximum
(
s
,
t
)
owinagiven˛ownetworkisacyclic.
7.
Let
G
=(
V
,
E
)
bea˛ownetworkinwhicheveryedgehascapacity
1
and
thesdistancefrom
s
to
t
isatleast
d
.
345

10.MaximumFlows&MinimumCuts
(a)
Provethatthevalueofthemaximum
(
s
,
t
)
owisatmost
E
=
d
.
(b)
Nowsupposethat
G
is
simple
,meaningthatforallvertices
u
and
v
,there
isatmostoneedgefrom
u
to
v
.(Flownetworkscanhaveparalleledges.)
Provethatthevalueofthemaximum
(
s
,
t
)
owisatmost
O
(
V
2
=
d
2
)
.
[Hint:HowmanynodesareintheaveragelevelofaBFStreerooted
at
s
?]
8.
Supposewearegivena˛ownetwork
G
=(
V
,
E
)
inwhicheveryedgehas
capacity
1
,togetherwithaninteger
k
.Describeandanalyzeanalgorithm
toidentify
k
edgesin
G
suchthatafterdeletingthose
k
edges,thevalueof
themaximum
(
s
,
t
)
owintheremaininggraphisassmallaspossible.
9.
Theanalysisinourproofofthe
FlowDecompositionTheorem
canbe
tightened.Let
G
=(
V
,
E
)
beanarbitrary˛ownetwork,andlet
f
bean
arbitrary
(
s
,
t
)
owin
G
.
(a)
Provethatif
j
f
j
=
0
,then
f
istheweightedsumofatmost
E

V
+
1
directedcycles,where
f
(
e
)
>
0
foreveryedge
e
ineachofthesecycles.
(b)
Provethatif
j
f
j
>
0
,then
f
istheweightedsumofatmost
E

V
+
2
directedpathsanddirectedcycles,where
f
(
e
)
>
0
foreveryedge
e
in
eachofthesepathsandcycles.
(c)
Provethatbothofthepreviousupperboundsaretight:Therearegraphs
inwhichsomecirculationscannotbedecomposedintolessthan
E

V
+
1
cycles,andsome˛owscannotbedecomposedintolessthan
E

V
+
2
pathsandcycles.
[Hint:Thisiseasy.]
¨
10.
Ourobservationthatanylinearcombinationof
(
s
,
t
)
owsisitselfan
(
s
,
t
)

˛owimpliesthatthesetofall(notnecessarilyfeasible)
(
s
,
t
)
owsinany
graphactuallyde˝neareal
vectorspace
,whichwecancallthe
˛owspace
of
thegraph.
(a)
Provethatthe˛owspaceofanyconnectedgraph
G
=(
V
,
E
)
has
sion
E

V
+
2
.
(b)
Let
T
beanyspanningtreeof
G
.Provethatthefollowingcollectionof
pathsandcyclesde˝neabasisforthe˛owspace:
‹
Theuniquepathin
T
from
s
to
t
;
‹
Theuniquecyclein
T
[f
e
g
,foreveryedge
e
62
T
.
(c)
Let
T
beanyspanningtreeof
G
,andlet
F
betheforestobtainedby
deletinganysingleedgein
T
.Provethatthefollowingcollectionof
pathsandcyclesde˝neabasisforthe˛owspace:
‹
Theuniquepathin
F
[f
e
g
from
s
to
t
,foreveryedge
e
62
F
thathas
oneendpointineachcomponentof
F
;
346

Exercises
‹
Theuniquecyclein
F
[f
e
g
,foreveryedge
e
62
F
withbothendpoints
inthesamecomponentof
F
.
(d)
Proveordisprovethefollowingclaim:Everyconnected˛ownetwork
hasa˛owbasisthatconsistsentirelyofsimplepathsfrom
s
to
t
.
11.
Cutsaresometimesde˝nedassubsetsoftheedgesofthegraph,insteadof
aspartitionsofitsvertices.Inthisproblem,youwillprovethatthesetwo
de˝nitionsare
almost
equivalent.
Wesaythatasubset
X
of(directed)edges
separates
s
and
t
ifevery
directedpathfrom
s
to
t
containsatleastone(directed)edgein
X
.Forany
subset
S
of
vertices
,let

S
denotethesetofdirectededgesleaving
S
;thatis,

S
:
=
f
u

v
j
u
2
S
,
v
62
S
g
.
(a)
Provethatif
(
S
,
T
)
isan
(
s
,
t
)
then

S
separates
s
and
t
.
(b)
Let
X
beanarbitrarysubsetofedgesthatseparates
s
and
t
.Provethat
thereisan
(
s
,
t
)

(
S
,
T
)
suchthat

S

X
.
(c)
Let
X
bea
minimal
subsetofedgesthatseparates
s
and
t
.(Suchaset
ofedgesissometimescalleda
bond
.)Provethatthereisan
(
s
,
t
)

(
S
,
T
)
suchthat

S
=
X
.
12.
Supposeinsteadofcapacities,weconsidernetworkswhereeachedge
u

v
hasanoegative
demand
d
(
u

v
)
.Nowan
(
s
,
t
)
ow
f
is
feasible
ifand
onlyif
f
(
u

v
)

d
(
u

v
)
foreveryedge
u

v
.(Feasible˛owvaluescannow
bearbitrarilylarge.)Anaturalprobleminthissettingisto˝ndafeasible
(
s
,
t
)
owof
minimum
value.
(a)
Describeane˚cientalgorithmtocomputeafeasible
(
s
,
t
)
ow,given
thegraph,thedemandfunction,andthevertices
s
and
t
asinput.
[Hint:
Finda˛owthatisnoeroeverywhere,andthenscaleituptomakeit
feasible.]
(b)
Supposeyouhaveaccesstoasubroutine
MaxFlow
thatcomputes
maximum
˛owsinnetworkswithedgecapacities.Describeane˚cient
algorithmtocomputea
minimum
˛owinagivennetworkwithedge
demands;youralgorithmshouldcall
MaxFlow
exactlyonce.
(c)
Stateandproveananalogueoftheowtheoremforthis
setting.(Dominimum˛owscorrespondtomaximumcuts?)
13.
Forany˛ownetwork
G
andanyvertices
u
and
v
,let
bottleneck
G
(
u
,
v
)
denote
themaximum,overallpaths
ˇ
in
G
from
u
to
v
,oftheminimpacity
edgealong
ˇ
.
347

10.MaximumFlows&MinimumCuts
(a)
Describeandanalyzeanalgorithmtocompute
bottleneck
G
(
s
,
t
)
in
O
(
E
log
V
)
time.Thisistheamountof˛owthattheEdmo
falgorithmpushesinthe˝rstiteration.
(b)
Nowsupposethe˛ownetwork
G
isundirected;equivalently,suppose
c
(
u

v
)=
c
(
v

u
)
foreverypairofvertices
u
and
v
.Describeandanalyze
analgorithmtocompute
bottleneck
G
(
s
,
t
)
in
O
(
V
+
E
)
time.
[Hint:Find
themedianedgecapacity.]
Whydoesn'tthisspeedupworkfordirected
graphs?
ª
(c)
Again,supposethe˛ownetwork
G
isundirected.Describeand
alyzeanalgorithmtoconstructaspanningtree
T
of
G
suchthat
bottleneck
T
(
u
,
v
)=
bottleneck
G
(
u
,
v
)
for
all
vertices
u
and
v
.(Edgesin
T
inherittheircapacitiesfrom
G
.)Forfullcredit,youralgorithmshould
runin
O
(
E
)
time.
14.
Supposeyouaregivena˛ownetwork
G
with
integer
edgecapacitiesand
an
integer
maximum˛ow
f

in
G
.Describealgorithmsforthefollowing
operations:
(a)
Increment
(
e
)
:Increasethecapacityofedge
e
by
1
andupdatethe
maximum˛ow.
(b)
Decrement
(
e
)
:Decreasethecapacityofedge
e
by
1
andupdatethe
maximum˛ow.
Bothalgorithmsshouldmodify
f

sothatitisstillamaximum˛ow,more
quicklythanrecomputingamaximum˛owfromscratch.
15.
Let
G
beanetworkwithintegeredgecapacities.Anedgein
G
is
upper
binding
ifincreasingitscapacityby
1
alsoincreasesthevalueofthemaximum
˛owin
G
.Similarly,anedgeis
lower
ifdecreasingitscapacityby
1
alsodecreasesthevalueofthemaximum˛owin
G
.
(a)
Doeseverynetwork
G
haveatleastoneedge?Proveyour
answeriscorrect.
(b)
Doeseverynetwork
G
haveatleastonelowedge?Proveyour
answeriscorrect.
(c)
Describeanalgorithmto˝ndalledgesin
G
,givenboth
G
andamaximum˛owin
G
asinput,in
O
(
E
)
time.
(d)
Describeanalgorithmto˝ndalllowedgesin
G
,givenboth
G
andamaximum˛owin
G
asinput,in
O
(
EV
)
time.
16.
Agiven˛ownetwork
G
mayhavemorethanoneminimum
(
s
,
t
)
Let's
de˝nethe
best
minimum
(
s
,
t
)
tobeanyminimumcut
(
S
,
T
)
withthe
smallestnumberofedgescrossingfrom
S
to
T
.
348

Exercises
(a)
Describeane˚cientalgorithmto˝ndthebestminimum
(
s
,
t
)
when
thecapacitiesareintegers.
(b)
Describeane˚cientalgorithmto˝ndthebestminimum
(
s
,
t
)
for
arbitrary
edgecapacities.
(c)
Describeane˚cientalgorithmtodeterminewhetheragiven˛ow
networkcontainsaunique
best
minimum
(
s
,
t
)

17.
Anewassistantprofessor,teachingmaximum˛owsforthe˝rsttime,suggests
thefollowinggreedymodi˝cationtothegenericFnaugmenting
pathalgorithm.Insteadofmaintainingaresidualgraph,just
5
reducethe
capacityofedgesalongtheaugmentingpath!Inparticular,wheneverwe
saturateanedge,justremoveitfromthegraph.Whoneedsallthatresidual
graphnonsense?
GreedyFlow
(
G
,
c
,
s
,
t
)
:
foreveryedge
e
in
G
f
(
e
)
 
0
whilethereisapathfrom
s
to
t
ˇ
 
anarbitrarypathfrom
s
to
t
F
 
minimumcapacityofanyedgein
ˇ
foreveryedge
e
in
ˇ
f
(
e
)
 
f
(
e
)+
F
if
c
(
e
)=
F
remove
e
from
G
else
c
(
e
)
 
c
(
e
)

F
return
f
(a)
Showthat
GreedyFlow
doesnotalwayscomputeamaximum˛ow.
(b)
Showthat
GreedyFlow
isnotevenguaranteedtocomputeagood
approximationtothemaximum˛ow.Thatis,foranyconstant
>
1
,
thereisa˛ownetwork
G
suchthatthevalueofthemaximum˛owis
morethan

timesthevalueofthe˛owcomputedby
GreedyFlow
.
[Hint:Assumethat
GreedyFlow
choosestheworstpossiblepath
ˇ
at
eachiteration.]
18.
In1980MauriceQueyrannepublishedanexampleofa˛ownetwork,shown
below,whereEdmondsandKarp'sattestheuristicdoesnothalt.As
inZwick'sbadexamplefortheoriginalFnalgorithm,
˚
denotes
theinversegoldenratio
(
p
5

1
)
=
2
.Thethreeverticaledgesplayessentially
thesameroleasthehorizontaledgesinZwick'sexample.
5
Theadverb
just
isalmostalwayssubconsciousshorthandfortoolazyto˝gureoutthe
details,butyoushouldbelievemeanywaormoresuccinctly,isprobablywroSee
also
merely
,
simply
,
clearly
,and
obviously
.
349

10.MaximumFlows&MinimumCuts
Figure10.12.
Queyranne'snetwork,andasequenceofpathaugmentations.
(a)
Showthatthefollowingin˝nitesequenceofpathaugmentationsisa
validexecutionoftheEdmoattestalgorithm.(Seethe
bottomofFigure
10.12
.)
QueyranneFatPaths
:
for
i
 
1
to
1
push
˚
3
i

2
unitsof˛owalong
s

a

f

g

b

h

c

d

t
push
˚
3
i

1
unitsof˛owalong
s

f

a

b

g

h

c

t
push
˚
3
i
unitsof˛owalong
s

e

f

a

g

b

c

h

t
(b)
Describeasequenceof
O
(
1
)
pathaugmentationsthatyieldsamaximum
˛owinQueyranne'snetwork.
ª
19.
An
(
s
,
t
)
llel
graphisadirectedacyclicgraphwithtwo
guishedvertices
s
and
t
andwithoneofthefollowingstructures:
‹
Basecase:
Asingledirectededgefrom
s
to
t
.
‹
Series:
Theunionofan
(
s
,
u
)
llelgraphanda
(
u
,
t
)

parallelgraphthatshareacommonvertex
u
butnootherverticesor
edges.
‹
Parallel:
Theunionoftwosmaller
(
s
,
t
)
llelgraphswith
thesamesource
s
andtarget
t
,butwithnootherverticesoredgesin
common.
Every
(
s
,
t
)
llelgraph
G
canberepresentedbya
decomposition
tree
,whichisabinarytreewiththreetypesofnodes:leaves(which
correspondingtoedgesin
G
),seriesnodes(whichcorrespondtovertices
otherthan
s
and
t
),andparallelnodes.Thesameserillelgraph
couldberepresentedbymanydi˙erentdecompositiontrees.
(a)
Supposeyouaregivenadirectedgraph
G
withtwospecialvertices
s
and
t
.
Describeandanalyzeanalgorithmthateitherbuildsadecomposition
treefor
G
orcorrectlyreportsthat
G
isnot
(
s
,
t
)
llel.
[Hint:
Buildthetreefromthebottomup.]
350

Exercises
Figure10.13.
Aseries-parallelgraphandacorrespondingdecompositiontree.Squaresinthedecom-
positiontreeareleaves;diamondsareparallelnodes.
(b)
Describeandanalyzeanalgorithmtocomputeamaximum
(
s
,
t
)
owin
agiven
(
s
,
t
)
llel˛ownetworkwitharbitraryedgecapacities.
[Hint:Inlightofpart(a),youcanassumethatyouareactuallygiven
thedecompositiontree.Firstcomputethemaximowvalue,then
computeanactualmaximum˛ow.]
20.
WecanspeeduptheEdmoattestalgorithm,atleastfor
networkswithsmallintegercapacities,byrelaxingourrequirementsfor
thenextaugmentingpath.Insteadof˝ndingtheaugmentingpathwith
maximumbottleneckcapacity,we˝ndapathwhosebottleneckcapacityis
atleasthalfofmaximum,usingthefollowing
capacityscaling
algorithm.
(ThisalgorithmwasactuallyproposedbyEdmondsandKarp.)
Assumealltheedgecapacitiesarepositiveintegerslessthan
U
=
2
k
for
someinteger
k
.Thescalingalgorithmmaintainsabottleneckthreshold

;
initially,weset

 
U
.Ineach
phase
,thealgorithmaugmentsalongpaths
from
s
to
t
inwhicheveryedgehasresidualcapacityatleast

.Whenthere
isnosuchpath,thephaseends,weset

 b

=
2
c
,andthenextphase
begins.Thealgorithmendswhen

=
0
.
(a)
Howmanyphaseswillthisalgorithmexecuteintheworstcase?
(b)
Let
f
bethe˛owattheendofaphaseforaparticularvalueof

.Prove
thatthecapacityofaminimumcutintheresidualgraph
G
f
isatmost
E


.
(c)
Provethatineachphaseofthescalingalgorithm,thereareatmost
2
E
augmentations.
(d)
Whatistheoverallrunningtimeofthecapacityscalingalgorithm?
351


Foralongtimeitpuzzledmehowsomethingsoexpensive,soleadingedge,couldbeso
useless,andthenitoccurredtomethatacomputerisastupidmachinewiththeability
todoincrediblysmartthings,whilecomputerprogrammersaresmartpeoplewiththe
abilitytodoincrediblystupidthings.Theyare,inshort,aperfectmatch.
BillBryson,
NotesfromaBigCountry
(1999)
Shortlyaftertheoncurtainfellin1990,anAmericanandaRussian,whohadboth
workedonthedevelopmentofweapons,met.TheAmericanasked:you
developedtheBomb,howwereyouabletoperformsuchanenormousamountof
computingwithyourweakTheRussianresponded:eusedbetter
algorithms.
Ye˙mDinitz,inAlgorithm:TheOriginalVersion
andEven'sVersion(2006)
SoI'mthebadguynowIhear,becauseIdon'tgowiththe˝ow.
Don'tevergowiththe˝ow,bethe˝ow.
Jay-Z,"StreamofConsciousness",May16,2015
11
ApplicationsofFlowsandCuts
11.1Edge-DisjointPaths
Oneoftheeasiestapplicationsofmaximum˛owsiscomputingthemaximum
numberofintpathsbetweentwospeci˝edvertices
s
and
t
ina
directedgraph
G
usingmaximum˛ows.Asetofpathsin
G
is
int
if
eachedgein
G
appearsinatmostoneofthepaths;severalintpaths
maypassthroughthesamevertex,however.
Ifwegiveeachedgecapacity
1
,thenthemaximum˛owfrom
s
to
t
pushes
either
0
or
1
unitsof˛owalongeachedge.The˛ompositiontheorem
impliesthatthesubgraph
S
ofsaturatededgesistheunionofseveral
disjointpathsandcycles.Moreover,thenumberofpathsinthisdecomposition
isexactlyequaltothevalueofthe˛ow.Extractingtheactualpathsfrom
S
is
straightforwollowanydirectedpathin
S
from
s
to
t
,removethatpath
from
S
,andrecurse.
Conversely,wecantransformanycollectionof
k
intpathsintoa
353

11.ApplicationsofFlowsandCuts
˛owbypushingoneunitof˛owalongeachpathfrom
s
to
t
;thevalueofthe
resulting˛owisexactly
k
.Itfollowsthatanymaximum˛owalgorithmactually
computesthelargestpossiblesetofintpaths.
IfweuseOrlin'salgorithmtocomputemaximum˛ows,wecancompute
intpathsin
O
(
VE
)
time,butOrlin'salgorithmisoverkillforthis
simpleapplication.Thecut
(
f
s
g
,
V
nf
s
g
)
hascapacityatmost
V

1
,sothe
maximum˛owhasvalueatmost
V

1
.Thus,FordandFulkerson'soriginal
augmentingpathalgorithmalreadyrunsin
O
(
j
f

j
E
)=
O
(
VE
)
time
.
Thesamealgorithmcanalsobeusedto˝ndintpathsin
undirected
graphs.First,replaceeveryundirectededge
uv
in
G
withapairofdirected
edges
u

v
and
v

u
,eachwithunitcapacity,andcalltheresultingdirected
graph
G
0
.Next,computeamaximum
(
s
,
t
)
ow
f

in
G
0
usingFn.
Foranyedge
uv
in
G
,if
f

saturatesbothdirectededges
u

v
and
v

u
in
G
0
,
wecanremove
both
edgesfromthe˛owwithoutchangingitsvalue.(More
generally,wecan˝ndan
acyclic
maximum˛owin
G
0
bycancelingallcycles
in
f

,notonlycyclesoflength
2
.)Thus,withoutlossofgenerality,
f

assignsa
uniquedirectiontoeachsaturatededge.Finally,wecanextracttheint
pathsbysearchingthesubgraphofdirectededgessaturatedby
f

.
11.2VertexCapacitiesandVertex-DisjointPaths
Nowsupposetheverticesoftheinputgraph
G
havecapacities,notjustthe
edges.Inadditiontoourotherconstraints,foreachvertex
v
otherthan
s
and
t
,
werequirethetotal˛owinto
v
(andthereforethetotal˛owoutof
v
)tobeat
mostsomenoegativevalue
c
(
v
)
:
X
u

v
f
(
u

v
)

c
(
v
)
.
Canwestillcomputemaximum˛owswiththesenewvertexconstraints?
In1962,FordandFulkersonproposedthefollowingreductiontoa˛ow
network
¯
G
withonlyedgecapacities.Replaceeveryvertex
v
withtwovertices
v
in
and
v
out
,connectedbyanedge
v
in

v
out
withcapacity
c
(
v
)
,andthenreplace
everydirectededge
u

v
withtheedge
u
out

v
in
(keepingthesamecapacity).
Routinede˝nitiosingimpliesthateveryfeasible
(
s
out
,
t
in
)
owin
¯
G
is
equivalenttoafeasible
(
s
,
t
)
owwiththesamevalueintheoriginalgraph
G
,
andviceversa.Inparticular,everymaximum˛owin
¯
G
isequivalenttoa
maximum˛owin
G
.Thereductionfrom
G
to
¯
G
takes
O
(
E
)
time,afterwhich
wecancomputethemaximum˛owin
¯
G
usingOrlin'salgorithm.Altogether,
computingthemaximum˛owin
G
requires
O
(
VE
)
time
.
Itisnoweasytocomputethemaximumnumberof
vertex
intpaths
from
s
to
t
in
O
(
VE
)
time:Assigncapacity
1
toeveryvertexandcomputea
maximum˛ow!
354

11.3.BipartiteMatching
Figure11.1.
Reducingvertex-disjointpathsin
G
toedge-disjointpathsin
¯
G
.
11.3BipartiteMatching
Anothernaturalapplicationofmaximum˛owsis˝ndingmaximum
matchings
inbipartitegraphs.Amatchingisasubgraphinwhicheveryvertexhasdegree
atmostone,orequivalently,acollectionofedgessuchthatnotwosharea
vertex.Theproblemisto˝ndamatchingwiththemaximumnumberofedges.
Forexample,supposewehaveasetofdoctorswhoarelookingforjobs,and
asetofhospitalswhoarelookingfordoctors.Eachdoctorlistsallhospitals
wheretheyarewillingtowork,andeachhospitallistsalldoctorstheyare
willingtohire.Ourtaskisto˝ndthelargestsubsetofdoctspitalhiresthat
everyoneiswillingtoaccept.
1
Thisproblemisequivalentto˝ndingamaximum
matchinginabipartitegraphwhoseverticesarethedoctorsandhospitals,and
thereisanedgebetweenadoctorandahospitalifandonlyifeach˝ndthe
otheracceptable.
Wecansolvethisproblembyreducingittoamaximum˛owproblem,as
follows.Let
G
bethegivenbipartitegraphwithvertexset
L
[
R
,suchthatevery
edgejoinsavertexin
L
toavertexin
R
.Wecreateanew
directed
graph
G
0
by(1)orientingeachedgefrom
L
to
R
,(2)addinganewsourcevertex
s
with
edgestoeveryvertexin
L
,and(3)addinganewtargetvertex
t
withedges
fromeveryvertexin
R
.Finally,weassigneveryedgein
G
0
acapacityof
1
.
Anymatching
M
in
G
canbetransformedintoa˛ow
f
M
in
G
0
asfollows:
Foreachedge
uw
in
M
,pushoneunitof˛owalongthepath
s

u

w

t
.These
pathsaredisjointexceptat
s
and
t
,sotheresulting˛owsatis˝esthecapacity
constraints.Moreover,thevalueoftheresulting˛owisequaltothenumberof
edgesin
M
.
Conversely,considerany
(
s
,
t
)
ow
f
in
G
0
,computedusingtheF
Fulkersonaugmentingpathalgorithm.Becausetheedgecapacitiesareintegers,
theFnalgorithmassignsaninteger˛owtoeveryedge.(Thisiseasy
toverifybyinduction,hint,hint.)Moreover,sinceeachedgehas
unit
capacity,
thecomputed˛oweithersaturates(
f
(
e
)=
1
)oravoids(
f
(
e
)=
0
)everyedge
1
Thisproblemisverydi˙erentfromthestablematchingproblemwesawinChapter
4
,
becausewearen'ttryingtomakeeachdoctorandhospitalashappyaspossible.
355

11.ApplicationsofFlowsandCuts
in
G
0
.Finally,sinceatmostoneunitof˛owcanenteranyvertexin
U
orleave
anyvertexin
W
,thesaturatededgesfrom
U
to
W
formamatchingin
G
.The
sizeofthismatchingisexactly
j
f
j
.
Thus,thesizeofthemaximummatchingin
G
isequaltothevalueofthe
maximum˛owin
G
0
,andprovidedwecomputethemax˛owusingaugmenting
paths,wecanconverttheactualmax˛owintoamaximummatchingin
O
(
E
)
time.Wecancomputethemaximum˛owin
O
(
VE
)
time
usingeitherOrlin's
algorithmoro˙helfFn.
Figure11.2.
Amaximummatchinginabipartitegraph
G
,andthecorrespondingmaximum˝owin
G
0
.
ItisenlighteningtointerpretthebehaviorofFnin
G
0
interms
oftheoriginalbipartitegraph
G
.Thealgorithmmaintainsamatching
M
in
G
,
whichisinitiallyempty;theedgesof
M
correspondtoedgesin
G
0
thatcarry˛ow.
Callavertexof
G
matched
ifisanendpointofsomeedgein
M
,and
unmatched
otherwise.Ineachiterationofthealgorithm,welookforan
alternatingpath
in
G
pathfromanunmatchedvertexof
L
toanunmatchedvertexin
R
that
alternatesbetweenedgesin
M
andedgesnotin
M
.(Alternatingpathsin
G
correspondexactlytoaugmentingpathsforthecurrent˛owin
G
0
.)Ifwe˝nd
anaugmentingpath
P
,weupdate
M
tothesymmetricdi˙erence
M

P
,which
increasesthenumberofedgesin
M
by
1
,andcontinuetothenextiteration.
Ifthereisnoalternatingpath,themax˛ocuttheoremimpliesthat
M
isamaximummatching,sothealgorithmends.Findingasinglealternating
pathrequires
O
(
E
)
time,andthealgorithmhaltsafteratmost
V
iterations,so
theoverallalgorithmrunsin
O
(
VE
)
time
.Figure
11.3
showsthisalgorithmin
action.
Thischaracterizationofmaximumbipartitematchingsintermsofalternating
pathswasprovedbyClaudeBergein1957(independentlyofthemax˛ocut
theorem),althoughitwasalreadyimplicitinalgorithmsdescribedbyHarald
Kuhnin1955,byDénesK®nigin1916,andbyCarlJacobiaround1836.
Amoresophisticatedalgorithm,proposedbyJohnHopcroftandRichard
Karpin1973,computesmaximummatchingsinbipartitegraphsinonly
O
(
p
VE
)
time,by˝ndingseveraldisjointalternatingpathsineachiteration.
356

11.4.TupleSelection
Figure11.3.
Anincreasingsequenceofmatchingsconnectedbyalternatingpaths.
11.4TupleSelection
Thebipartitemaximummatchingproblemisthesimplestexampleofabroader
classofproblemsthatIcall
tupleselection
.
2
Theinputtoatupleselection
problemconsistsofseveral˝nitesets
X
1
,
X
2
,...,
X
d
,eachrepresentingadi˙erent
discreteresource.Ourtaskistoselectthelargestpossiblesetof
d
es,each
containingexactlyoneelementfromeachset
X
i
,subjecttoseveral
capacity
constraintsofthefollowingform:
‹
Foreachindex
i
,Eachelement
x
2
X
i
canappearinatmost
c
(
x
)
selected
tuples.
‹
Foreachindex
i
,anytwoelements
x
2
X
i
and
y
2
X
i
+
1
canappearinat
most
c
(
x
,
y
)
selectedtuples.
Eachoftheupperbounds
c
(
x
)
and
c
(
x
,
y
)
iseithera(typicallysmall)no
negativeintegeror
1
.
Inthemaximproblem,wehave
d
=
2
resources,eachel
ment
x
hascapacity
c
(
x
)=
1
,andeachpair
(
x
,
y
)
hascapacity
c
(
x
,
y
)=
1
or
c
(
x
,
y
)=
0
,dependingonwhetherornot
xy
isanedgeintheunderlying
bipartitegraph.
2
Icouldn't˝ndastandardnamefortheseproblems,soImadeupmyown.Theseare
sometimescalledssignmentproblbutit'smorecommonforthephraseassignment
probltorefertotheproblemof˝ndingamaxim
weight
bipartitematchinginan
weightedbipartitegraph.
357

11.ApplicationsofFlowsandCuts
Becausetheresourcesarelinearlyordered,andonlypairsofobjectsin
adjacent
subsets
X
i
and
X
i
+
1
areconstrained,
3
thetupleselectionproblemcan
bereducedtoamaximowprobleminadirectedgraph
G
de˝nedasfollows:
‹
G
containsavertexforeachelementofeachset
X
i
,aswellasasource
vertex
s
andatargetvertex
t
.Eachvertex
x
(except
s
and
t
)hascapacity
c
(
x
)
.
‹
G
containsanedge
s

w
foreachelement
w
2
X
1
,anedge
z

t
foreach
element
z
2
X
d
,andanedge
x

y
withcapacity
c
(
x
,
y
)
foreachpairof
elements
x
2
X
i
and
y
2
X
i
+
1
,forall
i
.(Optionally,wecanomitedges
x

y
with
c
(
x
,
y
)=
0
.)
Everypathfrom
s
to
t
in
G
correspondsto(ora
d
ethatwe
could
select;conversely,everyselectable
d
ethatsatis˝esthestatedconstraints
correspondsto(orapathfrom
s
to
t
in
G
.
Figure11.4.
The˝ownetworkforatupleselectionproblem.
Moregenerally,let
f
beanarbitraryfeasibleinteger
(
s
,
t
)
owin
G
.Because
allcapacitiesareintegersor
1
,theFlowDecompositionTheoremimplies
that
f
isthesumof
j
f
j
pathsfrom
s
to
t
,eachcarryingexactlyoneunitof
˛ow.Straightforwardde˝nitiosingimpliesthattheresultingsetoftuples
satis˝esallthecapacityconstraints.Conversely,foranysetof
k
tuplesthat
satis˝esthecapacityconstraints,thesumofthe
k
correspondingpathsisa
feasibleinteger
(
s
,
t
)
owwithvalue
k
.
Thus,wecanselectthemaximumnumberoftuplesthatsatisfythegiven
capacityconstraintsbycomputingamaximum
(
s
,
t
)
ow
f

in
G
andthen
computinga˛owdecompositionof
f

.Becauseall˝nitecapacitiesin
G
are
integers,wecanassumewithoutlossofgeneralitythat
f

isaninteger˛ow,and
therefore(bythepreviousparagraph)correspondstoavalidsetof
j
f

j
tuples.
ExamScheduling
Thefollowinglwschedulingproblemmighthelpclarifyourgeneral
reduction.
3
Ifpairsofobjectsfromevenonenopairofsubsets(
X
i
and
X
j
where
j
>
i
+
1
)
arealsoconstrained,theproblembecomesNPbyastraightforwardreductionfrom
Exa
3DimensionalMatching
.We'lldiscussNPessinthenextchapter.
358

11.4.TupleSelection
SoobananaUniversityhashiredyoutowriteanalgorithmtoschedule
their˝nalexams.Thereare
n
di˙erentclasses,eachofwhichneedstoschedule
a˝nalexaminoneof
r
roomsduringoneof
t
di˙erenttimeslots.Atmostone
class's˝nalexamcanbescheduledineachroomduringeachtimeslot;conversely,
classescannotbesplitintomultipleroomsormultipletimes.Moreover,each
exammustbeoverseenbyoneof
p
proctors.
4
Eachproctorcanoverseeatmost
oneexamatatime;eachproctorisavailableforonlycertaintimeslots;andno
proctorisallowedoverseemorethan
5
examstotal.Theinputtothescheduling
problemconsistsofthreearrays:
‹
Anintegerarray
E
[
1..
n
]
where
E
[
i
]
isthenumberofstudentsenrolledin
the
i
thclass.
‹
Anintegerarray
S
[
1..
r
]
,where
S
[
j
]
isthenumberofseatsinthe
j
th
room.The
i
thclass's˝nalexam
can
beheldinthe
j
throomifandonlyif
E
[
i
]

S
[
j
]
.
‹
Abooleanarray
A
[
1..
t
,1..
p
]
where
A
[
k
,
`
]=
True
ifandonlyifthe
`
th
proctorisavailableduringthe
k
thtimeslot.
5
let
N
=
n
+
r
+
tp
denotethetotalsizeoftheinput.Yourjobistodesignan
algorithmthateitherschedulesaroom,atimeslot,andaproctorforevery
class's˝nalexam,orcorrectlyreportsthatnosuchscheduleispossible.
Thisisastandardtuplectionproblemwithfourresources:classes,
rooms,timeslots,andproctors.Tosolvethisproblem,weconstructa˛ow
network
G
withsixtypesofvertisourcevertex
s
0
,avertex
c
i
foreachclass,
avertex
r
j
foreachroom,avertex
t
k
foreachtimeslot,avertex
p
`
foreach
proctor,andatargetvertex
t
0
˝vetypesofedges,asshowninFigure
11.5
:
Figure11.5.
A˝ownetworkfortheexamschedulingproblem.
‹
Anedge
s
0

c
i
withcapacity
1
foreachclass
i
.achclasscanholdatmost
one˝nal
4
orastheyarebetterknownoutsidetheUS,invigilators
5
Arguably,thisinformationisbetterrepresentedasagraph,butIthoughtthatwouldmake
thereductionmoreconfusing.
359

11.ApplicationsofFlowsandCuts
‹
Anedge
c
i

r
j
withcapacity
1
foreachclass
i
androom
j
suchthat
E
[
i
]

S
[
j
]
.ass
i
canholdexamsinroom
j
ifandonlyiftheroomhas
enoughThisistheonlyplacewheretheenrollments
E
[
i
]
andseat
numbers
S
[
j
]
areused.
‹
Anedge
r
j

t
k
withcapacity
1
foreachroom
j
andtimeslot
k
.Atmost
oneexamcanbeheldinroom
j
attime
k

‹
Anedge
t
k

p
`
withcapacity
1
fortimeslot
k
andproctor
`
suchthat
A
[
`
,
k
]=
True
.Aproctorcanoverseeatmostoneexamatanytime,and
onlyduringtimesthattheyareavailabl
‹
Anedge
p
`

t
0
withcapacity
5
foreachproctor
`
.achproctorcanoversee
atmost
5

(I'mcallingthesourceandtargetvertices
s
0
and
t
0
insteadof
s
and
t
only
becausetheproblemstatementalreadyusesthevariable
t
todenotethe
numberoftimeslots.)Altogether,
G
has
n
+
r
+
t
+
p
+
2
=
O
(
N
)
verticesand
O
(
nr
+
rt
+
tp
)=
O
(
N
2
)
edges.
Eachpathfrom
s
0
to
t
0
in
G
representsauniquevalidchoiceofclass,room,
time,andproctorforone˝nalexam;speci˝cally,theclass˝tsintotheroom,
andtheproctorisavailableatthattime.Conversely,foreachvalidchoice(class,
room,time,proctor),thereisacorrespondingpathfrom
s
0
to
t
0
in
G
.Thus,
wecanconstructavalidscheduleforthemaximumpossiblenumberofexams
bycomputinganmaximum
(
s
0
,
t
0
)
ow
f

in
G
,decomposing
f

intopaths
from
s
0
to
t
0
,andthentranscribingeachpathintoaclaor
assignment.If
j
f

j
=
n
,wecanreturntheresultingschedule;otherwise,we
cancorrectlyreportthatschedulingall
n
˝nalexamsisimpossible.
Constructing
G
fromthegiveninputdatabybruteforcetakes
O
(
E
)
time.
Wecancomputethemaximum˛owin
O
(
VE
)
timeusingeitherFn
(because
j
f

j
n
<
V
)orOrlin'salgorithm,andwecancomputethe˛ow
decompositionin
O
(
VE
)
time.Thus,theoverallalgorithmrunsin
O
(
VE
)=
O
(
N
3
)
time
.
11.5Disjoint-PathCovers
A
pathcover
ofadirectedgraph
G
isacollectionofdirectedpathsin
G
suchthat
everyvertexof
G
lieson
atleast
onepath.A
disjo
pathcoverof
G
isapath
coversuchthateveryvertexof
G
lieson
exactly
onepath.Everydirectedgraph
hasatrivialdisjocoverconsistingofseveralpathsoflengthzero,but
that'sboring.Instead,let'slookfordisjocoversthatcontainasfewpaths
aspossible.ThisproblemisNPingeneragraphhasadisjo
coverofsize
1
ifandonlyifitcontainsaHamiltonianutthereisan
e˚cient˛osedalgorithmfordirected
acyclic
graphs.
360

11.5.Disjoint-PathCovers
Tosolvethisproblemforagivendirectedacyclicgraph
G
=(
V
,
E
)
,we
constructanewbipartitegraph
G
0
=(
V
0
,
E
0
)
asfollows.
‹
H
containstwovertices
v
[
and
v
]
foreveryvertex
v
of
G
.
‹
H
containsanundirectededge
u
[
v
]
foreverydirectededge
u

v
in
G
.
(If
G
isrepresentedasanadjacencymatrix,then
G
0
isthebipartitegraph
representedbythesameadjacencymatrix!)
Figure11.6.
Reducingminimumdisjoint-pathcoverofadagtomaximumbipartitematching;squares
are˝at
[
anddiamondsaresharp
]
.
NowIclaimthat
G
canbecoveredby
k
disjointpathsifandonlyifthenew
graph
G
0
hasamatchingofsize
V

k
.Asusual,weprovetheequivalencein
twostages:
(
Suppose
G
hasadisjointpathcover
P
with
k
paths;thinkof
P
asasubgraph
of
G
.Everyvertexin
P
haseither
0
or
1
;moreover,thereisexactly
onevertexwith
0
ineachpathin
P
.Itfollowsthat
P
hasexactly
V

k
edges.Nowde˝neasubset
M
oftheedgesof
G
0
asfollows:
M
:
=

u
[
v
]
2
E
0


u

v
2
P

.
Byde˝nitionofdisjocover,everyvertexof
G
hasatmostone
incomingedgein
P
andatmostoneoutgoingedgein
P
.Weconcludethat
everyvertexof
G
0
isincidenttoatmostoneedgein
M
;thatis,
M
isa
matchingofsize
V

k
.
)
Suppose
G
0
hasamatching
M
ofsize
V

k
.Weproject
M
0
backto
G
by
de˝ningasubgraph
P
=(
V
,
M
0
)
,where
M
0
:
=

u

v
2
E


u
[
v
]
2
M

.
Byde˝nitionofmatching,everyvertexof
G
hasatmostoneincomingedge
in
P
andatmostoneoutgoingedgein
P
.Itfollowsthat
P
isacollection
ofdisjointdirectedpathsin
G
;since
P
includeseveryvertex,
P
de˝nesan
disjointpathcoverwith
V

k
edges.Thenumberofpathsin
P
isequalto
thenumberofverticesin
G
thathavenoincomingedgein
M
0
.Weconclude
that
P
containsexactly
k
paths.
361

11.ApplicationsofFlowsandCuts
Itfollowsimmediatelythatwecan˝ndaminimumdisjocoverin
G
by
computingamaximummatchingin
G
0
,usingFn'smaximow
algorithm,in
O
(
V
0
E
0
)=
O
(
VE
)
time
.
Despiteitsformulationintermsofdagsandpaths,thisisreallyamaximum
matchingproblem:Wewantto
match
asmanyverticesaspossibletodistinct
successors
inthegraph.Thenumberofpathsrequiredtocoverthedagisequal
tothenumberofverticeswithnosuccessor.(Andofcourse,everybipartite
maximummatchingproblemisreallya˛owproblem.)
MinimalFacultyHiring
Let'sgobacktoSoobananaUniversityforanotherscheduling
problem.
6
SPUo˙ersseveralthousandcourseseveryday.Duetoextremebudget
cuts,theuniversityneedstosigni˝cantlyreducethesizeofitsfaculty.However,
becausestudentspaytuition(andtheuniversitycannota˙ordlawyers),the
universitymustretainenoughprofessorstoguaranteethateveryclassadvertised
inthecoursecatalogisactuallytaught.HowfewprofessorscanSPUgetaway
with?Eachremainingfacultymemberwillbeassignedasequenceofclassesto
teachonanygivenday.Theclassesassignedtoeachprofessormustnotoverlap;
moreover,theremustbeenoughslackineachprofessor'sscheduleforthemto
walkfromoneclasstothenext.Forpurposesofthisproblem,let'sassumethat
everyprofessoriscapableofteachingeveryclass,andthatprofessorswillnot
haveo˚cehours,lunches,orbathroombreaks.
7
Concretely,supposethereare
n
classeso˙eredin
m
di˙erentlocations.The
inputtoourproblemconsistsofthefollowingdata:
‹
Anarray
C
[
1..
n
]
ofclasses,whereeachclass
C
[
i
]
hasthree˝elds:the
startingtime
C
[
i
]
.
start
,theendingtime
C
[
i
]
.
end
,andthelocation
C
[
i
]
.
loc
.
‹
Atwonalarray
T
[
1..
m
,1..
m
]
,where
T
[
u
,
v
]
isthetimerequired
towalkfromlocation
u
tolocation
v
.
Wewantto˝ndtheminimumnumberofprofessorsthatcancollectivelyteach
everyclass,suchthatwheneveraprofessorisassignedtoteachtwoclasses
i
and
j
where
C
[
j
]
.
start

C
[
i
]
.
start
,weactuallyhave
C
[
j
]
.
start

C
[
i
]
.
end
+
T

C
[
i
]
.
loc
,
C
[
j
]
.
loc

.
Wecansolvethisproblembyreducingittoadisjocoverproblemas
follows.Weconstructadag
G
=(
V
,
E
)
whoseverticesareclassesandwhose
edgesrepresentpairsofclassesthatarescheduledfarenoughaparttobetaught
6
Forasomewhatmorerealistic(andlessdepressing)formulationofthisproblem,consider
airplanesand˛ights,orbusesandbusroutes,insteadofprofessorsandclasses.
7
Theywill,however,beexpectedtoanswerstudentemailsastheywalkbetweenclasses.
362

11.6.BaseballElimination
bythesameprofessor.Speci˝cally,adirectededge
i

j
indicatesthatthesame
professorcanteachclass
i
andthenclass
j
.Itiseasytoconstructthisdagin
O
(
n
2
)
timebybruteforce.Thenwe˝ndadisjocoverof
G
usingthe
matchingalgorithmdescribedabove;eachdirectedpathin
G
representsalegal
classscheduleforoneprofessor.Theentirealgorithmrunsin
O
(
n
2
+
VE
)=
O
(
n
3
)
time
.
8
Despiteitsinitialdescriptionintermsofintervalsanddistances,thisisreally
amaximummatchingproblem(whichmeansit's
really
reallyamaximow
problem).Speci˝cally,wewantto
match
asmanyclassesaspossibletothe
next
classtaughtbythesameprofessor.Thenumberofprofessorsweneedis
equaltothenumberofclasseswithnoassignedsuccessor;eachclasswithout
anassignedsuccessoristhelastclassthatsomeprofessorteaches.
11.6BaseballElimination
EveryyearmillionsofAmericanbaseballfanseagerlywatchtheirfavoriteteam,
hopingtheywillwinaspotintheplayo˙s,andultimatelytheWorldSeries.
Sadly,mostteamsarehematicallyelimindaysorevenweeksbeforethe
regularseasonends.Often,itiseasytospotwhenateamiselimin
can'twinenoughgamestocatchuptothecurrentleaderintheirdivision.
Butsometimesthesituationismoresubtle.Forexample,herearetheactual
standingsfromtheAmericanLeagueEastonAugust30,1996.
TeamWon

LostLeft
NYYBALBOSTORDET
NewYorkYankees283873
BaltimoreOrioles283274
BostonRedSox278200
TorontoBlueJays277700
DetroitTigers273400
Detroitisclearlybehind,butsomediTigersfansmayholdouthope
thattheirteamcanstillwin.Afterall,ifDetroitwinsall27oftheirremaining
games,theywillendtheseasonwith76wins,morethananyotherteamhas
now.Soaslongaseveryotherteamloseseverygame...butthat'snotpossible,
8
Ifweassumethateverytimeinterval
T
[
u
,
v
]
isequal,
9
thisschedulingproblemcanactually
besolvedin
O
(
n
log
n
)
timeusingasimplegreedyalgorithm.
9
ManyAmericanuniversitiesscheduleutebreaksbetweenclasses,underthe
ablebeliefthatahumanbeingcanwalkfromanyclassroomtoanyotherclassroomonthesame
campusintenminutes.Iinviteanyonewhothinksthisbeliefisrealistictovisitmycampusand
walkfromoneSiebelCentertotheother.
363

11.ApplicationsofFlowsandCuts
becausesomeofthoseotherteamsstillhavetoplayeachother.Hereisone
completeargument:
10
Bywinningalloftheirremaininggames,Detroitcan˙nishtheseasonwitharecordof
76and86.IftheYankeeswinjust2moregames,thentheywill˙nishtheseasonwith
a77and85recordwhichwouldputthemaheadofDetroit.So,let'ssupposetheTigers
goundefeatedfortherestoftheseasonandtheYankeesfailtowinanothergame.
TheproblemwiththisscenarioisthatNewYorkstillhas8gamesleftwithBoston.
IftheRedSoxwinallofthesegames,theywillendtheseasonwithatleast77wins
puttingthemaheadoftheTigers.Thus,theonlywayforDetroittoevenhaveachance
of˙nishingin˙rstplace,isforNewYorktowinexactlyoneofthe8gameswithBoston
andlosealltheirothergames.Meanwhile,theSoxmustloseallthegamestheyplay
againstteamsotherthanNewYork.Thisputsthemina3-waytiefor˙rstplace....
Nowlet'slookatwhathappenstotheOriolesandBlueJaysinourscenario.Balti-
morehas2gamesleftwithwithBostonand3withNewYork.So,ifeverythinghappens
asdescribedabove,theOrioleswill˙nishwithatleast76wins.So,Detroitcancatch
BaltimoreonlyiftheOrioleslosealltheirgamestoteamsotherthanNewYorkand
Boston.Inparticular,thismeansthatBaltimoremustloseall7ofitsremaininggames
withToronto.TheBlueJaysalsohave7gamesleftwiththeYankeesandwehaveal-
readyseenthatforDetroitto˙nishin˙rstplace,Torontomustwillallofthesegames.
Butifthathappens,theBlueJayswillwinatleast14moregamesgivingthemat˙nal
recordof77and85orbetterwhichmeanstheywill˙nishaheadoftheTigers.So,no
matterwhathappensfromthispointintheseasonon,Detroitcannot˙nishin˙rst
placeintheAmericanLeagueEast.
Therehastobeabetterwayto˝gurethisout!
Hereisamoreabstractformulationoftheproblem.Ourinputconsistsof
twoarrays
W
[
1..
n
]
and
G
[
1..
n
,1..
n
]
,where
W
[
i
]
isthenumberofgames
team
i
hasalreadywon,and
G
[
i
,
j
]
isthenumberofupcominggamesbetween
teams
i
and
j
.Wewanttodeterminewhetherteam
n
canendtheseasonwith
themostwins(possiblytiedwithotherteams).
11
IntheBenjaminSchwartzobservedthatthisquestioncanbe
modeledasamaximum˛owproblem;about20yearslater,DanGus˝eld,Charles
Martel,andDavidFernsimpli˝edSchwartz's˛owformulationto
apairselectionproblem.Speci˝cally,wewanttoknowwhetheritispossible
to
select
awinnerforeachgame
,sothatteam
n
comesin˝rstplace.Let
R
[
i
]=
P
j
G
[
i
,
j
]
denotethenumberofremaininggamesforteam
i
.Wewill
assumethatteam
n
winsall
R
[
n
]
ofitsremaininggames.Thenteam
n
cancome
in˝rstplaceifandonlyifeveryotherteam
i
winsatmost
W
[
n
]+
R
[
n
]

W
[
i
]
ofits
R
[
i
]
remaininggames.
Sincewewantto
select
awinningteamforeachgame,westartbybuilding
abipartitegraph,whosenodesrepresentthegamesandtheteams.Wehave
10
BoththeexampleandthisargumentaretakenfromEliOlinick'swebsite
https://s2.smu.
edu/~olinick/riot/detroit.html
,whichisbasedonOlinick'sjointresearchwithIlanAdler,Alan
Erera,andDoritHochbaum.
11
Weareimplicitlyassumingthatnogameendsinatieandthateverygameisactuallyplayed.
BothassumptionsareconsistentwithMajorLeagueBaseballrules,atleastforgamesthata˙ect
postseasonstanding,barringwars,naturaldisasters,orswarmsofbees.
364

11.6.BaseballElimination

n
2

game
nodes
g
i
,
j
,oneforeachpair
1

i
<
j
<
n
,and
n

1
team
nodes
t
i
,
oneforeach
1

i
<
n
.Foreachpair
i
,
j
,weaddedges
g
i
,
j

t
i
and
g
i
,
j

t
j
with
in˝nite
capacity.Weaddasourcevertex
s
andedges
s

g
i
,
j
withcapacity
G
[
i
,
j
]
foreachpair
i
,
j
.Finally,weaddatargetnode
t
andedges
t
i

t
with
capacity
W
[
n
]

W
[
i
]+
R
[
n
]
foreachteam
i
.
Figure
11.7
showsthegraphderivedfromthe1996AmericanLeagueEast
standings,where
n
istheDetroitTigers.Allunlabelededgeshave
in˝nitecapacity.
Figure11.7.
Cubswin!Cubswin!
Theorem.
Team
n
canendtheseasonin˝rstplaceifandonlyifthereisa
feasible˛owinthisgraphthatsaturateseveryedgeleaving
s
.
Proof:
Supposeitispossibleforteam
n
toendtheseasonin˝rstplace.Then
everyteam
i
<
n
winsatmost
W
[
n
]+
R
[
n
]

W
[
i
]
oftheremaininggames.For
eachgamebetweenteam
i
andteam
j
thatteam
i
wins,addoneunitof˛ow
alongthepath
s

g
i
,
j

t
i

t
.Becausethereareexactly
G
[
i
,
j
]
gamesbetween
teams
i
and
j
,everyedgeleaving
s
issaturated.Becauseeachteam
i
winsat
most
W
[
n
]+
R
[
n
]

W
[
i
]
games,theresulting˛owisfeasible.
Conversely,let
f
beafeasible˛owthatsaturateseveryedgeoutof
s
.
Supposeteam
i
winsexactly
f
(
g
i
,
j

t
i
)
gamesagainstteam
j
,forall
i
and
j
.
Thenteams
i
and
j
play
f
(
g
i
,
j

t
i
)+
f
(
g
i
,
j

t
j
)=
f
(
s

g
i
,
j
)=
G
[
i
,
j
]
games,
soeveryupcominggameisplayed.Moreover,eachteam
i
winsatotalof
P
j
f
(
g
i
,
j

t
i
)=
f
(
t
i

t
)

W
[
n
]+
R
[
n
]

W
[
i
]
upcominggames,andtherefore
atmost
W
[
n
]+
R
[
n
]
gamesoverall.Thus,ifteam
n
winalltheirupcoming
games,theyendtheseasonin˝rstplace.
…
Insummary,todecidewhetherourfavoriteteamcanwin,weconstructthe
˛ownetwork,computeamaximum˛ow,andreportwhetherthanmaximum
˛owsaturateseveryedgeoutof
s
.Forexample,inthegraphinFigure
11.7
,
thetotalcapacityoftheedgesleaving
s
is27(becausethereare27remaining
games).Ontheotherhand,thetotalcapacityoftheedgesentering
t
isonly26,
365

11.ApplicationsofFlowsandCuts
whichimpliesthatthemaximum˛owvalueisatmost26.Weconcludethat
Detroitismathematicallyeliminated.
12
The˛ownetworkhas
O
(
n
2
)
verticesand
O
(
n
2
)
edges,anditcanbe
constructedin
O
(
n
2
)
time.UsingOrlin'salgorithm,wecancomputethe
maximum˛owin
O
(
VE
)=
O
(
n
4
)
time
.
Thisisnotthefastestalgorithmforthebaseballeliminationproblem.In
2001,KevinWayneprovedthatonecandetermine
all
teamsthatare
icallyeliminatedinonly
O
(
n
3
)
time
,essentiallyusingasinglemaximow
computation.
11.7ProjectSelection
Inour˝nalexample,supposewearegivenasetof
n
projectsthatwecould
possiblyperform.Someprojectscannotbestarteduntilcertainotherprojects
arecompleted.Theprojectsandtheirdependenciesaredescribedbyadirected
acyclicgraph
G
whoseverticesaretheprojects,whereeachedge
u

v
indicates
thatproject
u
cannotbeperformedbeforeproject
v
.(Thisisexactlytheformof
dependencygraphsweconsideredinChapter
6.4
.)Finally,eachproject
v
has
anassociated
pro˝t
$
(
v
)
whichwillbegiventousiftheprojectiscompleted;
someprojectshavenegativepro˝ts,whichweinterpretaspositive
costs
.Wecan
chooseto˝nishanysubset
X
oftheprojectsthatincludesallitsdependents;
thatis,foreveryproject
x
2
X
,everyprojectthat
x
dependsonisalsoin
X
.
Ourgoalisto˝ndavalidsubsetoftheprojectswhosetotalpro˝tisaslargeas
possible.Inparticular,ifallofthejobshavenegativepro˝t,thecorrectanswer
istodonothing.
Figure11.8.
Adependencygraphforasetofeightprojects.Diamondsindicatepro˙tableprojects;
squaresindicatecostlyprojects.Eachedge
u

v
means
u
dependson
v
.
Atahighlevel,ourtasktopartitiontheprojectsintotwosubsets
S
and
T
,
thejobswe
Select
andthejobswe
Turndown
.Sointuitively,we'dliketomodel
ourproblemasaminimumcutprobleminacertaingraph.Butinwhichgraph?
Howdoweenforceprerequisites?Wewantto
maximize
pro˝t,butweonly
knowhowto˝nd
minimum
cuts.Andhowdoweconvertnegativepro˝tsinto
positivecapacities?
12
Wegot(un)luckyhere;itispossibleforateamtobeeliminatedevenifthetotalcapacityof
alledgesinto
t
isnosmallerthanthetotalcapacityofedgesoutof
s
.
366

11.7.ProjectSelection
Totransformourgivenconstraintgraph
G
intoa˛ownetwork
G
0
,weadda
sourcevertex
s
andatargetvertex
t
tothedependencygraph,withanedge
s

v
foreverypro˝tablejob
v
(with
$
(
v
)
>
0
),andanedge
u

t
foreverycostly
job
u
(with
$
(
u
)
<
0
).Intuitively,wecanthinkof
s
asanewjoblwith
pro˝t/cost
0
thatwemustperformlast.Weassigncapacitiestotheedgesof
G
0
asfollows:
‹
c
(
s

v
)=
$
(
v
)
foreverypro˝tablejob
v
;
‹
c
(
u

t
)=

$
(
u
)
foreverycostlyjob
u
;
‹
c
(
u

v
)=
1
foreverydependencyedge
u

v
.
Allpacitiesarepositive,sothisisavalidinputtothemaximumcut
problem.
Nowconsideranarbitrary
(
s
,
t
)

(
S
,
T
)
in
G
0
.Foranyedge
u

v
inthe
originaldependencygraph,if
u
2
S
and
v
2
T
,then
k
S
,
T
k
=
1
.Thus,wecan
legallyselectthejobsin
S
ifandonlyifthecapacityofthecut
(
S
,
T
)
is˝nite.
Figure11.9.
The˝ownetworkfortheexampledependencygraph,alongwithitsminimumcut.The
cuthascapacity
13
and
P
=
15
,sothetotalpro˙tfortheselectedjobsis
2
.
Infact,itturnsoutthatcutswithsmallercapacitycorrespondtojob
selectionswithhigherpro˝t.Speci˝cally,Iclaimthatselectingthejobsin
S
earnsatotalpro˝tof
P
k
S
,
T
k
,where
P
isthesumofallthepositivepro˝ts:
P
=
X
v
max
f
0,$
(
v
)
g
=
X
$
(
v
)
>
0
$
(
v
)
.
Wecanprovethisclaimbystraightforwardde˝nitiosing,asfollows.For
anysubset
X
ofprojects,wede˝nethreevalues.(Here,asusual,wede˝ne
c
(
u

v
)=
0
when
u

v
isnotanedge.)
cost
(
X
)
:
=
X
u
2
X
$
(
u
)
<
0

$
(
u
)=
X
u
2
X
c
(
u

t
)
yield
(
X
)
:
=
X
v
2
X
$
(
v
)
>
0
$
(
v
)=
X
v
2
X
c
(
s

v
)
367

11.ApplicationsofFlowsandCuts
pro˝t
(
X
)
:
=
X
v
2
X
$
(
v
)=
yield
(
X
)

cost
(
X
)
.
Byde˝nition,
P
=
yield
(
V
)=
yield
(
S
)+
yield
(
T
)
.Becausethecut
(
S
,
T
)
has
˝nitecapacity,onlyedgesoftheform
s

v
and
u

t
cancrossthecut.By
construction,everyedge
s

v
pointstoapro˝tablejobandeachedge
u

t
points
fromacostlyjob.Thus,
k
S
,
T
k
=
cost
(
S
)+
yield
(
T
)
.Weimmediatelyconclude
that
P
k
S
,
T
k
=
yield
(
S
)

cost
(
S
)=
pro˝t
(
S
)
,asclaimed.
Itfollowsimmediatelythatwecan
maximize
ourtotalpro˝tbycomputinga
minimum
cutin
G
0
.Wecaneasilyconstruct
G
0
from
G
in
O
(
V
+
E
)
time,andwe
cancomputetheminimum
(
s
,
t
)
in
G
0
in
O
(
VE
)
timeusingOrlin'salgorithm.
Weconcludethattheentireectionalgorithmrunsin
O
(
VE
)
time
.
Exercises
1.
Let
G
=(
V
,
E
)
beadirectedgraphwhereforeachvertex
v
,the
andoof
v
areequal.Suppose
G
contains
k
intpaths
fromsomevertex
u
toanothervertex
v
.Undertheseconditions,must
G
also
contain
k
intpathsfrom
v
to
u
?Giveaprooforacounterexample
withexplanation.
2.
Givenanundirectedgraph
G
=(
V
,
E
)
,withthreevertices
u
,
v
,and
w
,
describeandanalyzeanalgorithmtodeterminewhetherthereisapath
from
u
to
w
thatpassesthrough
v
.
[Hint:If
G
wereadirectedgraph,this
problemwouldbe
3.
Consideradirectedgraph
G
=(
V
,
E
)
withseveralsourcevertices
s
1
,
s
2
,...,
s
˙
andtargetvertices
t
1
,
t
1
,...,
t
˝
,wherenovertexisbothasourceanda
target.A
mal˛ow
isafunction
f
:
E
!
R

0
thatsatis˝esthe˛ow
conservationconstraintateveryvertexthatisneitherasourcenoratarget.
Thevalue
j
f
j
ofamal˛owisthetotalexcess˛owoutof
all
the
sourcevertices:
j
f
j
:
=
˙
X
i
=
1

X
w
f
(
s
i

w
)

X
u
f
(
u

s
i
)

Asusual,weareinterestedin˝nding˛owswithmaximumvalue,subjectto
capacityconstraintsontheedges.(Inparticular,wedon'tcarehowmuch
˛owmovesfromanyparticularsourcetoanyparticulartarget.)
(a)
Considerthefollowingalgorithmforcomputingmal˛ows.
Thevariables
f
and
f
0
represent˛owfunctions.Thesubroutine
MaxFlow
(
G
,
s
,
t
)
solvesthestandardmaximum˛owproblemwith
source
s
andtarget
t
.
368

Exercises
MaxMultiFlow
(
G
,
s
[
1..
˙
]
,
t
[
1..
˝
])
:
f
 
0
hh
Initializethe˝ow
ii
for
i
 
1
to
˙
for
j
 
1
to
˝
f
0
 
MaxFlow
(
G
f
,
s
[
i
]
,
t
[
j
])
f
 
f
+
f
0
hh
Updatethe˝ow
ii
return
f
Provethatthisalgorithmcorrectlycomputesamaximummal
˛owin
G
.
(b)
Describeamoree˚cientalgorithmtocomputeamaximumm
terminal˛owin
G
.
4.
TheIslandofSodorishometoalargenumberoftownsandvillages,
connectedbyanextensiverailnetwork.Recently,severalcasesofadeadly
contagiousdisease(eitherswine˛uorzombies;reportsareunclear)have
beenreportedinthevillageofSkarloey.ThecontrolleroftheSodorrailway
planstoclosedowncertainrailwaystationstopreventthediseasefrom
spreadingtoTidmouth,hishometown.Notrainscanpassthroughaclosed
station.Tominimizeexpense(andpublicnotice),hewantstoclosedown
asfewstationsaspossible.However,hecannotclosetheSkarloeystation,
becausethatwouldexposehimtothedisease,andhecannotclosethe
Tidmouthstation,becausethenhecouldn'tvisithisfavoritepub.
Describeandanalyzeanalgorithmto˝ndtheminimumnumberof
stationsthatmustbeclosedtoblockallrailtravelfromSkarloeytoTidmouth.
TheSodorrailnetworkisrepresentedbyanundirectedgraph,withavertex
foreachstationandanedgeforeachrailconnectionbetweentwostations.
Twospecialvertices
s
and
t
representthestationsinSkarloeyandTidmouth.
Forexample,giventhefollowinginputgraph,youralgorithmshould
returntheinteger
2
.
5.
An
n

n
gridisanundirectedgraphwith
n
2
verticesorganizedinto
n
rows
and
n
columns.Wedenotethevertexinthe
i
throwandthe
j
thcolumn
by
(
i
,
j
)
.Everyvertex
(
i
,
j
)
hasexactlyfourneighbors
(
i

1,
j
)
,
(
i
+
1,
j
)
,
(
i
,
j

1
)
,and
(
i
,
j
+
1
)
,exceptthe
boundary
vertices,forwhich
i
=
1
,
i
=
n
,
j
=
1
,or
j
=
n
.
Let
(
x
1
,
y
1
)
,
(
x
2
,
y
2
)
,...,
(
x
m
,
y
m
)
bedistinctvertices,called
terminals
,
inthe
n

n
grid.The
escapeproblem
istodeterminewhetherthereare
m
369

11.ApplicationsofFlowsandCuts
vintpathsinthegridthatconnecttheterminalstoany
m
distinct
boundaryvertices.
Figure11.10.
Apositiveinstanceoftheescapeproblem,anditssolution.
(a)
Describeandanalyzeane˚cientalgorithmtosolvetheescapeproblem.
Therunningtimeofyouralgorithmshouldbeasmallpolynomialfunction
of
n
.
(b)
Nowsupposetheinputtotheescapeproblemconsistsofasingleinteger
n
andthelistof
m
terminalvertices.If
m
isverysmall,thepreviousrunning
timeisactually
exponential
intheinputsize!Describeandanalyzean
algorithmtosolvetheescapeproblemintime
polynomialin
m
.
ª
(c)
Modifythepreviousalgorithmtooutputanexplicitdescriptionofthe
escapepaths(iftheyexist),stillintimepolynomialin
m
.
6.
TheSPUCommuterSilenceDepartmentisinstallingacoursein
thebasementoftheSCenter!Theplaying˝eldisaclosedpolygon
boundedby
m
horizontalandverticallinesegments,meetingatrightangles.
Thecoursehas
n
startingpoints
and
n
holes
,inonnecorrespondence.
Itisalwayspossiblehittheballalongastraightlinedirectlyfromeach
startingpointtothecorrespondinghole,withouttouchingtheboundary
oftheplaying˝eld.(Playersarenotallowedtobouncegolfballso˙the
walls;toomuchglass.)The
n
startingpointsand
n
holesareallatdistinct
locations.
Sadly,thearchitect'scomputercrashedjustasconstructionwasaboutto
begin.Thankstotheherculeane˙ortsoftheirsysadmins,theywereableto
recoverthe
locations
ofthestartingpointsandtheholes,butallinformation
aboutwhichstartingpointscorrespondtowhichholeswaslost!
Describeandanalyzeanalgorithmtocomputeaonnecorrespo
dencebetweenthestartingpointsandtheholesthatmeetsthee
requirement,ortoreportthatnosuchcorrespondenceexists.Theinput
consistsofthe
x
and
y
atesofthe
m
cornersoftheplaying˝eld,the
n
startingpoints,andthe
n
holes.Assumeyoucandetermineinconstant
timewhethertwolinesegmentsintersect,giventhe
x
and
y
ates
oftheirendpoints.
370

Exercises
Figure11.11.
Amini-golfcoursewith˙vestartingpoints(
?
)andholes(

),andalegalcorrespondence
betweenthem.
7.
A
cyclecover
ofagivendirectedgraph
G
=(
V
,
E
)
isasetofvint
cyclesthatcovereveryvertexin
G
.Describeandanalyzeane˚cient
algorithmto˝ndacyclecoverforagivengraph,orcorrectlyreportthatno
cyclecoverexists.
[Hint:Usebipartitematching!]
8.
Supposeyouaregivenan
n

n
checkerboardwithsomeofthesquares
deleted.Youhavealargesetofdominos,justtherightsizetocover
twosquaresofthecheckerboard.Describeandanalyzeanalgorithmto
determinewhetheronetiletheboardwithdominodominomust
coverexactlytwoundeletedsquares,andeachundeletedsquaremustbe
coveredbyexactlyonedomino.
Yourinputisabooleanarray
Deleted
[
1..
n
,1..
n
]
,where
Deleted
[
i
,
j
]=
True
ifandonlyifthesquareinrow
i
andcolumn
j
hasbeendeleted.
Youroutputisasingleboolean;youdo
not
havetocomputetheactual
placementofdominos.Forexample,fortheboardshowninFigure
11.12
,
youralgorithmshouldreturn
True
.
Figure11.12.
Coveringapartialcheckerboardwithdominos.
9.
Supposewearegivenan
n

n
squaregrid,someofwhosesquaresare
coloredblackandtherestwhite.Describeandanalyzeanalgorithmto
determinewhethertokenscanbeplacedonthegridsothat
‹
everytokenisonawhitesquare;
‹
everyrowofthegridcontainsexactlyonetoken;and
‹
everycolumnofthegridcontainsexactlyonetoken.
371

11.ApplicationsofFlowsandCuts
Yourinputisatwodimensionalarray
IsWhite
[
1..
n
,1..
n
]
ofbooleans,
indicatingwhichsquaresarewhite.Youroutputisasingleboolean.For
example,giventhegridinFigure
11.13
asinput,youralgorithmshould
return
True
.
Figure11.13.
Markingeveryrowandcolumninagrid.
10.
Supposewearegivenasetofboxes,eachspeci˝edbytheirheight,width,
anddepthincentimeters.Allthreesidelengthsofeveryboxliestrictly
between10cmand20cm.Asyoushouldexpect,oneboxcanbeplaced
insideanotherifthe˝rstboxcanberotatedsothatitsheight,width,and
deptharerespectivelysmallerthantheheight,width,anddepthofthe
secondbox.Boxescanbenestedrecursively.Callaboxis
visible
ifitisnot
insideanotherbox.
Describeandanalyzeanalgorithmtonesttheboxessothatthenumber
ofvisibleboxesisassmallaspossible.
11.
Supposewearegivenan
n

n
grid,someofwhosecellsaremarked;thegrid
isrepresentedbyanarray
M
[
1..
n
,1..
n
]
ofbooleans,where
M
[
i
,
j
]=
True
ifandonlyifcell
(
i
,
j
)
ismarked.A
monotone
paththroughthegridstarts
attheteftcell,movesonlyrightordownateachstep,andendsat
thebottocell.Ourgoalistocoverthemarkedcellswithasfew
monotonepathsaspossible.
Figure11.14.
Greedilycoveringthemarkedcellsinagridwithfourmonotonepaths.
(a)
Describeanalgorithmto˝ndamonotonepaththatcoversthelargest
numberofmarkedcells.
372

Exercises
(b)
Thereisanaturalgreedyheuristicto˝ndasmallcoverbymonotone
paths:Ifthereareanymarkedcells,˝ndamonotonepath
ˇ
thatcovers
thelargestnumberofmarkedcells,unmarkanycellscoveredby
ˇ
those
markedcells,andrecurse.Showthatthisalgorithmdoes
not
always
computeanoptimalsolution.
(c)
Describeandanalyzeane˚cientalgorithmtocomputethesmallestset
ofmonotonepathsthatcoverseverymarkedcell.
12.
TheFacultySenateatSoobananaUniversityhasdecidedtoconvenea
committeetodeterminewhetherUncleGabby,ProfessorBoboCornelius,
orMofothePsychicGorillashouldreplacetherecentlydisgracedBaron
Factotumasthenewo˚cial
mascot
symbol
ofSPU'sathleticteams(The
FightingPhs).Exactlyonefacultymembermustbechosenfromeach
academicdepartmenttoserveonthiscommittee.Somefacultymembers
haveappointmentsinmultipledepartments,buteachcommitteemember
canrepresentonlyonedepartment.Forexample,ifProf.Blagojevichis
a˚liatedwithboththeDepartmentofCorruptionandtheDepartmentof
Stupidity,andheischosenastheStupidityrepresentative,thensomeone
elsemustrepresentCorruption.Finally,Universitypolicyrequiresthat
everyfacultycommitteemustcontainexactlythesamenumberofassistant
professors,associateprofessors,andfullprofessors.Fortunately,thenumber
ofdepartmentsisamultipleof3.
DescribeandanalyzeanalgorithmtochooseasubsetoftheSPUfaculty
tosta˙ThePoactotumSimian
Mascot
Symbol
Committee,orcorrectly
reportthatnovalidcommitteeispossible.Yourinputisabipartitegraph
indicatingwhichprofessorsbelongtowhichdepartments;eachprofessor
vertexislabeledwiththatprofessor'srank(assistant,associate,orfull).
13.
TheDepartmentofCommuterSilenceatSoobananaUniversityhas
a˛exiblecurriculumwithacomplexsetofgraduationrequirements.The
departmento˙ers
n
di˙erentcourses,andthereare
m
di˙erentrequirements.
Eachrequirementspeci˝esasubsetofthe
n
coursesandthenumberof
coursesthatmustbetakenfromthatsubset.Thesubsetsfordi˙erent
requirementsmayoverlap,buteachcoursecanbeusedtosatisfy
atmost
one
requirement.
Forexample,supposethereare
n
=
5
courses
A
,
B
,
C
,
D
,
E
and
m
=
2
graduationrequirements:
‹
Youmusttakeatleast
2
coursesfromthesubset
f
A
,
B
,
C
g
.
‹
Youmusttakeatleast
2
coursesfromthesubset
f
C
,
D
,
E
g
.
Thenastudentwhohasonlytakencourses
B
,
C
,
D
cannotgraduate,buta
studentwhohastakeneither
A
,
B
,
C
,
D
or
B
,
C
,
D
,
E
cangraduate.
373

11.ApplicationsofFlowsandCuts
Describeandanalyzeanalgorithmtodeterminewhetheragivenstudent
cangraduate.Theinputtoyouralgorithmisthelistof
m
requirements
(eachspecifyingasubsetofthe
n
coursesandthenumberofcoursesthat
mustbetakenfromthatsubset)andthelistofcoursesthestudenthastaken.
14.
You'reorganizingtheFirstAnnualSPUCommuterSilenceourDance
Exchange,tobeheldalldayFriday,Saturday,andSunday.Severalute
setsofmusicwillbeplayedduringtheevent,andalargenumberofDJs
haveappliedtoperform.YouneedtohireDJsaccordingtothefollowing
constraints.
‹
Exactly
k
setsofmusicmustbeplayedeachday,andthus
3
k
sets
altogether.
‹
EachsetmustbeplayedbyasingleDJinaconsistentmusicgenre
(ambient,bubblegum,dubstep,horrorcore,KKwaito,mariachi,
headjazz,Nashvillecountry,parapara,ska,...).
‹
Eachgenremustbeplayedatmostonceperday.
‹
EachcandidateDJhasgivenyoualistofgenrestheyarewillingtoplay.
‹
EachDJcanplayatmostthreesetsduringtheentireevent.
Supposethereare
n
candidateDJsand
g
di˙erentmusicalgenresavailable.
Describeandanalyzeane˚cientalgorithmthateitherassignsaDJanda
genretoeachofthe
3
k
sets,orcorrectlyreportsthatnosuchassignmentis
possible.
15.
Supposeyouarerunningawebsitethatisvisitedbythesamesetofpeople
everyday.Eachvisitorclaimsmembershipinoneormore
demographic
groups
;forexample,avisitormightdescribehimselfasmale,years
old,afather,aresidentofIllinois,anacademic,ablogger,andafanofGilbert
andSullivan.
13
Yoursiteissupportedbyadvertisers.Eachadvertiserhas
toldyouwhichdemographicgroupsshouldseeitsadsandhowmanyofits
adsyoumustshoweachday.Altogether,thereare
n
visitors,
k
demographic
groups,and
m
advertisers.
Describeane˚cientalgorithmtodetermine,givenallthedatadescribed
inthepreviousparagraph,whetheryoucanshoweachvisitorexactly
one
adperday,sothateveryadvertiserhasitsdesirednumberofadsdisplayed,
andeveryadisseenbysomeoneinanappropriatedemographicgroup.
16.
Supposewearegivenanarray
A
[
1..
m
][
1..
n
]
ofnoegativerealnumbers.
Wewantto
round
A
toanintegermatrix,byreplacingeachentry
x
in
A
13
Iamaverygoodtheoreticalcomputerscientist,speci˝cally,ageometricalgorithmspecialist.
374

Exercises
witheither
b
x
c
or
d
x
e
,withoutchangingthesumofentriesinanyrowor
columnof
A
.Forexample:
2
6
4
1.23.42.4
3.94.02.1
7.91.60.5
3
7
5
!
2
6
4
142
442
811
3
7
5
(a)
Describeandanalyzeane˚cientalgorithmthateitherrounds
A
inthis
fashion,orreportscorrectlythatnosuchroundingispossible.
(b)
Provethatalegalroundingispossible
ifandonlyif
thesumofentries
ineachrowisaninteger,andthesumofentriesineachcolumnisan
integer.Inotherwords,provethateitheryouralgorithmfrompart(a)
returnsalegalrounding,oralegalroundingis
obviously
impossible.
ª
(c)
Supposeweareguaranteedthatnoneoftheentriesintheinputmatrix
A
isaninteger.Describeandanalyzeanevenfasteralgorithmthateither
rounds
A
orreportscorrectlythatnosuchroundingispossible.Forfull
credit,youralgorithmmustrunin
O
(
mn
)
time.
[Hint:
Don't
use˛ows.]
17.
networks
aremadeupofloweredwirelessdevices.In
ciple
14
,thesenetworkscanbeusedonbattle˝elds,inregionsthathave
recentlysu˙eredfromnaturaldisasters,andinotherareas.
Theideaisthatalargecollectionofcheap,simpledevicescouldbe
utedthroughtheareaofinterest(forexample,bydroppingthemfroman
airplane);thedeviceswouldthenautomaticallycon˝gurethemselvesintoa
functioningwirelessnetwork.
Thesedevicescancommunicateonlywithinalimitedrange.Weassume
allthedevicesareidentical;thereisadistance
D
suchthattwodevicescan
communicateifandonlyifthedistancebetweenthemisatmost
D
.
Wewouldlikeournetworktobereliable,butbecausethedevices
arecheapandlowered,theyfrequentlyfail.Ifadevicedetectsthat
itislikelytofail,itshouldtransmititsinformationtosomeother
backup
devicewithinitscommunicationrange.Werequireeachdevice
x
tohave
k
potentialbackupdevices,allwithindistance
D
of
x
;wecallthese
k
devices
the
backupset
of
x
.Also,wedonotwantanydevicetobeinthebackup
setoftoomanyotherdevices;otherwise,asinglefailuremighta˙ectalarge
fractionofthenetwork.
Sosupposewearegiventhecommunicationradius
D
,parameters
b
and
k
,andanarray
d
[
1..
n
,1..
n
]
ofdistances,where
d
[
i
,
j
]
isthedistance
betweendevice
i
anddevice
j
.Describeanalgorithmthateithercomputes
14
butnotsomuchinpractice
375

11.ApplicationsofFlowsandCuts
abackupsetofsize
k
foreachofthe
n
devices,suchthatnodeviceappears
inmorethan
b
backupsets,orreports(correctly)thatnogoodcollectionof
backupsetsexists.
18.
Facedwiththethreatofbrutallyseverebudgetcuts,PotemkinUniversity
hasdecidedtohireactorstositinclassesastoensurethat
everyclasstheyo˙eriscompletelyfull.Becauseactorsareexpensive,the
universitywantstohireasfewofthemaspossible.
Buildingontheirpreviousleadershipexperienceatthenounct
SoobananaUniversity,theadministratorsatPotemkinhavegiven
youadirectedacyclicgraph
G
=(
V
,
E
)
,whoseverticesrepresentclasses,
andwhereeachedge
i

j
indicatesthatthesamecanattend
class
i
andthenlaterattendclass
j
.Inaddition,youarealsogivenanarray
cap
[
1..
V
]
listingthemaximumnumberofwhocantakeeach
class.Describeananalyzeanalgorithmtocomputetheminimumnumber
ofthatwouldalloweveryclasstobe˝lledtocapacity.
19.
Quentin,Alice,andtheotherBrakebillsPhysicalKidsareplanningan
excursionthroughtheNeitherlandstoFillory.TheNeitherlandsisavast,
desertedcitycomposedofseveralplazas,eachcontainingasinglefountain
thatcanmagicallytransportpeopletoadi˙erentworld.Adjacentplazasare
connectedbygates,whichhavebeencursedbytheBeast.Thegatesbetween
plazasareopenonlyfor˝veminuteseveryhour,allsimultaneousm
12:00to12:05,thenfrom1:00to1:05,andsooareotherwiselocked.
Duringthose˝veminutes,ifmorethanonepersonpassesthroughanysingle
gate,theBeastwilldetecttheirpresence.
15
Moreover,anyoneattempting
toopenalockedgate,orattemptingtopassthroughmorethanonegate
withinthesame˝vuteperiodwillturnintoani˚n.
16
However,any
numberofpeoplecansafelypassthrough
di˙erent
gatesatthesametime
and/orpassthroughthesamegateat
di˙erent
times.
YouaregivenamapoftheNeitherlands,whichisagraph
G
witha
vertexforeachfountainandanedgeforeachgate,withthefountainsto
EarthandFilloryclearlymarked.
(a)
Supposeyouarealsogivenapositiveinteger
h
.Describeandanalyze
analgorithmtocomputethemaximumnumberofpeoplethatcanwalk
fromtheEarthfountaintotheFilloryfountaininatmost
h
ho
is,afterthegateshaveopenedatmost
h
utanyonealerting
theBeastorturningintoani˚n.Therunningtimeofyouralgorithm
shoulddependon
h
.
[Hint:Buildadi˙erentgraph.]
15
Thisisverybad.
16
Thisisveryverybad.
376

Exercises
¨
ª
(b)
Describeananalyzeanalgorithmforpart(a)whoserunningtimeis
polynomialin
V
and
E
,with
no
dependenceon
h
.
(c)
Ontheotherhand,supposeyouarealsogivenaninteger
k
.Describe
andanalyzeanalgorithmtocomputetheminimumnumberofhoursthat
allow
k
peopletowalkfromtheEarthfountaintotheFilloryfountain,
withoutanyonealertingtheBeastorturningintoani˚n.
[Hint:Use
part(a).]
ª
20.
Let
G
=(
L
t
R
,
E
)
beabipartitegraph,whoseleftvertices
L
areindexed
`
1
,
`
2
,...,
`
n
andwhoserightverticesareindexed
r
1
,
r
2
,...,
r
n
.A
ing
M
in
G
is
nossing
if,foreverypairofedges
`
i
r
j
and
`
i
0
r
j
0
in
M
,
wehave
i
<
i
0
ifandonlyif
j
<
j
0
.
(a)
Describeandanalyzeanalgorithmto˝ndthelargestnossing
matchingin
G
.
[Hint:Thisisnotreallya˛owproblem.]
(b)
Describeandanalyzeanalgorithmto˝ndthesmallestnumberofno
crossingmatchings
M
1
,
M
2
,...,
M
k
suchthateachedgein
G
isinexactly
onematching
M
i
.
[Hint:Thisisreallya˛owproblem.]
ª
21.
Let
G
=(
L
t
R
,
E
)
beabipartitegraph,whoseleftvertices
L
areindexed
`
1
,
`
2
,...,
`
n
insomearbitraryorder.
(a)
Amatching
M
in
G
is
dense
iftherearenoconsecutiveunmatched
verticesin
L
;thatis,foreachindex
i
,atleastoneofthevertices
`
i
and
`
i
+
1
isincidenttoanedgein
M
.Describeanalgorithmtodetermine
whether
G
hasadensematching.
(b)
Amatching
M
in
G
is
sparse
iftherearenoconsecutive
matched
vertices
in
L
;thatis,foreachindex
i
,atleastoneofthevertices
`
i
and
`
i
+
1
is
not
incidenttoanedgein
M
.(Inparticular,theemptymatchingis
sparse.)Describeanalgorithmto˝ndthelargestsparsematchingin
G
.
(c)
Amatching
M
in
G
is
palindromic
if,foreveryindex
i
,either
`
i
and
`
n

i
+
1
arebothincidenttoedgesin
M
,orneither
`
i
nor
`
n

i
+
1
isincident
toanedgein
M
.(Inparticular,theemptymatchingispalindromic.)
Describeanalgorithmto˝ndthelargestpalindromicmatchingin
G
.
Noneoftheseproblemsrestrictwhichverticesin
R
arematchedor
matched.
ª
22.
A
rootedtree
isadirectedacyclicgraph,inwhicheveryvertexhasexactly
oneincomingedge,exceptforthe
root
,whichhasnoincomingedges.
Equivalently,arootedtreeconsistsofarootvertex,whichhasedgespointing
totherootsofzeroormoresmallerrootedtrees.Describeane˚cient
algorithmtocompute,giventworootedtrees
A
and
B
,thelargestrooted
377

11.ApplicationsofFlowsandCuts
treethatisisomorphictobothasubgraphof
A
andasubgraphof
B
.More
brie˛y,describeanalgorithmto˝ndthelargestcommonsubtreeoftwo
rootedtrees.
[Hint:Thiswouldbearelativelystraightforwarddynamicprogramming
problemifeithereverynodehad
O
(
1
)
childrenorthechildrenofeachnode
wereorderedfromlefttoright.Butforunorderedtreeswithlargedegree,
youneedanothertechniquetocombinerecursivesubproblemse˚ciently.]
378

[I]nhisshortandbrokentreatiseheprovidesaneternaloflaws,or
evenofmethod,forthereisnomethodexcepttobeveryintelligent,butof
intelligenceitselfswiftlyoperatingtheanalysisofsensationtothepointof
principleandde˙nition.
T.S.EliotonAristotle,PerfectCritic
TheSacredWood
(1921)
Thenicethingaboutstandardsisthatyouhavesomanytochoosefrom;
furthermore,ifyoudonotlikeanyofthem,youcanjustwaitfornextyear'smodel.
AndrewS.Tannenbaum,
ComputerNetworks
(1981)
Itisararemindindeedthatcanrenderthehithertonon-existentblindinglyobvious.
Thecrycouldhavethoughtofisaverypopularandmisleadingone,forthe
factisthattheydidn't,andaverysigni˙cantandrevealingfactitistoo.
DirkGentlytoRichardMcDuff
inDouglasAdams'
DirkGently'sHolisticDetectiveAgency
(1987)
Ifaproblemhasnosolution,itmaynotbeaproblem,butafact
nottobesolved,buttobecopedwithovertime.
ShimonPeres,asquotedbyDavidRumsfeld,
Rumsfeld'sRules
(2001)
12
NP-Hardness
12.1AGameYouCan'tWin
Imaginethatasalesmaninaredsuit,wholookssuspiciouslylikeTomWaits,
presentsyouwithablacksteelboxwith
n
binaryswitchesonthefrontand
alightbulbontop.Thesalesmantellsyouthatthestateofthelightbulbis
controlledbyacomplex
booleancircuit
collectionof
And
,
Or
,and
Not
gates
connectedbywires,withoneinputwireforeachswitchandasingleoutput
wireforthebulb.Hethenasksyouasimplequestion:Isitpossibletoset
theswitchessothatthelightbulbturnson?Ifyoucananswerthisquestion
correctly,hewillgiveyou
onemillion
onehundredbilliondollars;ifyouanswer
incorrectly,orifyoudiewithoutanswering,hewilltakeyoursoul.
Figure12.1.
An
And
gate,an
Or
gate,anda
Not
gate.
379

12.NP-Hardness
Figure12.2.
Abooleancircuit.Inputsenterfromtheleft,andtheoutputleavestotheright.
Asfarasyoucantell,theAdversaryhasn'tconnectedtheswitchestothe
lightbulbatall,sonomatterhowyousettheswitches,thelightbulbwillstay
o˙.Ifyoudeclarethatit
is
possibletoturnonthelight,theAdversarywillopen
theboxandrevealthatthereisnocircuitatall.Butifyoudeclarethatitis
not
possibletoturnonthelight,beforetestingall
2
n
settings,theAdversary
willmagicallycreateacircuitinsidetheboxthatturnsonthelight
ifandonly
if
theswitchesareinoneofthesettingsyouhaven'ttested,andthen˛ipthe
switchestothatsetting,turningonthelight.(Youcan'tdetecttheAdversary's
cheating,becauseyoucan'tseeinsidetheboxuntiltheend.)Theonlyway
to
provably
answertheAdversary'squestioncorrectlyistotryall
2
n
possible
settings.Youquicklyrealizethatthiswilltake
far
longerthanyouexpectto
live,soyougracefullydeclinetheAdversary'so˙er.
TheAdversarysmilesandsays,inagrowllikeHeathLedger'sJokerafter
smokingacartonofMarlboros,Ah,yes,ofcourse,youhavenoreasontotrust
me.ButperhapsIcansetyourmindateaHehandsyoualargerollof
chyouhopewasmadefrom
sheep
sacircuitdiagram
drawn(orperhapstattooed)onit.erearethecompleteplansforthecircuit
insidethebox.Feelfreetopokearoundinsidetheboxtomakesuretheplans
arecorrect.Orbuildyourowncircuitfromtheseplans.Orwriteacomputer
programtosimulatethecircuit.Whateveryoulike.Ifyoudiscoverthatthe
plansdon'tmatchtheactualcircuitinthebox,youwinthehundredbillion
buAfewspotchecksconvinceyouthattheplanshavenoobvious˛aws;
subtlecheatingappearstobeimpossible.
ButyoushouldstilldeclinetheAdversary'serouo˙er.Theproblem
thattheAdversaryisposingiscalled
circuitsatis˝ability
or
CircuitSat
:Given
abooleancircuit,isthereasetofinputsthatmakesthecircuitoutput
True
,or
conversely,whetherthecircuit
always
outputs
False
.Forany
particular
input
setting,wecancalculatetheoutputofthecircuitinpolynomial(actually,
linear
)
timeusingButnobodyknowshowtosolve
CircuitSat
faster
thantryingall
2
n
possibleinputstothecircuitbybruteforce,whichrequires
exponentialtime.Admittedly,nobodyhasactuallyformally
proved
thatwecan't
380

12.2.PversusNP
beatbrutefybe,just
maybe
,there'sacleveralgorithmthatjusthasn't
beendiscoveredutnobodyhasactuallyformallyprovedthatvity
unicornsdon'texist,either.Forallpracticalpurposes,it'ssafetoassumethat
thereisnofastalgorithmfor
CircuitSat
.
Youtellthesalesmanno.Hesmilesandsays,ou'resmarterthanyoulook,
andthen˛iesawayonhisvityunicorn.
12.2PversusNP
Aminimalrequirementforanalgorithmtobeconsideredciisthatits
runningtimeisboundedbyapolynomialfunctionoftheinputsize:
O
(
n
c
)
for
someconstant
c
,where
n
isthesizeoftheinput.
1
Researchersrecognized
earlyonthatnotallproblemscanbesolvedthisquickly,buthadahardtime
˝guringoutexactlywhichonescouldandwhichonescouldn't.Thereare
severallled

problems,whichmostpeoplebelieve
cannot
besolved
inpolynomialtime,eventhoughnobodycanproveaomiallower
bound.
A
decisionproblem
isaproblemwhoseoutputisasinglebooleanvalue:
Yes
or
No
.Letmede˝nethreeclassesofdecisionproblems:
‹
P
isthesetofdecisionproblemsthatcanbesolvedinpolynomialtime.
Intuitively,Pisthesetofproblemsthatcanbesolvedquickly.
‹
NP
isthesetofdecisionproblemswiththefollowingproperty:Iftheanswer
is
Yes
,thenthereisa
proof
ofthisfactthatcanbecheckedinpolynomial
time.Intuitively,NPisthesetofdecisionproblemswherewecanverifya
Yes
answerquicklyifwehavethesolutioninfrontofus.
‹

isessentiallytheoppositeofNP.Iftheanswertoaproblemin
is
No
,thenthereisaproofofthisfactthatcanbecheckedinpolynomial
time.
Forexample,thecircuitsatis˝abilityproblemisinNP.Ifagivenbooleancircuit
issatis˝able,thenanysetof
m
inputvaluesthatproduces
True
outputisa
proofthatthecircuitissatis˝able;wecanchecktheproofbyevaluatingthe
circuitinpolynomialtime.Itiswidelybelievedthatcircuitsatis˝abilityis
not
inPorinbutnobodyactuallyknows.
EverydecisionprobleminPisalsoinNP.IfaproblemisinP,wecanverify
Yes
answersinpolynomialtimerecomputingtheanswerfromscratch!Similarly,
everyprobleminPisalsoin
1
Thisnotionofe˚ciencywasindependentlyformalizedbyAlanCobhamin1965,Jack
Edmondsin1965,andMichaelRabinin1966,althoughsimilarnotionswereconsideredmore
thanadecadeearlierbyKurtGödel,JohnNash,andJohnvonNeumann.
381

12.NP-Hardness
Perhapsthesinglemostimportantunansweredquestionintheoretical
computersciennotallofcomputersciennotallof
science

whetherthecomplexityclassesPandNPareactuallydi˙erent.Intuitively,
itseemsobvioustomostpeoplethatP
6
=
NP;thehomeworksandexamsin
youralgorithmsanddatastructuresclasseshave(Ihope)convincedyouthat
problemscanbeincrediblyhardtosolve,evenwhenthesolutionsaresimple
inretrospect.It'scompletelyobvious;
ofcourse
solvingproblemsfromscratch
isharderthanverifyingthatagivensolutioniscorrect.Wecanreasonably
mostalgorithmdesigners
do
statement
6
=
asa
lawofnature,similartootherlawsofnaturelikeMaxwell'sequations,general
relativity,andthesunrisingtomorrowmorningthatarestronglysupportedby
evidence,buthavenomathematicalproof.
Butifwe'rebeingmathematicallyrigorous,wehavetoadmitthatnobody
knowshowto
prove
thatthatP
6
=
NP.Infact,therehasbeenlittleornoreal
progresstowardaprooffordecades.
2
TheClayMathematicsInstitutelists
Persuasthe˝rstofitssevenMillenniumPrizeProblems,o˙eringa
$1,000,000rewardforitssolution.Andyes,infact,severalpeople
have
lost
theirsouls,oratleasttheirsanity,attemptingtosolvethisproblem.
AmoresubtlebutstillopenquestioniswhetherthecomplexityclassesNP
andaredi˙erent.Evenifwecanverifyevery
Yes
answerquickly,there's
noreasontobelievewecanalsoverify
No
answersquickly.Forexample,asfar
asweknow,thereisnoshortproofthatabooleancircuitis
not
satis˝able.Itis
generallybelievedthatNP
6
=
butagain,nobodyknowshowtoproveit.
Figure12.3.
Whatwe
think
theworldlookslike.
12.3NP-hard,NP-easy,andNP-complete
Aproblem

is

ifapolynomiaalgorithmfor

wouldimplya
polynomiaalgorithmfor
everyprobleminNP
.Inotherwords:

is
()
If

canbesolvedinpolynomialtime,thenP=NP
2
Perhapsthemostsigni˝cantprogresshastakentheformof
barrier
results,whichimplythat
entireavenuesofattackaredoomedtofail.Inaveryrealsense,notonlydowehavenoidea
howtoproveP
6
=
NP,butwecanactually
prove
thatwehavenoideahowtoproveP
6
=
NP!
382

12.3.NP-hard,NP-easy,andNP-complete
Intuitively,ifwecouldsolveoneparticularproblemquickly,thenwe
couldquicklysolve
any
problemwhosesolutioniseasytounderstand,using
thesolutiontothatonespecialproblemasasubroutine.problemsare
atleastashardaseveryprobleminNP.
Finally,aproblemis
mplete
ifitisbothandanelementof
NP(orInformally,mpleteproblemsarethehardestproblems
inNP.Apolynomiaalgorithmforevenonempleteproblemwould
immediatelyimplyapolynomiaalgorithmfor
every
mpleteproblem.
Literally
thousands
ofproblemshavebeenshowntobemplete,soa
polynomiaalgorithmforone(andthereforeall)ofthemseemsincredibly
unlikely.
CallingaproblemislikesayingIownadog,thenitcanspeak
˛uentEnglisYouprobablydon'tknowwhetherornotIownadog,butIbet
you'reprettysurethatIdon'towna
talking
dog.Nobodyhasamathematical
proof
thatdogscan'tspeakEnglisfactthatnoonehaseverheardadog
speakEnglishis
evidence
,asarethehundredsofexaminationsofdogsthat
lackedthepropermouthshapeandbrainpower,butmereevidenceisnota
mathematical
proof
.Nevertheless,nosanepersonwouldbelievemeifIsaidI
ownedadogthatspoke˛uentEnglish.
3
SothestatementIownadog,then
itcanspeak˛uentEnglishasanaturalcorollary:Nooneintheirrightmind
shouldbelievethatIownadog!Similarly,ifaproblemisnoonein
theirrightmindshouldbelieveitcanbesolvedinpolynomialtime.
Figure12.4.
Moreofwhatwe
think
theworldlookslike.
Itisnotimmediatelyobviousthat
any
problemsareThef
lowingremarkabletheoremwas˝rstpublishedbyStephenCookin1971and
independentlybyLeonidLevinin1973.
4
3
...Thedepartmentchairshakeshisheadsadlyandsays,comeon,thatjustsounds
likebarking.Let
me
askaquestion.WhowasthegreatestcomplexitytheoristofallThe
dogcockshishead,pausesforafewseconds,andthensaysAfterthechairchasesthem
outofhiso˚ce,thedogturnstoitsownerandsays,ybeIshouldhavesaidImpagliazz
4
Levin˝rstreportedhisresultsatseminarsinMoscowin1971,whilestillaPhDstudent.News
ofCook'sresultdidnotreachtheSovietUnionuntilatleast1973,afterLevin'sannouncementof
hisresultshadbeenpublished;inaccordancewithStigler'sLaw,thisresultisoftencalledook's
LevinwasdeniedhisPhDatMoscowUniversityforpoliticalreasons;heemigratedto
theUSin1978andearnedaPhDatMITayearlater.CookwasdeniedtenurebytheBerkeley
383

12.NP-Hardness
TheCevinTheorem.
Circuitsatis˝abilityis
Iwon'tevensketchaproofhere,becauseI'vebeen(deliberately)vague
aboutthede˝nitions.
5
ª
12.4FormalDe˙nitions(
HCSVNTDRACONES
)
Formally,thecomplexityclassesP,NP,andarede˝nedintermsof
languages
and
Turingmachines
.Alanguageisasetofstringsoversome˝nite
alphabet

;withoutlossofgenerality,wecanassumethat

=
f
0
,
1
g
.ATuring
machineisaveryrestrictivetypeofco,aatemachine
withanunboundedmemorytaseprecisede˝nitionissurprisingly
unimportant.Pisthesetoflanguagesthatcanbedecidedin
P
olynomialtime
byadeterministicsinglapeTuringmachine.Similarly,NPisthesetofall
languagesthatcanbedecidedinpolynomialtimebyanondeterministicTuring
machine;NPisanabbreviationfor
N
ondeterministic
P
olynomia
Therequirementofpolynomialtimeissu˚cientlycrudethatwedonot
havetospecifythepreciseformofTuringmachine(numberoftapes,number
ofheads,numberoftracks,sizeofthetapealphabet,andsoon).Infact,any
algorithmthatrunsonarandomachine
6
in
T
(
n
)
timecanbesimulated
byasinglape,singlsinglTuringmachinethatrunsin
O
(
T
(
n
)
4
)
time.Thissimulationresultallowsustoargueformallyaboutcomputational
complexityintermsofstandardevelprogrammingconstructslikearrays
andloopsandrecursion,insteadofdescribingeverythingdirectlyintermsof
Turingmachines.
Formally,aproblem

isNPifandonlyif,foreverylanguage

0
2
NP
,
thereisapolynomia
Turingreduction
from

0
to

.ATuringreduction
meansareductionthatcanbeexecutedonaTuringmachine;thatis,aTuring
machine
M
thatcansolve

0
usinganotherTuringmachine
M
0
for

as
ablsubroutine.Turingreductionsarealsocalled
oraclereductions
;
polynomiaTuringreductionsarealsocalled
Cookreductions
.
mathematicsdepartmentin1970,justoneyearbeforepublishinghisseminalpaper;he(butnot
Levin)laterwontheTuringawardforhisproof.
5
Interestedreaders˝ndaproofinmylecturenotesonnondeterministicTuringmachinesat
http://algorithms.wtf
,orinBoazBarak'sexcellent
IntroductiontoTheoreticalComputerScience
.
6
Randomachinesareamodelofcomputationthatmorefaithfullymodelsphysical
computers.Astandardrandomachinehasunboundedrandomemory,modeled
asanunboundedarray
M
[
0..
1
]
whereeachaddress
M
[
i
]
holdsasingle
w
integer,for
some˝xedinteger
w
,andcanreadtoorwritefromanymemoryaddressesinconstanttime.
RAMalgorithmsareformallywritteninassemblanguage,usinginstructionslike
ADD
i
,
j
,
k
(meaning
M
[
i
]
 
M
[
j
]+
M
[
k
]

INDIR
i
,
j
(meaning
M
[
i
]
 
M
[
M
[
j
]]
and
IF0GOTO
i
,
`
(meaning
M
[
i
]=
0
,gotoline
`
butthepreciseinstructionsetissurprisinglyirrelevant.By
de˝nition,eachinstructionexecutesinunittime.Inpractice,RAMalgorithmscanbefaithfully
describedusingevelpseudocode,aslongaswe'recarefulaboutarithmeticprecision.
384

12.5.Reductionsand
Sat
Researchersincomplexitytheoryprefertode˝neessintermsof
polynomia
manynereductions
,whicharealsocalled
Karpreductions
.
A
manyne
reductionfromonelanguage
L
0



toanotherlanguage
L



isafunction
f
:


!


suchthat
x
2
L
0
ifandonlyif
f
(
x
)
2
L
.Thenwecan
de˝nea
language
L
tobeifandonlyif,foranylanguage
L
0
2
NP
,there
isanereductionfrom
L
0
to
L
thatcanbecomputedinpolynomialtime.
EveryKarpreductionaCookreduction,butnotviceversa.Speci˝cally,
anyKarpreductionfromonedecisionproblem

toanotherdecision

0
is
equivalenttotransformingtheinputto

intotheinputfor

0
,invokingan
oracle(thatis,asubroutine)for

0
,andthenreturningtheanswerverbatim.
However,asfarasweknow,noteveryCookreductioncanbesimulatedbya
Karpreduction.
ComplexitytheoristspreferKarpreductionsprimarilybecauseNPisclosed
underKarpreductions,butis
not
closedunderCookreductions(unless
NP,whichisconsideredunlikely).Therearenaturalproblemsthatare(1)
withrespecttoCookreductions,but(2)withrespecttoKarp
reductionsonlyifP=NP.Onetrivialexampleofsuchaproblemis
UnSat
:Given
abooleanformula,isit
alwaysfalse
?Ontheotherhand,nereductions
apply
only
todecisionproblems(ormoreformally,tolanguages);formally,no
optimizationorconstructionproblemis
Tomakethingsevenmoreconfusing,bothCookandKarporiginallyde˝ned
essintermsof
logarithmipace
reductions.Everylogarithmipace
reductionisapolynomiareduction,but(asfarasweknow)notvice
versa.Itisanopenquestionwhetherrelaxingthesetofallowed(Cookor
Karp)reductionsfromlogarithmipacetopolynomiachangesthesetof
problems.
Fortunately,noneofthesesubtletiesreartheiruglyheadsinpracti
particular,everyreductiondescribedinthischaptercanbeformalizedasa
logarithmipacenereductioyoucanwakeupnow.
12.5Reductionsand
Sat
Toprovethatanyproblemotherthancircuitsatis˝abilityisweusea
reductionargument
.ReducingproblemAtoanotherproblemBmeansdescribing
analgorithmtosolveproblemAundertheassumptionthatanalgorithmfor
problemBalreadyexists.You'vealreadybeendoingreductionforyears,even
beforestartingthisbook,onlyyouprobablycalledthemsomethingelse,like
subroutinesorutilityfunctionsormodularprogrammingorusingacalculator.
Toprovesomethingiswedescribeasimilartransformationbetween
problems,butnotinthedirectionthatmostpeopleexpect.
385

12.NP-Hardness
Youshouldtattoothefollowingruleofontothebackofyourhand,right
nexttoyourmom'sbirthdayandthe
actual
rulesofMonopoly.
7
Toprovethatproblem
A
is
reduceaknownproblemto
A
.
Inotherwords,toprovethatyourproblemishard,youneedtodescribean
e˚cientalgorithmtosolvea
di˙erent
problem,whichyoualreadyknowis
hard,usinganhypotheticale˚cientalgorithmfor
your
problemasabl
subroutine.Theessentiallogicisaproofbycontradiction.Thereduction
impliesthatifyourproblemwereeasy,thentheotherproblemwouldbeeasy,
whichitain't.Equivalently,sinceyouknowtheotherproblemishard,the
reductionimpliesthatyourproblemmustalsobehard;yourhypothetical
e˚cientalgorithmdoesnotactuallyexist.
Asacanonicalexample,considerthe
formulasatis˝ability
problem,usually
justcalled
Sat
.Theinputto
Sat
isaboolean
formula
like
(
a
_
b
_
c
_
¯
d
)
,
((
b
^
¯
c
)
_
(
¯
a
)
d
)
_
(
c
6
=
a
^
b
))
,
andthequestioniswhetheritispossibletoassignbooleanvaluestothevariables
a
,
b
,
c
,...
sothattheentireformulaevaluatesto
True
.
Toprovethat
Sat
isweneedtogiveareductionfromaknown
problem.Theonlyproblemweknowissofaris
CircuitSat
,
solet'sstartthere.
Let
K
beanarbitrarybooleancircuit.Wecantransform(ormoreaccurately,
transcribe
)
K
intoabooleanformula

asfollows.First,labeleachinteriorwire
byanewvariable
y
j
,andlabeltheoutputwirewithanewvariable
z
.The
formula

consistsofalistofequations,oneforeachgate,separatedby
And
s,
followedbya˝nal
^
z
.Figure
12.5
showstheresultingtranscriptionforour
examplecircuit.
Nowweclaimthattheoriginalcircuit
K
issatis˝able
ifandonlyif
the
resultingformula

issatis˝able.Likeeveryotherandonlyifstatement,we
provethisclaimintwosteps:
7
Ifaplayerlandsonanavailablepropertyanddeclines(orisunable)tobuyit,thatproperty
isimmediatelyauctionedo˙tothehighestbidder;theplayerwhooriginallydeclinedtheproperty
maybid,andbidsmaybearbitrarilyhigherorlowerthanthelistprice.PlayersinJailcanstill
buyandsellproperty,buyandsellhousesandhotels,andcollectrent.Thegamehas32houses
and12hotels;oncethey'regone,they'regone.Inparticular,ifallhousesarealreadyonthe
board,youcannotdowngradeahoteltofourhouses;youmustrazeallthehotelsinthegroup
totheground.Playerscansellorexchange
undeveloped
propertieswitheachother,butcannot
sellpropertybacktothebank;ontheotherhand,playerscansellbuildingstothebank(athalf
price),butcannotsellorexchangebuildingswitheachother.Allpenaltiesarepaiddirectlyto
thebank.AplayerlandingonFreeParkingdoesnotwinanything.AplayerlandingonGogets
exactly$200,nomore.Railroadsarenotmagictransporters.Finally,Je˙
always
getstheboot.
No,nottheTexorthe
boot
,dammit.
386

12.5.Reductionsand
Sat
(
y
1
=
x
1
^
x
4
)
^
(
y
2
=
x
4
)
^
(
y
3
=
x
3
^
y
2
)
^
(
y
4
=
y
1
_
x
2
)
^
(
y
5
=
x
2
)
^
(
y
6
=
x
5
)
^
(
y
7
=
y
3
_
y
5
)
^
(
z
=
y
4
^
y
7
^
y
6
)
^
z
Figure12.5.
Transcribingabooleancircuitasabooleanformula.
)
Givenasetofinputsthatsatisfythecircuit
K
,wecanderiveasatisfying
assignmentfortheformula

bycomputingtheoutputofeverygatein
K
.
(
Givenasatisfyingassignmentfortheformula

,wecanobtainasatisfying
inputthecircuitbysimplyignoringtheinternalwirevariables
y
i
andthe
outputvariable
z
.
Theentiretransformationfromcircuittoformulacanbecarriedoutinlinear
time.Moreover,thesizeoftheresultingformulaisatmostaconstantfactor
largerthananyreasonablerepresentationofthecircuit.
Nowsuppose,forthesakeofargument,thereisanalgorithmthatcan
determineinpolynomialtimewhetheragivenbooleanformulaissatis˝able.
Thengivenanybooleancircuit
K
,wecandecidewhether
K
issatis˝ableby˝rst
transforming
K
intoabooleanformula

asdescribedabove,andthenasking
ourmagicalmystery
Sat
algorithmwhether

issatis˝able,assuggestedbythe
followingcartoon.Eachboxrepresentsanalgorithm.Theredboxontheleftis
thetransformationsubroutine.Theboxontherightisthehypotheticalmagic
Sat
algorithm.It
must
bemagic,becauseithasa
rainbow
onit.
8
Ifyouprefermagicpseudocodetomagicboxes:
8
KayErickson,personalcommunication,2011.Forthoseofyoureadingbl
printedcopies:Yes,thatroundthingisarainbow.
387

12.NP-Hardness
CircuitSat
(
K
)
:
transcribe
K
intoabooleanformula

return
Sat
(

)
hh
?
?
?
?
M
A
G
I
C
?
?
?
?
ii
Transcribing
K
into

requiresonlypolynomialtime(infact,only
linear
time,
butwhatever),sotheentire
CircuitSat
algorithmalsorunsinpolynomialtime.
T
CircuitSat
(
n
)

O
(
n
)+
T
Sat
(
O
(
n
))
Weconcludethatanypolynomiaalgorithmfor
Sat
wouldgiveusa
polynomiaalgorithmfor
CircuitSat
,whichinturnwouldimplyP=NP.
So
Sat
is
12.6
3Sat
(from
CircuitSat
)
Aspecialcaseof
Sat
thatisparticularlyusefulinprovingessresultsis
called
3CNFat
ormoreoftensimply
3Sat
.
Abooleanformulaisin
conjunctivenormalform
(CNF)ifitisaconjunction
(
and
)ofseveral
clauses
,eachofwhichisthedisjunction(
or
)ofseveral
literals
,
eachofwhichiseitheravariableoritsnegation.Forexample:
clause
z
}|
{
(
a
_
b
_
c
_
d
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
)
A
3CNF
formulaisaCNFformulawithexactlythreeliteralsperclause;the
previousexampleisnota3CNFformula,sinceits˝rstclausehasfourliterals
anditslastclausehasonlytwo.
3Sat
istherestrictionof
Sat
to3CNFformulas:
Givena3CNFformula,isthereanassignmenttothevariablesthatmakesthe
formulaevaluateto
True
?
Wecouldprovethat
3Sat
isbyareductionfromthemoregeneral
Sat
problem,butit'sactuallyeasiertostartoverfromscratch,byreducing
directlyfrom
CircuitSat
.
Figure12.6.
Apolynomial-timereductionfrom
CircuitSat
to
3Sat
.
Givenanarbitrarybooleancircuit
K
,wetransform
K
intoanequivalent
3CNFformulainseveralstages.Exceptfortheverylaststage,thisreduction
388

12.6.
3Sat
(from
CircuitSat
)
wasactuallydescribedbyGrigoriiTseitinin1966,˝veyearsbeforeCookand
LevinreportedtheirproofsoftheCevinTheorem.(Inthesame1966
paper,Tseitindescribedtheproblemwenowcall
CNFat
,possiblyforthe˝rst
time.)Aswedescribeeachstage,wewillalsoprovethatstageiscorrect.
‹
Makesureevery
and
and
or
gatein
K
hasexactlytwoinputs.
Ifanygatehas
k
>
2
inputs,replaceitwithabinarytreeof
k

1
binarygates.Callthe
resultingcircuit
K
0
.Thecircuits
K
and
K
0
arelogicallyequivalentcircuits,
soeverysatisfyinginputfor
K
isasatisfyinginputfor
K
0
andviceversa.
‹
Transcribe
K
0
intoabooleanformula

1
withoneclausepergate,
exactlyasin
ourpreviousreductionto
Sat
.Wealreadyprovedthateverysatisfyinginput
for
K
0
canbetransformedintoasatisfyingassignmentfor

1
andviceversa.
‹
Replaceeachclausein

1
withaCNFformula.
Thereareonlythreetypesof
clausesin

1
,oneforeachtypeofgatein
K
0
:
a
=
b
^
c
!
(
a
_
¯
b
_
¯
c
)
^
(
¯
a
_
b
)
^
(
¯
a
_
c
)
a
=
b
_
c
!
(
¯
a
_
b
_
c
)
^
(
a
_
¯
b
)
^
(
a
_
¯
c
)
a
=
¯
b
!
(
a
_
b
)
^
(
¯
a
_
¯
b
)
CalltheresultingCNFformula

2
.Because

1
and

2
arelogicallyequivalent
formulas,everysatisfyingassignmentfor

1
isalsoasatisfyingassignment
for

2
,andviceversa.
‹
Replaceeachclausein

2
witha3CNFformula.
Everyclausein

2
has
atmost
threeliterals,butweneedclauseswith
exactly
threeliterals.Toobtaina
3CNFformula,weexpandeachtwlclausein

2
intotwol
clausesbyintroducingonenewvariable,andweexpandthe˝nalonl
clausein

2
intofourlclausesbyintroducingtwonewvariables.
a
_
b
!
(
a
_
b
_
x
)
^
(
a
_
b
_
¯
x
)
z
!
(
z
_
x
_
y
)
^
(
z
_
¯
x
_
y
)
^
(
z
_
x
_
¯
y
)
^
(
z
_
¯
x
_
¯
y
)
Calltheresulting3CNFformula

3
.Everysatisfyingassignmentfor

2
canbe
transformedintoasatisfyingassignmentfor

3
byassigning
arbitrary
values
tothenewvariables(
x
and
y
).Conversely,everysatisfyingassignment
for

3
canbetransformedintoasatisfyingassignmentfor

2
byignoring
thenewvariables.
Forexample,ourexamplecircuitistransformedintothefollowing3CNFformula;
comparewithFigure
12.5
.
389

12.NP-Hardness
(
y
1
_
x
1
_
x
4
)
^
(
y
1
_
x
1
_
z
1
)
^
(
y
1
_
x
1
_
z
1
)
^
(
y
1
_
x
4
_
z
2
)
^
(
y
1
_
x
4
_
z
2
)
^
(
y
2
_
x
4
_
z
3
)
^
(
y
2
_
x
4
_
z
3
)
^
(
y
2
_
x
4
_
z
4
)
^
(
y
2
_
x
4
_
z
4
)
^
(
y
3
_
x
3
_
y
2
)
^
(
y
3
_
x
3
_
z
5
)
^
(
y
3
_
x
3
_
z
5
)
^
(
y
3
_
y
2
_
z
6
)
^
(
y
3
_
y
2
_
z
6
)
^
(
y
4
_
y
1
_
x
2
)
^
(
y
4
_
x
2
_
z
7
)
^
(
y
4
_
x
2
_
z
7
)
^
(
y
4
_
y
1
_
z
8
)
^
(
y
4
_
y
1
_
z
8
)
^
(
y
5
_
x
2
_
z
9
)
^
(
y
5
_
x
2
_
z
9
)
^
(
y
5
_
x
2
_
z
10
)
^
(
y
5
_
x
2
_
z
10
)
^
(
y
6
_
x
5
_
z
11
)
^
(
y
6
_
x
5
_
z
11
)
^
(
y
6
_
x
5
_
z
12
)
^
(
y
6
_
x
5
_
z
12
)
^
(
y
7
_
y
3
_
y
5
)
^
(
y
7
_
y
3
_
z
13
)
^
(
y
7
_
y
3
_
z
13
)
^
(
y
7
_
y
5
_
z
14
)
^
(
y
7
_
y
5
_
z
14
)
^
(
y
8
_
y
4
_
y
7
)
^
(
y
8
_
y
4
_
z
15
)
^
(
y
8
_
y
4
_
z
15
)
^
(
y
8
_
y
7
_
z
16
)
^
(
y
8
_
y
7
_
z
16
)
^
(
y
9
_
y
8
_
y
6
)
^
(
y
9
_
y
8
_
z
17
)
^
(
y
9
_
y
6
_
z
18
)
^
(
y
9
_
y
6
_
z
18
)
^
(
y
9
_
y
8
_
z
17
)
^
(
y
9
_
z
19
_
z
20
)
^
(
y
9
_
z
19
_
z
20
)
^
(
y
9
_
z
19
_
z
20
)
^
(
y
9
_
z
19
_
z
20
)
Yikes!At˝rstglance,thisformulamightlooka
lot
morecomplicatedthanthe
originalcircuit,butinfact,it'sonlylargerbyaconstantfactor.Speci˝cally,the
simpli˝edcircuit
K
0
hasatmosttwiceasmanywiresastheoriginalcircuit
K
,
eachbinarygatein
K
0
istransformedintoatmost˝veclausesin

3
.Evenifthe
formulasizewerealarge
polynomial
function(like
n
374
)ofthecircuitsize,we
wouldstillhaveavalidreduction.
Ourreductiontransformsanarbitrarybooleancircuit
K
intoa3CNFf
mula

3
inpolynomialtime(infact,inlineartime).Moreover,anysatisfying
inputfortheinputcircuit
K
canbetransformedintoasatisfyingassignment
for

3
,andanysatisfyingassignmentfor

3
canbetransformedintoasatisfying
inputfor
K
.Inotherwords,
K
issatis˝ableifandonlyif

3
issatis˝able.Thus,
if
3Sat
canbesolvedinpolynomialtime,then
CircuitSat
canbesolvedin
polynomialtime,whichimpliesthatP
=
NP.Weconcludethat
3Sat
is
12.7MaximumIndependentSet(from
3Sat
)
Forthenextfewproblemsweconsider,theinputisasimple,unweighted,
undirectedgraph,andtheproblemasksforthesizeofthelargestorsmallest
subgraphsatisfyingsomestructuralproperty.
Let
G
beanarbitrarygraph.An
independentset
in
G
isasubsetofthe
verticesof
G
withnoedgesbetweenthem.The
maximumindependentset
problem,whichI'llabbreviate
MaxIndSet
,asksforthesizeofthelargest
independentsetinagivengraph.Iwillprovethat
MaxIndSet
isusing
areductionfrom
3Sat
,assuggestedbyFigure
12.7
.
Givenanarbitrary3CNFformula

,weconstructagraph
G
asfollows.
Let
k
denotethenumberofclausesin

.Thegraph
G
containsexactly
3
k
vertices,oneforeachliteralin

.Twoverticesin
G
areconnectedbyan
edgeifandonlyifeither(1)theycorrespondtoliteralsinthesameclause,or
(2)theycorrespondtoavariableanditsinverse.Forexample,theformula
(
a
_
b
_
c
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
_
¯
d
)
istransformedintothegraph
showninFigure
12.8
.
390

12.7.MaximumIndependentSet(from
3Sat
)
Figure12.7.
Apolynomial-timereductionfrom
3Sat
to
MaxIndSet
.
(
a
_
b
_
c
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
_
¯
d
)
Figure12.8.
Agraphderivedfromthesatis˙able3CNFformulawith4clauses,andanindependent
setofsize4.
Eachindependentsetin
G
containsatmostonevertexfromeachclause
triangle,becauseanytwoverticesineachtriangleareconnected.Thus,the
largestindependentsetin
G
hassize
atmost
k
.Iclaimthat
G
containsan
independentsetofsize
exactly
k
ifandonlyiftheoriginalformula

issatis˝able.
Asusualforandonlyifstatements,theproofconsistsoftwoparts.
)
Suppose

issatis˝able.Fixanarbitrarysatisfyingassignment.Byde˝nition,
eachclausein

containsatleastone
True
literal.Thus,wecanchoose
asubset
S
of
k
verticesin
G
thatcontainsexactlyonevertexperclause
triangle,suchthatthecorresponding
k
literalsareall
True
.Becauseeach
trianglecontainsatmostonevertexin
S
,notwoverticesin
S
areconnected
byatriangleedge.Becauseeveryliteralcorrespondingtoavertexin
S
is
True
,notwoverticesin
S
areconnectedbyanegationedge.Weconclude
that
S
isanindependentsetofsize
k
in
G
.
(
Ontheotherhand,suppose
G
containsanindependentset
S
ofsize
k
.Each
vertexin
S
mustlieinadi˙erentclausetriangle.Supposeweassignthe
value
True
toeachliteralin
S
;becausecontradictoryliteralsareconnected
byedges,thisassignmentisconsistent.Theremaybevariables
x
suchthat
neither
x
nor
¯
x
correspondstoavertexin
S
;wecansetthesevariablesto
391

12.NP-Hardness
anyvaluewelike.Because
S
containsonevertexineachclausetriangle,
eachclausein

contains(atleast)one
True
literal.Weconcludethat

is
satis˝able.
Transformingthe3CNFformula

intothegraph
G
takespolynomialtime,
evenifwedoeverythingbybruteforce.Thus,ifwecouldsolve
MaxIndSet
inpolynomialtime,thenwecouldalsosolve
3Sat
inpolynomialtime,by
transformingtheinputformula

intoagraph
G
andcomparingthesizeofthe
largestindependentsetin
G
withthenumberofclausesin

.Butthatwould
implyP=NP,whichisridiculous!Weconcludethat
MaxIndSet
is
12.8TheGeneralPattern
AllNPessproofmoregenerally,allpolynomiareductio
followthesamegeneraloutline.Toreduceproblem
X
toproblem
Y
inpolynomial
time,weneedtodothreethings:
1.
Describeapolynomiaalgorithmtotransforman
arbitrary
instance
of
x
of
X
intoa
special
instance
y
of
Y
.
2.
Provethatif
x
isainstanceof
X
,then
y
isainstanceof
Y
.
3.
Provethatif
y
isainstanceof
Y
,then
x
isainstanceof
X
.
(Thisisusuallythepartthatcausesthemosttrouble.)
Ofcourse,
developing
acorrectreductiondoesn'tmeanhandlingthesethree
tasksoneatatime.
First
writingdownanalgorithmthat
seems
toworkand
then
tryingprovethatit
actually
worksisrarelysuccessful,especiallyin
settingslikeexams.We
must
developthealgorithm,theproof,andthe
nlyifproofsimultaneously.
ToquotethelategreatRickyJay:
9
Thisisan
acquired
skill.
Onepointthatconfusesmanystudentsisthatthereductionalgorithmonly
orksonewam
X
to
Y
utthecorrectnessproofneedstoorkboth
wayButthecorrectnessproofsarenotactuallysymmetric.Theproof
needstohandle
arbitrary
instancesof
X
,butthenlyifonlyneedstohandle
the
special
instancesof
Y
producedbythereductionalgorithm.Exploitingthis
asymmetryisthekeytosuccessfullydesigningcorrectreductions.
I˝nditusefultothinkintermsoftransforming
certi˝cates
fsthata
giveninstanceislongwiththeinstancesthemselves.Forexample,
acerti˝catefor
CircuitSat
isasetofinputsthatturnsonthelightbulb;
acerti˝catefor
Sat
or
3Sat
isasatisfyingassignment;acerti˝catefor
MaxIndSet
isalargeindependentset.Toreduce
X
to
Y
,weactuallyneedtodesign
three
algorithms,oneforeachofthefollowingtasks:
9
fromhis1996o˙ayshow
RickyJayandhis52Assistants
392

12.8.TheGeneralPattern
‹
Transformanarbitraryinstance
x
of
X
intoaspecialinstance
y
of
Y
in
polynomialtime.
‹
Transformanarbitrarycerti˝catefor
x
intoacerti˝catefor
y
,and
‹
Transformanarbitrarycerti˝catefor
y
intoacerti˝catefor
x
.
Thesecondandthirdtasksrefertotheinputandoutputofthe˝rstalgorithm.The
certi˝cate
transformationneedstobereversible,notthe
instance
transformation.
Weneverhavetotransforminstancesof
Y
,andwedon'tneedtothinkabout
arbitrary
instancesof
Y
atall.Onlythe˝rstalgorithmneedstoruninpolynomial
time(althoughinpractice,thesecondandthirdalgorithmsarealmostalways
simplerthanthe˝rst).
Forexample,ourreductionfrom
CircuitSat
to
3Sat
consistsofthree
algorithms:
‹
The˝rsttransformsan
arbitrary
booleancircuit
K
intoaspecial3CNF
booleanformula

3
,inpolynomialtime.(Encodeeachwireasavariable
andeachgateasaormula,andthenexpandeachormulainto
3CNF.)
‹
Thesecondtransformsan
arbitrary
satisfyinginputfor
K
intoasatisfying
assignmentfor

3
.(Tracetheinputthroughthecircuit,transfervaluesfrom
eachwiretothecorrespondingvariable,andgiveanyadditionalvariables
arbitraryvalues.)
‹
Thethirdtransformsan
arbitrary
satisfyingassignmentfor

3
intoa
isfyinginputfor
K
.(Transfervaluesfromeachwirevariablein

3
tothe
correspondingwirein
K
.)
Thereductionworksbecausethe˝rstalgorithm
encodes
anybooleancircuit
K
intoahighlystructured3CNFformula

3
.Thespeci˝cstructureof

3
restricts
how
itcanbesatis˝ed;everysatisfyingassignmentfor

3
mustmefro
somesatisfyinginputfor
K
.Wedon'thavetothinkaboutarbitrary3CNF
formulasatall.
Similarly,ourreductionfrom
3Sat
to
MaxIndSet
consistsofthreealgorithms:
‹
The˝rsttransformsan
arbitrary
3CNFformula

intoaspecialgraph
G
and
aspeci˝cinteger
k
,inpolynomialtime.
‹
Thesecondtransformsan
arbitrary
satisfyingassignmentfor

intoan
independentsetin
G
ofsize
k
.
‹
Thethirdtransformsan
arbitrary
independentsetin
G
ofsize
k
intoa
satisfyingassignmentfor

.
Again,our˝rsttransformation
encodes
theinputformula

intoahighly
structuredgraph
G
andaspeci˝cinteger
k
.Thestructureof
G
ensuresthat
everyindependentsetofsize
k
mesfroasatisfyingassignmentfor

.We
don'tconsiderarbitrarygraphsorarbitraryindependentsetsizesatall.
393

12.NP-Hardness
12.9CliqueandVertexCover(fromIndependentSet)
A
clique
isanothernameforacompletegraph,thatis,agraphwhereevery
pairofverticesisconnectedbyanedge.The
MaxClique
problemasksforthe
numberofnodesinitslargestcompletesubgraphinagivengraph.A
vertex
cover
ofagraphisasetofverticesthattoucheseveryedgeinthegraph.The
MinVertexCover
problemasksforthesizeofthesmallestvertexcoverina
givengraph.
Figure12.9.
Agraphwhoselargestindependentset,largestclique,andsmallestvertexcoverallhave
size4.
Wecanprovethat
MaxClique
isusingthefollowingeasyreduction
from
MaxIndSet
.Anygraph
G
hasan
mplement
G
withthesame
vertices,butwithexactlytheoppositesetof
uv
isanedgein
G
ifand
onlyif
uv
is
not
anedgein
G
.Asetofverticesisindependentin
G
ifand
onlyifthesameverticesde˝neacliquein
G
.Thus,thelargestindependentin
G
hasthesamevertices(andthusthesamesize)asthelargestcliqueinthe
complementof
G
.
Figure12.10.
Aneasyreductionfrom
MaxIndSet
to
MaxClique
.
Theproofthat
MinVertexCover
isisevensimpler,becauseitrelies
onthefollowingeasyobservation:
I
isanindependentsetinagraph
G
=(
V
,
E
)
ifandonlyifitscomplement
V
n
I
isavertexcoverofthesamegraph
G
.Thus,
the
largest
independentsetinanygraphisthecomplementofthe
smallest
vertex
coverofthesamegraph!Thus,ifthesmallestvertexcoverinan
n
ertexgraph
hassize
k
,thenthelargestindependentsethassize
n

k
.
394

12.10.GraphColoring(from
3Sat
)
Figure12.11.
Aneveneasierreductionsfrom
MaxIndSet
to
MinVertexCover
.
12.10GraphColoring(from
3Sat
)
A
proper
k
oring
ofagraph
G
=(
V
,
E
)
isafunction
C
:
V
!f
1,2,...,
k
g
thatassignsoneof
k
toeachvertex,sothateveryedgehastwodi˙erent
colorsatitsendpoints.(Thearereallyarbitrarylabels,whichfor
simplicitywerepresentbysmallpositiveintegers,ratherthanelectromagnetic
frequencies,CMYKvectors,orPantonenumbers,forexample.)Thegraph
coloringproblemasksforthesmallestpossiblenumberofcolorsinalegal
coloringofagivengraph.
Toprovethatgraphcoloringisitsu˚cestoconsiderthedecision
problem
3Color
:Givenagraph,doesithaveaproper
3
oring?Weprove
3Color
isusingareductionfrom
3Sat
.(Why
3Sat
?Becauseithasa3
init.YouprobablythinkI'mjoking,butI'mnot.)Givena3CNFformula

,we
constructagraph
G
thatisorableifandonlyif

issatis˝able,assuggested
bytheusualdiagram.
Wedescribethereductionusingastandardstrategyofdecomposingthe
outputgraph
G
into
gadgets
,subgraphsthatenforcevarioussemanticsofthe
inputformula

inthelanguageofgraphcoloring.Decomposingreductions
intoseparategadgetsisnotonlyhelpfulforunderstandingexistingreductions
andprovingthemcorrect,butfordesigningnewessreductions.
10
10
Ourreductionfrom
CircuitSat
to
Sat
encodingeachgateintheinputcircuitasaclause
intheoutputformula;theseclausesareSimilarly,ourreductionfrom
3Sat
to
MaxIndSet
usedtwotypeofgadgets:ause(triangles)andariable(edges
betweencontradictingliterals).
395

12.NP-Hardness
Ourformulphreductionusesthreetypesofgadgets:
‹
Thereisasingle
truthgadget
:atrianglewiththreevertices
T
,
F
,and
X
,
whichintuitivelystandfor
True
,
False
,and
Other
.Sincethesevertices
areallconnected,theymusthavedi˙erentcolorsinany
3
oring.Forthe
sakeofconvenience,wewill
name
thosecolors
True
,
False
,and
Other
.
Thus,whenwesaythatanodeiscolored
True
,wemeanthatithasthe
samecolorasvertex
T
.
‹
Foreachvariable
a
,thegraphcontainsa
variablegadget
,whichisatriangle
joiningtwonewnodeslabeled
a
and
a
tonode
X
inthetruthgadget.Node
a
mustbecoloredeither
True
or
False
,andthereforenode
a
mustbecolored
either
False
or
True
,respectively.
Figure12.12.
Thetruthgadgetandavariablegadgetfor
a
.
‹
Finally,foreachclausein

,thegraphcontainsa
clausegadget
.Eachclause
gadgetjoinsthreeliteralnodes(fromthecorrespondingvariablegadgets)
tonode
T
(fromthetruthgadget)using˝venewunlabelednodesandten
edges,asshownbelow.
Figure12.13.
Aclausegadgetfor
(
a
_
b
_
¯
c
)
.
Ine˙ect,eachtriangleintheclausegadgetbehaveslikeay
Inanyvalidoring,ifthetwoverticestotheleftofthetriangle
havethesamecolor,therightmostvertexofthetrianglemusthavethesame
color;ontheotherhand,ifthetwoleftverticeshavedi˙erentcolors,the
coloroftherightvertexcanbechosenarbitrarily.SeeFigure
12.14
.
Itfollowsthatthereisnovalidoringofaclausegadgetwhereall
threeliteralnodesarecolored
False
.Ontheotherhand,anycoloringofthe
literalnodeswithmorethanonecolorcanbeextendedtoavalidoring
oftheclausegadget.Thevariablegadgetsforceeachliteralnodetobe
coloredeither
True
or
False
;thus,inanyvalidoringoftheclause
gadget,atleastoneliteralnodeiscolored
True
.
396

12.10.GraphColoring(from
3Sat
)
Figure12.14.
Allvalid3-coloringsofauptopermutationsofthecolors
The˝nalgraph
G
containsexactly
one
node
T
,exactly
one
node
F
,andexactly
two
nodes
a
and
¯
a
foreachvariable.Forexample,Figure
12.15
showsthegraph
thatresultsfromthesame3CNFformula
(
a
_
b
_
c
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
_
¯
d
)
thatwepreviouslyusedtoillustratethe
MaxIndSet
reductionin
Figure
12.8
.Theoringisoneofseveralthatcorrespondtothesatisfying
assignment
a
=
c
=
True
,
b
=
d
=
False
.
(
a
_
b
_
c
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
_
¯
d
)
Figure12.15.
The3-colorablegraphderivedfromasatis˙able3CNFformula.
We'vealreadydonemostoftheworkforaproofofcorrectness.Iftheformula
issatis˝able,thenwecancolortheliteralnodesaccordingtoanysatisfying
assignment,andthen(becauseeachclauseissatis˝ed)extendthecoloring
acrosseveryclausegadget.Ontheotherhand,ifthegraphisorable,then
wecanextractasatisfyingassignmentfromanyleastoneofthe
threeliteralnodesineveryclausegadgetiscolored
True
.
Because
3Color
isaspecialcaseofthemoregeneralgraphcoloringprobl
397

12.NP-Hardness
Whatistheminimumnumberofcolmoregeneraloptimizationproblem
isalso
12.11HamiltonianCycle
A
Hamiltoniancycle
inagraphisacyclethatvisitseveryvertexexactlyonce.
(Thisisverydi˙erentfroman
Eulercircuit
,whichisaclosed
walk
thattraverses
every
edge
exactlyonce;Eulercircuitsareeasyto˝ndandconstructinlinear
timeusingsearch.)Hereweconsidertwodi˙erentproofsthatthe
Hamiltoniancycleproblemin
directed
graphsis
FromVertexCover
Our˝rstessproofreducesfromthedecisionversionofthevertexcover
problem.Givenan
undirected
graph
G
andaninteger
k
,weconstructa
directed
graph
H
,suchthat
H
hasaHamiltoniancycleifandonlyif
G
hasavertexcover
ofsize
k
.Asinourpreviousreductions,theoutputgraph
H
iscomposedof
severalgadgets,eachcorrespondingtocertainfeaturesoftheinputs
G
and
k
.
‹
Foreachundirectededge
uv
in
G
,thedirectedgraph
H
containsan
edge
gadget
consistingoffourvertices
(
u
,
v
,
in
)
,
(
u
,
v
,
out
)
,
(
v
,
u
,
in
)
,
(
v
,
u
,
out
)
andsixdirectededges
(
u
,
v
,
in
)

(
u
,
v
,
out
)(
u
,
v
,
in
)

(
v
,
u
,
in
)(
v
,
u
,
in
)

(
u
,
v
,
in
)
(
v
,
u
,
in
)

(
v
,
u
,
out
)(
u
,
v
,
out
)

(
v
,
u
,
out
)(
v
,
u
,
out
)

(
u
,
v
,
out
)
asshowninFigure
12.16
.Eachvertexhasanadditionalincomingedge,
andeachvertexhasanadditionaloutgoingedge.AnyHamiltonian
cyclein
H
mustpassthroughanedgegadgetinoneofthreeway
straightthroughonbothsides,orwithadetourfromonesidetotheother
andback.Eventually,theseoptionswillcorrespondtoboth
u
and
v
,only
u
,
oronly
v
belongingtosomevertexcover.
‹
Foreachvertex
u
in
G
,alltheedgegadgetsforincidentedges
uv
are
connectedin
H
intoasingledirectedpath,whichwecalla
vertexchain
.
Speci˝cally,supposevertex
u
has
d
neighbors
v
1
,
v
2
,...,
v
d
.Then
H
has
d

1
additionaledges
(
u
,
v
i
,
out
)

(
u
,
v
i
+
1
,
in
)
foreach
i
from
1
to
d

1
.
398

12.11.HamiltonianCycle
Figure12.16.
AnedgegadgetanditsonlypossibleintersectionswithaHamiltoniancycle.
‹
Finally,
H
alsocontains
k
coververtices
x
1
,
x
2
,...,
x
k
.Eachcoververtexhas
adirectededgetothe˝rstvertexineachvertexchain,andadirectededge
fromthelastvertexineachvertexchain.
Figure
12.17
showsacompleteexampleofourtransformation;eachdoubl
arrowedbluesegmentrepresentsapairofdirectededges.
Figure12.17.
Exampleofourreductionfrom
VertexCover
to
DirectedHamCycle
.
Asusual,weproveourreductioniscorrectintwostages.
)
First,suppose
C
=
f
u
1
,
u
2
,...,
u
k
g
isavertexcoverof
G
ofsize
k
.Wecan
constructaHamiltoniancyclein
H
that
C
asfollows.Foreach
index
i
from
1
to
k
,wetraverseapathfromcoververtex
x
i
,throughthe
vertexchainfor
u
i
,tocoververtex
x
i
+
1
(orcoververtex
x
1
if
i
=
k
).Aswe
traversethechainforeachvertex
u
i
,wedeterminehowtoproceedfrom
eachnode
(
u
i
,
v
,
in
)
asfollows:

If
v
2
C
,followtheedge
(
u
i
,
v
,
in
)

(
u
i
,
v
,
out
)
.

If
v
62
C
,detourthrough
(
u
i
,
v
,
in
)

(
v
,
u
i
,
in
)

(
v
,
u
i
,
out
)

(
u
i
,
v
,
out
)
.
Thus,foreachedge
uv
of
G
,theHamiltoniancyclevisits
(
u
,
v
,
in
)
and
(
u
,
v
,
out
)
aspartof
u
'svertexchainif
u
2
C
andaspartof
v
'svertexchain
otherwise.SeeFigure
12.18
.
399

12.NP-Hardness
Figure12.18.
Everyvertexcoverofsize
k
in
G
correspondstoaHamiltoniancyclein
H
andviceversa.
(
Ontheotherhand,suppose
H
containsaHamiltoniancycle
C
.This
cyclemustcontainanedgefromeachcoververtextothestartofsome
vertexchain.Ourcaseanalysisofedgegadgetsinductivelyimpliesthat
after
C
entersthevertexchainforsomevertex
u
,itmusttraversethe
tirevertexchain.Speci˝cally,ateachvertex
(
u
,
v
,
in
)
,thecyclemust
containeitherthesingleedge
(
u
,
v
,
in
)

(
u
,
v
,
out
)
orthedetourpath
(
u
,
v
,
in
)

(
v
,
u
,
in
)

(
v
,
u
,
out
)

(
u
,
v
,
out
)
,followedbyanedgetothenext
edgegadgetin
u
'svertexchain,ortoacoververtexifthisisthelastedge
gadgetin
u
'svertexchain.Inparticular,if
C
containsthedetouredge
(
u
,
v
,
in
)

(
v
,
u
,
in
)
,itcannotcontainedgesbetweenanycoververtexand
v
's
vertexchain.Itfollowsthat
C
traversesexactly
k
vertexchains.Moreover,
thesevertexchainsdescribeavertexcoveroftheoriginalgraph
G
,because
C
visitsthevertex
(
u
,
v
,
in
)
foreveryedge
uv
in
G
.
Weconcludethat
G
hasavertexcoverofsize
k
ifandonlyif
H
containsa
Hamiltoniancycle.Thetransformationfrom
G
to
H
takesatmost
O
(
V
2
)
time;
itfollowsthatthedirectedHamiltoniancycleproblemis
From
3Sat
WecanalsoprovethatthedirectedHamiltoniancycleproblemisby
reducingdirectlyfrom
3Sat
.Givenanarbitrary3CNFformula

with
n
variables
x
1
,
x
2
,...,
x
n
and
k
clauses
c
1
,
c
2
,...,
c
k
,weconstructadirectedgraph
H
that
containsaHamiltoniancycleifandonlyif

issatis˝able,asfollows.
Foreachvariable
x
i
,weconstructa
variablegadget
,whichconsistsofa
doublistof
2
k
vertices
(
i
,0
)
,
(
i
,1
)
,...,
(
i
,2
k
)
,connectedbyedges
(
i
,
j

1
)

(
i
,
j
)
and
(
i
,
j
)

(
i
,
j

1
)
foreachindex
j
.Weconnectthe˝rstand
400

12.11.HamiltonianCycle
lastnodesineachadjacentpairofvariablegadgetsbyaddingedges
(
i
,0
)

(
i
+
1,0
)(
i
,2
k
)

(
i
+
1,0
)(
i
,0
)

(
i
+
1,2
k
)(
i
,2
k
)

(
i
+
1,2
k
)
foreachindex
i
;wealsoconnecttheendpointsofthe˝rstandlastvariable
gadgetswiththeedges
(
n
,0
)

(
1,0
)(
n
,2
k
)

(
1,0
)(
n
,0
)

(
1,2
k
)(
n
,2
k
)

(
1,2
k
)
.
Theresultinggraph
G
hasexactly
2
n
Hamiltoniancycles,oneforeachassignment
ofbooleanvaluestothe
n
variablesof

.Speci˝cally,foreach
i
,wetraversethe
i
thvariablegadgetfromlefttorightif
x
i
=
True
andrighttoleftif
x
i
=
False
.
SeeFigure
12.19
.
Figure12.19.
Left:Variablegadgetsandconnectorsin
G
,foranyformulawith4variablesand4clauses.
Right:TheHamiltoniancyclein
G
correspondingtotheassignment
a
=
b
=
d
=
True
and
c
=
False
Nowweextend
G
toalargergraph
H
byaddinga
clausevertex
[
j
]
foreach
clause
c
j
,connectedtothevariablegadgetsbysixedges,asshowninFigure
12.20
.
Foreachpositiveliteral
x
i
in
c
j
,weaddtheedges
(
i
,2
j

1
)

[
j
]

(
i
,2
j
)
,and
foreachnegativeliteral
¯
x
i
in
c
j
,weaddtheedges
(
i
,2
j
)

[
j
]

(
i
,2
j

1
)
.The
connectionstotheclauseverticesguaranteethataHamiltoniancyclein
G
canbeextendedtoaHamiltoniancyclein
H
ifandonlyifthecorresponding
variableassignmentsatis˝es

.Exhaustivecaseanalysisnowimpliesthat
H
has
aHamiltoniancycleifandonlyif

issatis˝able.
Transformingtheformula

intothegraph
H
takes
O
(
kn
)
time,whichisat
mostquadraticinthetotallengthoftheformula;weconcludethatthedirected
Hamiltoniancycleproblemis
VariantsandExtensions
Trivialmodi˝cationsofthepreviousreductionsimplythattheHamiltonian
path
problemindirectedgraphsisalsoAHamiltonianpathinagraph
G
is
ofcourseasimplepaththatvisitseveryvertexof
G
exactlyonce.Infact,there
401

12.NP-Hardness
Figure12.20.
Left:Clausegadgetsfortheformula
(
a
_
b
_
c
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
_
¯
d
)
.
Right:Ahamiltoniancyclein
H
correspondingtothesatisfyingassignment
a
=
b
=
d
=
True
and
c
=
False
.
aresimplepolynomiareductionsfromtheHamiltoniancycleproblemto
theHamiltonianpathproblemandviceversa.I'llleavethedetailsofthese
reductionsasexercises.
Bothofthepreviousreductionsdealwithdirectedgraphs,butthe
spondingquestioninundirectedgraphisalsoInfact,thereisa
relativelysimplereductionfromthedirectedHamiltoniancycle/pathproblem
totheundirectedHamiltoniancycle/pathproblem;again,I'llleavethedetails
ofthisreductionasanexercise.
Finally,theinfamous
travelingsalesmanproblem
asksto˝ndtheshortest
Hamiltoniancycle(orpath)inagraphwithweightededges.Since˝ndingthe
shortestcycle/pathisobviouslyharderthandeterminingifacycle/pathexists
ataonsideragraphwhereeveryedgehasweight
1

TravelingSalesman
isalso
12.12SubsetSum(fromVertexCover)
Thenextproblemthatweproveisthe
SubsetSum
problemconsidered
inChapter
2
:Givenaset
X
ofpositiveintegersandaninteger
T
,determine
whether
X
hasasubsetwhoseelementssumto
T
.
Weonceagainreducefrom
VertexCover
.Givenagraph
G
andaninteger
k
,
weneedtocomputeaset
X
ofpositiveintegersandaninteger
T
,suchthat
X
hasasubsetthatsumsto
T
ifandonlyif
G
hasanvertexcoverofsize
k
.Our
transformationusesonlytwotypesofwhichare
integers
representing
theverticesandedgesin
G
.
Numberthe
edges
of
G
arbitrarilyfrom
0
to
E

1
.Ourset
X
containsthe
402

12.12.SubsetSum(fromVertexCover)
integer
b
i
:
=
4
i
foreachedge
i
,andtheinteger
a
v
:
=
4
E
+
X
i
2

(
v
)
4
i
foreachvertex
v
,where

(
v
)
isthesetofedgesthathave
v
hasanendpoint.
Alternately,wecanthinkofeachintegerin
X
asan
(
E
+
1
)
numberwritten
inbase
4
.The
E
thdigitis
1
iftheintegerrepresentsavertex,and
0
otherwise;
andforeach
i
<
E
,the
i
thdigitis
1
iftheintegerrepresentsedge
i
oroneofits
endpoints,and
0
otherwise.Finally,wesetthetargetsum
T
:
=
k

4
E
+
E

1
X
i
=
0
2

4
i
.
Nowlet'sprovethatthereductioniscorrect.
)
First,suppose
G
hasavertexcover
C
ofsize
k
.Considerthesubset
X
0
:
=
f
a
v
j
v
2
C
g[f
b
i
j
edge
i
hasexactlyoneendpointin
C
g
Thesumoftheelementsof
X
0
,writteninbase4,hasmostsigni˝cantdigit
k
andallotherdigitsequalto
2
.Thus,theelementsof
X
0
sumtoexactly
T
.
(
Ontheotherhand,supposethereisasubset
X
0

X
thatsumsto
T
.
Speci˝cally,wemusthave
X
v
2
V
0
a
v
+
X
i
2
E
0
b
i
=
t
forsomesubsets
V
0

V
and
E
0

E
.Again,ifwesumthesebanumbers,
therearenocarriesinthe˝rst
E
digits,becauseforeach
i
thereareonly
threenumbersin
X
whose
i
thdigitis
1
.Eachedgenumber
b
i
contributes
onlyone
1
tothe
i
thdigitofthesum,butthe
i
thdigitof
t
is
2
.Thus,for
eachedgein
G
,atleastoneofitsendpointsmustbein
V
0
.Inotherwords,
V
0
isavertexcover.Ontheotherhand,onlyvertexnumbersarelarger
than
4
E
,and
b
T
=
4
E
c
=
k
,so
V
0
hasatmost
k
elements.(Infact,it'snot
hardtoseethat
V
0
has
exactly
k
elements.)
Forexample,giventhefoertexgraph
G
=(
V
,
E
)
where
V
=
f
u
,
v
,
w
,
x
g
and
E
=
f
uv
,
uw
,
vw
,
vx
,
wx
g
,ourset
X
mightcontainthefollowingbaintegers:
a
u
:
=
111000
4
=
1344
b
uv
:
=
010000
4
=
256
a
v
:
=
110110
4
=
1300
b
uw
:
=
001000
4
=
64
a
w
:
=
101101
4
=
1105
b
vw
:
=
000100
4
=
16
a
x
:
=
100011
4
=
1029
b
vx
:
=
000010
4
=
4
b
wx
:
=
000001
4
=
1
403

12.NP-Hardness
Ifwearelookingforavertexcoverofsize
k
=
2
,ourtargetsumwouldbe
T
:
=
222222
4
=
2730
.Indeed,thevertexcover
f
v
,
w
g
correspondstothesubset
f
a
v
,
a
w
,
b
uv
,
b
uw
,
b
vx
,
b
wx
g
,whosesumis
1300
+
1105
+
256
+
64
+
4
+
1
=
2730
.
Thereductioncanclearlybeperformedinpolynomialtime.We'vealready
provedthat
VertexCover
issoitfollowsthat
SubsetSum
is
CaveatReductor!
Onesubtlepointmustbeemphasizedhere.
3
methingpagesago,backin
Chapter
3
,wedevelopedadynamicprogrammingalgorithmtosolve
SubsetSum
in
O
(
nT
)
time.Isn'tthisapolynomiaalgorithm?Didn'twejustprovethat
P=NP?Hey,where'smymilliondollars?!
Alas,lifeisnotsosimple.True,therunningtimeisapolynomialfunction
ofthevariables
n
and
T
,buttoqualifyasatruepolynomiaalgorithm,the
runningtimemustbeapolynomialfunctionofthe
inputsize
numberof
bits
requiredtorepresenttheinput.The
values
oftheelementsof
X
andthetarget
sum
T
couldbeexponentiallylargerthanthenumberofinputbits.Indeed,
thereductionwejustdescribedproducesavalueof
T
thatisexponentially
largerthanthesizeofouroriginalinputgraph,whichforcesourdynamic
programmingalgorithmtoruninexponentialtime.
Algorithmslikethisaresaidtorunin
omialtime
,andany
problemwithsuchanalgorithmiscalled
weakly
.Equivalently,
aweaklyproblemisaproblemthatcanbesolvedinpolynomialtime
whenallinputnumbersarerepresentedin
unary
(asasumof
1
s),butbecomes
whenallinputnumbersarerepresentedin
binary
.Ifaproblemis
evenwhenalltheinputnumbersarerepresentedinunary,wesay
thattheproblemis
strongly
.Agoodexampleofa
strongly
NP
problemis
TravelingSalesman
,whichremainsNPeveniftheinputgraph
iscompleteandalledgeweightsareequalto
1
or
2
.
12.13OtherUsefulNP-hardProblems
LiterallythousandsofproblemshavebeenprovedtobeHereIwilllist
afewproblemsthatareusefulinderivingreductions.
11
Iwon'tdescribe
theessproofsfortheseproblemsindetail,butyoucan˝ndmostof
theminGareyandJohnson'sclassic
ScaryBlackBookofompleteness
.
12
All
11
Assomedayitmayhappenareductionmustbefound,I'vegotalittlelist.I'vegotalittle
list.OfsomeHerculeanproblemswecanusetolowerbound.Fastsolutionsdon'texist.Our
proofstheycanassist.
12
MichaelGareyandDavidJohnson.
ComputersandIntractability:AGuidetotheTheoryof
ompleteness
.W.H.FreemanandCo.,1979.Andyes,itreallyisblack.
404

12.13.OtherUsefulNP-hardProblems
oftheproblemsI'vediscussedsofar,andmostoftheproblemsinthefollowing
list,were˝rstprovedNPinasinglelandmark1972paperbyRichardKarp.
13
‹
PlanarCircuitSat
:
Givenabooleancircuitthatcanbeembeddedinthe
planesothatnotwowirescross,isthereaninputthatmakesthecircuit
output
True
?Thisproblemcanbeprovedbyreductionfromthe
generalcircuitsatis˝abilityproblem,byreplacingeachcrossingwithasmall
assemblageofgates.
‹
at
:
Givena3CNFformula,isthereanassignmentofvaluestothe
variablessothateachclausecontains
exactly
one
True
literal?Thisproblem
canbeprovedbyreductionfromtheusual
3Sat
.
‹
NotAllEqual3Sat
:
Givena3CNFformula,isthereanassignmentof
valuestothevariablessothateveryclausecontainsatleastone
True
literal
and
atleastone
False
literal?Thisproblemcanbeprovedby
reductionfromtheusual
3Sat
.
‹
Planar3Sat
:
Givena3CNFbooleanformula,considerabipartitegraph
whoseverticesaretheclausesandvariables,whereanedgeindicatesthat
avariable(oritsnegation)appearsinaclause.Ifthisgraphisplanar,the
3CNFformulaisalsocalledplanar.The
Planar3Sat
problemasks,givena
planar3CNFformula,whetherithasasatisfyingassignment.Thisproblem
canbeprovedbyreductionfrom
PlanarCircuitSat
.
14
‹
Exact3DimensionalMatching
or
X3M
:
Givenaset
S
andacollectionof
ementsubsetsof
S
,called
triples
,isthereaectionofdisjoint
triplesthatexactlycover
S
?Thisproblemcanbeprovedbya
reductionfrom
3Sat
,becauseithasa3init.
‹
Partition
:
Givenaset
S
of
n
integers,aretheresubsets
A
and
B
suchthat
A
[
B
=
S
,
A
\
B
=
?
,and
X
a
2
A
a
=
X
b
2
B
b
?
Thisproblemcanbeprovedbyasimplereductionfrom
SubsetSum
.
Like
SubsetSum
,the
Partition
problemisonlyweakly
‹
3Partition
:
Givenaset
S
of
3
n
integers,canitbepartitionedinto
n
disjoint
ementsubsets,suchthateverysubsethasexactlythesamesum?
Despitethesimilarnames,thisproblemis
very
di˙erentfrom
Partition
;
sorry,Ididn'tmakeupthenames.Thisproblemcanbeproved
byreductionfromX3M,becauseithasa3init.Unlike
Partition
,the
3Partition
problemis
strongly
itremainsevenifevery
inputnumberisatmost
n
3
.
13
Laterperformedo˙ayas
RichardKarpandhis21Assistants
,forwhichKarpwona
wed
TonyTuringaward.
14
Surprisingly,
PlanarNotAllEqual3Sat
issolvableinpolynomialtime!
405

12.NP-Hardness
‹
SetCover
:
Givenacollectionofsets
S
=
f
S
1
,
S
2
,...,
S
m
g
,˝ndthesmallest
ectionof
S
i
'sthatcontainsalltheelementsof
S
i
S
i
.Thisproblemis
ageneralizationofboth
VertexCover
andX3M.
‹
HittingSet
:
Givenacollectionofsets
S
=
f
S
1
,
S
2
,...,
S
m
g
,˝ndthe
mumnumberofelementsof
S
i
S
i
thathiteverysetin
S
.Thisproblemis
alsoageneralizationof
VertexCover
.
‹
LongestPath
:
Givenanoegativelyweightedgraph
G
(eitherdirected
orundirected)andtwovertices
u
and
v
,whatisthelongestsimplepath
from
u
to
v
inthegraph?Apathis
simple
ifitvisitseachvertexatmost
once.ThisproblemisageneralizationofthecorrespondingHamiltonian
pathproblem.Ofcourse,thecorresponding
shortest
pathproblemcanbe
solvedinpolynomialtime.
‹
SteinerTree
:
Givenaweighted,undirectedgraph
G
withsomeofthe
verticesmarked,whatistheminimeightsubtreeof
G
thatcontains
everymarkedvertex?If
every
vertexismarked,theminimumSteinertree
istheminimumspanningtree;ifexactlytwoverticesaremarked,the
minimumSteinertreeistheshortestpathbetweenthem.Thisproblemcan
beprovedbyreductionfrom
VertexCover
.
‹
Max2Sat
:
GivenaBooleanformulainconjunctivenormalform,withexactly
two
literalsperclause,˝ndavariableassignmentthatmaximizesthenumber
ofclauseswithatleastone
True
literal.ThisproblemcanbeprovedNP
byreductionfrom
3Sat
(yes,eventhoughitdoesn'thavea3init).The
simplerdecisionproblem
2Sat
,whichasksifthereisanassignmentthat
satis˝es
every
clause,canactuallybesolvedinpolynomialtime.
‹
MaxCut
:
Givenanundirectedgraph
G
=(
V
,
E
)
,˝ndasubset
S
ˆ
V
that
maximizesthenumberofedgeswithexactlyoneendpointin
S
.Equivalently,
˝ndthelargestbipartitesubgraphof
G
.Thisproblemcanbeproved
byreductionfrom
Max2Sat
.
Inadditiontothesedrybutusefulproblems,mostinterestingpuzzlesand
tairegameshavebeenshowntobeortohavegeneralizations.
(Arguably,ifagameorpuzzleisn'tatleastitisn'tinteresting!)Here
aresomeexamplesyoumay˝ndfamiliar:
‹
Minesweeper(from
CircuitSat
)
15
‹
Sudoku(utlimatelyfrom
3Sat
)
16
15
RichardKaye.Minesweeperismplete.
MathematicalIntelligencer
2000.
Butseealso:AllanScott,UlrikeStege,andIrisvanRooij.MinesweepermaynotbeNPmplete
butishardnonetheless.
MathematicalIntelligencer
2011.
16
TakayukiYatoandTakahiroSeta.Complexityandcompletenessof˝ndinganothersolution
anditsapplicationtopuzzles.
IEICETransactionsonFundamentalsofElectronics,Communications
andComputerSciences
2003.
tokyo.ac.jp/~yato/
data2/MasterThesis.pdf
.
406

12.14.ChoosingtheRightProblem
‹
Tetris(from
3Partition
)
17
‹
Klondike,akaolit(from
3Sat
)
18
‹
P(from
HamiltonianCycle
)
19
‹
SuperMarioBrothers(from
3Sat
)
20
‹
CandyCrushSaga(fromavariantof
3Sat
)
21
‹
Threes/2048(from
3Sat
,ofcourse)
22
‹
Trainyard(from
DominatingSet
;seeExercise
26
)
23
‹
Shortest
n

n

n
Rubik'scubesolution(from
3Sat
viaaspecialcaseof
PlanarUndirectedHamCycle
).
24
‹
CookieClicker(from
Partition
or
3Partition
)
25
Thislistisnecessarilyincomplete,thankstoalimitedfootnotebudget.
26
As
ofJune2019,nobodyhaspublishedaproofthatageneralizationofUltimate
Paperclips,LineRider,Twister,orCardsAgainstHumanityisNPbutI'm
sureit'sonlyamatteroftime.
12.14ChoosingtheRightProblem
Oneofthemostdi˚cultstepsinprovingthataproblemisischoosing
thebestproblemtoreducefrom.TheCevinTheoremimpliesthatifthere
isareductionfrom
any
problemtoproblemX,thenthereisareduction
17
RonBreukelaar,ErikD.Demaine,SusanHohenberger,HendrikJ.Hoogeboom,WalterA.
Kosters,andDavidowell.Tetrisishard,eventoapproximate.
InternationalJournalof
ComputationalGeometryandApplications
2004.
18
LucLongpréandPierreMcKenzie.ThecomplexityofSolitaire.
Proceedingsofthe32nd
InternationalMathematicalFoundationsofComputerScience
,2007.
19
GiovanniViglietta.Gamingisahardjob,butsomeonehastodoit!
TheoryofComputing
Systems
,2014.
http://giovanniviglietta.com/papers/gaming2.pdf
.
20
GregAloupis,ErikD.Demaine,AlanGuo,andGiovanniViglietta.ClassicNintendogames
Are(computationally)hard.
TheoreticalComputerScience
2015.
http://arxiv.org/
abs/1203.1895
.
21
LucianoGualà,StefanoLeucci,EmanueleNatale.Bejeweled,CandyCrushandother
threegamesare
Proc.2014IEEEConferenceonComputationalIntelligenceandGames
,
2014.
http://arxiv.org/abs/1403.5830
.
22
StefanLangermanandYushiUno.Threes!,Fives,1024!,and2048areHard.
Proc.8th
InternationalConferenceonFunwithAlgorithms
,2016.
https://arxiv.org/abs/1505.04274
.
23
MatteoAlmanza,StefanoLeucci,andAlessandroPanconesi.Trainyardisard.
Proc.
8thInternationalConferenceonFunwithAlgorithms
,2016.
https://arxiv.org/abs/1603.00928
.
24
ErikD.Demaine,SarahEisenstat,andMikhailRudoy.SolvingtheRubik'sCubeoptimally
isNPmplete.
Proc.35thSymposiumonTheoreticalAspectsofComputerScience
,2018.
https:
//arxiv.org/abs/1706.06708
.
25
ErikD.Demaine,HiroIto,StefanLangerman,JaysonLynch,MikhailRudoy,andKaiXiao.
CookieClicker.Preprint,August2018.
https://arxiv.org/abs/1808.07540
.
26
See
https://xkcd.com/1208/
407

12.NP-Hardness
from
every
mpleteproblemtoproblemX,butsomeproblemsareeasier
toworkwiththanothers.There'snosystematicmethodforchoosingtheright
problem,buthereareafewusefulrulesofthumb.
‹
Iftheproblemaskshowtoassignbitstoobjects,ortochooseasubsetof
objects,ortopartitionobjectsintotwodi˙erentsubsets,tryreducingfrom
someversionof
Sat
or
Partition
.
‹
Iftheproblemaskshowtoassignlabelstoobjectsfromasmall˝xedset,
ortopartitionobjectsintoasmallnumberofsubsets,tryreducingfrom
k
Color
oreven
3Color
.
‹
Iftheproblemaskstoarrangeasetofobjectsinaparticularorder,try
reducingfrom
DirectedHamCycle
or
DirectedHamPath
or
Travelin
Salesman
.
‹
Iftheproblemasksto˝nda
small
subsetsatisfyingsomeconstraints,try
reducingfrom
MinVertexCover
.
‹
Iftheproblemasksto˝nda
large
subsetsatisfyingsomeconstraints,try
reducingfrom
MaxIndSet
or
MaxClique
or
Max2Sat
.
‹
Iftheproblemaskstopartitionobjectsintoalargenumberofsmallsubsets,
tryreducingfrom
3Partition
.
‹
Ifthenumber
3
appearsnaturallyintheproblem,try
3Sat
or
3Color
or
X3M
or
3Partition
.(No,thisisnotajoke.)
‹
Ifallelsefails,try
3Sat
oreven
CircuitSat
!
Idonotrecommendtryingtoreducefrom
Tetris
,
SuperMarioBros
,or
Trainyard
.Youreallywanttochooseastartingproblemthatisassimpleas
possible,whilestillcapturing
some
featureofyourproblemthatmakesitdi˚cult
tosolve.
12.15AFrivolousReal-WorldExample
Draughts
isafamilyofboardgamesthathavebeenplayedforthousandsof
years.MostAmericansarefamiliarwiththeversioncalled
checkers
or
English
draughts
,butthemostcommonvariantworldwide,knownas
international
draughts
or
Polishdraughts
,originatedintheNetherlandsinthe16thcentury.
Foracompletesetofrules,thereadershouldconsult
Wikipedia
;hereafew
importantdi˙erencesfromtheAnglcangame:
‹
Flyingkings:
Asincheckers,apiecethatendsamoveintherowclosestto
theopponentbecomesa
king
andgainstheabilitytomovebackward.Unlike
incheckers,however,akingininternationaldraughtscanmoveanydistance
alongadiagonallineinasingleturn,aslongastheintermediatesquares
areemptyorcontainexactlyoneopposingpiece(whichiscaptured).
408

12.15.AFrivolousReal-WorldExample
‹
Forcedmaximumcapture:
Ineachturn,themovingplayermustcapture
asmanyopposingpiecesaspossible.Thisisdistinctfromthefpture
ruleincheckers,whichrequiresonlythateachplayermustcaptureifpossible,
andthatacapturingmoveendsonlywhenthemovingpiececannotcapture
further.Inotherwords,checkersrequirescapturinga
locallymaximal
setof
opposingpiecesoneachturn;whereas,internationaldraughtsrequiresa
globallymaximum
capture.
‹
Capturesubtleties:
Asincheckers,capturedpiecesareremovedfromthe
boardonlyattheendoftheturn.Anypiececanbecapturedatmostonce.
Thus,whenanopposingpieceisjumped,thatpieceremainsontheboard
butcannotbejumpedagain
untiltheendoftheturn.
Forexample,inthe˝rstpositionshownbelow,eachcirclerepresentsapiece,
anddoubledcirclesrepresentkings.Black
must
makethe˝rstindicatedmove,
capturing˝vewhitepieces,becauseitisnotpossibletocapturemorethan˝ve
pieces,andthereisnoothermovethatcaptures˝ve.Blackcannotextend
hiscapturefurther,eithernortheastorsoutheast,becausethecapturedWhite
piecesremainontheboarduntilhisturnisover.ThenWhite
must
makethe
secondindicatedmove,therebywinningthegame.
Figure12.21.
Twoforced(!)movesininternationaldraughts;doubledcirclesarekings.
Theactualgame,whichisplayedona
10

10
boardwith20piecesofeach
color,iscomputationallytrivial;wecanprecomputetheoptimalmoveforboth
playersineverypossibleboardcon˝gurationandtheresultsintoa
lookuptableofconstantsize.Sure,it'sa
big
constant,butit'sstillaconstant!
Butconsiderthenaturalgeneralizationofinternationaldraughtstoan
n

n
board.Inthissetting,
˝ndingalegalmoveisactually
Thefollowing
reductionfromtheHamiltoniancycleproblemindirectedgraphswasdiscovered
byBobHearnin2010.
27
Inmosttwayergames,˝ndingthe
best
moveis
(orworse).ThisistheonlyexampleIknowofamoreover
arealgameplayedbymillionsofpeopleforcenturi
merelyfollowing
therules
is
Givenanundirectedgraph
G
with
n
vertices,weconstructaboardco
˝gurationforinternationaldraughts,suchthatWhitecancaptureacertain
27
SeeTheoreticalComputerScienceStackExchange:
http://cstheory.stackexchange.com/a/
1999/111
.
409

12.NP-Hardness
numberofblackpiecesinasinglemoveifandonlyif
G
hasaHamiltonian
cycle.Wetreat
G
asadirectedgraph,withtwoarcs
u

v
and
v

u
inplaceof
eachundirectededge
uv
.Numbertheverticesarbitrarilyfrom
1
to
n
.The˝nal
draughtscon˝gurationhasseveralgadgets:
‹
Theverticesof
G
arerepresentedbyrabhaped
vertexgadgets
,which
areevenlyspacedalongahorizontalline.Eacharc
i

j
isrepresentedbya
pathoftwodiagonallinesegmentsfromtheeftofvertexgadget
i
to
theofvertexgadget
j
.Thepathforarc
i

j
islocatedabovethe
vertexgadgetsif
i
<
j
,andbelowthevertexgadgetsif
i
>
j
.
Figure12.22.
Ahigh-leveloverviewofthereductionfromHamiltoniancycletointernationaldraughts.
‹
Thebulkofeachvertexgadgetisadiamohapedregioncalleda
vault
.
Thewallsofthevaultarecomposedoftwosolidlayersofblackpieces,
whichcannotbecaptured;thesepiecesaredrawnasgraycirclesinthe
˝gures.Thereare
N
capturableblackpiecesinsideeachvault,forsome
largeinteger
N
tobedeterminedlater.Awhitekingcanenterthevault
throughthecaptureeveryinternalpiece,andthenexitthrough
theeftBothearsarehallways,againwithwallstwopiecesthick,
withgapswherethearcpathsendtoallowthewhitekingtoenterand
leave.Thelengthsofthecaneasilybeadjustedtoalignwiththe
othergadgets.
‹
Foreacharc
i

j
,wehavea
cornergadget
,whichallowsawhitekingleaving
vertexgadget
i
toberedirectedtovertexgadget
j
.
‹
Finally,wherevertwoarcpathscross,wehavea
crossinggadget
;these
gadgetsallowthewhitekingtotraverseeitherarcpath,butforbidswitching
fromonearcpathtotheother.
Asinglewhitekingstartsatthebottomcornerofoneofthevaults.Inany
legalmove,thiskingmustalternatebetweentraversingentirearcpathsand
clearingvaults.Thekingcantraversethevariousgadgetsbackward,entering
410

12.15.AFrivolousReal-WorldExample
Figure12.23.
Left:Avertexgadgetwiththreeentrancesandthreeexits.Right:Awhitekingemptying
thevault.Graycirclesareblackpiecesthatcannotbecaptured.
Figure12.24.
Left:Oneoftwopathsthroughacornergadget.Right:Oneoftwopathsthrougha
crossinggadget.
eachvaultthroughtheexitandviceversa.ButthereversalofaHamiltonian
cyclein
G
isanotherHamiltoniancyclein
G
,sowalkingbackwardis˝ne.
IfthereisaHamiltoniancyclein
G
,thewhitekingcancaptureatleast
nN
blackpiecesbyvisitingeachoftheothervaultsandreturningtothestarting
vault.Ontheotherhand,ifthereisnoHamiltoniancyclein
G
,thewhiteking
cancaptureatmosthalfofthepiecesinthestartingvault,andthuscancapture
atmost
(
n

1
=
2
)
N
+
O
(
n
3
)
enemypiecesaltogether.The
O
(
n
3
)
termaccounts
forthecornerandcrossinggadgets;eachedgepassesthroughonecornergadget
andatmost
n
2
=
2
crossinggadgets.
Tocompletethereduction,weset
N
=
n
4
.Summingup,weobtainan
O
(
n
5
)

O
(
n
5
)
boardcon˝guration,with
O
(
n
5
)
blackpiecesandonewhiteking.
Wecanclearlyconstructthisboardcon˝gurationbybruteforceinpolynomial
time.Figure
12.25
showsacompleteexampleoftheconstruction.
ItisstillopenwhetherthefollowingrelatedquestionisGivenan
n

n
boardcon˝gurationforinternationaldraughts,can(andtherefore
must
)
Whitecapture
all
theblackpieces(therebywinningthegame)inasingleturn?
411

12.NP-Hardness
Figure12.25.
The˙naldraughtscon˙gurationforthe4-vertexgraphinFigure
12.22
.(Thegreenarrows
arenotactuallypartofthecon˙guration.)
ª
12.16OnBeyondZebra
PandNPareonlythe˝rsttwostepsinanenormoushierarchyofcomplexity
classes.Toclosethischapter(andthebook),letmedescribeafewmoreclasses
ofinterest.
PolynomialSpace
PSPACE
isthesetofdecisionproblemsthatcanbesolvedusingpolynomial
space
.EveryprobleminNP(andthereforeinP)isalsoinPSPACE.Itisgenerally
believedthat
NP
6
=
PSPACE
,butnobodycanevenprovethat
P
6
=
PSPACE
.
Aproblem

is
PSPA
if,foranyproblem

0
thatcanbesolvedusing
polynomial
space
,thereisapolynomia
time
nereductionfrom

0
to

.
IfanyPSPAproblemisinNP,thenPSPACE=NP;similarly,ifany
PSPAproblemisinP,thenPSPACE=P.
412

ª
12.16.OnBeyondZebra
ThecanonicalPSPAproblemisthe
quanti˝edbooleanformula
problem,or
QBF
:Givenabooleanformula

thatmayincludeanynumber
ofuniversalorexistentialquanti˝ers,butnofreevariables,is

equivalentto
True
?Forexample,thefollowingexpressionisavalidinputtoQBF:
9
a
:
8
b
:
9
c
:
(
8
d
:
a
_
b
_
c
_
¯
d
)
,
((
b
^
¯
c
)
_
(
9
e
:
(
¯
a
)
e
)
_
(
c
6
=
a
^
e
)))
.
Sat
isequivalenttothespecialcaseofQBFwheretheinputformulacontains
onlyexistentialquanti˝ers(
9
).QBFremainsPSPAevenwhentheinput
formulamusthaveallitsquanti˝ersatthebeginning,thequanti˝ersstrictly
alternatebetween
9
and
8
,andthequanti˝edpropositionisinconjunctive
normalform,withexactlythreeliteralsineachclause,forexample:
9
a
:
8
b
:
9
c
:
8
d
:

(
a
_
b
_
c
)
^
(
b
_
¯
c
_
¯
d
)
^
(
¯
a
_
c
_
d
)
^
(
a
_
¯
b
_
¯
d
)

ThisrestrictedversionofQBFcanalsobephrasedasatwayerstrategy
question.Supposetwoplayers,AliceandBob,aregivena3CNFpredicate
withfreevariables
x
1
,
x
2
,...,
x
n
.Theplayersalternatelyassignvaluestothe
variablesinorderbyceassignsavalueto
x
1
,Bobassignsavalue
to
x
2
,andsoon.Aliceeventuallyassignsvaluestoeveryvariablewithan
oddindex,andBobeventuallyassignsvaluestoeveryvariablewithaneven
index.Alicewantstomaketheexpression
True
,andBobwantstomake
it
False
.AssumingAliceandBobplayperfectly,whowinsthisgame?Not
surprisingly,mosttwayergames
28
liketioe,reversi,checkers,go,
chess,andmancalmoreaccurately,appropriategeneralizationsofthese
constzegamestoarbitraryboardsizPSPA
AnothercanonicalPSPAproblemis
NFAtotality
:Givenano
deterministicateautomaton
M
oversomealphabet

,does
M
accept
everystringin


?Thecloselyrelatedproblems
NFAequivalence
(Dotwogiven
NFAsacceptthesamelanguage?)and
NFAminimization
(FindthesmallestNFA
thatacceptsthesamelanguageasagivenNFA)arealsoPSPAasare
thecorrespondingquestionsaboutregularexpressions.(Thecorresponding
questionsabout
deterministic
ateautomataareactuallysolvablein
polynomialtime.)
ExponentialTime
Thenextsigni˝cantlylargercomplexityclass,
EXP
(alsocalledEXPTIME),is
thesetofdecisionproblemsthatcanbesolvedinexponentialtime,thatis,
usingatmost
2
n
c
stepsforsomeconstant
c
>
0
.EveryprobleminPSPACE(and
28
Foragood(butinevitablyaging)overviewofknownresultsonthecomputationalcomplexity
ofgamesandpuzzles,seeErikDemaineandBobHearn'smonograph
Games,Puzzles,and
Computation
(CRCPress,2009).
413

12.NP-Hardness
thereforeinNP(andthereforeinP))isalsoinEXP.Itisgenerallybelieved
that
PSPACE
(
EXP
,butnobodycanevenprovethat
NP
6
=
EXP
.Aproblem

is
EXP
if,foranyproblem

0
thatcanbesolvedin
exponential
time,thereis
a
polynomial
nereductionfrom

0
to

.IfanyEXPproblemis
inPSPACE,thenEXP=PSPACE;similarly,ifanyEXPproblemisinNP,then
EXP=NP.We
do
knowthat
P
6
=
EXP
;inparticular,noEXPproblemisinP.
Naturalgeneralizationsofmanyinterestingayercheckers,
chess,mancala,andactuallyEXPTheboundarybetweenPSPA
completegamesandEXPgamesisrathersubtle.Forexample,thereare
threewaystodrawinchess(thestandard
8

8
game):stalemate(theplayerto
moveisnotincheckbuthasnolegalmoves),repeatingthesameboardposition
threetimes,ormoving˝ftytimeswithoutcapturingormovingapawn.The
n

n
generalizationofchessiseitherinPSPACEorEXPdependingon
howwegeneralizetheserules.Ifwedeclareadrawafter(say)
n
3
ca
moves,theneverygamemustendafterapolynomialnumberofmoves,sowe
cansimulateallpossiblegamesfromanygivenpositionusingonlypolynomial
space.Ontheotherhand,ifweignorethecamoveruleentirely,the
resultinggamecanlastanexponentialnumberofmoves,sotherenoobvious
waytodetectarepeatingpositionusingonlypolynomialspace;indeed,this
versionof
n

n
chessisEXP
Excelsior!
Naturally,evenexponentialtimeisnottheendofthestory.
NEXP
istheclass
ofdecisionproblemsthatcanbesolvein
nondeterministic
exponentialtime;
equivalently,adecisionproblemisinNEXPifandonlyif,forevery
Yes
instance,
thereisa
proof
ofthisfactthatcanbecheckedinexponentialtime.
EXPSPACE
isthesetofdecisionproblemsthatcanbesolvedusingexponential
space
.Even
theselargercomplexityclasseshavehardproblems;forexample,ifweaddthe
intersectionoperator
\
tothesyntaxofregularexpressions,decidingwhether
twosuchexpressionsdescribethesamelanguageisEXPSPABeyond
EXPSPACEarecomplexityclasseswith
doubly
nentialresourcebounds
(EEXP,NEEXP,andEEXPSPACE),then
triply
exponentialresourcebounds
(EEEXP,NEEEXP,andEEEXPSPACE),andsoonadin˝nitum.
Allthesecomplexityclassescanbeorderedbyinclusion:
P

NP

PSPACE

EXP

NEXP

EXPSPACE

EEXP

NEEXP

Mostcomplexitytheoristsstronglybelievethateveryinclusioninthissequence
isstrict;thatis,notwoofthesecomplexityclassesareequal.However,the
strongestresultthathasbeenprovedisthateveryclassinthissequenceisstrictly
containedintheclass
three
stepslaterinthesequence.Forexample,wehave
414

Exercises
proofsthatP
6
=
EXPandPSPACE
6
=
EXPSPACE,butnotwhetherP
6
=
PSPACEor
NP
6
=
EXP.
Thelimitofthisseriesofincreasinglyexponentialcomplexityclassesisthe
class
ELEMENTARY
ofdecisionproblemsthatcanbesolvedusingtimeorspace
boundedbyafunctiontheform
2
"
k
n
forsomeconstantinteger
k
,where
2
"
k
n
:
=
¨
n
if
k
=
0
,
2
2
"
k

1
n
otherwise.
Forexample,
2
"
1
n
=
2
n
and
2
"
2
n
=
2
2
n
.
Itmaybetemptingtoconjecturethat
every
naturaldecidableproblemcan
besolvedinelementarytime,butinfactthisconjectureisincorrect.Consider
the
generalizedregularexpressions
de˝nedbyrecursivelycombining(possibly
empty)stringsoversome˝nitealphabetbyconcatenation(
xy
),union(
x
+
y
),
Kleeneclosure(
x

),andnegation
(
x
)
.Forexample,thegeneralizedregular
expression
(
0
+
1
)

0
0
(
0
+
1
)

representsthesetofstringsin
f
0
,
1
g

thatdo
not
containtwo
0
sinarow.Itispossibletodeterminealgorithmicallywhether
twogeneralizedregularexpressionsdescribeidenticallanguages,byrecursively
convertingeachexpressionintoanequivalentNFA,convertingeachNFAintoa
DFA,andthenminimizingtheDFA.However,therunningtimeofthisalgorithm
hasthenoementarybound
2
"

(
n
)
2
,intuitivelybecauseeachlayerof
recursivenegationcanexponentiallyincreasethenumberofstates.Infact,
LarryStockmeyerprovedin1974thatthisproblem
cannot
besolvedinmerely
elementarytime,evenifweforbidKleeneclosure.
Exercises
1.
(a)
Describeandanalyzeandalgorithmtosolve
Partition
intime
O
(
nM
)
,
where
n
isthesizeoftheinputsetand
M
isthesumoftheabsolute
valuesofitselements.
(b)
Whydoesn'tthisalgorithmimplythatP=NP?
2.
Considerthefollowingproblem,called
BoxDepth
:Givenasetof
n

alignedrectanglesintheplane,howbigisthelargestsubsetofthese
rectanglesthatcontainacommonpoint?
(a)
Describeapolynomiareductionfrom
BoxDepth
to
MaxClique
.
(b)
Describeandanalyzeapolynomiaalgorithmfor
BoxDepth
.
[Hint:
O
(
n
3
)
timeshouldbeeasy,but
O
(
n
log
n
)
timeispossible.]
(c)
Whydon'tthesetworesultsimplythatP=NP?
415

12.NP-Hardness
3.
Abooleanformulaisin
disjunctivenormalform
(or
DNF
)ifitconsistsofa
disjunction
(
Or
)orseveral
terms
,eachofwhichistheconjunction(
And
)of
oneormoreliterals.Forexample,theformula
(
x
^
y
^
z
)
_
(
y
^
z
)
_
(
x
^
y
^
z
)
isindisjunctivenormalform.DNF
Sat
asks,givenabooleanformulain
disjunctivenormalform,whetherthatformulaissatis˝able.
(a)
DescribeapolynomiaalgorithmtosolveDNF
Sat
.
(b)
WhatistheerrorinthefollowingargumentthatP=NP?
Supposewearegivenabooleanformulainconjunctivenormalformwith
atmostthreeliteralsperclause,andwewanttoknowifitissatis˙able.
Wecanusethedistributivelawtoconstructanequivalentformulaindis-
junctivenormalform.Forexample,
(
x
_
y
_
z
)
^
(
x
_
y
)
()
(
x
^
y
)
_
(
y
^
x
)
_
(
z
^
x
)
_
(
z
^
y
)
Nowwecanusethealgorithmfrompart(a)todetermine,inpolynomial
time,whethertheresultingDNFformulaissatis˙able.Wehavejustsolved
3Sat
inpolynomialtime.Since
3Sat
isNP-hard,wemustconcludethat
P=NP!
4.
Theproblem
AllOrNothing3Sat
asks,givena3CNFbooleanformula,
whetherthereisanassignmenttothevariablessuchthateachclauseeither
hasthree
True
literalsorhasthree
False
literals.
(a)
Describeapolynomiaalgorithmtosolve
AllOrNothing3Sat
.
(b)
But
3Sat
isNPWhydoesn'ttheexistenceofthisalgorithmprove
thatP=NP?
5.
(a)
Supposeyouaregivenamagicblackboxthatcandetermine
in
nomialtime
,givenanarbitraryweightedgraph
G
,thelengthofthe
shortestHamiltoniancyclein
G
.Describeandanalyzea
polynomia
time
algorithmthatcomputes,givenanarbitraryweightedgraph
G
,
theshortestHamiltoniancyclein
G
,usingthismagicblackboxasa
subroutine.
(b)
Supposeyouaregivenamagicblackboxthatcandetermine
in
nomialtime
,givenanarbitrarygraph
G
,thenumberofverticesinthe
largestcompletesubgraphof
G
.Describeandanalyzea
polynomia
time
algorithmthatcomputes,givenanarbitrarygraph
G
,acomplete
subgraphof
G
ofmaximumsize,usingthismagicblackboxasasubro
tine.
416

Exercises
(c)
Supposeyouaregivenamagicblackboxthatcandetermine
in
nomialtime
,givenanarbitrarygraph
G
,whether
G
is
3
orable.
Describeandanalyzea
polynomia
algorithmthateitherco
putesaproper
3
oringofagivengraphorcorrectlyreportsthatno
suchcoloringexists,usingthemagicblackboxasasubroutine.
[Hint:
Theinputtothemagicblackboxisagraph.Onlyagraph.Verticesand
edges.Nothingelse.]
(d)
Supposeyouaregivenamagicblackboxthatcandetermine
inpolyn
mialtime
,givenanarbitrarybooleanformula

,whether

issatis˝able.
Describeandanalyzea
polynomia
algorithmthateithercomputes
asatisfyingassignmentforagivenbooleanformulaorcorrectlyreports
thatnosuchassignmentexists,usingthemagicblackboxasasubroutine.
(e)
Supposeyouaregivenamagicblackboxthatcandetermine
inpolyn
mialtime
,givenanarbitraryset
X
ofpositiveintegers,whether
X
can
bepartitionedintotwosets
A
and
B
suchthat
P
A
=
P
B
.Describeand
analyzea
polynomia
algorithmthateithercomputesanequal
partitionofagivensetofpositiveintegersorcorrectlyreportsthatno
suchpartitionexists,usingthemagicblackboxasasubroutine.
¨
ª
(f)
Supposeyouaregivenamagicblackboxthatcandetermine
in
nomialtime
,givenanarbitrarygeneralizedregularexpression
R
(as
de˝nedjustbeforetheExercises),whether
R
matchesanystring.
scribeandanalyzea
polynomia
algorithmthateither˝ndsa
singlestringthatmatchesagivengeneralizedregularexpressionor
correctlyreportsthatnosuchstringexists,usingthemagicblackboxas
asubroutine.
6.
There'ssomethingspecialaboutthenumber
3
.
(a)
Describeandanalyzeapolynomiaalgorithmfor
2Partition
.Given
aset
S
of
2
n
positiveintegers,youralgorithmwilldetermineinpolyn
mialtimewhethertheelementsof
S
canbesplitinto
n
disjointpairs
whosesumsareallequal.
(b)
Describeandanalyzeapolynomiaalgorithmfor
2Color
.Givenan
undirectedgraph
G
,youralgorithmwilldetermineinpolynomialtime
whether
G
hasapropercoloringthatusesonlytwocolors.
(c)
Describeandanalyzeapolynomiaalgorithmfor
2Sat
.Givena
booleanformula

inconjunctivenormalform,withexactly
two
literals
perclause,youralgorithmwilldetermineinpolynomialtimewhether

hasasatisfyingassignment.
[Hint:Thisproblemisstronglyconnected
totopicsdescribedinanearlierchapter.]
417

12.NP-Hardness
7.
There'snothingspecialaboutthenumber
3
.
(a)
Theproblem
12Partition
isde˝nedasfollows:Givenaset
S
of
12
n
positiveintegers,determinewhethertheelementsof
S
canbesplitinto
n
subsets,eachwith
12
elements,whosesumsareallequal.Provethat
12Partition
is
[Hint:Reducefrom
3Partition
.Itmaybe
easiertoconsidermultisets˝rst.]
(b)
Theproblem
12Color
isde˝nedasfollows:Givenanundirectedgraph
G
,
determinewhetherwecancoloreachvertexwithoneoftwelvecolors,
sothateveryedgetouchestwodi˙erentcolors.Provethat
12Color
is

[Hint:Reducefrom
3Color
.]
(c)
Theproblem12SATisde˝nedasfollows:Givenabooleanformula

inconjunctivenormalform,withexactlytwelveliteralsperclause,
determinewhether

hasasatisfyingassignment.Provethat
12Sat
is

[Hint:Reducefrom
3Sat
.]
8.
Therearetwodi˙erentversionsoftheHamiltoniancycleproblem,onefor
directedgraphsandoneforundirectedgraphs.Earlierinthischapteryou
can˝ndtwoproofsthatthe
directed
HamiltoniancycleproblemisNP
(a)
Describeapolynomiareductionfromthe
undirected
Hamiltonian
cycleproblemtothe
directed
Hamiltoniancycleproblem.Proveyour
reductioniscorrect.
(b)
Describeapolynomiareductionfromthe
directed
Hamiltonian
cycleproblemtothe
undirected
Hamiltoniancycleproblem.Proveyour
reductioniscorrect.
(c)
Whichofthesetworeductionsimpliesthatthe
undirected
Hamiltonian
cycleproblemisNP
9.
(a)
Describeapolynomiareductionfrom
UndirectedHamiltonia
Cycle
to
DirectedHamiltonianCycle
.
(b)
Describeapolynomiareductionfrom
DirectedHamiltonia
Cycle
to
UndirectedHamiltonianCycle
.
10.
(a)
Describeapolynomiareductionfromthe
HamiltonianPath

lemto
HamiltonianCycle
.
(b)
Describeapolynomiareductionfromthe
HamiltonianCycle
problemto
HamiltonianPath
.
[Hint:Apolynomiareductioncan
calltheblsubroutinemorethanonce,butitdoesn'thaveto.]
11.
Considerthefollowingsubtlevariantsof
CNFSat
.Foreachproblem,the
inputisabooleanformula

inconjunctivenormalform,andthegoalisto
determinewhether

hasasatisfyingassignment.
418

Exercises
(a)
Supposeeveryclauseof

contains
atmost
threeliteralsandeach
variableappearsinatmost
three
clauses.Provethatthisvariantof
CNFSat
is
(b)
Supposeeveryclauseof

contains
exactly
threeliteralsandeach
variableappearsinatmost
four
clauses.Provethatthisvariantof
3Sat
is
[Hint:Solvepart(a)˝rst.]
ª
(c)
Supposeeveryclauseof

cancontain
anynumberof
literals,buteach
variableappearsinatmost
two
clauses.Describeapolynomia
algorithmforthisvariantof
CNFSat
.
ª
(d)
Supposeeveryclauseof

contains
exactly
threeliteralsandeachvariable
appearsinatmost
three
clauses.Provethat

mustbesatis˝able.(So
thisvariantof
3Sat
iscompletelytrivial!)
12.
(a)
Provethat
NotAllEqual3Sat
is
(b)
Provethat
at
is
13.
Abooleanformulain
exclusivconjunctivenormalform
(XCNF)isa
conjunction(
And
)ofseveral
clauses
,eachofwhichisthe
exclusive
of
severalliterals;thatis,aclauseistrueifandonlyifitcontainsanoddnumber
oftrueliterals.The
XCNFat
problemaskswhetheragivenXCNFformula
issatis˝able.Eitherdescribeapolynomiaalgorithmfor
XCNFat
or
provethat
XCNFat
is
[Hint:Donottrytodoboth.]
ª
14.
Considerthefollowingvariantof
3Sat
,called
Majority3Sat
.Justlike
3Sat
,
theinputto
Majority3Sat
isabooleanformula

inconjunctivenormal
form,withexactlythreeliteralserclause.
Majority3Sat
askswhether
thereisanassignmenttothevariablesof

,suchthateveryclausecontains
atleasttwo
True
literals.
Eitherdescribeanalgorithmthatsolves
Majority3Sat
inpolynomial
timeorprovethat
Majority3Sat
isNP
[Hint:Donottrytodoboth.]
«
ª
15.
Foranysubset
X
f
0,1,2,3
g
,considerthefollowingproblem,whichI'll
call
X

3Sat
.Theinputisabooleanformula

inconjunctivenormalform,
withexactlythreeliteralsineachclause.Theproblemistodecidewhether
thereisanassignmenttothevariablesof

suchthatineachclauseof

,
thenumberof
True
literalsisintheset
X
.Forexample:
‹
f
1,2,3
g

3Sat
isthestandard
3Sat
problem.
‹
f
0,3
g

3Sat
isthesameas
AllOrNothing3Sat
.(SeeExercise
4
.)
‹
f
1,2
g

3Sat
isusuallycalled
NotAllEqual3Sat
.(SeeExercise
12(a)
.)
‹
f
1
g

3Sat
isusuallycalled
at
.(SeeExercise
12(b)
.)
419

12.NP-Hardness
‹
f
1,3
g

3Sat
isusuallycalled
XCNFat
.(SeeExercise
13
.)
‹
f
2,3
g

3Sat
isusuallycalled
Majority3Sat
.(SeeExercise
14
.)
Giveacompletelistofallsubsets
X
f
0,1,2,3
g
suchthat
X

3Sat
issolvable
inpolynomialtime,assuming
P
6
=
NP
.
[Hint:Don'tgive
16
di˙erent
arguments.]
16.
Provethatthefollowingproblemsare
(a)
Givenanundirectedgraph
G
,does
G
containasimplepaththatvisits
allbut17vertices?
(b)
Givenanundirectedgraph
G
,does
G
haveaspanningtreeinwhich
everynodehasdegreeatmost23?
(c)
Givenanundirectedgraph
G
,does
G
haveaspanningtreewithatmost
42leaves?
(d)
Givenanundirectedgraph
G
=(
V
,
E
)
,whatisthesizeofthelargest
subsetofvertices
S

V
suchthatatmost374edgesin
E
haveboth
endpointsin
S
?
(e)
Givenanundirectedgraph
G
=(
V
,
E
)
,whatisthesizeofthelargest
subsetofvertices
S

V
suchthateachvertexin
S
hasatmost473
neighborsin
S
?
(f)
Givenanundirectedgraph
G
,isitpossibletocolortheverticesof
G
with
threedi˙erentcolors,sothatatmost31337edgeshavebothendpoints
thesamecolor?
17.
Provethatthefollowingvariantsoftheminimumspanningtreeproblem
are
(a)
Givenagraph
G
,computethe
maximameter
spanningtreeof
G
.
(Thediameterofatree
T
isthelengthofthelongestpathin
T
.)
(b)
Givenagraph
G
withweightededges,computetheminimeight

spanningtreeof
G
.
(c)
Givenagraph
G
withweightededgesandasubset
S
ofverticesof
G
,
computetheminimeightspanningtreeallofwhoseleavesarein
S
.
(d)
Givenagraph
G
withweightededgesandaninteger
`
,computethe
minimeightspanningtreewithatmost
`
leaves.
(e)
Givenagraph
G
withweightededgesandaninteger

,computethe
minimeightspanningtreewhereeverynodehasdegreeatmost

.
18.
(a)
UsingthegadgetinFigure
12.26
(a),provethatdecidingwhetheragiven
planar
graphisorableis
[Hint:Showthatthegadget
canbeored,andthenreplaceanycrossingsinaplanarembedding
withthegadgetappropriately.]
420

Exercises
(b)
Usingpart(a)andthegadgetinFigure
12.26
(b),provethatdeciding
whetheraplanargraph
withmaximumdegree4
isorableis
[Hint:Replaceanyvertexwithdegreegreaterthan4withacollection
ofgadgetsconnectedsothatnodegreeisgreaterthanfour.]
(a)(b)
Figure12.26.
(a)Gadgetforplanar3-colorability.(b)Gadgetfordegree-4planar3-colorability.
19.
Provethat
PlanarCircuitSat
is
[Hint:Constructagadgetfor
crossingwires.]
20.
(a)
Describeapolynomiareductionfrom
3Sat
to
4Sat
.
(b)
Describeapolynomiareductionfrom
4Sat
to
3Sat
.
ª
21.
Describeadirectpolynomiareductionfrom
4Color
to
3Color
.(This
isalotharderthantheoppositedirection.)
22.
A
domino
isa
1

2
rectangledividedintotwosquares,eachofwhichis
labeledwithaninteger.
29
Ina
legalarrangement
ofdominos,thedominos
arelinedupsothatthenumbersonadjacentendsmatch.
Figure12.27.
Alegalarrangementofdominosinwhicheveryintegerbetween0and6appearstwice
Foreachofthefollowingproblems,eitherdescribeapolynomia
algorithmorprovethattheproblemis
(a)
Givenanarbitrarybag
D
ofdominos,istherealegalarrangementof
all
thedominosin
D
?
(b)
Givenanarbitrarybag
D
ofdominos,istherealegalarrangementofa
dominosfrom
D
inwhicheveryintegerbetween
1
and
n
appearsexactly
twice?
29
Theseintegersareusuallyrepresentedbypips,exactlylikedice.Onastandarddomino,the
numberofpipsoneachsideisbetween0and6,althoughonecanbuysetswithupto9oreven
12pipsoneachside;wewillallowarbitraryintegerlabels.Astandardsetofdominoscontains
exactlyonedominoforeachpossibleunorderedpairoflabels;wedo
not
assumethattheinputs
toourproblemshavethisproperty.
421

12.NP-Hardness
ª
(c)
Givenanarbitrarybag
D
ofdominos,whatisthelargestnumberof
dominoswecantakefrom
D
tomakealegalarrangement?
23.
Pebbling
isasolitairegameplayedonanundirectedgraph
G
,whereeach
vertexhaszeroormore
pebbles
.Asingle
pebblingmove
consistsofremoving
twopebblesfromavertex
v
andaddingonepebbletoanarbitraryneighbor
of
v
.(Obviously,thevertex
v
musthaveatleasttwopebblesbeforethemove.)
The
PebbleDestruction
problemasks,givenagraph
G
=(
V
,
E
)
anda
pebblecount
p
(
v
)
foreachvertex
v
,whetheristhereasequenceofpebbling
movesthatremovesallbutonepebble.Provethat
PebbleDestruction
is

24.
Recallthataoringofagraph
G
isafunctionthatassignseachvertex
of
G
afromtheset
f
0,1,2,3,4
g
,suchthatforanyedge
uv
,vertices
u
and
v
areassigneddi˙erentAoringis
careful
ifthecolors
assignedtoadjacentverticesarenotonlydistinct,butdi˙erbymorethan
1
(
mod5
)
.Provethatdecidingwhetheragivengraphhasacareful
5
oring
is
[Hint:Reducefromthestandard
5Color
problem.]
Figure12.28.
Acareful5-coloring.
25.
(a)
Asubset
S
ofverticesinanundirectedgraph
G
is
half
if
eachvertexin
S
isadjacentto
atmostone
othervertexin
S
.Provethat
˝ndingthesizeofthelargesthalfsetofverticesinagiven
undirectedgraphisNP
(b)
Asubset
S
ofverticesinanundirectedgraph
G
is
f
if
ifeachvertexin
S
isadjacentto
atmost374
otherverticesin
S
.Prove
that˝ndingthesizeofthelargestfsetofverticesin
agivenundirectedgraphisNP
(c)
Asubset
S
ofverticesinanundirectedgraph
G
is
almostindependent
ifat
most374edgesin
G
havebothendpointsin
S
.Provethat˝ndingthesize
ofthelargestalmosetofverticesinagivenundirected
graphisNP
26.
Let
G
=(
V
,
E
)
beagraph.A
dominatingset
in
G
isasubset
S
ofthevertices
suchthateveryvertexin
G
iseitherin
S
oradjacenttoavertexin
S
.The
422

Exercises
DominatingSet
problemasks,givenagraph
G
andaninteger
k
asinput,
whether
G
containsadominatingsetofsize
k
.Provethatthisproblemis

Figure12.29.
Adominatingsetofsize
3
inthePetersengraph.
27.
Asubset
S
ofverticesinanundirectedgraph
G
is
triangl
if,forevery
tripleofvertices
u
,
v
,
w
2
S
,atleastoneofthethreeedges
uv
,
uw
,
vw
is
absent
from
G
.Provethat˝ndingthesizeofthelargesttrianglsubset
ofverticesinagivenundirectedgraphis
Figure12.30.
Atriangle-freesubsetof7vertices.Thisisnotthelargestsuchsubsetinthisgraph.
28.
The
RectangleTiling
problemisde˝nedasfollows:Givenonelarge
rectangleandseveralsmallerrectangles,determinewhetherthesmaller
rectanglescanbeplacedinsidethelargerectanglewithnogapsoroverlaps.
(a)
Provethat
RectangleTiling
is
(b)
Provethat
RectangleTiling
is
strongly

Figure12.31.
Apositiveinstanceofthe
RectangleTiling
problem.
29.
(a)
Asubset
B
ofverticesinagraph
G
isa
Burrset
ifremovingeveryvertex
in
B
from
G
leavesasubgraphthatdoesnotcontainaHamiltonianpath.
Provethat˝ndingthesmallestBurrsetinagivengraphisNP
(b)
Asubset
S
ofverticesinagraph
G
isa
Schuylerset
ifremovingevery
vertexin
S
from
G
leavesasubgraphthat
does
containaHamiltonian
423

12.NP-Hardness
path.Provethat˝ndingthesmallestSchuylersetinagivengraphis
NP
30.
(a)
A
tonianpath
inagraph
G
isapaththatgoesthroughatleasthalfof
theverticesof
G
.Showthatdeterminingwhetheragraphhasatonian
pathis
(b)
A
toniancycle
inagraph
G
isacyclethatgoesthroughatleasthalfof
theverticesof
G
.Showthatdeterminingwhetheragraphhasatonian
cycleis
[Hint:Usepart(a).Ornot.]
31.
Let
G
beanundirectedgraphwithweightededges.A
heavyHamiltonian
cycle
isacycle
C
thatpassesthrougheachvertexof
G
exactlyonce,suchthat
thetotalweightoftheedgesin
C
ismorethanhalfofthetotalweightofall
edgesin
G
.ProvethatdecidingwhetheragraphhasaheavyHamiltonian
cycleis
Figure12.32.
AheavyHamiltoniancycle.Thecyclehastotalweight34;thegraphhastotalweight67.
32.
Foreachofthefollowingproblems,eitherdescribeapolynomia
algorithmorprovethattheproblemis
(a)
A
doubluleriantour
inanundirectedgraph
G
isaclosedwalkthat
traverseseveryedgein
G
exactlytwice.Givenagraph
G
,does
G
havea
doubluleriantour?
(b)
A
doublamiltoniantour
inanundirectedgraph
G
isaclosedwalk
thatvisitseveryvertexin
G
exactlytwice.Givenagraph
G
,does
G
have
adoublamiltoniantour?
(c)
A
doublamiltonian
circuit
inanundirectedgraph
G
isaclosedwalk
thatvisitseveryvertexin
G
exactlytwice
andtraverseseachedgein
G
at
mostonce
.Givenagraph
G
,does
G
haveadoublamiltoniancircuit?
(d)
A
tripluleriantour
inanundirectedgraph
G
isaclosedwalkthat
traverseseveryedgein
G
exactlythreetimes.Givenagraph
G
,does
G
haveatripluleriantour?
424

Exercises
(e)
A
triplamiltoniantour
inanundirectedgraph
G
isaclosedwalkthat
visitseveryvertexin
G
exactlythreetimes.Givenagraph
G
,does
G
haveatriplamiltoniantour?
33.
Thisexerciseasksyoutoprovethatacertainreductionfrom
VertexCover
to
SteinerTree
iscorrect.Supposewewantto˝ndthesmallestvertex
coverinagivenundirectedgraph
G
=(
V
,
E
)
.Weconstructanewgraph
H
=(
V
0
,
E
0
)
asfollows:
‹
V
0
=
V
[
E
[f
z
g
‹
E
0
=
f
ve
j
v
2
V
isanendpointof
e
2
E
g[f
vz
j
v
2
V
g
.
Equivalently,weconstruct
H
bysubdividingeachedgein
G
withanew
vertex,andthenconnectingalltheoriginalverticesof
G
toanew
apex
vertex
z
.
Provethat
G
hasavertexcoverofsize
k
ifandonlyifthereisasubtree
of
H
with
k
+
j
E
j
+
1
verticesthatcontainseveryvertexin
E
[f
z
g
.
34.
Considerthefollowingsolitairegame.Thepuzzleconsistsofan
n

m
gridofsquares,whereeachsquaremaybeempty,occupiedbyaredstone,
oroccupiedbyabluestone.Thegoalofthepuzzleistoremovesomeof
thegivenstonessothattheremainingstonessatisfytwoconditions:(1)
everyrowcontainsatleastonestone,and(2)nocolumncontainsstonesof
bothcolors.Forsomeinitialcon˝gurationsofstones,reachingthisgoalis
impossible.
Asolvablepuzzleandoneofitsmanysolutions.Anunsolvablepuzzle.
Provethatitistodetermine,givenaninitialcon˝gurationof
redandbluestones,whetherthepuzzlecanbesolved.
35.
Eachofthefollowinggamesinvolvesan
n

m
gridofsquares,whereeach
squareiseitheremptyoroccupiedbyastone.Inasinglemove,youcan
remove
all
thestonesinanarbitrarycolumn.
(a)
Provethatitisto˝ndthe
smallest
subsetofcolumnsthatcan
beclearedsothat
atmost
onestoneremainsineachrowofthegrid.
(b)
Provethatitisto˝ndthe
largest
subsetofcolumnsthatcanbe
clearedsothat
atleast
onestoneremainsineachrowofthegrid.
425

12.NP-Hardness
ª
(c)
Provethatitistodeterminewhether
any
subsetofcolumnscan
beclearedsothat
exactly
onestoneremainsineachrowofthegrid.
36.
Je˙triestomakehisstudentshappy.Atthebeginningofclass,hepassesout
aquestionnairethatlistsanumberofpossiblecoursepoliciesinareaswhere
heis˛exible.Everystudentisaskedtorespondtoeachpossiblecourse
policywithoneofnglyfavostlyneutralornglyoppo
Eachstudentmayrespondwithnglyfavornglyoppotoat
most˝vequestions.BecauseJe˙'sstudentsareveryunderstanding,each
studentishappyif(butonlyif)heorsheprevailsinatleastoneoftheir
strongpolicypreferences.Eitherdescribeapolynomiaalgorithmfor
settingcoursepolicytomaximizethenumberofhappystudents,orshow
thattheproblemis
37.
You'reinchargeofchoreographingamusicalforyourlocalcommunity
theater,andit'stimeto˝gureoutthe˝nalposeofthebigshoopping
numberattheend.You'vedecidedthateachofthe
n
cast
membersintheshowwillbepositionedinabiglinewhenthesong˝nishes,
allwiththeirarmsextendedandshowingo˙theirbestspirit˝ngers.
Thedirectorhasdeclaredthatduringthe˝nal˛ourish,eachcastmember
musteitherpointboththeirarmsuporpointboththeirarmsdown;it's
yourjobto˝gureoutwhopointsupandwhopointsdown.Moreover,the
directorhasalsogivenyoualistofarrangementsthatwillupsethisdelicate
artistictemperament.Eachforbiddenarrangementisasubsetofthecast
memberspairedwitharmpositions;forexample:maynotpointher
armsupwhileNed,Apu,andSmitherspointtheirarmsdo
Provethat˝ndinganacceptablearrangementofarmpositionsis
38.
Thenexttimeyouareataparty,oneoftheguestswillsuggesteveryoneplaya
roundofWayMumbletypeg,agameofskillanddexteritythatrequires
threeteamsandaknife.Theo˚cialRulesofWayMumbletypeg
(˝xedduringtheHolyRomanWayMumbletypegCouncilin1625)
requirethat(1)eachteam
must
haveatleastoneperson,(2)anytwopeople
onthesameteam
must
knoweachother,and(3)everyonewatchingthe
game
must
beononeofthethreeteams.Ofcourse,itwillbeareally
fun
party;nobodywillwanttoleave.Therewillbeseveralpairsofpeopleat
thepartywhodon'tknoweachother.Thehostoftheparty,havingheard
thrillingtalesofyourprowessinallthingsalgorithmic,willhandyoualist
ofwhichpairsofpartknoweachotherandaskyoutochoosethe
teams,whilehesharpenstheknife.
426

Exercises
Eitherdescribeandanalyzeapolynomialtimealgorithmtodetermine
whetherthepartcanbesplitintothreelegalWayMumbletypeg
teams,orprovethattheproblemis
39.
Thepartyyouareattendingisgoinggreat,butnowit'stimetolineupfor
TheAlgorithmMarch(


)
!Thisdancewasoriginally
developedbytheJapanesecomedyduoItsumoKokokara(

)
forthechildren'stelevisionshowPythagoraSwitch(

#
!
).
TheAlgorithmMarchisperformedbyalineofpeople;eachpersoninline
startsaspeci˝csequenceofmovementsonemeasurelaterthantheperson
directlyinfrontofthem.Thus,themarchisthedanceequivalentofa
musicalroundorcanon,likeowRowRowYouror"FrèreJacques".
Properetiquettedictatesthateachmarchermustknowtheperson
directlyinfrontoftheminline,lestaminormistakeleadtohorrible
embarrassmentbetweenstrangers.Supposeyouaregivenacompletelist
ofwhichpeopleatyourpartyknoweachother.Provethatitis
todeterminethelargestnumberofpartthatcanparticipateinthe
AlgorithmMarch.Youmayassumewithoutlossofgeneralitythatthereare
noninjasatyourparty.
¨
40.
Provethatthefollowingproblemsaboutnondeterministicatea
tomataandregularexpressionsare
(a)
GivenanNFA
M
overthealphabet

=
f
0
,
1
g
,isthereastringin


that
M
does
not
accept?
(b)
Givenan
acyclic
NFA
M
overthealphabet

=
f
0
,
1
g
,whatisthelength
ofthe
shortest
stringin


that
M
does
not
accept?
(c)
Givenaregularexpression
R
overthealphabet

=
f
0
,
1
g
,istherea
stringin


that
R
does
not
match?
(d)
Givena
star
regularexpression
R
overthealphabet

=
f
0
,
1
g
,what
isthelengthofthe
shortest
stringin


that
R
does
not
match?
(Infact,problems(a)and(c)arePSPAmplete;evenprovingthatthese
problemsareinPSPACEisnontrivial.)
¨
41.
(a)
Describeapolynomiaalgorithmforthefollowingproblem:Given
anNFA
M
overthealphabet

=
f
0
,
1
g
,isthereastringin


that
M
does
accept?
(b)
Describeapolynomiaalgorithmforthefollowingproblem:Given
aregularexpression
R
overthealphabet

=
f
0
,
1
g
,isthereastring
in


that
R
does
match?
427

12.NP-Hardness
(c)
Thecomplementofanyregularlanguageisanotherregularlanguage.
Sowhydon'tthesetwoalgorithms,togetherwiththeNPessresults
inProblem
40
,provethatP=NP?
42.
Charonneedstoferry
n
recentlydeceasedpeopleacrosstheriverAcheron
intoHades.Certainpairsofthesepeopleareswornenemies,whocannot
betogetheroneithersideoftheriverunlessCharonisalsopresent.(Iftwo
enemiesareleftalone,onewillstealtheobolfromtheother'smouth,leaving
themtowanderthebanksoftheAcheronasaghostforalleternity.Let's
justsaythisisaVeryBadThing.)Theferrycanholdatmost
k
passengers
atatime,includingCharon,andonlyCharoncanpilottheferry.
30
ProvethatitistodecidewhetherCharoncanferryall
n
people
acrosstheAcheronunharmed(asidefrombeing,youknow,dead).The
inputforCharon'sproblemconsistsoftheintegers
k
and
n
andan
n
ertex
graph
G
describingthepairsofenemies.Theoutputiseither
True
or
False
.
PleasedonotwriteyoursolutioninclassicalLatin.
30
Thisproblemisageneralizationofthewownwolfbbagepuzzle,whose
˝rstknownappearanceisintheremarkablemedievalmanuscript
PropositionesadAcuendos
Juvenes
[
ProblemstoSharpentheYoung
].
XVIII.
PropositioDeHomineetCapraetLvpo
.
Homoquidamdebebatultra˛uuiumtransferrelupum,capram,etfasciculumcauli.Et
nonpotuitaliamnaueminuenire,nisiquaeduostantumexipsisferreualebat.Praeceptum
itaqueeifuerat,utomniahaecultraillaesaomninotransferret.Dicat,quipotest,quomodo
eisillaesistransirepotuit?
Solutio.
Similinamquetenoreducerempriuscaprametdimitteremforislupumetcaulum.
Tumdeindeuenirem,lupumquetransferrem:lupoqueforismissocapramnauireceptamultra
reducerem;capramqueforismissamcaulumtransueheremultra;atqueiterumremigassem,
capramqueassumptamultraduxissem.Sicquefaciendofactaeritremigatiosalubris,absque
uoraginelacerationis.
ForthosefewreaderswhoseclassicalLatinisalittlerusty,hereisanEnglishtranslation:
XVIII.
TheProblemoftheMan,theGoat,andtheWolf
.
Amanneededtotransferawolf,agoat,andabundleofcabbageacrossariver.However,
hefoundthathisboatcouldonlybeartheweightoftwo[objectsatatime,includingthe
man].Andhehadtogeteverythingacrossunharmed.Tellmeifyoucan:Howtheywere
abletocrossunharmed?
Solution.
Inasimilarfashion[asanearlierproblem],Iwould˝rsttakethegoatacross
andleavethewolfandcabbageontheoppositebank.ThenIwouldtakethewolfacross;
leavingthewolfonshore,Iwouldretrievethegoatandbringitbackagain.ThenIwould
leavethegoatandtakethecabbageacross.AndthenIwouldrowacrossagainandgetthe
goat.Inthiswaythecrossingwouldgowell,withoutanythreatofslaughter.
Themostlikelyauthorofthe
Propositiones
istheproli˝cEnglishscholarAlcuinof
York.TheevidenceforAlcuin'sauthorshipofthistreatiseissomewhatcircumstantial;however,
wedoknowfromhiscorrespondencewithCharlemagnethathesenttheemperorsomee
arithmeticalproblemsforfMostmodernscholarsbelievethatevenifAlcuindidwritethe
Propositiones
,hedidnotinventalloftheproblemshimself,butrathercollectedthemfromeven
earliersources.
Somethingsneverchange.
428

Ifwehadanindex˙le,wecouldlookitupintheindex˙leunder˙le
TeganJovanka[JanetFielding],ovalva(Part
DoctorWho
,Season19(January4,1982)
Istartedwiththephonebook.Lookingupmensawasnotgoingtobeeasy,what
withhavingtofollowthestrictalphabetizingrulesthataresocommonnowadays.
Ipreferasofter,morefuzzyalphabetizingscheme,onethatallowsthemindto
˝oatfreeandupontheword.Thereisprideinthat.Thedictionaryisa
perfectexampleofover-alphabetization,withitsharshrulesandeverylittleword
neatlyinplace.Italmostmakesmeneverwanttoeatagain.
SteveMartin,IJoinedMensa
TheNewYorker
,July21,1997.
Index
Forsometopicswithmultiplereferences,boldpagenumbersindicatethe
primaryreference.Humansandpseudocodeareindexedseparately.
at
,
405
2048(game),
407
2Color
,
417
2Partition
,
417
2Sat
,
406
,
417
3CNFformula,
388
3Color
,
395
reductionfrom
3Sat
,
395
3Partition
,
405
3Sat
,
388
reductionfrom
CircuitSat
,
388
,
393
,
395
reductionto
3Color
,
395
reductionto
DirectedHamCycle
,
400
reductionto
MaxIndSet
,
390
,
393
,
395
ruleofthree,
395
,
405
,
408
4:20,
161
academicjobmarket,
170
activevertexsearch),
228
acyclicgraph(=forest),
191
acyclicmaximum˛ow,
339
,
345
429

Index
networks,
375
additionchains,
94
incrementanddoubleonly,
181
additionalrecurrenceparameter,
295
,
313
,
318
adjacencymatrix,
361
adjacentvertices,
191
airlinescheduling,
362
alternatingpath,
356
amortizedanalysis,
264
,
267
TheAnnouncer'sTest,
17
antanairesis
,
see
Euclid'salgorithm
Antarctica,
123
,
143
,
181
APSP,
see
shortestpaths,a
arbitrage,
321
arithmetictakestime,
104
,
325
arpedonaptai
,
7
,
317
arrownotation(
a
"
b
c
),
415
articulationpoint,
see
cutvertex
arti˝cialsourcevertex,
227
,
312
,
355
,
367

Aryabhat
.
a'spulverizer,
see
Euclid's
algorithm
assignment,
see
matching,tuple
selection
augmentingpath,
332
veragecaanalysis,
31
B

147
backedgesearch),
229
backtracking,
71
recursivebruteforce,
80
sequenceofdecisions,
79
summaryofpastdecisions,
79
backwardinduction,
see
dynamic
programming
Baguenaudier,
45
balancedbrackets,
148
,
184
BarleyMo
18
basecase,
23
baseballelimination,
363
BeAMillionaireAndNeverPayTaxes
reductionfrom
BeAMillionaire
,
10
ord,
289
asdynamicprogramming,
294
Moore'svariant,
292
laba,
see
ord
himbel,
see
ord
Bellman'sequation,
see
recurrence
caanalysis,
31
search,
202
Dijkstra'salgorithm,
288
Jarník'salgorithm,
264
algorithm
(Edmo
340
,
348
BFS,
see
search
binarysearchtrees,
67
AAtrees,
96
,
145
AVLtrees,
96
,
144
,
341
optimal,
91
recon˝guration,
68
lacktrees,
96
,
144
leaning,
see
AAtrees
binarytodecimalconversion,
56
bipartitegraph,
207
bipartitemaximummatching,
355
bitonic,
60
blackbox,
12
,
21
,
22
,
416
seealso
noneofyourbusiness
Bob'smamaseesaukulele,
129
bond(minimaledgecut),
347
booleancircuits,
190
,
379
booleanformula,
386
booleanmatrixmultiplication,
323
Bor·vka'salgorithm,
261
advantages,
262
BostonPoolalgorithm,
172
bottleneck,
seealso
minimumcut
bottleneckdistance,
270
,
347
bottleneckspanningtree,
348
search,
202
,
278
,
341
BridgesofKönigsburg,
190
seealso
EulerTour
430

BST,
see
binarysearchtrees
Bubbaseesabanana,
128
busscheduling,
362
c
f
(residualcapacity),
331
Camelot,
185
CandyCrushSaga,
407
capacityscaling,
351
carefulgraphcoloring,
422
centralvertexofatree,
64
checkerboard,
59
,
222
,
371
checkers,
see
draughts
children'ssongs,
16
choosingtherightproblemto
reducefrom,
407
circuitsatis˝ability,
see
CircuitSat
CircuitSat
,
380
reductionto
3Sat
,
388
,
393
,
395
reductionto
Sat
,
386
circulation,
337
clause,
388
clausegadget,
390
,
395
,
396
,
401
clique,
394
closedwalkinagraph,
191
CNF,
see
conjunctivenormalform
CNFat
,
see
Sat
,
381
compassandstraightedge,
7
component,
191
computationescanonicaetlegalis
,
188
condensation,
see
strongcomponent
graph
con˝gurationgraph,
194
,
220
,
221
conjunctivenormalform,
388
connectedcomponent,
see
component
connectedgraph,
191
conservationconstraint,
328
convenience,
32
,
79
,
227
,
237
,
279
,
396
Cookreduction,
384
CookieClicker,
407
countinggraphcomponents,
204
covergadget,
399
crossedgesearch),
229
crossinggadget,
410
cursuspublicus
,
188
cut(vertexpartition),
329
cutcapacity
k
S
,
T
k
,
329
cutvertex,
245
cyclecover,
371
cycle˛ow,
337
cycleinagraph,
191
dag,
see
directedacyclicgraph
DanceDanceRevolution,
133
datastructuresforgraphs,
see
graphs
decisionproblem,
381
decisiontree,
53
decisionversusoptimization,
85
degreeofavertex,
191
DeNile,
146
dependencygraph,
107
,
109
,
114
,
119
,
193
,
234
,
366
order,
see
preorder,
postorder
search,
76
,
201
,
225
,
282
,
380
DFA,
see
ateautomaton
DFS,
see
search
Dijkstra'salgorithm,
203
,
284
withnegativeedges,
288
exponentialrunningtime,
289
,
300
withnonegativeedges,
286
Dinic's[Dinitz's]algorithm,
341
directedacyclicgraph,
192
,
231
directedcycle,
192
directedgraph,
190
DirectedHamCycle
,
398
reductionfrom
3Sat
,
400
431

Index
reductionfrom
VertexCover
,
398
DirectedHamPath
,
401
inadirectedacyclicgraph,
250
inatournament,
208
reductiontoshortestsimple
path,
275
directedpath,
192
directedwalk,
192
disconnectedgraphtraversal,
203
disjointpaths
int,
353
vint,
354
disjocover,
253
indirectedacyclicgraphs,
360
NPingeneralgraphs,
360
disjodatastructure,
267
,
271
disjunctivenormalform,
416
dist

i
(
v
)
(lengthofshortestwalk
to
v
withatmost
i
edges),
291
dist
(
u
,
v
)
,
309
dist
(
v
)
(tentativedistance),
276
distancemultiplication,
see
smatrix
multiplication
distancetables,
310
divideandconquer,
26
,
29
,
31
,
37
,
91
,
315
,
323
domaintransformation,
34
,
56
DominatingSet
,
407
,
422
inintervalgraphs,
178
dominos,
371
,
421
Don'ttrytobeclever,
80
,
82
,
87
,
89
DP,
see
Deadpool,dynamic
programming
Dr.Seuss[TheodorSuessGiesel]
OnBeyondZebra
,
167
Dr.Seuss[TheodoreSuessGiesel]
TheCatintheHatComesBack
,
21
draughts,
100
,
408
English
222
international,
408
reductionfrom
UndirectedHamCycle
,
409
drinkingsongs,
1
,
16
,
18
duplationandmediation,
5
,
21
,
23
,
43
dynamicprogramming,
97
,
101
,
178
,
183
,
185
,
222
,
282
aspostordertraversal,
234
,
255
beforeBellman,
101
boilerplate,
106
indirectedacyclicgraphs,
235
,
250
intrees,
120
not
always
betterthan
memoization,
117
sequential,
105
spaceoptimization,
102
haped,
117
edge(pairofvertices),
187
edgecapacity,
329
edgecontraction,
269
edgedemands,
347
edgegadget,
398
,
402
,
410
edgereweighting,
311
mplement
G
,
394
intpaths,
353
editdistance,
111
,
139
,
149
,
193
,
235
,
237
Edmoalgorithms
fattestaugmentingpaths,
340
shortestaugmentingpaths,
341
EDVAC,
27
Egyptianmultiplication,
see
duplationandmediation
ELEMENTARY,
415
elves,
see
RecursionFairy
emptyedge(˛ows),
329
432

endpointsofanedge,
191
epiphany,
166
,
242
errors,
vii
escapeproblem,
369
Ethiopianpeasantmultiplication,
see
duplationand
mediation
Euclid'salgorithm,
57
Eulertour,
190
,
208
,
223
,
398
evaluationorder,
107
,
109
,
114
,
119
aspostorder,
235
singleanddoublearrows,
110
,
120
Exact3DimensionalMatching
,
405
EXP(exponentialtime),
413
EXP
414
exponentialdecay,
336
,
340
,
349
,
351
exponentiation,
42
j
f
j
(˛owvalue),
328
factorial,
57
fagame,
74
FantasticMr.Fox
,
133
fastFouriertransform,
42
feasible˛ow,
329
FFT,
see
fastFouriertransform
Fibonacciheaps,
264
,
288
Fibonaccinumbers,
98
,
193
,
249
FightClub
,
180
˝nishedvertexsearch),
228
ateautomaton,
194
,
253
,
255
noc,
195
PSPAproblems,
413
Firstmakeitwork,thenmakeit
fast,
22
,
26
,
40
,
80
,
84
,
95
,
96
,
99
,
106
,
108
,
109
,
123
,
289
Firstwhat,thenhow,
106
Fizzbuzz(standardinterview
question),
17
˛ood˝ll,
205
˛ow,
328
˛owdecomposition,
336
,
358
algorithm,
339
˛owvalue
j
f
j
,
328
˛owvectorspace,
346
˛yingkings,
223
,
408
Fn,
334
canrunforever,
335
,
340
,
349
exponentialrunningtime,
335
fattestaugmentingpaths,
340
shortestaugmentingpaths,
341
Ford'srelaxationalgorithm,
276
exponentialrunningtime,
300
forest(=acyclicgraph),
191
formulasatis˝ability,
see
Sat
forwardedgesearch),
229
French˛agwalk,
303
FrenchinvasionofIndochina,
24
funnymatrixmultiplication,
see
smatrix
multiplication
G
f
(residualgraph),
332
gadgets,
395
Galhapleyalgorithm,
173
gamestate,
75
,
194
gametrees,
74
,
75
,
79
,
80
,
100
garbagecollection,
210
gategadgets,
395
generalpatterns
backtracking,
79
divideandconquer,
31
dynamicprogramming,
105
graphtraversal,
199
greedyexchangearguments,
164
minim
algorithms,
259
433

Index
NPessproofs,
392
salgorithms,
276
genericgraphtraversal,
see
whatevsearch
GeorgeoftheJungle
,
65
Giggle,
151
,
301
GilbertandSullivan
HMSPinafore
,
108
TheMikado
,
404
ThePiratesofPenzance
,
374
goldenratio,
99
,
335
,
349
goodpivot,
33
,
36
medianofmedians,
37
graphcoloring,
395
inintervalgraphs,
178
graphembedding,
192
graphreduction,
205
,
212
graphtraversal,
199
,
209
,
247
disconnectedgraphs,
203
,
205
,
227
graphicalstatics,
189
graphs
datastructures
adjacencylist,
195
,
198
adjacencymatrix,
196
,
198
comparison,
198
implicit,
198
,
207
,
235
historicalexamples,
187
modernexamples,
192
terminology,
190
greatestcommondivisor,
57
greedyalgorithms,
159
areusuallywrong,
107
thatdon'twork,
172
,
177
,
183
,
185
,
223
,
349
,
373
trydynamicprogramming˝rst,
108
greedyexchangearguments,
160
,
161
,
163
,
164
,
164
,
168
,
258
,
260
guillotinesubdivision,
145
seealso

Gulliver'sTravels
,
2
,
3
,
96
,
98
,
145
Hamiltoniancycle,
see
DirectedHamCycle
,
UndirectedHamCycle
de˝nition,
208
,
398
Hamiltonianpath,
see
DirectedHamPath
,
UndirectedHamPath
de˝nition,
401
HandshakeLemma,
218
hashtags,
80
headofanedge,
191
Hellenisticsnobbery,
57
helpfuldrawings
evaluationorderarrows,
110
,
120
NPessreduction,
387
recursiontrees,
32
heuristic,
30
,
76
seealso
algorithmthatdoesn't
work
HittingSet
,
406
HowdoI...
choosetherightproblemto
reducefrom?,
407
deriveadynamicprogramming
algorithm?,
106
designabacktracking
algorithm?,
79
provethatagreedyalgorithm
iscorrect?,
164
provethataproblemis
NP
386
,
392
Hu˙mancodes,
165
,
179
Huntingtoalgorithm,
22
HyperboleandaHalf
,
261
,
291
hypercube,
208
IBM,
26
implicitgraphrepresentation,
195
ofavertex,
191
434

incorrectproofsthatP=NP,
404
,
415
,
416
independentset,
see
MaxIndSet
,
390
indexformulation,
77
,
83
,
88
indice,
see
index(dammit)
induction,
ii
,
23
,
28
,
29
,
40
,
75
,
77
,
100
,
103
,
163

165
,
175
,
200
,
201
,
230
,
242
,
260
,
277
,
282
,
284
,
287
,
291
,
318
,
334
,
336

338
,
341
backward,
see
dynamic
programming
seealso
recursion
inductionhypothesis,
see
Recursion
Fairy
in˝niteloop,
16
,
172
,
277
,
294
,
313
,
335
,
349
inputsize,
404
integermaximum˛ow,
334
,
348
,
358
integermultiplication
dinquer,
40
duplationandmediation,
5
Karatsuba'salgorithm,
41
Tooookalgorithm,
42
viafastFouriertransform,
42
integermultiplicationlattice
algorithm,
3
IntegralityTheorem(maximum
˛ows),
334
internationaldraughts,
see
draughts
interpuncts(word
·
spacing),
80
intersectiongraph,
192
intervalgraph,
192
interviewquestions,
124
,
143
,
156
inverseAckermanfunction

(
n
)
,
267
inversioncounting,
51
Jarník'salgorithm,
203
,
263
Je˙actuallydidthis,
249
,
349
Johnson'salgorithm,
312
jumpinthemiddle,
80
,
81
,
86
,
89
KanieltheDane,
218
Karpreduction,
385

65
seealso
guillotinesubdivision
Klondike,
407
knightsandknaves,
59
Kohariralgorithm,
240
Kruskal'salgorithm,
265
KublaKhan
,
134
kut
.
t
.
aka,
see
Euclid'salgorithm
labelofapath,
251

253
labelinggraphcomponents,
204
language(setofstrings),
384
largestcommonsubtree,
377
Latin,
2
,
80
,
428
latticemultiplication,
3
lawsofphysics,irrelevanceof,
336
Letthatwhichdoesnotmatter
trulyslide,
12
,
14
,
80
,
82
levelofavertex,
341
Levenshteindistance,
see
edit
distance
linebreaking,
130
linselection,
37
,
53
,
55
listofNPproblems,
404
literal,
388
localmaximum,
63
localminimum,
61
logarithmipacereduction,
385
logicgates,
379
longestcommonincreasing
subsequence,
126
longestcommonsubsequence,
94
,
115
,
125
longestincreasingdigital
subsequence,
140
longestincreasingsubsequence,
86
,
109
,
237
435

Index
LongestPath
,
406
indirectedacyclicgraphs,
86
,
88
,
90
,
236
reductionfrom
TravelingSalesman
,
236
loopinvariant,
see
induction
hypothesis
low
(
v
)
,
242
lowerboundviaadversary
argument,
380
magnetictape,
159
Majority3Sat
,
419
majoritygate,
396
nereduction,
385
marketingbuzzwords,
102
MasterTheorem,
see
recursiontrees
matching,
355
nossing,
377
otherspecialcases,
377
m

atr

avr
.
tta,
97
matrice,
see
matrix(dammit)
matrixmultiplication
boolean,
323
inctime,
324
s,
316
,
323
,
325
standard,
323
,
325
matrixrounding,
182
,
374
Max2Sat
,
406
MaxClique
,
394
reductionfrom
MaxIndSet
,
394
MaxCut
,
406
MaxIndSet
,
390
incirculararcgraphs,
185
inintervalgraphs,
162
intrees,
120
reductionfrom
3Sat
,
390
,
393
,
395
reductionto
MaxClique
,
394
reductionto
MinVertexCover
,
394
maximum˛ows,
329
acyclic,
339
,
345
integer,
334
multiplesourcesandtargets,
368
withvertexcapacities,
354
maximumindependentset,
see
MaxIndSet
maximummatchinginbipartite
graphs,
355
maximumsubarrayproblem,
124
twonal,
138
Maxwonadiagrams,
189
mazes,
190
,
247
e,
216
,
304
number,
212
median,
see
selection
medifansselection,
37
,
53
mediffans
selection,
55
medifheuristic,
30
,
50
memoization,
99
,
194
,
234
,
271
,
278
seealso
dynamicprogramming
memoizedrecursionis
search,
234
mergesort,
26
mergesortrecurrence,
28
,
30
,
33
metagraph,
see
strongcomponent
graph
methodischesTatonnieren
,
72
MinVertexCover
,
394
reductionfrom
MaxIndSet
,
394
reductionto
DirectedHamCycle
,
398
reductionto
SubsetSum
,
402
smatrixmultiplication,
316
,
323
,
325
Minesweeper,
406
minimumcliquecover
incirculararcgraphs,
186
inintervalgraphs,
178
436

minimumcuts,
330
minimumspanningtrees,
203
,
257
uniqueness,
258
,
268
Minty'salgorithm,
see
Dijkstra's
algorithm
mom,
see
medianofmedians
mondegreen,
18
Monopoly,actualrulesof,
386
Moore'salgorithm,
292
Morsecode,
97
,
165
mountainclimbingproblem,
217
MST,
see
minimumspanningtrees
multigraph,
191
n
queens,
71
,
79
,
80
Nadirianars,
123
,
181
NapoleonDynamite
,
131
NationalResidentMatching
Program,
171
eedlWunalgorithm,
115
negativecycledetection,
292
,
294
,
299
negativecycles,
275
,
277
negativeedges,
274
neighbor,
191
Neitherlands(
TheMagicians
),
376
nestingboxes,
372
newvertexsearch),
228
NFA,
see
ateautomaton
NobelPrizein
Algorithms
Economics,
173
node,
see
vertex
noneofyourbusiness,
21
,
23
,
25
,
80
,
206
seealso
blackbox
NotAllEqual3Sat
,
405
NP(nondeterministicpolynomial
time),
381
NPversus,
382
NPversusEXP,
414
NPversusPSPACE,
412
NPmplete,
383
NP
121
,
138
,
140
,
235
,
275
,
358
,
360
,
381
,
382
formalde˝nition,
384
weakly,
117
,
404
obvious,
14
,
76
,
80
,
317
,
382
,
383
Ohyeah,wealreadydidthis,
30
,
78
onquicksort,
see
quickselect
openproblems
ashortestpaths,
317
matrixmultiplcation,
317
optimaladditionchains,
44
optimalpancake˛ipping,
49
PversusNP,
381
sortingbinarytreesbyswaps
androtations,
69
winninginternationaldraughts
inoneturn,
411
mining
seeprojectselection,
366
optimalbinarytrees
binarysearchtrees,
91
,
117
variants,
96
,
144
expressiontrees,
141
,
142
binarycodes,
165
optimalsubstructure,
seealso
correctrecurrence,
112
orderedsubtree,
156
Orlin'salgorithm,
344
oofavertex,
191
P(polynomialtime),
381
PversusNP,
382
PversusPSPACE,
412
P
6
=
NPasalawofnature,
382
P
407
palindrome,
81
,
128
,
218
,
222
,
252
,
377
pancakesorting,
49
,
151
parallelassignment,
249
parent,
200
,
276
437

Index
seealso
mom
Partition
NPproblem,
405
subroutineinquicksortand
quickselect,
29
partyplanning,
182
pathcompression,
271
path˛ow,
337
pathinagraph,
191
peasantmultiplication,
see
duplationandmediation
pebbling,
422
peckingorder,
208
pixels,
206
Planar3Sat
,
405
PlanarCircuitSat
,
405
planargraph,
192
PlanarNotAllEqual3Sat
,
405
Plankalkül
,
205
,
278
plumbus,
322
politics
academic,
59
,
373
,
376
,
384
Illinois,
373
RenaissanceItalian,
47
,
59
Soviet,
383
postorder,
227
treetraversal,
65
,
66
,
122
power,
see
exponentiation
pred
(
u
,
v
)
,
309
pred
(
v
)
(tentativepredecessor),
276
predecessorofavertex,
191
pre˝x,
77
binarycode,
165
preorder,
227
treetraversal,
65
,
66
prerequisites,
i
references,
ii
Prim'salgorithm,
see
Jarník's
algorithm
projectselection,
366
proper
k
oring,
395
propersubgraph,
191
PropositionesadAcuendosJuvenes
,
428
prosody,
97
seealso
Fibonaccinunbers
seealso
Morsecode
omialtime,
117
,
404
PSPACE(polynomialspace),
412
PSPACEversusEXP,
414
PSPA
412
punchedcards,
26
QBF(quanti˝edbooleanformula),
413
quickselect,
35
quicksort,
29
quicksortrecurrence,
33
,
34
Racetrack,
220
rainbow,
387
RANDCorporation,
101
randomachine,
384
reach
(
v
)
,
226
reach

1
(
v
)
,
238
reachability,
191
,
199
directed,
226
reciprocaldiagrams,
189
recommendedcoursepolicies,
108
,
123
recon˝gurationproblems,
24
,
45
,
49
,
68
,
213
,
215
,
216
,
219
,
221
,
428
recurrences
fullhistory,
85
,
92
removing˛oorsandceilings,
34
scary,
84
,
92
solvingwithrecursiontrees,
31
recursion,
22
,
261
,
291
,
353
backtracking,
71
search,
225
divideandconquer,
26
smart,
see
dynamic
programming
438

seealso
induction
RecursionFairy,
22
,
25
,
26
,
28
,
37
,
337
recursiontrees,
31
,
49
,
99
alllevelsequal,
28
,
30
,
33
,
33
,
39
,
49
backtracking,
72
,
76
exponentialdecay,
33
,
37

39
,
43
,
49
exponentialgrowth,
33
,
40
,
49
,
78
,
85
path,
36
,
37
weird,
30
,
49
recursivebruteforce,
see
backtracking
reduced˛ownetwork,
331
,
345
reduction,
21
,
56
,
205
,
212
,
385
regularexpressions,
151
generalized,
414
,
415
,
417
PSPAproblems,
413
relaxingatenseedge,
276
repeatedsquaring,
43
,
44
,
103
,
317
replacementpaths,
298
repricing,
see
vertexreweighting
residualcapacity
c
f
,
331
residualgraph
G
f
,
332
resultsbyRANDresearchers,
101
,
276
,
284
,
331
resultsbystudents,
35
,
40
,
42
,
166
,
278
,
324
,
341
,
383
,
407
Revelation
161
reversal
rev
(
G
)
ofdirectedgraph
G
,
234
reversetopologicalorder,
see
postorder
RickandMorty
,
322
roadmaps,
187
,
274
,
310
rockclimbing,
153
,
184
,
253
rootedsubtree,
121
Rubik'sCube,
407
ruleofthree,
392
,
393
,
395
,
405
,
407
,
408
,
417
rulerfunction,
45
,
46
Russianpeasantmultiplication,
see
duplationandmediation
k
S
,
T
k
(cutcapacity),
329
(
s
,
t
)

329
(
s
,
t
)
ow,
328
safeedge,
259
Sat
,
386
reductionfrom
CircuitSat
,
386
satis˝ability
circuit,
see
CircuitSat
formula,
see
Sat
saturatededge(˛ows),
329
scc
(
G
)
(strongcomponentgraph),
237
scheduling,
161
greedyalgorithmsthatdon't
work,
177
viadynamicprogramming,
162
viagreedyalgorithm,
162
,
363
viamaximum˛ows,
358
,
362
Scrabble,
134
scriptiocontinua
,
80
,
166
Seidel'salgorithm,
317
,
324
selection,
35
,
52
medifans,
37
,
53
mediff
medians,
55
quickselect,
35
selfvesentence,
166
selfuction,
416
nnectedgraph,
244
sequencealignment,
see
edit
distance
sequenceofdecisions,
79
,
112
serillelgraph,
350
SetCover
,
406
SoobananaUniversity,
142
,
161
,
359
,
362
,
373
439

Index
Shimbel'salgorithm,
see
ord
shortestcommonsupersequence,
95
,
125
shortestpathtree,
274
shortestpaths,
203
a
309
analogalgorithms,
278
indirectedacyclicgraphs,
282
inunweightedgraphs,
278
singlurce,
273
versusshortestwalks,
275
withnegativeedges,
274
,
288
inundirectedgraphs,
275
withnoegativeedges,
284
shortestsimplepath
reductionfrom
DirectedHamPath
,
275
shu˜e,
126
simplegraph,
191
sink(vertexwitho
0
),
231
sinkcomponent,
239
,
242
snails,
143
SnakesandLadders,
212
soapbox,
vi
,
12
,
106
Sollin'salgorithm,
see
Bor·vka's
algorithm
solvingamoregeneralproblem,
36
,
80
solvingtherightproblem,
83
,
87
,
88
,
90
,
91
sortingalgorithms
mergesort,
26
quicksort,
29
source(ina˛ownetwork),
328
source(vertexwith
0
),
231
sourcecomponent,
240
spanningforest,
192
spanningtree,
192
squaringandmediation,
44
SSSP,
see
shortestpaths,
singlurce
stablematching,
170
,
179
startingtimeofavertex
search),
228
,
242
SteinerTree
,
406
Stigler'sLawofEponymy,
42
,
98
,
114
,
189
,
261
,
263
,
284
,
289
,
383
Strassen'salgorithm,
317
strongcomponentgraph,
237
strongcomponents,
237
connectedinforest,
239
inlineartime,
238
Koharir,
240
Tarjan'salgorithm,
242
strongconnectivity,
237
stronglyconnectedcomponents,
see
strongcomponents
stronglyconnectedgraph,
192
subgraph,
191
subsequence,
86
subsetconstruction,
195
SubsetSum
,
76
,
79
,
80
,
93
,
116
,
237
,
402
dynamicprogramming
algorithm,
404
inomialtime,
117
reductionfrom
VertexCover
,
402
successorofavertex,
191
Sudoku,
406
su˚x,
83
Sumerianclaytablets,
56
summaryofpastdecisions,
79
SuperMarioBrothers,
407
TabulaPeutingeriana
,
187
tailofanedge,
191
talkingdogjoke,
318
,
383
tapesorting,
159
440

target(ina˛ownetwork),
328
Tarjan'salgorithm,
242
tâtonner
,
72
tenseedge,
276
,
312
Tetris,
407
textsegmentation,
80
,
94
,
105
,
124
,
130
,
237
Theseus(mazrobot),
100
,
278
Threes(game),
407
TibetanMemoryTrick,
see
The
Announcer'sTest
tokensearch),
279
token(Moore'salgorithm),
293
topologicalorder,
see
reverse
postorder
topologicalsort,
232
implicit,
232
TowerofHanoi,
24
,
44
con˝gurationgraph,
194
novesolutions,
44
recurrence,
26
,
78
,
85
,
89
variants,
46

48
,
140
Trainyard,
407
transformingcerti˝cates,
392
transitiveclosure,
246
,
323
transitivereduction,
246
TravelingSalesman
,
402
dynamicprogramming,
139
Euclidean,convexposition,
139
reductionfrom
DirectedHamCycle
,
402
reductionto
LongestPath
,
236
tree(connectedacyclicgraph),
191
equivalentde˝nitions,
207
treeedgesearch),
229
treetraversal,
66
,
227
postorder,
122
trivialbutuseless
O
(
1
)

algorithms,
17
,
409
truthgadget,
396
TSP,
see
TravelingSalesman
tupleselection,
357
Turingmachines,
384
Turingreduction,
384
Twitbook,
152
,
301
typography,
80
,
130
Ulamdistance,
see
editdistance
undecidededge,
260
undirectedgraph,
190
UndirectedHamCycle
,
402
inahypercube,
208
reductiontointernational
draughts,
409
UndirectedHamPath
,
402
unio
see
disjodata
structure
unorderedsubtree,
156
UnSat
,
385
usefuldeliberateignorance,
22
,
26
,
35
uselessedge,
259
vacuousbasecase,
25
,
76
,
87
,
92
valueofanodeinarecursiontree,
31
Vankin'sKilometer,
138
Vankin'sMile,
137
variablegadget,
390
,
395
,
396
,
400
vertex,
187
vertexcover,
394
vertexgadget,
398
,
403
,
410
vintpaths,
354
vertice,
see
vertex(dammit)
VidrachItkyLeda,
213
walkinagraph,
191
wavefront,
281
,
284
,
286
weaklyNP
117
,
404
weightedmedian,
53
WFS,
see
whatevsearch
Whackbat,
133
whatevsearch,
199
441

Index
(priorityqueue),
see
also
search,
202
(queue),
202
(stack),
201
widestpaths,
203
,
270
wordRAMmodel,
384
X3M
,
405
XCNFat
,
419
xkcd,
407
zerocycles,
321
442

DicebatBernardusCarnotensisnosessequasinanosgigantiumhumeris
insidentes,utpossimuspluraeisetremotioravidere,nonutiquepropriivisus
acumine,auteminentiacorporis,sedquiainaltumsubvehimuretextollimur
magnitudinegigantea.
[BernardofChartresusedtosaythatwewerelikedwarfsseatedontheshoulders
ofgiants.Hepointedoutthatweseemoreandfartherthanourpredecessors,not
becausewehavekeenervisionorgreaterheight,butbecauseweareliftedupand
bornealoftontheirgiganticstature.]
JohnofSalisbury,
Metalogicon
(1159),
translatedbyDanielD.McGarry(1955)
Thesecrettoproductivityisgettingdeadpeopletodoyourworkforyou.
RobertJ.Lang(2009)
IndexofPeople
AdelsoVelsky,Georgy,
96
,
144
,
341
Adler,Ilan,
364
aliumi,
190
Adversary,owerfulMalicious,
31
,
161
,
376
,
379
AlcuinofYork,
428
Alice,
217
Alighieri,Dante,
2
Alon,Noga,
317
Andersson,Arne,
96
,
145
ApolloniusofPerga,
3
ApproximateMedianFairy,
33
,
37
Archimedes,
3
Atlas,Charles,
102
St.AugustineofHippo,
81
Bayer,Rudolf,
96
,
144
Bellman,Richard,
101
,
289
Berge,Claude,
356
Blagojevich,Rod,
373
Blum,Manuel,
35
Bob,
217
Bor·vka,Otakar,
261
Brahmagupta,
3
Brosh,Allie,
261
,
291
Cayley,Arthur,
190
Cegªowski,Maciej,
182
443

IndexofPeople
Chaucer,Geo˙rey,
2
Chazelle,Bernard,
217
Chazelle,Damien,
217
Choquet,Gustav,
261
Chowdhury,Rezaul,
324
Cicero,MarcusTullius,
80
Claus,N.(deSiam),
see
Lucas,
Édouard
Cli˙ord,William,
190
Cobham,Alan,
381
Cook,Stephen,
42
,
383
Couper,Archibald,
190
Cremona,Luigi,
189
Culmann,Carl,
189
Dantzig,George,
276
,
284
,
289
,
328
Demaine,Erik,
413
Dijkstra,Edsger,
210
,
263
,
269
,
284
DiMaggio,Joe,
318
Dinitz,Ye˝m,
341
Durden,Tyler,
180
Dweighter,Harry(pseudonymof
JacobGoodman),
49
Edmonds,Jack,
311
,
334
,
340
,
381
Elias,Peter,
331
eCharli
see
Wilson,
CharlesErwin
Eppstein,David,
209
Erera,Alan,
364
Erickson,Hannah,
216
,
252
Erickson,Kay,
387
Euclid,
7
,
57
Euler,Leonhard,
190
,
247
EutociusofAscalon,
3
Fürer,Martin,
42
Fahlberg,Constantin,
74
Fano,Robert,
166
Feinstein,Amiel,
331
FernDavid,
364
Fibonacci,
see
LeonardoofPisa
Fischer,Michael,
114
,
315
Floyd,Robert,
35
,
318
Fontana,Giovanni,
190
Ford,Lester,
276
,
331
FrederickII,HolyRomanEmperor,
46
Fredman,Micheal,
264
Frisius,Gemma,
190
Fulkerson,Delbert,
311
,
331
Gödel,Kurt,
381
Gale,David,
172
Galil,Zvi,
317
Garey,Michael,
404
Gates,Bill,
49
Gauÿ,KarlFriedrich,
42
,
72
Goldstine,Herman,
26
Goodrich,Michael,
209
GregoryIX,Pope,
47
Grimm,JacobandWilhelm,
23
Guibas,Leonidas,
96
,
144
Gus˝eld,Dan,
364
Harris,Theodore,
327
Harvey,David,
42
Hearn,Robert,
409
,
413
Herotodus,
2
Hierholzer,Carl,
190
,
247
Hillier,John,
284
Hoare,Tony,
29
,
35
Hochbaum,Dorit,
364
vanderHoeven,Joris,
42
Hopcroft,John,
356
Hu˙man,David,
166
Ingerman,Peter,
318
Jacobi,Carl,
356
Jarník,Vojt¥ch,
263
Jay,Ricky,
392
Johnson,David,
404
Johnson,Donald,
288
,
311
K®nig,Dénes,
356
444

Kalaba,Robert,
291
Kane,Daniel,
218
Karatsuba,Anatoli

ˇ,
40
Karp,Richard,
311
,
334
,
340
,
356
,
405
Karzanov,Alexander,
344
Kekulé,August,
190
a

arizm

ˇ,Muh
.
ammadibn
M

us

a,
2
Kirchho˙,Gustav,
190
Kleene,Stephen,
318
Kolmogorov,Andrei,
40
Kosaraju,Rao,
240
Kruskal,Joseph,
263
Kuhn,Harald,
356
Lamport,Leslie,
210
LandisEvgenii,
96
,
144
Laquière,Emmanuel,
72
Ledger,Heath,
380
Lee,ChinYang,
278
LeonardoofPisa,
2
,
4
,
46
,
97
,
98
,
101
Levin,Leonid,
383
Leyzorek,Michael,
284
,
316
Loberman,Harry,
263
,
266
Lucas,Édouard,
24
,
72
,
103
−ukaszewicz,Józef,
261
M¡dry,Aleksander,
344
Margalit,Oded,
317
Marston,John,
18
Martel,Charles,
364
Martin,AlainJ.,
210
Martin,Steve,
10
Massé,Pierre,
101
Maxwell,JamesClerk,
189
McKenna,Terence,
23
Meyer,Albert,
315
Michie,Donald,
100
,
117
Miller,Gary,
50
Minty,George,
276
,
284
,
289
Mom,
38
Moore,Edward,
205
,
273
,
278
,
289
Moreno,Jacob,
190
Morgenstern,Oskar,
101
Murena,LuciusLicinius,
80
Musk,Elon,
182
Nash,John,
381
Nauck,Franz,
72
Okasaki,Chris,
13
Olinick,Eli,
364
Orlin,James,
343
Pacioli,Luca,
45
Papadimitriou,Christos,
49
PappusofAlexandria,
3
Park,Joo
324
Peirce,CharlesSanders,
190
Penner,Michael,
324
Peranson,Elliott,
172
Pi

ngala,
43
,
97
,
103
Pinker,Steven,
13
Pitt,Lenny,
74
Prasanna,Viktor,
324
Pratt,Vaughan,
35
Prim,Robert,
260
,
263
Queyranne,Maurice,
349
Rabin,Michael,
381
Ramachandran,Vijaya,
324
Rebaudi,Ovidio,
74
RecursionFairy,
ii
,
22
,
77
,
80
,
82
,
89
,
164
,
169
Remsen,Ira,
74
Rivest,Ronald,
35
Ross,Frank,
327
Roy,Bernard,
318
Rudrat
.
a,
190
aguë,André,
190
Sallows,Lee,
166
445

IndexofPeople
Samuel,Arthur,
100
Saxel,Jind°ich,
261
Schönhage,Arnold,
42
Scholten,CarelS.,
210
Schrijver,Lex,
327
Schumacher,Heinrich,
72
Schwartz,Benjamin,
364
Sedgewick,Robert,
96
,
144
,
145
Shannon,Claude,
100
,
166
,
190
,
278
,
331
Shapley,Lloyd,
172
Sharir,Micha,
240
Shier,Douglas,
289
Shimbel,Alfonso,
289
,
314
Siedel,Raimund,
317
Skiena,Steve,
vii
Smullyan,Raymond,
59
Snell,Willebrod,
190
Sollin,George,
261
Steele,Guy,
16
Ste˙ens,Elisabeth,
210
Stevin,Simon,
189
Stigler,Stephen,
98
Stockmeyer,Larry,
415
Strassen,Volker,
42
,
317
aAbuBakrMuhammadbin
Yahya,
190
SulpiciusRufus,Servius,
81
Sylvester,James,
190
Tarjan,Robert,
35
,
242
,
264
Tarry,Gaston,
247
Tomizawa,Nobuaki,
311
Toom,Andrei,
42
Trémaux,Charles,
247
Tseitin,Grigorii,
389
Turing,Alan,
101
Varignon,Pierre,
189
Virah

an
.
ka,
98
,
101
vonNeumann,John,
26
,
101
,
381
vonStaudt,Karl,
190
Wagner,Robert,
114
Waits,Tom,
379
Warshall,Stephen,
318
Wayne,Kevin,
366
Weinberger,Arnold,
263
,
266
Weiss,MarkAllen,
96
,
145
Whiting,Peter,
284
Whittlesey,Kim,
273
Wiener,Christian,
247
Wilson,CharlesErwin,
102
Witzgall,Christoph,
289
Woodbury,Max,
289
Yuval,Gideon,
325
Zermelo,Ernst,
75
Zuse,Konrad,
205
,
278
Zwick,Uri,
335
446

Weshouldexplain,beforeproceeding,thatitisnotourobjecttoconsiderthis
programwithreferencetotheactualarrangementofthedataontheVariablesof
theengine,butsimplyasanabstractquestionofthe
nature
and
number
ofthe
operations
requiredtobeperformedduringitscompletesolution.
AdaAugustaByronKing,CountessofLovelace,
translator'snotesforLuigiF.Menabrea,
etchoftheAnalyticalEngineinventedbyCharlesBabbage,Esq.(1843)
Howtoplaythe˝ute.[picksupa˝ute]Well,hereweare.
Youblowthereandyoumoveyour˙ngersupanddownhere.
Alan[JohnCleese],toDo
MontyPython'sFlyingCircus
,episode28(airedOctober26,1972)
IndexofPseudocode
Thisindexincludesonlyalgorithmswithexplicitpseudocode;seethemain
indexforothernamedalgorithms.
AddAllSafeEdges
,
262
AddSafeEdges
,
272
AllPairsBellmanFord
,
314
Alouette
,
16
ApportionCongress
,
9
BeAMillionaireAndNeverPayTaxes
,
10
BellmanFord
,
291
,
292
BellmanFordDP
,
295
BellmanFordDP2
,
296
BellmanFordDP3
,
296
BellmanFordFinal
,
296
BFS
,
279
BFSWithToken
,
279
BinaryGCD
,
58
Bor·vka
,
262
,
272
BottlesOfBeer
,
1
CircuitSat
,
388
CollectStep
,
211
ComputeOptCost
,
119
ConstructSubset
,
79
CountAndLabel
,
204
CountComponents
,
204
Cruel
,
51
447

IndexofPseudocode
DagSSSP
,
283
DFS
,
225
,
226
,
228
,
235
DFSAll
,
227
,
228
Dijkstra
,
285
DynamicProgramming
,
235
EagerWFS
,
209
EuclidGCD
,
58
Factorial
,
57
Falling
,
57
FastEuclidGCD
,
58
FastLIS
,
110
FastLIS2
,
111
FastMultiply
,
41
FastRecFibo
,
104
FastSplittable
,
106
FastSubsetSum
,
117
FellmanBored
,
299
FetchBit
,
63
FibonacciMultiply
,
4
FindLow
,
243
FindLowDFS
,
243
FindSafeEdges
,
272
FischerMeyerAPSP
,
315
FloydWarshall
,
319
FordSSSP
,
277
GarbageCollect
,
211
GreedyFlow
,
349
GreedySchedule
,
163
Hanoi
,
26
HHGuess
,
19
InitF
,
118
InitSSSP
,
276
IsAcyclic
,
231
IsAcyclicDFS
,
231
IterativeDFS
,
199
IterFibo
,
101
IterFibo2
,
103
Jarník
,
265
JarníkInit
,
265
JarníkLoop
,
265
JohnsonAPSP
,
313
KleeneAPSP
,
319
KosarajuSharir
,
241
Kruskal
,
267
LabelOne
,
204
LeyzorekAPSP
,
316
LIS
,
89
,
90
LISbigger
,
88
LISfirst
,
90
LongestPath
,
236
,
237
MarkEveryVertexDuh
,
203
MemFibo
,
100
Memoize
,
235
Merge
,
27
MergeSort
,
27
MomomSelect
,
55
MomSelect
,
37
Mom
b
Select
,
53
Moore
,
293
MultiplyOrDivide
,
8
Mutate
,
212
NonnegativeDijkstra
,
288
ObviousAPSP
,
310
OptimalBST
,
119
OptimalBST2
,
120
OptimalBST3
,
120
Partition
,
29
PeasantMultiply
,
6
,
23
PeasantPower
,
44
Pi

ngalaPower
,
43
PlaceQueens
,
73
PlayAnyGame
,
76
PostProcess
,
233
PostProcessDag
,
233
PostProcessDagDFS
,
233
PostProcessDFS
,
233
PostVisit
,
227
448

Preprocess
,
227
PreVisit
,
227
PushDagSSSP
,
284
QueyranneFatPaths
,
350
QuickSelect
,
36
QuickSort
,
29
RecFibo
,
99
RecTarry
,
247
RecTarry2
,
248
RecursiveDFS
,
199
Relax
,
277
RightAngle
,
8
RulerHanoi
,
45
ShimbelAPSP
,
314
ShorterEdge
,
259
SlowPower
,
43
SplitMultiply
,
40
Splittable
,
83
SqrtSort
,
52
StoogeSort
,
50
StrongComponents
,
239
SubsetSum
,
77
,
78
Tarjan
,
244
TarjanDFS
,
244
Tarry
,
247
Tarry2
,
248
ThreeColorQueueSearch
,
211
ThreeColorQueueStep
,
211
ThreeColorSearch
,
210
ThreeColorStackSearch
,
210
ThreeColorStackStep
,
210
ThreeColorStep
,
210
TopologicalSort
,
233
,
234
TopSortDFS
,
233
TreeMIS
,
122
Unusual
,
51
WFSAll
,
203
WhateverFirstSearch
,
200
,
205
WhoTargetsWhom
,
62
449


Awiselychosenillustrationisalmostessentialtofastenthetruthuponthe
ordinarymind,andnoteachercanaffordtoneglectthispartofhispreparation.
HowardCrosby(c.1880)
Oneshowingisworthahundredsayings.
AlanWatts(misquotingaChineseproverb),
TheWayofZen
(1957)
Pleasedonotthinkthatthisisaneutralmatterandthattheonlyadvantageof
doingwithoutpicturesisthatofsavingspace.Picturesintextbooksactually
interferewiththelearningprocess.
NevilleMartinGwynne,
Gwynne'sGrammar
(2013)
ImageCredits
All˝guresinthisbook,includingthefrontcover,areoriginalworksofthe
author,exceptthoselistedbelow.Alllistedworksareinthepublicdomain
unlessotherwiseindicated.
‹
Figure
0.1
(page
5
)BibliotecanazionaleBraidense(Milano)
http://atena.beic.it/webclient/DeliveryManager?pid=2953344
‹
Figure
0.2
(page
5
)InternetArchive
https://archive.org/details/archimedisopera05eutogoog/page/n377
‹
Figure
1.16
(page
45
)InternetArchive
https://archive.org/details/p1rcrationsm00lucauoft/page/162
‹
Figure
1.25
(page
61
)DerivedfromacrayonportraitoftheauthorbyTina
Erickson(2000);includedwithpermissionoftheartist.
‹
Figure
5.1
(page
188
)
WikimediaCommons
https://commons.wikimedia.org/wiki/File:Tabula_Peutingerian_Miller.jpg

‹
Figure
5.2
(page
189
)
GalleryofegalT
publishedbytheYaleLaw
LibraryunderaCreativeCommonsLicence
https://www.˛ickr.com/photos/yalelawlibrary/albums/72157621954683764
‹
Figure
5.3
(page
189
)InternetArchive
https://archive.org/details/A077240124/page/n261
‹
Exercises
5
.
20
(page
216
)and
8
.
22
(page
304
)Originalpuzzlesbythe
author,inspiredbyJasonBattersonandShannonRogers,
BeastAcademy
Math:Practice3A
,2012.
https://beastacademy.com/pdf/3A/printables/AngleMazes.pdf
https://www.beastacademy.com/resources/printables.php
‹
Figure
10.1
(page
328
)T[homas]E.HarrisandF[rank]S.Ross.
talsofamethodforevaluatingrailnetcapacities.TheRANDCorporation,
ResearchMemorandumOctober24,1955.UnitedStatesGov
mentworkinthepublicdomain.
http://www.dtic.mil/dtic/tr/fulltext/u2/093458.pdf

1.Havesomethingtosay.
2.Sayit.
3.Stopwhenyouhavesaidit.
4.Givethepaperapropertitle.
JohnShawBillings,AnAddressonOurMedicalLiterature
InternationalMedicalCongress,London(1881)
Youknow,Icouldwriteabook.
Andthisbookwouldbethickenoughtostunanox.
LaurieAnderson,
BigScience
(1982)
Colophon
ThisbookwaseditedinTeXShop(version4.27)andtypesetwithpdfL
A
T
E
X
(MacTeXusingthe
memoir
documentclass(with
madsen
chapterstyle,
komalike
headstyle,and
Ruled
pagestyle);severalstandardpackages
cluding
amsmath
,
babel
,
enumitem
,
imakeidx
,
mathdesign
,
microtype
,and
standalone
;andanembarrassingamountofcustomizationandT
E

A
Xing.
ThetextistypesetinBitstreamCharter,
>ArtemisÐa
,
Roboto
,and
Inconsolata
.
ExceptasindicatedintheImageCredits,all˝guresweredrawnbytheauthor
usingOmniGra˜ePro,exportedatPDF˝les,andincludedusingthe
graphicx
L
A
T
E
Xpackage.
Portionsofourprogramminghavebeenmechanicallyreproduced,andwe
nowconcludeourbroadcastday.


