***Quadratic probing***
Quadratic probing  is an open addressing scheme in computer programming for resolving hash collisions in hash tables. Quadratic probing operates by taking the original hash index and adding successive values of an arbitrary quadratic polynomial until an open slot is found.
 An example sequence using quadratic probing is:
 
   
     
       
         H 
         + 
         
           1 
           
             2 
           
         
         , 
         H 
         + 
         
           2 
           
             2 
           
         
         , 
         H 
         + 
         
           3 
           
             2 
           
         
         , 
         H 
         + 
         
           4 
           
             2 
           
         
         , 
         . 
         . 
         . 
         , 
         H 
         + 
         
           k 
           
             2 
           
         
       
     
     {\displaystyle H+1^{2},H+2^{2},H+3^{2},H+4^{2},...,H+k^{2}} 
   
 Quadratic probing can be a more efficient algorithm in a open addressing table, since it better avoids the clustering problem that can occur with linear probing, although it is not immune. It also provides good memory caching because it preserves some locality of reference; however, linear probing has greater locality and, thus, better cache performance. 

 **Quadratic function**

 Let h(k) be a hash function that maps an element k to an integer in [0,m-1], where m is the size of the table. Let the i th  probe position for a value k be given by the function 
 
 
   
     
       
         h 
         ( 
         k 
         , 
         i 
         ) 
         = 
         ( 
         h 
         ( 
         k 
         ) 
         + 
         
           c 
           
             1 
           
         
         i 
         + 
         
           c 
           
             2 
           
         
         
           i 
           
             2 
           
         
         ) 
         
           
           ( 
           mod 
           
           m 
           ) 
         
       
     
     {\displaystyle h(k,i)=(h(k)+c_{1}i+c_{2}i^{2}){\pmod {m}}} 
   where c 2  ≠ 0. If c 2  = 0, then h(k,i) degrades to a linear probe.  For a given hash table, the values of c 1  and c 2  remain constant.
 Examples: 
 
 If  
   
     
       
         h 
         ( 
         k 
         , 
         i 
         ) 
         = 
         ( 
         h 
         ( 
         k 
         ) 
         + 
         i 
         + 
         
           i 
           
             2 
           
         
         ) 
         
           
           ( 
           mod 
           
           m 
           ) 
         
       
     
     {\displaystyle h(k,i)=(h(k)+i+i^{2}){\pmod {m}}} 
   , then the probe sequence will be  
   
     
       
         h 
         ( 
         k 
         ) 
         , 
         h 
         ( 
         k 
         ) 
         + 
         2 
         , 
         h 
         ( 
         k 
         ) 
         + 
         6 
         , 
         . 
         . 
         . 
       
     
     {\displaystyle h(k),h(k)+2,h(k)+6,...} 
   
 For m = 2 n , a good choice for the constants are c 1  = c 2  = 1/2, as the values of h(k,i) for i in [0,m-1] are all distinct. This leads to a probe sequence of  
   
     
       
         h 
         ( 
         k 
         ) 
         , 
         h 
         ( 
         k 
         ) 
         + 
         1 
         , 
         h 
         ( 
         k 
         ) 
         + 
         3 
         , 
         h 
         ( 
         k 
         ) 
         + 
         6 
         , 
         . 
         . 
         . 
       
     
     {\displaystyle h(k),h(k)+1,h(k)+3,h(k)+6,...} 
    where the values increase by 1, 2, 3, ... 
 For prime m > 2, most choices of c 1  and c 2  will make h(k,i) distinct for i in [0, (m-1)/2].  Such choices include c 1  = c 2  = 1/2, c 1  = c 2  = 1, and c 1  = 0, c 2  = 1.  Because there are only about m/2 distinct probes for a given element, it is difficult to guarantee that insertions will succeed when the load factor is > 1/2. 

 **Limitations**

  
In the case of quadratic probing, with the exception of the triangular number case for a power-of-two-sized hash table, there is no guarantee of finding an empty cell once the table gets more than half full, or even before the table gets half full if the table size is not prime. This is because at most half of the table can be used as alternative locations to resolve collisions.
If the hash table size is  
   
     
       
         b 
       
     
     {\displaystyle b} 
    (a prime greater than 3), it can be proven that the first  
   
     
       
         b 
         
           / 
         
         2 
       
     
     {\displaystyle b/2} 
    alternative locations including the initial location h(k) are all distinct and unique.
Suppose, we assume two of the alternative locations to be given by  
   
     
       
         h 
         ( 
         k 
         ) 
         + 
         
           x 
           
             2 
           
         
         
           
           ( 
           mod 
           
           b 
           ) 
         
       
     
     {\displaystyle h(k)+x^{2}{\pmod {b}}} 
    and  
   
     
       
         h 
         ( 
         k 
         ) 
         + 
         
           y 
           
             2 
           
         
         
           
           ( 
           mod 
           
           b 
           ) 
         
       
     
     {\displaystyle h(k)+y^{2}{\pmod {b}}} 
   , where 0 ≤ x, y ≤ (b / 2).
If these two locations point to the same key space, but x ≠ y. Then the following would have to be true,
 
     
   
     
       
         h 
         ( 
         k 
         ) 
         + 
         
           x 
           
             2 
           
         
         = 
         h 
         ( 
         k 
         ) 
         + 
         
           y 
           
             2 
           
         
         
           
           ( 
           mod 
           
           b 
           ) 
         
       
     
     {\displaystyle h(k)+x^{2}=h(k)+y^{2}{\pmod {b}}} 
   
    
   
     
       
         
           x 
           
             2 
           
         
         = 
         
           y 
           
             2 
           
         
         
           
           ( 
           mod 
           
           b 
           ) 
         
       
     
     {\displaystyle x^{2}=y^{2}{\pmod {b}}} 
   
    
   
     
       
         
           x 
           
             2 
           
         
         − 
         
           y 
           
             2 
           
         
         = 
         0 
         
           
           ( 
           mod 
           
           b 
           ) 
         
       
     
     {\displaystyle x^{2}-y^{2}=0{\pmod {b}}} 
   
    
   
     
       
         ( 
         x 
         − 
         y 
         ) 
         ( 
         x 
         + 
         y 
         ) 
         = 
         0 
         
           
           ( 
           mod 
           
           b 
           ) 
         
       
     
     {\displaystyle (x-y)(x+y)=0{\pmod {b}}} 
   
 
 As b (table size) is a prime greater than 3, either (x - y) or (x + y) has to be equal to zero.
Since x and y are unique, (x - y) cannot be zero.
Also, since 0 ≤ x, y ≤ (b / 2), (x + y) cannot be zero.
 Thus, by contradiction, it can be said that the first (b / 2) alternative locations after h(k) are unique.
So an empty key space can always be found as long as at most (b / 2) locations are filled, i.e., the hash table is not more than half full.
 

 **Alternating sign**

 If the sign of the offset is alternated (e.g. +1, -4, +9, -16 etc.), and if the number of buckets is a prime number p congruent to 3 modulo 4 (i.e. one of 3, 7, 11, 19, 23, 31 and so on), then the first p offsets will be unique modulo p.
 In other words, a permutation of 0 through p-1 is obtained, and, consequently, a free bucket will always be found as long as there exists at least one.
 

 