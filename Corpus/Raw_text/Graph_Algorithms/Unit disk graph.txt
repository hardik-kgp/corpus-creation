***Unit disk graph***
In geometric graph theory, a  unit disk graph  is the intersection graph of a family of unit disks in the Euclidean plane. That is, it is a graph with one vertex for each disk in the family, and with an edge between two vertices whenever the corresponding vertices lie within a unit distance of each other.
 They are commonly formed from a Poisson point process, making them a simple example of a random structure.
 

 **Definitions**

 There are several possible definitions of the unit disk graph, equivalent to each other up to a choice of scale factor:
 
 A graph formed from a collection of points in the Euclidean plane, in which two points are connected if their distance is below a fixed threshold. 
 An intersection graph of equal-radius circles, or of equal-radius disks (see Fig. 1). 
 A graph formed from a collection of equal-radius circles, in which two circles are connected by an edge if one circle contains the centre of the other circle. 

 **Properties**

 Every induced subgraph of a unit disk graph is also a unit disk graph.  An example of a graph that is not a unit disk graph is the star K 1,7  with one central node connected to seven leaves: if each of seven unit disks touches a common unit disk, some two of the seven disks must touch each other (as the kissing number in the plane is 6). Therefore, unit disk graphs cannot contain an induced K 1,7  subgraph.
 

 **Applications**

 Beginning with the work of Huson & Sen (1995), unit disk graphs have been used in computer science to model the topology of ad hoc wireless communication networks. In this application, nodes are connected through a direct wireless connection without a base station. It is assumed that all nodes are homogeneous and equipped with omnidirectional antennas. Node locations are modelled as Euclidean points, and the area within which a signal from one node can be received by another node is modelled as a circle. If all nodes have transmitters of equal power, these circles are all equal. Random geometric graphs, formed as unit disk graphs with randomly generated disk centres, have also been used as a model of percolation and various other phenomena. 

 **Computational complexity**

 If one is given a collection of unit disks (or their centres) in a space of any fixed dimension, it is possible to construct the corresponding unit disk graph in linear time, by rounding the centres to nearby integer grid points, using a hash table to find all pairs of centres within constant distance of each other, and filtering the resulting list of pairs for the ones whose circles intersect. The ratio of the number of pairs considered by this algorithm to the number of edges in the eventual graph is a constant, giving the linear time bound. However, this constant grows exponentially as a function of the dimension (Bentley, Stanat & Williams 1977).
 It is NP-hard (more specifically, complete for the existential theory of the reals) to determine whether a graph, given without geometry, can be represented as a unit disk graph. Additionally, it is provably impossible in polynomial time to output explicit coordinates of a unit disk graph representation: there exist unit disk graphs that require exponentially many bits of precision in any such representation. However, many important and difficult graph optimization problems such as maximum independent set, graph coloring, and minimum dominating set can be approximated efficiently by using the geometric structure of these graphs, and the maximum clique problem can be solved exactly for these graphs in polynomial time, given a disk representation. Even if a disk representation is not known, and an abstract graph is given as input, it is possible in polynomial time to produce either a maximum clique or a proof that the graph is not a unit disk graph, and to 3-approximate the optimum coloring by using a greedy coloring algorithm. When a given vertex set forms a subset of a triangular lattice, a necessary and sufficient condition for the perfectness of a unit graph is known. For the perfect graphs, a number of NP-complete optimization problems (graph coloring problem, maximum clique problem, and maximum independent set problem) are polynomially solvable.
 

 