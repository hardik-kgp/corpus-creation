*** algorithms-and-data-structures ***

 
 
 
 
 
 Closed.  This question is  off-topic . It is not currently accepting answers.
                            
                         
 
 
 
 
 
 
 
 
 
 
 Want to improve this question?   Update the question  so it's  on-topic  for Stack Overflow.
                         
 Closed  2 years ago . 
 
 
 
 I'm currently halfway through my first algorithm and data structures class. Unfortunately, my teacher is not very good, and the online book we use is incredibly vague in its descriptions ( http://people.cs.vt.edu/~shaffer/Book/ ) I've manage to maintain an A thus far, mostly due to luck and common sense, but it's starting to get a lot harder now that we are dealing with sorts, searches, and more advanced data structures like graphs.  
 I was wondering if there are any online resources that would help me learn this subject better that you would recommend. I understand the major importance of knowing this topic well, especially when writing efficient code and also when being interviewed for a job, so I'm open to any suggestions that will help me learn and understand algorithms and data structures better.  
 
 This course is great: 
 http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/ 
 There are data structure, algorithm and more 
 
 You probably won't like my answer, but I expect that the most productive thing you could do would be to work on your attitude.  You often find what you're looking for.  So if you're treating your instructor as sub-standard and your book as worthless; you'll get very little out of it.  If you look for your instructor's strengths and get what you can from the book, you'll go far.  I glanced through your text and it didn't seem all that vague to me.  Definitely look at the references provided in other answers, but be positive about the class too.   
 
 I particularly liked this book:  Data Structures with C++ Using STL  by Ford and Topp.       
 They include quite a bit of source-code (all of it can be downloaded from their website) and nicely step the reader through a thorough nuts-and-bolts implementation of many of the data-structures implemented in the STL, as well as a couple data-structures (like graphs) that aren't present in the STL.  You'll get a good understanding of each data-structure's internal composition from more basic data-types, as well as a generic enough reference that should you ever need to build something yourself, you'll have a very good idea of exactly how these data-structures can be created and composed from simpler data-types (in a generic sense ... i.e., these ideas can be transposed to any other language) and how they should be applied in real-world settings. 
 It's not so much a reference for the STL itself, as it is a reference on how the data-structures in the STL were implemented (albeit in a more simplistic form ... you won't have to worry about allocators, and many of the other ancillaries in the STL code that can make it a bit hard to read and understand for a beginner). 
 Hope this helps, 
 Jason 
 
 Get yourself Skiena's  The Algorithm Design Manual .  It's an amazing book and really helped me understand algorithms and data structures. 
 
 Personally, I've always found the best way to learn something is to try and build it. Whether it's an algorithm, and new design pattern or a data structure, the process of creating that thing in code has always been the way I've learned best. 
 
 The best book I've ever seen for learning algorithm and data structure is the  **MIT Introduction to Algorithms**
. It's good for you regardless of your level, good for beginners, imtermediate, and advanced learners. 
 
 I have found the slides located at:  http://www.heppenstall.ca/academics/doc/242/  to be very helpful.  They cover a wide range of data structures and elementary algorithms and include usable pictures to help understand what's going on. 
 I have no idea who first created the various slides or who might be maintaining the most recent version--they seem to have found their way to many different school's servers and are available in, at least, PDF and PPT formats. 
 