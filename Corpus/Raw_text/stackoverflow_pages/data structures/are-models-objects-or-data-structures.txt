*** are-models-objects-or-data-structures ***

 I am reading Clean Code by Robert Martin and there is a chapter called "Objects and Data Structures" which discusses how a class should either be a data structure or an object.  The essence is: 
 
 "Objects hide their data behind abstractions and expose functions to operate on their data" 
 "Data structures expose their data and have no meaningful functions" 
 
 It then continues to describe "Hybrids" which are "indicative of a muddled design". 
 In a framework like MVC, typically a model exposes all of its properties, but also contains functions to operate on its data and do stuff ( providing the model isn't just a class of properties ).  Does this not lean towards a model being a hybrid structure, or am I misunderstanding something? 
 
 I have seen Martin's Clean Code video series and I remember in one video when he talked about the Entity-Boundary-Interactor structure he said that entities (so basically your model classes) should only have application independent methods, meaning functions that are valid no matter which application they're used in. 
 For example, let's say you have a class Line. Some valid methods (in my opinion) would be:
getLength() - that's pretty much what Martin refers to when he says hiding your data behind abstraction I think. It doesn't tell you anything about the actual start and end points, but rather only their distance to each other. 
 moveBy(double dx, double dy) - that would be a good example of a method that's valid in any application, since it just moves the line by a specified delta. Note that this operates only on the line data and has nothing to do with moving a line on the screen. 
 