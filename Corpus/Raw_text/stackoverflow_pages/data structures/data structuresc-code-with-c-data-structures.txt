*** c-code-with-c-data-structures ***

 I know that this is not a good way of developing of a project, but for some reasons of my work I am committed to integrate some data structures in C++ (LRU cache and hash map) in a C project. 
 So far I know that there is some way to call C functions in C++ using  , but what about calling C++ objects (methods...) from C? 
 I am using GCC. 
 
 If all the code is being compiled with C++ compiler there should be no (or very little) problem. 
 If you have C compiled with gcc and C++ compiled with g++ then you need to write a header wrapper around your class to make the C++ code visable via a set of functions. 
 Example: 
 MyClass.h 
 
 Source File 
 MyClass.cpp 
 
 Your C code now just include "MyClass.h" and uses the C functions provided. 
 MyCFile.c 
 
 
 Write a C wrapper around your C++ interface.  Compile it as C++, but make sure to include your C interface in an   block.  This new interface should link fine with your C program and provide you with access to your C++ code. 
 
 You need to create C compatible forwarding functions that take as their first parameter a pointer to the object. The forwarding function will then [typically] cast the first parameter to the correct object type and call the appropriate member function. 
 
 