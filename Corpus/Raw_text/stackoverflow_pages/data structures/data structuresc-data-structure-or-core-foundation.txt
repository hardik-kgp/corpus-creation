*** c-data-structure-or-core-foundation ***

 
 
 
 
 
 Closed . This question is  opinion-based . It is not currently accepting answers.
                            
                         
 
 
 
 
 
 
 
 
 
 
 Want to improve this question?  Update the question so it can be answered with facts and citations by  editing this post .
                         
 Closed  2 years ago . 
 
 
 
 I am working on an app that works heavily with the file system. 
 I have a C background and it is a habit to just use C Data Structures as much as possible. 
 Can anyone comment on how to decide when to use C Data Structures vs the Core Foundation data structures? 
 OS X 10.6. 
 
 I think it depends a bit on the specific requirements of the application.  **If you end up spending too much time implementing the C data structure instead of working on the actual problem, then your best bet is to work with an already existing data structure**
.  
 Also, data structures from a good library are generally well tested and can save you a lot of debugging time.  
 However if, for example, you are thinking in working on a specific behavior of a red black tree algorithm in order to tackle your problem, then indeed you should better write your own version.    
 
 It's pretty much common sense: Use Core Foundation when it provides the functionality you need. Use your own data structures when something appropriate has not been provided. 
 