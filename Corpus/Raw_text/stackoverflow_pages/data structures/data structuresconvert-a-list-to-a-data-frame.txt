*** convert-a-list-to-a-data-frame ***

 I have a nested list of data. Its length is 132 and each item is a list of length 20. Is there a  quick  way to convert this structure into a data frame that has 132 rows and 20 columns of data? 
 Here is some sample data to work with: 
 
 
 Assuming your list of lists is called  : 
 
 The above will convert all character columns to factors, to avoid this you can add a parameter to the data.frame() call: 
 
 
 With  
 
 Edit: Previous version return   of  's instead of vectors (as @IanSudbery pointed out in comments). 
 
 You can use the   package.
For example a nested list of the form 
 
 has now a length of 4 and each list in   contains another list of the length 3.
Now you can run 
 
 and should get the same result as in the answer @Marek and @nico. 
 
 
  converts it to a matrix.
  converts the matrix to a data frame. 
 
 assume your list is called  , 
 
 
 The package   has the function   which is a superfast implementation of  . 
 It can take a list of   ,   or    as input. 
 
 This returns a   inherits from  . 
 If you  **really**
 want to convert back to a data.frame use  
 
 The   package has a function   that solves this problem by coercing nested   objects to nested   ("tidy" data frame) objects. Here's a brief example from  R for Data Science : 
 
 Since you have several nests in your list,  , you can use the   to remove unnecessary nesting to get just a single hierarchical list and then pass to  . I use   to unnest the output into a single level "tidy" data frame, which has your two columns (one for the group   and one for the observations with the groups  ). If you want columns that make wide, you can add a column using   that just repeats the order of the values 132 times. Then just   the values. 
 
 
 
 
 Reshape2 yields the same output as the plyr example above: 
 
 yields: 
 
 If you were almost out of pixels you  could  do this all in 1 line w/ recast(). 
 
 Depending on the structure of your lists there are some   options that work nicely with unequal length lists: 
 
 You can also mix vectors and data frames: 
 
 
 This method uses a   package ( **purrr**
). 
 The list: 
 
 Converting it into a data frame (a   more specifically): 
 
 
 More answers, along with timings in the answer to this question:
 What is the most efficient way to cast a list as a data frame? 
 The quickest way, that doesn't produce a dataframe with lists rather than vectors for columns appears to be (from Martin Morgan's answer): 
 
 
 Extending on @Marek's answer: if you want to avoid strings to be turned into factors and efficiency is not a concern try 
 
 
 For the general case of deeply nested lists  **with 3 or more levels**
 like the ones obtained from a nested JSON: 
 
 consider the approach of   to convert the nested list to a tall format first:  
 
 followed by   then to wide again into a tidy dataset where each variable forms a a column and each observation forms a row:  
 
 
 Sometimes your data may be a list of lists of vectors of the same length. 
 
 (The inner vectors could also be lists, but I'm simplifying to make this easier to read). 
 Then you can make the following modification. Remember that you can unlist one level at a time: 
 
 Now use your favorite method mentioned in the other answers: 
 
 
 This is what finally worked for me: 
 
 
 
 
 For a paralleled (multicore, multisession, etc) solution using   family of solutions, use: 
 
 Where   is the list. 
 To benchmark the most efficient   you can use: 
 
 
 The following simple command worked for me: 
 
 Reference ( Quora answer ) 
 
 But this will fail if itâ€™s not obvious how to convert the list to a data frame: 
 
 
 A short (but perhaps not the fastest) way to do this would be to use base r, since a data frame is just a  list of equal length vectors . Thus the conversion between your input list and a 30 x 132 data.frame would be: 
 
 From there we can transpose it to a 132 x 30 matrix, and convert it back to a dataframe: 
 
 As a one-liner: 
 
 The rownames will be pretty annoying to look at, but you could always rename those with 
 
 
 How about using   function together with a   loop? Here is my solution: 
 
 where   convert each of the list element into a data.frame and then   union them altogether. 
 In your case, I guess it would be: 
 
 