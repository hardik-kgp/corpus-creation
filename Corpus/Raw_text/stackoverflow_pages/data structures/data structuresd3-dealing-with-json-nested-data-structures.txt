*** d3-dealing-with-json-nested-data-structures ***

 My post is somehow a follow-up to this question :  D3 - how to deal with JSON data structures? 
 In short, I'm in trouble with handling complex nested JSON structures. 
Let me give a simple sample (that mirrors the above link) to illustrate: 
 
 As already shown through D3's doc, this produces two lines of numbers, as expected. 
 But if I replace regularData by this: 
 
 and adapt the myTable's construction lines 3 to 5 with this: 
 
 I would have expected to loop in the scores for each user. Instead, the second data clause is still bound to top-level objects (i.e. with properties "user" and "scores"). 
 A brute-force approach would be to cast my data in a plain "array of arrays" adapted to each purpose. But maybe I missed something, and a more elegant way is possible ? 
 Thanks by advance for your help,
P.  
 
 You have slightly misunderstood what the  second argument to   is meant for. 
 That argument is used for  object constancy  by providing an  id  for the data and not as an accessor function, as in most other functions in the d3 API. 
 However, when a function is passed as the  first argument , as is here: 
 
 then it does behave as an accessor function. 
 In your case, what you want is something along these lines: 
 
 I have used the   field as the   of the data and have returned the   in the second call to   to create the   elements. 
 