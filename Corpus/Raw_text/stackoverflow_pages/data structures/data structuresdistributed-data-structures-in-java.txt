*** distributed-data-structures-in-java ***

 
 
 
 
 
 
 
 
                            As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened,  visit the help center  for guidance.
                            
                         
 
 
 Closed  7 years ago . 
 
 
 I'm going to develop my own message queue implementation in Java and I need to distribute the queue content across multiple servers so that it would provide reliability and redundancy. 
 In addition to that I need to persist the queue content into the file system.  
 Can somebody tell me what is the most suitable distributed data structure implementation to hold my queue content? 
 **Note:**
 That data structure must provide me the message ordering facility. That means I need to receive messages according to the order they arrived. Also while reading a message, it should be in a 'locked' state so that other consumers cant read it until the first consumer completes the reading process 
 
 Have you looked at any of the many existing message queue implementations for java?  Wikipedia  lists  many open source implementations.  It seems to me that an existing, thoroughly tested message queue is the best place to hold your queue content :) 
 If you absolutely want to write your own, then starting with the open source  solution that most fits your needs would probably answer most of your questions about what data structures work well. 
 