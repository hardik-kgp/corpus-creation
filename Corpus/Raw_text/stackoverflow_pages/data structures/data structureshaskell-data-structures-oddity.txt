*** haskell-data-structures-oddity ***

 I've been attempting to write a small file to try out a bag-like data structure. So far my code is as follows: 
 
 But when I try and run it I get the error 
    Could not deduce (Eq a) from the context ()
       arising from a use of 'isObject' at .... 
 Whereas when I take the count function out and call
    snd(unwrap(filter (isObject Banana) [(Apple,1),(Banana,2)]))
it happily returns 2. 
 Any clues on why this is, or advice on writing this kind of data structure would be much appreciated.  
 
  can only be used in a context that includes  , but when you declared   you didn't include that context.  If I'm reading correctly, that would be 
 
 If you declare   without including the type, you can ask   for the inferred type; or just ask for the inferred type of  
 