*** how-to-work-with-nested-data-structures-in-elixir ***

 I'm trying to work with the Google Maps geocoding API in Elixir though I'm a bit new to the language so working with nested data structures is eluding me. 
 I'm using HTTPotion to fetch the JSON from the geocoding endpoint and parsing it into Elixir data structures (a series of nested lists and tuples) using JSEX. 
 
 The following is now assigned to json. 
 
 I'd like to extract the latitude and the longitude from this nested data structure. I've tried using pattern matching but as the structure is fairly complex the corresponding pattern is a bit of a nightmare. While the following works it can't possibly be a good solution. 
 
 So my question is what is the best way to extract values from deeply nested data structures in Elixir? Any solutions or nudges in the right direction would be greatly appreciated. 
 
 Check out the source to Seth Falcon's ej library: 
 https://github.com/seth/ej 
 It does more or less what you're wanting to do, using recursion. 
 I'm not an Elixir expert, but you might be able to just use that library directly. 
 
 The ej library looks like a good choice, but in addition I might cut to the heart of the data structure right away: 
 
 or if you will always only use the first result: 
 
 Then I would use the ej library on the geo_json data structure. 
 