*** java-data-structures-for-indexing-objects ***

 I am building a system where you can define a schema for a complex object and store and retrieve the objects and schema's via an api. 
 I would like to be able to index the items in my collection. 
 For my equals index I was imagining I could use HashMap's 
 
 Which would be mapped as below 
 
 I am not sure this would work too well for doing greater than and less than operations. 
 What other data structures could help me achieve my goals? 
 
 Swap the HashMap with a TreeMap and you can achieve greater than or lesser than queries. However you will have to choose your keys carefully as the queries will operate on your keys. 
 In TreeMap, in order to get all entries greater than a key : map.tailMap(key)
 and vice-versa for all entries smaller than a key: map.headMap(key) 
 
 As an alternative to what Kiran K wrote, I would think about using proxy objects that contain your schema definitions.
These objects can contain recursive/circular object-references, that look like: 
 
 This enables you to model schemata as complex as you like. 
In addition you could also model functions as a part of objects if you add another class FunctionType that extends Object. 
 Many Greetings 
biro 
 