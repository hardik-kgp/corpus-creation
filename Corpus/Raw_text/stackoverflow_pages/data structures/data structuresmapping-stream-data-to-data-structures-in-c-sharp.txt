*** mapping-stream-data-to-data-structures-in-c-sharp ***

 Is there a way of mapping data collected on a stream or array to a data structure or vice-versa?
In C++ this would simply be a matter of casting a pointer to the stream as a data type I want to use (or vice-versa for the reverse)
eg: in C++ 
 
 obviously the C++ way is pretty unsafe unless you are sure of the quality of the stream data when reading incoming data, but for outgoing data is super quick and easy. 
 
 Most people use .NET serialization (there is faster binary and slower XML formatter, they both depend on reflection and are version tolerant to certain degree) 
 However, if you want the fastest (unsafe) way - why not: 
 Writing: 
 
 Reading: 
 
 
 In case lubos hasko's answer was not unsafe enough, there is also the  **really**
 unsafe way, using
pointers in C#. Here's some tips and pitfalls I've run into: 
 
 
 if its .net on both sides: 
 think you should use binary serialization and send the byte[] result. 
 trusting your struct to be fully blittable can be trouble. 
 you will pay in some overhead (both cpu and network) but will be safe. 
 
 If you need to populate each member variable by hand you can generalize it a bit as far as the primitives are concerned by using FormatterServices to retrieve in order the list of variable types associated with an object. I've had to do this in a project where I had a lot of different message types coming off the stream and I definitely didn't want to write the serializer/deserializer for each message.  
 Here's the code I used to generalize the deserialization from a byte[]. 
 
 