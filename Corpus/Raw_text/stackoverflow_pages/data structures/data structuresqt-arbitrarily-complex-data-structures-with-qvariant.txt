*** qt-arbitrarily-complex-data-structures-with-qvariant ***

 Quoting the QT Docs:  
 
 You can even store QList and QMap values in
  a variant, so you can easily construct arbitrarily complex data 
  structures of arbitrary types. This is very powerful and versatile, 
  but may prove less memory and speed efficient than storing specific 
  types in standard data structures. 
 
 Does anyone know of, or have, an example of doing exactly this?  
 I'm a long time C++ programmer, but a QT Nube, and the copy of write semantics are giving me fits. Maps and Lists of QVariants data structures seems immutable. Every time I try to modify a tree of values, I just end up modifying a copy.  
 
 Got some feedback from my first post that I should add an example. Here goes:  
 
 Output from above: 
 
 DESIRED output from above: 
 
 I get that I am modifying copies, but for the life of my I can't figure out how NOT to. How do I edit the original source data? (The data in the tree rooted at vData.) 
 
 Once you make the desired alterations, you need to go back through the tree and update your variables with the new data.  
 
 You can convert the data back from the QVariant and update the source document from there.  
 