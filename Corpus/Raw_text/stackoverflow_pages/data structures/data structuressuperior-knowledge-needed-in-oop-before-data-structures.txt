*** superior-knowledge-needed-in-oop-before-data-structures ***

 
 
 
 
 
 
 
 
                            As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened,  visit the help center  for guidance.
                            
                         
 
 
 Closed  7 years ago . 
 
 
 I'm struggling implementing the data structures from my book into formal usable code. I'm starting to believe that it is my ignorance in OOP concepts such as inheritance.  
 I understand how data structures such as linked list, trees, and some graphing concepts work conceptually, but even after using and debugging people's code online. I get lost in the class/header files and the inheritance they used. 
 So, I was wondering if a strong knowledge of how OOP works is necessary to learn data structures? The basics such as constructors and destructor are fairly simple, but concepts such as passing pointer objects into another class object gets wildly confusing. 
 Any input from experience on what helped you the most when learning data structures and what knowledge you felt was necessary when learning it would be helpful. Thanks in advance. 
 
 No, knowledge of OOP is not needed to understand data structures. Data structures exist even in languages with no OOP support. It may depend on which data structures you mean and in which language you want to implement them. 
 