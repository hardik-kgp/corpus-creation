*** understanding-data-structures-in-javascript-oriented-way ***

 I'm an average javascript guy. Lately I'm doing some javascript in an area where people are not js programmers. They use these weird words. I was wondering if someone can explain the data structures in a javascript oriented way. (like maybe a js example). 
 I looked them up on wikipedia but they use all this non-js thinking/terminology which throws me off. 
 From a non-js prespective we have four basic data structures: 
 
 Linked list - I think they also call this hash table? which is just key value pairs? 
 Array - js has this 
 Binary Tree - no js equivalent? 
 Heap - no js equivalent? 
 
 
 Everything is javascript is an object,  
 An Array is a type of object, specifically known as an array object. 
 A string is a type of object, specifically known as a string. 
 a Binary tree is a type of object, known as just an object. 
 a heap is a type of object, known as just an object. 
 The browser interface is a object. 
 Other APIs using javascript as a scripting language are objects. 
 https://www.youtube.com/watch?v=MfRkdm_rq5E 
 A binary tree may not be a native object to Javascript. That just means you need to build the object. 
 
 Javascript have objects which can be represented as key-value pair. 
 The key must be and will be converted to a string.
Here is an object 
 
 You can already represent a Binary Tree by using this notation, though not as pretty as C/C++/Java counterpart. 
 
 You can obtain the value of the field using   or  , both are equivalent!. 
 List and Arrays can be represented using javascript Arrays, however they are also an object.
Observe this. 
 
 Does this means   also an object? well yes. It just happened that your browser is smart enough that when you   it, it shows the data and hides the methods properly. 
 
 Thank you all for all the input. 
 Out of everything the most helpful was a link provided by @ChiefTwoPencils  
 The website is  i-programmer.info 
 I learned there are six types of data structures: 
 
 Linked Lists 
 Binary Trees 
 Tries 
 Stacks 
 Queues 
 Vectors / ArrayLists 
 Hash Tables 
 
 i-programmer.info has these data structure resources: 
 
 Typed Arrays -  Part I  &  Part II 
 Linked Lists -  Article 
 String -  Article 
 Array -  Article 
 Associative Array -  Article 
 Lisp-like List -  Article 
 Binary Tree -  Article 
 Stacks -  Article 
 Collection Object -  Article 
 
 They don't have heaps and stuff so I'm looking on  Rosetta Code  like @elclanrs recommended. 
 