*** use-matlab-data-structures-in-c ***

 I am currently working on a project in C++, and I am actually interested in using Matlab data structures, instead of having to create my own data types (such as matrices, arrays, etc.) 
 Is there a way to seamlessly use Matlab objects in C++? I don't mind having to run Matlab in the background while my program runs. 
 EDIT: A starting point is this:  http://www.mathworks.co.uk/help/matlab/calling-matlab-engine-from-c-c-and-fortran-programs.html . I will continue reading this. 
 
 You can use instead   Armadillo  C++ maths library; used by NASA, Boeing, Siemens, Deutsche Bank, MIT, CMU, Stanford, etc. 
 They have good documentation and examples if you are more familiar with MATLAB/OCTAVE
 http://arma.sourceforge.net/docs.html#syntax 
 I would prefer using native C++ library of some sort and not Matlab. This is likely to be faster for both development and execution. 
 
 You can do mixed programming with C++ and Matlab. There are two possible ways: 
 
 Call MATLAB Engine directly: Refer to  this post  for more info. Matlab will run in the background. 
 Distribute MATLAB into independent shared library: check out  here  on how to do this (with detail steps and example). 
 
 
 From writing C++ extensions for Matlab I learned one thing: Using Matlab objects in C++ is likely to give you considerable headache. 
 Matlab data structures are not exposed as C++ classes. Instead, you get pointers that you can manipulate with C-like API functions. 
 I recommend to use a native C++ library such as  Eigen3 . 
 
 The functionality you are looking at is not really intended to be used as seamless objects. In the past when I have used it I found it much simpler to do the C parts using either native arrays or a third party matrix library and then convert it into a Matlab matrix to return. 
 Mixing Matlab and C++ is typically done in one of two ways: 
 
 Having a C++ program call Matlab to do some specialist processing. This is chiefly useful for rapid development of complex matrix algorithms. You can do this either by calling the full Matlab engine, or by packaging you snippet of Matlab code into a shared library for distribution. (The distributed version packages a distributable copy of the Matlab runtime which is called with your scripts). 
 Having a Matlab script call a C++ function to do some specialist processing. This is often used to embed C++ implementations of algorithms (such as machine learning models) or to handle specific optimizations. 
 
 Both of these use cases have some overhead transferring the data to/from Matlab. 
 If you are simply looking for some matrix code to use in C++ you would be better off looking into the various C++ matrix libraries, such as the one implemented in  Boost . 
 