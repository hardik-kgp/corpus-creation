*** xa-aware-data-structures-non-database ***

 **Bit of Background:**
 I've run into a problem and the more I dig into it the more XA seems like the right solution.  I have a "cache" which is basically an in memory data structure (tree esq.) used to hold some processed information.  Using  , we have our Database set and using   which has been working like a charm.  For large complex business logic, ACID holds true in our DB and everything is great.  The problem is our data structure in memory is NOT   by design. 
 I've learned the differences between local and global transactions, and the global variety seems to be what I need.  As we are performing logic, we use the "cache structure" as a way to inform decisions we make.  These changes then need to propagate to the DB, but if anything needs to rollback the DB does and the "cache" doesn't. 
 **Question**
 Is the   interface what is needed for my custom data structure?  Am I right in understanding XA, but not understanding its use in a non database/JMS/etc. setting but something a lot simpler?  I don't mind putting in the work to basically wrap my structure and have it implement, but I am not sure if it will achieve the goal I am really looking for. 
 TLDR: Is implementing   doable for simpler data structures not involving complex DBs, or is there something I am not understanding with  ? 
 
 XAResource is not db specific and can be implemented over other types of resource manager. The most common is message queue systems (e.g. JMS), but many cache/datagrid products also support transactional usage, see e.g. 
 http://infinispan.org/docs/9.0.x/user_guide/user_guide.html#transactions 
 Note that depending on your requirements, a cache layer may behave as a Synchronization rather than an XAResource. Some ORM systems work that way to allow e.g. pre-commit session flushing. 
 If you don't need recovery, XAResource is a relatively straightforward interface to implement, BUT only if your datasource is already equipped to handle the underlying properties (atomicity, consistency and isolation). For example, what does a cache read or write look like in your API? If it has no notion of transaction context in which it operates on the cache structure, then you have a problem that you're going to have to fix before looking at XA. 
 