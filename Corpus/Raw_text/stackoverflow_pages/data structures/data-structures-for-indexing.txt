*** data-structures-for-indexing ***

 I was just reading about indexing and discovered that there are two main data structures which can be used for indexing namely 
1) Inverted Indexes
2) Suffix Tree  
 So to me it appears that Suffix Tree naturally due to its structures has no need to use join queries for answering phrases if it Indexes the text of whole document as a single string. 
 So why are people still using/talking about inverted index ? 
 
 Suffix trees can answer exact phrase queries easily, but inverted indexes are more versatile and useful for everything else you need, like stemming, synonym matching, result ranking, etc., unless you extend your suffix tree to also include inverted index information. 
 Also, exact phrase queries are not that common, and suffix trees are a lot more complicated, slow to build, and require a lot more storage.  For typical full-text search applications, it's too much to pay for what you get. 
 