*** difference-between-adt-and-data-structures ***

 Stack is an example of an abstract data type, stack is an example of a data structure  but yet abstract data types are different  from data structures  how come?  
 
 You can think of an ADT (Abstract Data Type) as collection of  **operations**
 (i.e.  ,  ,   that define how the ADT behaves on a collection of data elements. At the ADT level, the exact way that the data is stored is hidden; hence the  Abstract  in Abstract Data Type. The big idea here is to hide the way data is presented to make it more accessible to others. Examples include   and  . 
 A data structure, on the other hand, actually  **implements**
 those operations that define the ADT's behaviour. Examples include   and  .  
 In more practical terms, you'll typically see an ADT defined in two files: 1) an  **interface file**
, which specifies the required operations; 2) an  **implementation file**
, which implements those operations using a specific data structure.  
 This is why you'll see something like   at the head of interface files and   at the head of implementation files â€” the   is a "promise" to implement all of  's methods. 
 