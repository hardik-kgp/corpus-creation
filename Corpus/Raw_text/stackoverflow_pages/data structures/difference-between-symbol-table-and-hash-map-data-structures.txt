*** difference-between-symbol-table-and-hash-map-data-structures ***

 While reading about different data structures,  found that the Symbol table used by compilers is classified as a data structure.   
 Can someone explain what is the difference between Symbol table data structure and a Hash map?  
 
 A Symbol Table isn't  a  data structure per se. Most compilers will require one or more symbol tables but their  exact  form isn't limited to one particular data structure.  Some  compilers may choose to implement their symbol table as a hash map, if that's suitable for their purposes. 
 So I'd say the difference is  conceptual . "Symbol Table" describes a data structure by its  purpose . "Hash Map" describes a data structure by its  implementation . 
 The  Wikipedia page  isn't too bad 
 
 First of all   is  **not**
 a data structure.   is an Abstract Data Type (ADT) in computer science. Another common name of this ADT is dictionary. 
 Implementation of an ADT is called a Data Structure. There are many implementations (aka Data structures) of   ADT. One such implementation is hash map. Various possible implementations of   but not limited to are as below: 
 
 Unordered array implementation 
 Ordered (sorted) array implementation 
 Unordered linked list implementation 
 Ordered linked list implementation 
 Binary search tree based implementation 
 Balanced binary search tree based implementation 
 Ternary search implementation 
 Hashing based implementation  - e.g. Hash Map 
 
 **Note**
: You might also want to read  this  thread to understand the difference between ADT and data structure. 
 