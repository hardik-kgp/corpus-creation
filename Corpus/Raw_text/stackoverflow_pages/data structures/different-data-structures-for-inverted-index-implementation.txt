*** different-data-structures-for-inverted-index-implementation ***

 I am trying to create a program that scans a folder of text files, separates each word, and adds them to an ArrayList. The user can search for single words and the program will output in which document the word exists. I am initially aiming to use HashMap but am wondering if there are other data structures that are better or equally good. 
 
 What's the benefit of using hash map for this particular program? 
 Which other data structures can be used for this problem? 
 
 
 HashMap is a way better solution if it comes to look up performance.  
 You can also use  Google Guava Multimap  where multiple values are related to single key. Just like a Map of  . But the code looks a lot cleaner with Multimap.  
 You can use a  SetMultimap  as well. A SetMultimap cannot hold duplicate key-value pairs. Adding a key-value pair that's already in the multimap will have no effect. 
 
 For this task I would recommend a  , abusing the Java generic syntax. Where word as key and a set of the relative text files as valued 
 **Why a HashMap?**

 HashMap or Map offers look up and adding time of  . 
 **Why a set inside map?**

 The same word can exist in multiple texts files. 
Also, if the same word in a document has been recorded, Set data structure will not store duplicate value and the   and   method is  
 Using  , when you tried to do each key look up will cost you  (Assuming that your hash table works properly) where other implementation will likely to cost you at least  
 If you're planning to do this task concurrently    will be your friend 
 