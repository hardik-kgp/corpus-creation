*** functional-data-structures-in-java ***

 Does the Java standard library have any functional data structures, like immutable Sets, Lists, etc., with functional update? 
 
 Functional java  has  Sets, Lists  and more interesting abstractions. 
 
 Have a look at the  pcollections  project: 
 
 PCollections serves as a persistent and immutable analogue of the Java Collections Framework. This includes efficient, thread-safe, generic, immutable, and persistent stacks, maps, vectors, sets, and bags, compatible with their Java Collections counterparts. 
 Persistent and immutable datatypes are increasingly appreciated as a simple, design-friendly, concurrency-friendly, and sometimes more time- and space-efficient alternative to mutable datatypes.  
 
 
 Sounds like you're looking for  Scala . It compiles to .class, so that's good enough, right? 
 
 Well, there are two possible approaches to "changing" an immutable collection: 
 
 Make a copy of it that includes the "change" 
 Create a new, different object that consists of a reference to the original object and a reference to a description of the change. 
 
 Clojure takes the latter approach, so it becomes fairly quick to create a lot of siblings of an original collection with minor corrections to each, with reasonable memory requirements. But most Java code tends to go for the first option. 
 For what it's worth, Google has created a handful of collections that support functional-style programming:  http://code.google.com/p/google-collections/  but I haven't looked at them in depth. 
 
 You don't need scala.  Just pass your collection into: 
 
 I just saw this from another SO question: 
 Google's ImmutableSet 
 http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/ImmutableSet.html 
 from the docs: 
 
 Unlike
  Collections.unmodifiableSet(java.util.Set),
  which is a view of a separate
  collection that can still change, an
  instance of this class contains its
  own private data and will never
  change. This class is convenient for
  public static final sets ("constant
  sets") and also lets you easily make a
  "defensive copy" of a set provided to
  your class by a caller. 
 
 edited to incorporate comment. 
 
 It's always nice to see Google Collections plugged, but no, we do not have this.  I don't know of any Java library that does.  Inside Google, we implemented some functional List structures, and guess what? No one uses them. So they aren't likely to become open-sourced any time soon. 
 
 If you are interested in collections manipulation in a functional style give a look to  lambdaj 
 
 Strings and numbers are immutable in a functional way, but most collections are not (the immutable collections throw exceptions on add, remove, etc).    and   are the closest in that sense.  
 
 I know this is an old question but a bit of searching around tells me that now we have an alternative for Functional Java. 
 JavasLang  looks like an interesting library for declarative programming and functional data structures in Java. 
 I haven't compared it with Functional Java in terms of ease of use and performance, but I'd love to get any pointers on that. 
 
 Take a look at  Google collections . 
 