*** generating-diagram-of-haskell-data-structures ***

 I am searching for a tool that, given a file with several data structures in Haskell, is able to generate a diagram with the relationships between the data structures. 
 I currently have a file with a parse tree (+- 600 lines) and I'd like to see the parse tree more visually. What are my options? 
 Thanks in advance. 
 
 One option is to use the   library, which has a variety of backends. The   package includes auxiliary functions for  rendering trees . So perhaps you could convert your parse tree into a  rose tree  from   and render it in this way. 
 The following example uses the SVG backend: 
 
  is a function that, given a function that creates a diagram for a tree node, and a function that creates a line between two given points, returns a function that creates a diagram out of a tree that has been annotated with node positions. 
 The position annotations are added using the   function.  
  is just a synonym for   from  . 
  creates a line between two points. 
 When the program is run from the command line (with something like  ) it will generate a SVG file that can be viewed in the browser: 
 
 Here  and  here  are two parts of a recent tutorial on  . 
 
 If I understand you correctly, you want to take the AST of some Haskell code and visualise that. How about first parsing it using  https://hackage.haskell.org/package/haskell-src  and then generating output using  https://hackage.haskell.org/package/graphviz .  
 If it's not an AST you want to visualise, just map your data structure to GraphViz output and ignore the Parser.Haskell part.  
 In any case, I'd assume rolling your own visualisation code would be the most flexible way, and given Haskell's expressiveness, probably not too laborious.  
 