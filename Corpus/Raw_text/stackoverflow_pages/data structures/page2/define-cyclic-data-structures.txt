*** define-cyclic-data-structures ***

 At the  JSON site  it says  
 
 JSON does not support cyclic data
  structures, so be careful to not give
  cyclical structures to the JSON
  stringifier. 
 
 What does it mean by this? Can someone give me an example of such a data structure in Javascript? 
 
 
 Now you can do this, for example: 
 
 
 If you imagine the members of the data structure laid out as a graph, a cyclic data structure is where a member refers back to another one or the structure itself. 
 For example: 
 
 This is impossible to represent in JSON, you would need to refer to the outer   part somehow: 
 
 
 The object contains a cycle, i.e., it refers to itself or, more generally, some object to which it refers either directly or through some property is the original object. 
 
 or more likely 
 
 
 A cyclic data structure is a structure that holds a reference to itself (directly or indirectly).
See also  http://en.wikipedia.org/wiki/Circular_reference 
 Here is an example of such structure: 
 
 If you try to print its string representation recursively, you will end up with a stack overflow, because to print a value of   you must print the value of  . 
 
 A data structure with a cyclic graph:  http://en.wikipedia.org/wiki/Cycle_graph 
 
 
 
 I guess the textbook example of a cyclic structure is the  doubly-linked list . Each element points to the previous and next elements in the list. This means each element forms a cycle with the previous and next element. 
 
 (Here each A, B, C although written twice is one object.) 
 A points to B, as next in the list. B points to A as previous in the list. So there is a cycle from A to B and back to A. The same is true for every element in the list, with elements not at the head or tail beloning to two cycles. 
 One solution to serializing lists like this is to use IDs to represent each object. This removes the cycles in the structure. We could then write out 
 
 
 **CYCLE:**
 A situation in which you return to the same place where you started. 
 **CYCLIC DATA STRUCTURE:**
 A data structure in which such situation might arise. For example graph,linked list (singly/doubly), dequeue, etc.  
 A linked list node in JS is implemented as:  
 
 Now I create two such nodes as shown below: 
 
 And link them to form a cycle. 
 
 The following traversal code will enter an infinite loop which shows the existence of a cycle. 
 
 
 if you have: 
 
 In JSON for b it would look like: 
 
 In JSON for c it would look like: 
 
 No pointers.  
 