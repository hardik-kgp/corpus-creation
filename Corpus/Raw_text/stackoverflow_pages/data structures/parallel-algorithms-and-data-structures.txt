*** parallel-algorithms-and-data-structures ***

 Inkeeping with my interests in algorithms (see  here ), I would like to know if there are (contrary to my previous question), algorithms and data structures that  are  mainstream in parallel programming. It is probably early to ask about mainstream parallel algos and ds, but some of the gurus here may have had good experiences/bad experiences with some of them. 
 **EDIT**
: I am more interested in successful practical applications of algos and ds than in academic papers. 
 Thanks 
 
 Many of Google's whitepapers, especially but not exclusively ones linked from  this page , describe successful practical applications of parallel distributed computing and/or their DS and algorithmic underpinnings. For example,  this paper  deals with modifying a DBMS's data structures to extract intra-transaction parallelism;  this one  (and some others) introduces the popular   architecture, since implemented e.g. in  hadoop ;  this one  is about highly parallelizable approximate matrix factoring suitable for use in "kernel methods" in machine learning; etc, etc... 
 
 Maybe, I totally miss the point, but there are a ton of mainstream parallel algos and data structures, e.g.  matrix multiplication ,  FFT ,  PDE  and  linear equation  solvers, integration and simulation ( Monte-Carlo  /  random numbers ),  searching  and  sorting , and so on. Take a look at the  Designing and Building Parallel Programs  or  Patterns for Parallel Programming . And then there is  CUDA  and the like. What are you after? 
 
 Sorting: 
 
 Standard Template Library for Extra Large Data Sets 
 Sort Benchmark 
 
 