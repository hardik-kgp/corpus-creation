*** persisting-and-restoring-data-in-data-structures ***

 I am new to data structures and understood that data structures like lists, stacks, queues, trees and etc are supposed to be accessed in-memory, there are  some suggestions  on how to persist data structures in database. 
 so questions are: 
 
 to persist a data structure, one has to destructure and save to database in a way that is most efficient for later restructuring? 
 to restore the data of the data structures, one has to read from the database and then reconstruct the data structures again on when the system is up after reboot/failure? 
 is this common practice, or is there a proper way that one can prevent the reconstruction of the data structures (as they consume compute power)? 
 
 
 
 It depends on the data structure
For structures such as lists, stacks, queues, trees... they are usually implemented with pointers (pointer to next node, to children etc.) 
These pointers which exist only in memory contain information about the data structure, so you will need an efficient way to convert this structure information 
For instance checkout the tree serialization on leetcode: 
 https://leetcode.com/faq/#binary-tree 
For data structure which can be implemented in a contiguous memory segment without pointers such as string, binary heap etc. you do not need this process and can just save the bits of the memory segment in database 
 Yes 
 Yes it is very common practice, historically XML has been the format of choice for this, JSON is popular more recently
A lot of services work by fetching persisted XML data in a database, build the data structure in memory, perform some operation then save back the result 
 
 If you think about it the whole web works like this:
 https://en.wikipedia.org/wiki/Document_Object_Model 
Every HTML page is actually a serialized tree data structure, which gets reconstructed in memory by your browser  
 