*** query-for-documents-where-array-size-is-greater-than-1 ***

 I have a MongoDB collection with documents in the following format: 
 
 I can currently get documents that match a specific array size:  
 
 This correctly returns the documents with 2 elements in the   array. However, I can't do a   command to return all documents where the   field has an array size of greater than 2: 
 
 How can I select all documents with a   array of a size greater than one (preferably without having to modify the current data structure)? 
 
 **Update:**

 For mongodb versions  **2.2+**
 more efficient way to do this described by  **@JohnnyHK**
 in another  answer . 
 
 1.Using  $where 
 
 But... 
 
 Javascript executes more slowly than the native operators listed on
  this page, but is very flexible. See the server-side processing page
  for more information. 
 
 2.Create  **extra**
 field  , update it with names array length and then use in queries: 
 
 It will be better solution, and will work much faster (you can create index on it). 
 
 There's a more efficient way to do this in MongoDB 2.2+ now that you can use numeric array indexes in query object keys. 
 
 You can support this query with an index that uses a partial filter expression (requires 3.2+): 
 
 
 I believe this is the fastest query that answers your question, because it doesn't use an interpreted   clause: 
 
 It means "all documents except those without a name (either non existant or empty array) or with just one name." 
 Test: 
 
 
 You can use aggregate, too: 
 
 // you add "size_of_name" to transit document and use it to filter the size of the name 
 
 Try to do something like this: 
 
 1 is number, if you want to fetch record greater than 50 then do ArrayName.50
Thanks. 
 
 None of the above worked for me. This one did so I'm sharing it: 
 
 
 
 
 You can use  $expr  ( 3.6 mongo version operator ) to use aggregation functions in regular query.  
 Compare   vs  . 
 
 
 I found this solution, to find items with an array field greater than certain length 
 
 The first $match aggregate uses an argument thats true for all the documents.  If blank, i would get  
 
 
 MongoDB 3.6 include $expr
 https://docs.mongodb.com/manual/reference/operator/query/expr/ 
 You can use $expr in order to evaluate an expression inside a $match, or find. 
 
 or find 
 
 
 Although the above answers all work, What you originally tried to do was the correct way, however you just have the syntax backwards (switch "$size" and "$gt").. 
 Correct: 
 
 Incorrect: 
 
 