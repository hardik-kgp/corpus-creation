*** querying-java-data-structures ***

 Is there any way to perform SQL Like Queries or Filtering on Java Data Structures? 
 I want to filter objects in an ArrayList and a HashMap by fields of the objects contained within. 
 
 You might like  Quaere , which is a fairly rich query language for java object graphs: 
 
 
 There's not a standard SQL-like language, but the apache  commons collections has   a 
 filter  method that will do what you want. Not too hard to roll your own,  
 
 
 Yes and no. 
 No, not with a SQL like syntax.  
 Yes, with a filter functor. In particular, look at the Apache Commons Collections, CollectionsUtils.filter() function, which applies a Predicate object to a Collection. 
 You write the Predicate, the Apache classes take care of the rest. 
 
 The canonical way is to just iterate over the data structure and insert the objects you want into a new one. Unfortunately, Java has no list comprehensions or first-class functions. But we can simulate them using a library like  Functional Java : 
 
 That will print   to standard output. 
 
 There are a number of solution for doing that that leverage XPath or XQuery.  For starters take a look at  Jaxen .   
 
 One rather extreme solution might be to use an ORM of some sort to map your Java objects into an actual SQL database, then use actual SQL or a SQL-like language like Hibernate's HQL to query your objects precisely how you'd like. 
 Of course, I'd only seriously consider that if I were actually planning to persist the objects in the database anyway, since otherwise it's overkill. 
 