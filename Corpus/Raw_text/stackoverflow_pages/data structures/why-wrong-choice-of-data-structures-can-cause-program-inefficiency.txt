*** why-wrong-choice-of-data-structures-can-cause-program-inefficiency ***

 As I just started a topic on data structures, I saw this question and I could not figure something up. Need help with this.  
 **Discuss with examples why wrong choice of data structures can make a program inefficient.**

 
 I am sure there are a lot of ways to answer this question, but
I will try to answer this question with an analogy to real life. 
 Let's say you have a box with only one entry, and you have 100 files that you put inside(one on top of each other), now if you want to get the file that is in the middle of box you will have to take out the top 50 files, remove the one you want, and put the other 49 back. If you looking for the file on the bottom of the box you will have to take out 100 files and put back 99. 
 Now we still have 100 files but instead of box we have 100 drawers that can each contain 1 file.
If you want to get to any of the files, you only have to open one drawer to get your file.  
 Now back to the Computers world, each of these scenarios represents different data structures (the first one is a Stack and the second one is an Array). For the specific task of taking an nth file from the data structure you can see that an array is more efficient because you are doing less work the do the same thing.
There can be other tasks that the Stack will be better to use  and tasks that a different data structure is preferred. 
 So, you can see that if you choose a wrong data structure for a specific task , the program will have more steps than if you choose a different data structure. 
 Hope this helped. 
 