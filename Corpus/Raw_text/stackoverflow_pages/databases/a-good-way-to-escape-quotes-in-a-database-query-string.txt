*** a-good-way-to-escape-quotes-in-a-database-query-string ***

 I've tried all manner of Python modules and they either escape too much or in the wrong way.
What's the best way you've found to escape quotes (", ') in Python? 
 
 If it's part of a Database query you should be able to use a  Parameterized SQL Statement . 
 As well as escaping your quotes, this will deal with all special characters and will protect you from  SQL injection attacks . 
 
 Use  . 
 
 
 The easy and standard way to escape strings, and convert other objects to programmatic form, is to use the build in repr() function.  It converts an object into the representation you would need to enter it with manual code. 
 E.g.: 
 
 No weird hacks, it's built in and it just works for most purposes. 
 
 If you're using psycopg2 that has a method for escaping strings:   See  How to quote a string value explicitly (Python DB API/Psycopg2)  for the full answer 
 
 Triple single quotes will conveniently encapsulate the single quotes often used in SQL queries: 
 
 
 If using psycopg2, its   method has built-in escaping: 
 
 Note, that you are giving two arguments to execute method (string and tuple), instead of using Python's % operator to modify string.  
 Answer stolen from here:  psycopg2 equivalent of mysqldb.escape_string? 
 
 Triple-double quotes are best for escaping: 
 string = """This will span across 'single quotes', "double quotes",
and literal EOLs all in the same string.""" 
 
 For a solution to a more generic problem, I have a program where I needed to store  any  set of characters in a flat file, tab delimited. Obviously, having tabs in the 'set' was causing problems. 
 Instead of output_f.write(str), I used output_f.write(repr(str)), which solved my problem.
It is slower to read, as I need to eval() the input when I read it, but overall, it makes the code cleaner because I don't need to check for fringe cases anymore. 
 
 For my use case, I was saving a paragraph against the database and somewhere in the paragraph there might have been some text with a single quote  
 I found this to work best: 
 
 You'll notice that I use   after wrapping the INSERT statement in  
 