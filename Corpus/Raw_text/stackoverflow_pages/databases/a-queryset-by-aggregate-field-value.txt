*** a-queryset-by-aggregate-field-value ***

 Let's say I have the following model: 
 
 The users of a site can contribute their images to several contests. Then other users can vote them up or down. 
 Everything works fine, but now I want to display a page on which users can see all contributions to a certain contest. The images shall be ordered by their score.
Therefore I have tried the following: 
 
 As I feared it doesn't work since   is no database field that could be used in queries. 
 
 Oh, of course I forget about new aggregation support in Django and its   functionality. 
 So query may look like this: 
 
 
 You can write your own sort in Python very simply. 
 
 This works nicely because we sorted the list, which we're going to provide to the template. 
 
 The db-level   cannot sort queryset by model's python method. 
 The solution is to introduce   field to   model and recalculate it on every   update. Some sort of denormalization. When you will can to sort by it. 
 