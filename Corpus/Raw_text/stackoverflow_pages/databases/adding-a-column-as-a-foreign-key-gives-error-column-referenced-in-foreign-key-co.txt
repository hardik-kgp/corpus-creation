*** adding-a-column-as-a-foreign-key-gives-error-column-referenced-in-foreign-key-co ***

 I have the following set up, 
 
 I'm trying to  **add a column**
 named   to   which is a foreign key to another table called  's   column. 
 To achieve the above, I'm trying the following on terminal: 
 
 But this gives me an error:  
 
 ERROR:  column "sender" referenced in foreign key constraint does not
  exist 
 
 How do I fix this? 
 
 To add a constraint to a column It needs to exists first into the table  there is no command in Postgresql that you can use that will add the column and add the constraint at the same time. It must be two separate commands.  You can do it using following commands: 
 First do as:  
 
 I use   as type here but it should be the same type of the   column of the   table. 
 Then you add the constraint 
 
 The   part of this command is  **naming**
 your constraint so if you latter on need to document it with some tool that create your model you will have a named constraint instead of a random name. 
 Also it serves to administrators purposes so A DBA know that constraint is from that table. 
 Usually we name it with some hint about where it came from to where it references on your case it would be   so anyone that sees this name will know exactly what this constraint is without do complex query on the INFORMATION_SCHEMA to find out. 
 **EDIT**

 As mentioned by @btubbs's answer you can actually add a column with a constraint in one command. Like so: 
 
 
 You can do this in Postgres on one line: 
 
 You don't need to manually set a name.  Postgres will automatically name this constraint "links_chatpicmessage_auth_user_id_fkey". 
 
 I know this answer is way late, and I realize this is the same as btubbs one-liner, just a little more descriptive ... 
 Assuming you want to reference the primary key in table auth_user and that key name is 'id'. 
 I use this syntax: 
 
 Note: some_type = [type the same as sender in table auth_user] 
 
 The   clause is optional. I suggest ommiting it and always letting PostgreSQL autoname the constraint, without naming it you'll get a logical name 
 
 That's what you'll likely want to know if an   or   fails due to a constraint violation. 
 Syntax to add a foreign key 
 All of these are somewhat documented on  
 **To a new column**

 
 This is compound and transactional. You can issue two   statements on the same table by separating the two statements with a  . 
 **To a preexisting column**

 
 
 ****foreign key reference for existing column****  
 ALTER TABLE table_name ADD CONSTRAINT fkey_name FOREIGN KEY (id) REFERENCES ref_table(id) 
 