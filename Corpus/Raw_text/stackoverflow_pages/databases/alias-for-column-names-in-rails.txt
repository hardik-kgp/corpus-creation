*** alias-for-column-names-in-rails ***

 In my database has column names such as 'delete' or 'listen-control' and so on. These cannot be changed, so I would like to alias the names so as to avoid problems in my application. 
 I found  the following code  but it is outdated (05 Aug 2005) and doesn't work with Rails 3: 
 
 How can I alias the column names? Is it possible? 
 
 Declare this in your model.  
 
 
 Aliasing method names won't solve your problem.  As I mentioned in my comment above, you can't have dashes in ruby method or variable names, because ruby will interpret them as a "minus".  so: 
 
 will be interpreted by ruby as: 
 
 and will fail.  The code snippet you found might be failing because of ruby 1.9, not rails 3.  Ruby 1.9 doesn't let you call   on protected or private methods anymore, like 1.8 used to. 
 That being said, I do understand there are times when old database column names don't look very nice, and you want to clean them up. Create a folder in your lib folder called "bellmyer".  Then create a file called "create_alias.rb", and add this: 
 
 Now in your model that needs aliasing, you can do this: 
 
 And it will alias properly.  It's using the   and   methods of ActiveRecord to access those table columns without calling them as ruby methods. 
 
 As Jaime said, those names might cause problems.  
 In that case, use some sensible names. Your GUI should never dictate how your columns are named.  
 Suggestions:   or  ,  
 Then, change your view accordingly, that's way easier than fighting ActiveRecord and your database. 
 