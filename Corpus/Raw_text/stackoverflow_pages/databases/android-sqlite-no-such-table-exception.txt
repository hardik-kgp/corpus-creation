*** android-sqlite-no-such-table-exception ***

 I'm starting into SQLite and databases in Android and I just found this issue. I have read a lot of similar questions but I have not found a solution yet. 
 This is the error I'm getting: 
 
 E/AndroidRuntime(529): Caused by: android.database.sqlite.SQLiteException: no such table: ligas_bd: , while compiling:  SELECT * FROM ligas_bd 
 
 This is my code.  
 
 DBHelper.java 
 
 I also checked in my phone with root explorer data/data/mypackagename/databases and the database appears there as normal. 
 My database and the main table have the same name, as you can see in this pic of SQLite database browser: 
 
 I am not creating the table, I created it before using SQLite Database Browser and I am just trying to read from it 
 
 I don't know how, but I finally fixed it. I just started again, this time following  this tutorial . 
Hope it helps! 
 
 This is only a guess but I can see three possible things are happening here... 
 
 Calling   in your   method is automatically creating an empty database. 
 Your attempt to copy your pre-created database from your   folder is failing or the database is being copied to the wrong place. 
 The empty database created in step 1 (above) is the one that is being queried when you call   from your main code. 
 
 To explain further it is usefult to look at the source for  SQLiteOpenHelper 
 When you create an instance of   it sets things like the database name and version but it does not create the database. Instead, the first call to either   or   checks to see if the database exists and if it doesn't it creates it. After creating the empty database, the   method is called which, in your case, does nothing. 
 On to point 2 (above) - you say that   is  . If that is really the case and you have no trailing   then the line... 
 
 ...will set   to  . In that case, even if the copy from   succeeds, the copied database isn't going to be where you expect it to be. 
 Finally on point 3 (above) when you call   the instance that   points to is returned by the previous call to  . Assuming the copy from   has failed or that it has been copied to the incorrect path,   will be pointing at the empty database created in step 1. 
 The error you get is that the table doesn't exist and it isn't an error indicating the database doesn't exist - the only logical explanation is that it's performing a query on an empty database and not the one that has been copied from  . 
 EDIT: One other thing I meant to mention. It isn't a good idea to use hard-coded paths to any of the Android directories. For example - although on most devices, the directory where databases are created will be   this is not a guarantee. It is much safer if you call the   method as it will return a   object which can be used to get the path to the databases directory used by the Android database classes. 
 
 I had the same problem and fixed it by cleaning the project and deleting the app off my testing device and reinstalling it.  I believe it occurred because I followed another tutorial that created an empty database by mistake.  The corrected code was retrieving the old empty database.     
 
 If you are running your app in your device, go to >>Settings (in Android device)>>>application>>>locate your application>>clear data and cache. After that, debug or install again your new application..  
 I solved this problem by doing that... 
 
 The exception is very clear, you've created the database (ligas_db) but not a table within it (no such table exception = there is not a table named ligas_db) 
 Check this:  http://www.vogella.de/articles/AndroidSQLite/article.html 
 (Â¿Eres Antonio Recio? jaja) 
 
 You have   as the name of the database and you are trying to   from it. 
 
 You need to create table first before you selecting from it. May you have created before but you need to create it after opening database connection.  
 
 My problem was I left "/databases/" off the end of my path name.  What was so confusing for me is the code worked before when I was loading a dbconnection and storing it as an instance variable.  Then when I needed to make use of the getReadableDatabase() and getWritableDatabase () methods, they kept pulling in the empty database created in the "real" databases path. 
 INCORRECT
/data/data/mypackagename/ 
 CORRECT
/data/data/mypackagename/databases/ 
 +1 to @Squonk who's answer finally helped me track this down! 
 
 I had the same problem try to include .db extension in the file name like: 
 
 