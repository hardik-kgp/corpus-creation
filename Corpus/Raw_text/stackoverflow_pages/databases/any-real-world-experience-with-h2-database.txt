*** any-real-world-experience-with-h2-database ***

 
 
 
 
 
 
 
 
                            As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened,  visit the help center  for guidance.
                            
                         
 
 
 Closed  7 years ago . 
 
 
 Has anybody out there got any real world experience with the  H2 database ? I'm interested in: 
 
 performance 
 stability 
 bugs 
 
 
 We use H2 as the storage engine for a very large RCP/Eclipse-based design tool.  The tool itself has been in use for over 2 years now on some data-heavy projects so we've stressed H2 pretty thoroughly.   
 We did a fairly in-depth analysis of other Java embeddable db engines and chose H2.  Overall I think we're pretty happy with it.  We've had very few stability issues, but, as zvikico says, the development team is VERY responsive. 
 While the performance is good, sometimes you need to do some optimizations by hand.  If you're used to working with enterprise-level databases that do a lot of this optimization for you, it may be a bit of a change.  I'd recommend using the EXPLAIN command if you encounter a slow query to see what it's doing.  Very often you can switch around the JOIN statements to force it to use indices more efficiently. 
 So, in short, thumbs up from me! 
 
 I'm using it as the base of  nWire , which is an Eclipse plugin for Java code exploration. It is working in embedded mode as part of the Java process, not as a server. 
 Overall, it is very stable. I'm working with H2 for a long time now: I encountered some bugs in the early days, but that hasn't happened in some time now. The response of the developer has been great, too.  
 Regarding performance: it is very good. You can see the tests on the site. I didn't get a chance to compare it to other tools, but I'm very happy with it. In recent versions, it does tend to take a bit more time to open large databases, but that issue seems to be resolved, too. 
 Some other strong points: 
 
 Very simple distribution: just one JAR. 
 The embedded web console is very useful for quick access to the database. It proved to be a valuable development tool. 
 Responsive community support, especially from the development team. 
 
 
 I'm using H2 in some pretty heavy server applications with several millions of records. H2's performance is just phenomenal. As always, you need to think through your use of indices though. I was a long time user of MySQL before and have used several enterprise-class databases, but H2 is just smaller, faster and easier to use than the traditional heavyweights. It's also become our database of choice at  Tynamo.org 
 