*** are-sql-group-by-fields-commutative-in-all-cases ***

 In a simple query the order of your GROUP BY fields makes no difference (ignoring developer legibility) to the final result.  
 EG:   will produce the same results as if the GROUP BY fields were flip-flopped.  
 Generally speaking, under what condition(s) does this apparent commutative property of the GROUP BY fields break down? 
 I'm looking for a general rule here (EG: "Any expression containing sub-expressions which depend upon one of the grouped fields") 
 I'm having a hard time coming up with an example of where the ordering would matter - but my gut tells me it does in some situation(s).  
 
 I think the only time it matters is when using ROLLUP to create subtotals 
 http://msdn.microsoft.com/en-us/library/ms189305(v=sql.90).aspx 
 
 **Results from Query 1**

 2
1
3
6
1
2
3
6
12 
 (9 row(s) affected) 
 **Results from Query 2**

 2
1
3
1
2
3
3
3
6
12 
 (10 row(s) affected) 
 
 **I am only speculating here**
, but it might be possible that if someone implements CLR based aggregate functions, that the order would matter.  I've implemented a aggregate function before in C# and I have this feeling that depending on what the aggregation is actually doing, that there may be a chance that the order of the group by may effect it. 
 I don't know enough about how aggregate CLR functions interact with the engine to really say anything more than that :/ 
 
 I like your question :) 
 I think in the case you mention, where you are doing counts (which is purely additive), the order of grouping doesn't matter.  Addition is commutative and GROUP BY should not remove any rows from the set, it just aggregates them for display. Therefore, it shouldn't make any difference what order you group them in. 
 
 NEW!!!
So... it's possible in the use of grouping sets, order may matter; i'd have to do some testing. 
 ---OLD yeah ORDER <> Group.
Given:  
 
 RESULT: 
 
 vs:  
 
 the different order by's show a different sort; but maybe the question is not about the order but the subset: and again yes order matters in different subsets: 
 
 