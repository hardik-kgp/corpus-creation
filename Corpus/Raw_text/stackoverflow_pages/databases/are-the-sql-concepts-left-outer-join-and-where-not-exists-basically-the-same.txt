*** are-the-sql-concepts-left-outer-join-and-where-not-exists-basically-the-same ***

 Whats the difference between using a  , rather than a sub-query that starts with a  ? 
 
 No they are not the same thing, as they will  not  return the same rowset in the most simplistic use case. 
 The   will return all rows from the left table, both where rows exist in the related table and where they does not. The   subquery will only return rows where the relationship is not met. 
 However, if you did a   and looked for   on the foreign key column in the   clause, you can make equivalent behavior to the  .   
 **For example this:**

 
 **Is equivalent to this:**

 
 **But this one is **
**not**
** equivalent:**

 It will return rows from   both having and not having related rows in  . 
 
 **Note**
 This does not speak to how the queries are compiled and executed, which differs as well -- this only addresses a comparison of the rowsets they return. 
 
 As Michael already answered your question here is a quick sample to illustrate the difference: 
 
 Left outer join: 
 
 Result: 
 
 EXISTS  use: 
 
 Not Exists In: 
 
 Result: 
 
 
 Left outer join is more flexible than where not exists. You must use a left outer join if you want to return any of the columns from the child table. You can also use the left outer join to return records that match the parent table as well as all records in the parent table that have no match. Where not exists only lets you return the records with no match. 
 However in the case where they do return the equivalent rows and you do not need any of the columns in the right table, then where exists is likely to be the more performant choice (at least in SQL server, I don't know about other dbs). 
 
 I suspect the answer ultimately is, both are used (among other constructs) to perform the relational operation   in SQL. 
 
 I suspect the OP wanted to know which construct is better when they are  functionally  the same (ie I want to see only rows where there is no match in the secondary table). 
 As such, WHERE NOT EXISTS will always be as quick or quicker, so is a good habit to get into. 
 