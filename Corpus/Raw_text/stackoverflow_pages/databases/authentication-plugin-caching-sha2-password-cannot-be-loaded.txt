*** authentication-plugin-caching-sha2-password-cannot-be-loaded ***

 I am connecting MySQL - 8.0 with MySQL Workbench and getting the below error: 
 
 Authentication plugin 'caching_sha2_password' cannot be loaded:
  dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2): image
  not found 
 
 I have tried with other client tool as well. 
 Any solution for this? 
 
 Note: For MAC OS 
 
 Open MySQL from System Preferences > Initialize Database > 
 Type your new password. 
 Choose 'Use legacy password' 
 Start the Server again. 
 Now connect the MySQL Workbench 
 
 
 
 you can change the encryption of the password like this. 
 
 
 **For Windows 10:**

Open the command prompt 
 
 Alternatively, you can change the  **my.ini**
 configuration as the following: 
 
 [mysqld] 
 default_authentication_plugin=mysql_native_password 
 
 Restart the MySQL Server and open the Workbench again. 
 
 You can change the encryption of the user's password by altering the user with below Alter command : 
 
 ALTER USER 'username'@'ip_address' IDENTIFIED WITH mysql_native_password BY
  'password'; 
 
 **OR**

 We can avoid this error by make it work with old password plugin: 
 First change the authentication plugin in  **my.cnf file for Linux / my.ini file in Windows**
: 
 
 [mysqld]  
 default_authentication_plugin=mysql_native_password 
 
 Restart the mysql server to take the changes in affect and try connecting via MySQL with any mysql client. 
 If still unable to connect and getting the below error: 
 
 It means your user needs the above plugin. So try creating new user with create user or grant command after changing default plugin. then new user need the native plugin and you will able to connect MySQL. 
 Thanks 
 
 Currently (on 2018/04/23), you need to download a  development release . The  GA  ones do not work. 
 I was not able to connect with the latest GA version (6.3.10). 
 It worked with   (from  https://dev.mysql.com/downloads/workbench/ , tab  **Development Releases**
). 
 
 I had the same problem, but the answer by Aman Aggarwal didn't work for me with a Docker container running mysql 8.X. 
I loged in the container 
 
 then log into mysql as root 
 
 Enter the password  for root (Default is 'root')
Finally Run: 
 
 You're all set. 
 
 I was installing MySQL on my Windows 10 PC using " MySQL Web Installer " and was facing the same issue while trying to connect using MySQL workbench. I fixed the issue by reconfiguring the server form the Installer window. 
 
 Clicking on the "Reconfigure" option it will allow to reconfigure the server. Click on "Next" until you reach "Authentication Method". 
 
 Once on this tab, use the second option "Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)".  
 Keep everything else as is and that is how I solved my issue. 
 
 like this? 
 
 Try in PWD 
 https://github.com/GitHub30/docs/blob/change-default_authentication_plugin/mysql/stack.yml 
 or You shoud use MySQL Workbench 8.0.11. 
 
 Ok, wasted a lot of time on this so here is a summary as of  **19 March 2019**

 If you are specifically trying to use a Docker image with  **MySql 8+**
, and then use  **SequelPro**
 to access your database(s) running on that docker container, you are out of luck. 
 See the  sequelpro issue 2699 
 My setup is sequelpro 1.1.2 using docker desktop 2.0.3.0 (mac - mojave), and tried using mysql:latest (v8.0.15). 
 As others have reported, using mysql 5.7 works with nothing required:  
 
 Of course, it is possible to use MySql 8+ on docker, and in that situation (if needed), other answers provided here for   type issues do work. But sequelpro is a NO GO with MySql 8+ 
 Finally, I abandoned sequelpro (a trusted friend from back in 2013-2014) and instead installed  DBeaver . Everything worked out of the box. For docker, I used: 
 
 You can quickly peek at the mysql databases using: 
 
 
 -Open MySQL Command Line Client 
 -Create a new user with a new pass 
 Considering an example of a path to a bin folder on top, here's the code you need to run in the command prompt, line by line: 
 
 -Then, you can access Workbench again (you should be able to do that after creating a new localhost connection and using the new credentials to start using the program).  
 Set up a new local host connection with the user name mentioned above(native user), login using the password(new_password) 
 
 Courtesy : UDEMY FAQs answered by Career365 Team 
 
 For those using Docker or Docker Compose, I experienced this error because I didn't set my MySQL image version. Docker will automatically attempt to get the latest version which is 8. 
 I set MySQL to 5.7 and rebuilt the image and it worked as normal: 
 
 
 This is my databdase definition in my docker-compose: 
 
 The relevant line there is  **entrypoint**
. 
 After build and up it, you can test it with: 
 
 
 **For Windows 10**
, 
 
 Modify  **my.ini**
 file in **C:\ProgramData\MySQL\MySQL Server 8.0** 
 
 [mysqld]
default_authentication_plugin=mysql_native_password 
 
 Restart the MySQL Service 
 login to MySQL in the command line, execute the following commands in MySQL 
 Create a new user 
 
 
 CREATE USER 'user'@'localhost' IDENTIFIED BY 'password'; 
 
 
 Grant all privilages 
 
 
 GRANT ALL PRIVILEGES ON * .* TO 'user'@'localhost'; 
 
 
 Open MySQL workbench, open a new connection using the new user credentials 
 
 I was facing the same issue and this worked. 
 
 Here is the solution which worked for me after MySQL 8.0 Installation on Windows 10. 
 Suppose MySQL username is   and password is  
 Open command prompt and enter the following commands: 
 
 cd C:\Program Files\MySQL\MySQL Server 8.0\bin 
 mysql_upgrade -uroot -padmin 
 mysql -uroot -padmin 
 ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY
  'admin' 
 
 
 If you are getting this error on GitLab CI like me: 
Just change from latest to 5.7 version ;) 
 
 
 Open my sql command promt: 
 
 then enter mysql password 
 
 finally use: 
 
 refer: https://stackoverflow.com/a/49228443/6097074 
 Thanks. 
 
 This error comes up when the tool being used is not compatible with MySQL8, try updating to the latest version of MySQL Workbench for MySQL8 
 
 I found that  
 
 didn't work by itself.  I also needed to set 
 
 in /etc/mysql/mysql.conf.d/mysqld.cnf
on Ubuntu 18.04 running PHP 7.0 
 
 Almost like answers above but may be in simple queries, I was getting this error in my spring boot application along with hibernate after MySQL upgrade. We created a new user by running the queries below against our DB. I believe this is a temp work around to use sha256_password instead of latest and good authentication caching_sha2_password.  
 
 
 For me this started happening because on a project, I was using Docker image mysql:latest (which was version 5, and which was working fine), and during a later build, the latest version was switched to version 8,  and stopped working . I  changed my image to mysql:5  and I was  no longer getting this error . 
 
 MySQLWorkbench 8.0.11 for macOS addresses this.
I can establish connection with root password protected mysql instance running in docker.  
 
 The below solution worked for me 
 
 Go to Mysql Workbench -> Server-> Users and Privileges
1.Click Add Account  
 2.Under Login Tab provide new details and make sure to choose the Authentication Type as  **standard**
 and choose  respective administrative roles and Schema Privileges 
 
 
 Downloading a development release of 8.0.11-rc worked for me on a mac. with the following docker commands: 
 
 
 Try using legacy password while downloading and installing MySql, that helped me.
Or follow the method posted by Santhosh Shivan for Mac OS. 
 
 **If you are trying to connect to a MySQL server from a text-based MySQL client from another computer (be it Docker or not)**

 Most answers here involve connecting from a desktop client, or ask you to switch to an older authentication method. If you're connecting it with the MySQL client (text-based), I made it work with a Debian Buster in a Docker container. 
 Say you have the apt system and wget set up, do the following: 
 
 
 
 Download a Debian package which update apt sources for you from the  MySQL web site . 
  and select the options you want. In my case I only need   to be enabled. 
 
 
 Done. You can now run the new MySQL client and connect with the new authentication method. 
 
 
 I solved this problem by installing MySQL 5.7: 
 Step 1 – Enable MySQL Repository 
 First of all, You need to enable MySQL 5.7 community release yum repository on your system. The rpm packages for yum repository configuration are available on MySQL official website. Use on of below command as per your operating system version. 
 **On CentOS and RHEL 7**

 
 **On CentOS and RHEL 6**

 
 **On Fedora 27**

 
 **On Fedora 26**

 
 **On Fedora 25**

 
 Step 2 – Install MySQL 5.7 Server 
 As you have successfully enabled MySQL yum repository on your system. Now, install MySQL 5.7 community server using following commands as per your operating system version. 
 **On CentOS and RHEL 7/6**

 
 **On Fedora 27/26/25**

 
 source:  https://tecadmin.net/install-mysql-5-7-centos-rhel/ 
 
 Rolling back to the previous installations (to MySQL Community Server 5.7 and Workbench 6.1)and setting up new MySQL credentials worked for me! 
 