*** auto-increment-skipping-numbers ***

 Note: I'm new to databases and PHP 
 I have an   column that is set to   and  . 
 
 
 In my PHP script, I am using AJAX to get new data but the problem with that is, is that the   skips numbers and is substantially higher thus forcing me to manually update the numbers when the data is inserted. In this case I would end up changing   to  . 
 
 
 
 How can I get it to increment +1? 
 
 The default auto_increment behavior in MySQL 5.1 and later will "lose" auto-increment values if the INSERT fails.  That is, it increments by 1 each time, but doesn't undo an increment if the INSERT fails.  It's uncommon to lose ~750 values but not impossible (I consulted for a site that was skipping 1500 for every INSERT that succeeded). 
 You can change   to use MySQL 5.0 behavior and avoid losing values in some cases.  See  http://dev.mysql.com/doc/refman/5.1/en/innodb-auto-increment-handling.html  for more details. 
 Another thing to check is the value of the   config variable.  It's 1 by default, but you may have changed this.  Again, very uncommon to set it to something higher than 1 or 2, but possible. 
 I agree with other commenters, autoinc columns are intended to be unique, but not necessarily consecutive.  You probably shouldn't worry about it so much unless you're advancing the autoinc value so rapidly that you could run out of the range of an INT (this has happened to me). 
 
 
 How exactly did you fix it skipping 1500 for ever insert? 
 
 The cause of the INSERT failing was that there was another column with a UNIQUE constraint on it, and the INSERT was trying to insert duplicate values in that column.  Read the manual page I linked to for details on why this matters. 
 The fix was to do a SELECT first to check for existence of the value before attempting to INSERT it.  This goes against common wisdom, which is to just try the INSERT and handle any duplicate key exception.  But in this case, the side-effect of the failed INSERT caused an auto-inc value to be lost.  Doing a SELECT first eliminated almost all such exceptions. 
 But you  also  have to handle a possible exception, even if you SELECT first.  You still have a race condition. 
 
 You're right! innodb_autoinc_lock_mode=0 worked like a charm.  
 
 In your case, I would want to know  why  so many inserts are failing. I suspect that like many SQL developers, you aren't checking for success status after you do your INSERTs in your AJAX handler, so you never know that so many of them are failing. 
 They're probably still failing, you just aren't losing auto-inc id's as a side effect. You should really diagnose why so many fails occur.  You could be either generating incomplete data, or running many more transactions than necessary. 
 
 After you change 782 in 38 you can reset the autoincrement with  . This way you continue at 39. 
 However, you should check why your gap is so high and change your design accordingly. Changing the autoincement should not be "default" behaviour. 
 
 I know the question has been answered already..   But if you have deleted rows in the table before, mysql will remember the used ID/Number because typically your Auto increment is Unique.. So therefore will not create duplicate increments.. To reindex and increment from the current max ID/integer you could perform:  
 
 
 auto increment doesn't care, if you delete some rows - everytime you insert a row, the value is incremented. 
 If you want a numbering without gaps, don't use auto increment and do it by yourself. You could use something like this to achive this for inserting 
 
 and if you delete a row, you have to rearange the order column manually 
 