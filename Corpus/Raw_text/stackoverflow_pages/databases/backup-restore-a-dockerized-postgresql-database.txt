*** backup-restore-a-dockerized-postgresql-database ***

 I'm trying to backup/restore a PostgreSQL database as is explained on the Docker website, but the data is not restored. 
 The volumes used by the database image are: 
 
 and the CMD is: 
 
 I create the DB container with this command: 
 
 Then I connect another container to insert some data manually: 
 
 The tar archive is then created: 
 
 Now I remove the container used for the db and create another one, with the same name, and try to restore the data inserted before: 
 
 But the tables are empty, why is the data not properly restored ? 
 
 **Backup your databases**

 
 **Restore your databases**

 
 
 Okay, I've figured this out. Postgresql does not detect changes to the folder /var/lib/postgresql once it's launched, at least not the kind of changes I want it do detect. 
 The first solution is to start a container with bash instead of starting the postgres server directly, restore the data, and then start the server manually. 
 The second solution is to use a data container. I didn't get the point of it before, now I do.
This data container allows to restore the data before starting the postgres container. Thus, when the postgres server starts, the data are already there. 
 
 I think you can also use a potgres backup container which would backup your databases within a given time duration. 
 
 
 Another approach (based on  docker-postgresql-workflow ) 
 Local running database (not in docker, but same approach would work) to export: 
 
 Container database to import: 
 
 
 I had this issue while trying to use a db_dump to restore a db. I normally use dbeaver to restore- however received a psql dump, so had to figure out a method to restore using the docker container.  
 The methodology recommended by Forth and edited by Soviut worked for me: 
 
 (since this was a single db dump and not multiple db's i included the name) 
 However, in order to get this to work, I had to also go into the virtualenv that the docker container and project were in. This eluded me for a bit before figuring it out- as I was receiving the following docker error.  
 
 This can be caused by the file  /var/lib/docker/network/files/local-kv.db .I don't know the accuracy of this statement: but I believe I was seeing this as I do not user docker locally, so therefore did not have this file, which it was looking for, using Forth's answer. 
 I then navigated to correct directory (with the project) activated the virtualenv and then ran the accepted answer. Boom, worked like a top. Hope this helps someone else out there! 
 
 This is the command worked for me. 
 
 for example 
 
 Reference : Solution given by  **GMartinez-Sisti**
 in this discussion.
 https://gist.github.com/gilyes/525cc0f471aafae18c3857c27519fc4b 
 