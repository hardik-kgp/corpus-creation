*** best-way-to-do-multi-row-insert-in-oracle ***

 I'm looking for a good way to perform multi-row inserts into an Oracle 9 database.  The following works in MySQL but doesn't seem to be supported in Oracle. 
 
 
 This works in Oracle: 
 
 The thing to remember here is to use the   statement. 
 ( source ) 
 
 In Oracle, to insert multiple rows into table t with columns col1, col2 and col3 you can use the following syntax: 
 
 
 Use SQL*Loader. It takes a little setting up, but if this isn't a one off, its worth it. 
 **Create Table**

 
 **Create CSV**

 
 **Create Loader Control File**

 
 **Run SQL*Loader command**

 
 **Confirm insert**

 
 SQL*Loader has alot of options, and can take pretty much any text file as its input. You can even inline the data in your control file if you want. 
 Here is a page with some more details ->  SQL*Loader 
 
 Whenever I need to do this I build a simple PL/SQL block with a local procedure like this: 
 
 
 If you have the values that you want to insert in another table already, then you can Insert from a select statement. 
 
 Otherwise, you can list a bunch of single row insert statements and submit several queries in bulk to save the time for something that works in both Oracle and MySQL. 
 @Espo 's solution is also a good one that will work in both Oracle and MySQL if your data isn't already in a table. 
 
 you can insert using loop if you want to insert some random values. 
 
 
 Cursors may also be used, although it is inefficient. 
The following stackoverflow post discusses the usage of cursors : 
 INSERT and UPDATE a record using cursors in oracle 
 
 Here is a very useful step by step guideline for insert multi rows in Oracle: 
 https://livesql.oracle.com/apex/livesql/file/content_BM1LJQ87M5CNIOKPOWPV6ZGR3.html 
 The last step: 
 
 
 In my case, I was able to use a simple insert statement to bulk insert many rows into TABLE_A using just one column from TABLE_B and getting the other data elsewhere (sequence and a hardcoded value) : 
 
 Result: 
 
 etc 
 