*** best-way-to-store-working-hours-and-query-it-efficiently ***

 I'm planning to store working hours for shops. I'm wondering what might be the best modeling for the working hours field so that I can get a list of open/closed shops at the current moment in very efficient way. 
 
 To store normal operation hours, you would need to store a number of records containing: 
 
 Shop - INTEGER 
 DayOfWeek - INTEGER (0-6) 
 OpenTime - TIME 
 CloseTime - TIME 
 
 I assume for example that each shop has reduced hours during national holidays, or has plant shutdowns, so you would also need to store some override records: 
 
 Shop - INTEGER 
 OverrideStartDate - DATE 
 OverrideEndDate - DATE 
 DayOfWeek - INTEGER (0-6) 
 AltOpenTime - TIME 
 AltCloseTime - TIME 
 Closed - INTEGER (0, 1) 
 
 To find open shops is trivial, but you also need to check if there are override hours: 
 
 If there are any record returned, those shops have alternate hours or are closed. 
 There may be some nice SQL-fu you can do here, but this gives you the basics. 
 **EDIT**

 I haven't tested this, but this should get you close: 
 
 **EDIT**

 As for efficiency, it is efficient in the sense that you only have to make one call to MySQL which is often a bottleneck if it is across a network.  You'll have to test and see whether this performs to your specifications.  If not, you may be to play with some indices. 
 **EDIT**

 Testing.  Not complete testing, but some. 
 
 
 Let's consider all opening hours are the same every week. So what about following table: 
 
 shop_id - INTEGER (or any unique identifier of the shop) 
 week_day - INTEGER (0=Monday - 6=Sunday) 
 opens_at - TIME (use your local timezone) 
 closes_at - TIME (use your local timezone) 
 
 Make a table for shops identified by   and then insert the opening hours, i.e: 
 
 1, 0, 8:00, 17:00 
 ... 
 1, 5, 8:00, 12:00 
 2, 0, 7:30, 12:30 
 2, 0, 13:30, 17:30 
 2, 1, 7:30, 12:30 
 2, 1, 13:30, 17:30 
 ... 
 
 and then SELECT: 
 
 