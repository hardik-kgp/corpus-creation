*** bind-variables-in-r-dbi ***

 In R's   package, I'm not finding a facility for using bound variables.  I did find a document (the original vignette from 2002) that says about bound variables, "Perhaps the DBI could at some point in the future implement this feature", but it looks like so far that's left undone. 
 What do people in R use for a substitute?  Just concatenate strings right into the SQL?  That's got some obvious problems for safety & performance. 
 EDIT: 
 Here's an example of how placeholders could work: 
 
 That's not a very well-thought-out interface, but the idea is that you can use a value for   and the driver handles the details of escaping (if the underlying API doesn't handle bound variables natively) without the caller having to reimplement it [badly]. 
 
 For anyone coming to this question like I just did after googling for rsqlite and dbgetpreparedquery, it seems that in the latest version of rsqlite you can run a SELECT query with bind variables. I just ran the following: 
 
 This was relatively fast (selecting 2,000 rows out of a 450,000 row table) and is  incredibly  useful. 
 FYI. 
 
 Below is a summary of what's currently supported in RSQLite for bound
parameters.  You are right that there is not currently support for
SELECT, but there is no good reason for this and I would like to add
support for it. 
 If you feel like hacking, you can get a read-only checkout of all of
the DBI related packages here: 
 
 I like to receive patches, especially if they include tests and
documentation.  Unified diff, please.  I actually do all my
development using git and so best case is to create a git clone of say
RSQLite and then send me diffs as  
 Anyhow, here are some examples: 
 
 
 Hey hey - I just discovered that RSQLite, which is what I'm using in this case, does indeed have bound-variable support: 
 http://cran.r-project.org/web/packages/RSQLite/NEWS 
 See the entry about   and  . 
 So in theory, that turns this nastiness: 
 
 into this: 
 
 Unfortunately, when I actually try it, it seems that it's only for   statements and the like, not for   statements, because I get an error:  . 
 Providing that capability would be fantastic. 
 The next step would be to hoist this up into DBI itself so that all DBs can take advantage of it, and provide a default implementation that just pastes it into the string like we're all doing ourselves now. 
 