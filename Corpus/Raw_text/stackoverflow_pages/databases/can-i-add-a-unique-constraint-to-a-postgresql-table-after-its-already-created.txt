*** can-i-add-a-unique-constraint-to-a-postgresql-table-after-its-already-created ***

 I have the following table: 
 
 I don't want there to ever be more than one column for any given  /  pair. I've already created the table and have lots of data in it (which I have already ensured meets the unique criteria). As it gets larger, though, room for error creeps in. 
 Is there any way to add a   constraint at this point? 
 
 's inline help: 
 
 Also documented in the  postgres docs  (an excellent resource, plus easy to read, too). 
 
 
 Yes, you can. But if you have non-unique entries on your table, it will fail. Here is the how to add unique constraint on your table. If you're using PostgreSQL 9.x you can follow below instruction. 
 
 
 Yes, you can add a UNIQUE constraint after the fact. However, if you have non-unique entries in your table Postgres will complain about it until you correct them. 
 
 If you had a table that already had a existing constraints based on lets say: name and lastname and you wanted to add one more unique constraint, you had to drop the entire constrain by: 
 
 Make sure tha the new constraint you wanted to add is unique/ not null ( if its Microsoft Sql, it can contain only one null value) across all data on that table, and then you could re-create it.  
 
 