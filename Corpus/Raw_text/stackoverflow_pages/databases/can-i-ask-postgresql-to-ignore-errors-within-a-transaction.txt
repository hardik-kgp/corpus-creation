*** can-i-ask-postgresql-to-ignore-errors-within-a-transaction ***

 I use Postgresql with the PostGIS extensions for ad-hoc spatial analysis.  I generally construct and issue SQL queries by hand from within psql.  I always wrap an analysis session within a transaction, so if I issue a destructive query I can roll it back. 
 However, when I issue a query that contains an error, it cancels the transaction.  Any further queries elicit the following warning: 
 
 ERROR:  current transaction is
  aborted, commands ignored until end of
  transaction block 
 
 Is there a way I can turn this behaviour off?  It is tiresome to rollback the transaction and rerun previous queries every time I make a typo. 
 
 (UPDATE: No need to to this by hand, I asked in the postgresql mailing lists, and it turned that this behaviour is already implemented, by the  ON_ERROR_ROLLBACK  set in the psql client)  
 To elaborate on Simon's answer (+1) , in your scenario you could rutinarily add a savepoint after each interactive query, always with the same name (it ovewrites the previous if the query is succesfull). In the case of error, you go back to the last saved one and continue from there. 
 An example of this working pattern: 
 
 
 Switching that off is not possible however you can use something different. There is something like savepoint: 
 http://www.postgresql.org/docs/8.4/interactive/sql-savepoint.html 
 so you can rollback your transaction to some earlier point without rolling black the whole transaction. 
 
 It's possible to write a function that takes a string argument,  executes  it, and uses an  exception  clause in order to not abort your transaction, but it's a huge pain to then have to call that function for each statement you wish to execute. 
 
 No, there is no way to turn this off. An error implicitly aborts the transaction for you, so you must rollback and try again. 
 
 The simple answer is to run 
 
 in the interactive session. See also  this blog post  by its implementor. 
 