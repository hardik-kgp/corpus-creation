*** can-i-set-up-cascade-deleting-in-rails ***

 I know this is probably on the Internet somewhere but I can't find the answer here on Stackoverflow so I thought I may boost up the knowledge base here a little. 
 I'm a newbie to Ruby and Rails but my company is getting pretty invested in it so I'm trying to get to know it in a little more detail. 
 It's been difficult for me to change my mindset to designing an application from the "model" rather the from the database, so I'm trying to figure out how would do all of the design work that I have classically done in the Database in the Rails model instead. 
 So the most recent task that I have given myself is to figure out how to configure a Rails database model to do cascading deletes? Is there an easy way of doing this? Or would I have to go into the MySql and set this up? 
 
 you can also set the :dependent option to :delete_all. :delete_all will issue a single SQL statement to delete all child records. because of this using :delete_all may give you better performance. 
 
 
 Yeah you can, if you are using a relationship like has_many you just do this 
 
 
 Contrary to the provided answer I highly suggest also doing this on a database level. In case you have different processes or a multi threaded environment it could happen that records are not properly deleted. Furthermore the database foreign key makes things way faster when deleting lots of data. 
 Like in the suggested answer do this: 
 
 However also make sure to setup a   in a migration. That way the database takes care of deleting the records automatically for you. 
 To nullify the values when a membership is deleted, assuming you have a user model: 
 
 You can also delete all the models whenever a membership is deleted 
 
 
 Just keep in mind that delete_all will not execute any callbacks (like before_destroy and after_destroy) on the child records. 
 
 It looks like this plugin might give you what you're looking for if you want the cascading deletes reflected in the actual database structure: 
 http://www.redhillonrails.org/foreign_key_migrations.html 
 Format for using this in a migration would be something like this: 
 
 