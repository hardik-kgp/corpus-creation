*** can-query-be-optimized-get-a-records-max-date-then-join-the-max-dates-values ***

 I've created a query that returns the results I want but I feel there must be a better way to do this. Any guidance would be appreciated. 
 I am trying to get all items for a specific meeting and join their max meeting date < X and join the max date's committee acronym. X is the current meeting date. 
 I've tried a few different queries but none, other than the one below, returned the expected results all the time.  
 You can see this query in action by going to  rextester . 
 
 **REVIEW / TESTING OF ANSWERS (REVISED**
**):***

 **I've revised the testing based on the comments made.**

 Since I put a bounty on this question I felt I should show how I'm evaluating the answers and give some feedback. Overall I'm very grateful to all how have helped out, thank you. 
 For testing, I reviewed the queries against: 
 
 the  initial rextester   
 a  modified version of the initial rextester  with all 4 queries for 2 separate datasets 
 a larger data set from my actual database 
 
 **My Original Query with EXPLAIN**

 
 **Paul Spiegel's answers.**
  
 The  **initial answer works and seems to be the most efficient**
 option presented, much more than mine. 
 Paul Spiegel's first query pulls the fewest rows, is shorter and more readable than mine. It also doesn't need to reference a date which will be nicer when writing it as well. 
 
 This query also returns the correct results when adding   to the select statement. This query does not perform as well as the first though (but it is close). 
 
 **Stefano Zanini's answer**

 This query does return the expected results using  . When using   and the number of rows being pulled this query is more efficient when compared to my original one but Paul Spiegel's is just a bit better. 
 
 **EoinS' answer**

 As noted in the comments, this answer works if meetings are sequential, but they may not be unfortunately.  
 
 This one is a bit crazy.. Let's do it step by step: 
 The first step is a basic join 
 
 We select the meeting (id = 2) and the corresponding agenda_item_ids. This will already return the rows we need with the first three columns. 
 Next step is to get the last meeting date for every agenda item. We need to join the first query with the join table and corresponding meetings (except of the one with id = 2 -  ). We only want meetings with a date before the actual meeting ( ). From all those meetings we only want the latest date each agenda item. So we group by the agenda item and select  : 
 
 This way we get the fourth column ( ). 
 Last step is to select the   of the meeting with the last date ( ). And this is the crazy part - We can use a correlated subquery in the SELECT clause. And we can use   for the correlation: 
 
 The final query would be: 
 
 http://rextester.com/JKK60222 
 To be true, i was surprised that you can use   in the subquery. 
 Another solution - Use the second query in a subquery (derived table). Join committees over meetings and the join table using  . Only keep rows with an acronym and rows without a  . 
 
 http://rextester.com/BBMDFL23101 
 
 Using your schema I used the below query, assuming that all   entries are sequential: 
 
 I create a variable just to make it easy to change meetings on the fly. 
 Here is a functional example in Rextester 
 Thanks for making your schema so easy to reproduce! 
 
 I found this problem quite challenging, and the results I achieved are not jaw-dropping, but I managed to get rid of one of the sub-queries and maybe of a few joins, and this is result: 
 
 
 
 you don't need the join with  , since the   is already available in the relationship table 
 up to this point we have current meeting, its agenda items and their "calculated" max date 
 we get all meetings of each agenda item... 
 ...so that we can pick the meeting whom date matches the max date we calculated previously 
 this condition is needed because all the joins from   on have to be left (because some agenda item may have no previous meeting and hence  ) but this way   would give some agenda items undesired meetings. 
 
 