*** cannot-drop-database-because-it-is-currently-in-use-how-to-fix ***

 Having this simple code I get "Cannot drop database "test_db" because it is currently in use" (CleanUp method) as I run it.  
 
 DataContext has one property like this  
 
 How can force my code to remove database?
Thanks 
 
 The problem is that your application probably still holds some connection to the database (or another application holds connection as well). Database cannot be deleted where there is any other opened connection. The first problem can be probably solved by turning connection pooling off (add   to your connection string) or clear the pool before you delete the database (by calling  ). 
 Both problems can be solved by forcing database to delete but for that you need custom database initializer where you switch the database to single user mode and after that delete it.  Here  is some example how to achieve that. 
 
 I was going crazy with this! I have an open database connection inside   and a table query open to see the result of some unit tests. When re-running the tests inside Visual Studio I want it to   the database always  **EVEN IF**
 the connection is open in SSMS. 
 Here's the definitive way to get rid of  : 
 Entity Framework Database Initialization 
 The trick is to override   method inside the custom  . 
 Copied relevant part here for the sake of    **DUPLICATION**
... :) 
 
 If the database already exist, you may stumble into the case of having
  an error. The exception “Cannot drop database because it is currently
  in use” can raise. This problem occurs when an active connection
  remains connected to the database that it is in the process of being
  deleted. A trick is to override the InitializeDatabase method and to
  alter the database. This tell the database to close all connection and
  if a transaction is open to rollback this one. 
 
 
 
 This is a really aggressive database (re)initializer for EF code-first with migrations; use it at your peril but it seems to run pretty repeatably for me. It will; 
 
 Forcibly disconnect any other clients from the DB 
 Delete the DB. 
 Rebuild the DB with migrations and runs the Seed method 
 Take ages! (watch the timeout limit for your test framework; a default 60 second timeout might not be enough) 
 
 Here's the class; 
 
 Use it like this; 
 
 I also use Ladislav Mrnka's 'Pooling=false' trick, but I'm not sure if it's required or just a belt-and-braces measure. It'll certainly contribute to slowing down the test more.  
 
 None of those solutions worked for me. I ended up writing an extension method that works: 
 
 
 I try adding   like Ladislav Mrnka said but always got the error. 
I'm using  **Sql Server Management Studio**
 and even if I close all the connection, I get the error. 
 If I close  **Sql Server Management Studio**
 then the Database is deleted :) 
Hope this can helps 
 
 I got the same error. In my case, I just closed the connection to the database and then re-connected once the in my case the new model was added and a new controller was scaffolded. That is however a very simple solution and not recommended for all scenarios if you want to keep your data. 
 
 I got the same problem back then. Turns out the solution is to close the connection in Server Explorer tab in Visual Studio. So maybe you could check whether the connection is still open in the Server Explorer. 
 
 Its simple because u're still using the same db somewhere, or a connection is still open.
So just execute "USE master" first (if exist, but usually is) and then drop the other db. This always should work! 
 Grz John 
 