*** cannot-persist-computed-column-not-deterministic ***

 I have this function for a computed column : 
 
 I added the   in the hope it would make it deterministic so I can persist it. It should be as the two inputs   and   will always yield the same results. 
 The exact error is : 
 
 Computed column 'AllocatedTimeStart' in table 'Tmp_Bookings' cannot be persisted because the column is non-deterministic. 
 
 I am using this formula in the column : 
 
 And the column defs : 
 
 Any ideas? 
 **EDIT:**

 Changed line to : 
 
 But now I get an error saying the formula for the column is invalid. Even though the function saves fine. 
 **EDIT 2:**

 I've shown exactly what I am doing (or atleast I've tried). There is nothing extra really. As it says the previous function (original one) coupled with the formula ref   to it in the column worked, but was not persisting, it said it was non deterministic. So according to the suggestion I changed the FUNCTION, replacing the conversion part with the new code, so the function now looks like : 
 
 Then I tried the same formula as before in the computed field   ... and it rejects the formula, says its not valid... which is strange as the formula is the same, so it must be doing some sort of check of the changed function and finding that to be invalid, which is also strange because I did a plain   and it worked... 
 So yes I am confused, and I've never seen   never mind use it. But really there is nothing more than what I have just said. 
 
  is being passed to a   call, in a position where a date is expected, forcing an implicit conversion to occur. 
 From the rules for  deterministic functions : 
 
   
 Deterministic unless used with  ,  , or  . 
 
 Deterministic unless one of these conditions exists: 
 ... 
 Source or target type is   or  , the other source or target type is a character string, and a nondeterministic style is specified. To be deterministic, the style parameter must be a constant. Additionally, styles less than or equal to 100 are nondeterministic, except for styles 20 and 21. Styles greater than 100 are deterministic, except for styles 106, 107, 109 and 113. 
 
 Well, you're calling neither, but you're relying on an implicit conversion, which I'd expect to act like  . Rather than rely on this, I'd switch to using   and give a deterministic style parameter. 
 So, I'd do:    in its place. Having done so, the function itself becomes deterministic 
 