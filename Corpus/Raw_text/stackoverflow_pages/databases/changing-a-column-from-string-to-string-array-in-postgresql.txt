*** changing-a-column-from-string-to-string-array-in-postgresql ***

 The following is a snippet of a table called "containers". 
 
 How can I alter the   column to   and the corresponding modifiers to   ? Essentially, I want to convert a string to a string array. Note the products column has no limit on the number of characters. 
 
 throws the following error  
 
 ERROR:  column "products" cannot be cast to type character varying[] 
 
 
 There is no implicit cast from   to   in Postgres. 
You must indicate how to perform the conversion of the types. 
You should do it in   clause (see  ALTER TABLE  in the documentation).
In that case you have to drop and recreate the default value of the column, as it is explained in the documentation: 
 
 The USING option of SET DATA TYPE can actually specify any expression involving the old values of the row; that is, it can refer to other columns as well as the one being converted. This allows very general conversions to be done with the SET DATA TYPE syntax. Because of this flexibility, the USING expression is not applied to the column's default value (if any); the result might not be a constant expression as required for a default. This means that when there is no implicit or assignment cast from old to new type, SET DATA TYPE might fail to convert the default even though a USING clause is supplied. In such cases, drop the default with DROP DEFAULT, perform the ALTER TYPE, and then use SET DEFAULT to add a suitable new default. 
 
 
 The three operations can be done in one statement: 
 
 