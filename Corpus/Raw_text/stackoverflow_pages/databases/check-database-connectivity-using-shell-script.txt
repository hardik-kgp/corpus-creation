*** check-database-connectivity-using-shell-script ***

 I am trying to write a shell script to check database connectivity. Within my script I am using the command  
 
 to connect to my Oracle database. 
 Now I want to save the output generated by this command (before it drops to SQL prompt) in a temp file and then grep / find the string "Connected to" from that file to see if the connectivity is fine or not. 
 Can anyone please help me to catch the output and get out of that prompt and test whether connectivity is fine? 
 
 Use a script like this: 
 
 echo "exit" assures that your program exits immediately (this gets piped to sqlplus).
-L assures that sqlplus won't ask for password if credentials are not ok (which would make it get stuck as well). 
 (> /dev/null just hides output from grep, which we don't need because the results are accessed via $? in this case) 
 
 You can avoid the SQL prompt by doing: 
 
 SqlPlus exits immediately. 
 Now just grep the output of the above as: 
 
 
 
 
 
 Not knowing whether the "Connected to" message is put to  standard output or standard error, this checks both. "qrep -q" instead of "grep... >/dev/null" assumes Linux. 
 
 Here's a good option which does not expose the password on the command line 
 
 
 none of the proposed solutions works for me, as my script is executed in machines running several countries, with different locales, I can't simply check for one String simply because this string in the other machine is translated to a different language. As a solution I'm using SQLcl 
 https://www.oracle.com/database/technologies/appdev/sqlcl.html 
 which is compatible with all sql*plus scripts and allow you to test the database connectivity like this: 
 
 
 This was my one-liner for docker container to wait until DB is ready: 
 
 And the same in multiple lines: 
 
 So it basically does select with magic number and checks that correct number was actually returned. 
 