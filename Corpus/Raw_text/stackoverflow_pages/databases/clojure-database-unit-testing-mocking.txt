*** clojure-database-unit-testing-mocking ***

 I just recently started working on a database-heavy Clojure application and am attempting to get some unit tests in place. Ideally, I'd like to avoid actually hitting a real database by mocking things out. 
 Here's an example of a simple test: 
 test-core.clj 
 
 core.clj 
 
 db.clj 
 
 My question: is there a way, from within test-core.clj, to bind a custom function to 'db/query' such that core.clj will use it, as opposed to the definition within db.clj? 
 Thanks! 
 
 You can use  binding  to try and override db/query, but you'll need to define the namespace and var first. The easiest way is to import the db.clj into the same namespace and then use bindings. 
 
 