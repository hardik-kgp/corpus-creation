*** cloud-firestore-deep-get-with-subcollection ***

 Let's say we have a root collection named 'todos'. 
 Every document in this collection has: 
 
 : String 
 subcollection named  
 
 Every document in the subcollection   has 
 
 : String 
 : Boolean 
 
 I know that querying in Cloud Firestore is shallow by default, which is great, but is there a way to query the   and get results that include the subcollection   automatically? 
 In other words, how do I make the following query include the   subcollection? 
 
 
 This type of query isn't supported, although it is something we may consider in the future. 
 
 If anyone is still interested in knowing how to do deep query in firestore, here's a version of cloud function getAllTodos that I've come up with, that returns all the 'todos' which has 'todo_items' subcollection.  
 
 
 I have faced the same issue but with IOS, any way if i get your question and if you use auto-ID for to-do collection document its will be easy if your store the document ID as afield with the title field
in my case  :  
 
 So when you retrieve lets say an array of to-do's and when click on any item you can navigate so easy by the path  
 
 I wish i could give you the exact code but i'm not familiar with Javascript  
 
 I used AngularFirestore (afs) and Typescript: 
 
 
 
 
 
 
 As pointed out in other answers, you cannot request deep queries.  
 My recommendation:  **Duplicate your data**
 as minimally as possible.  
 I'm running into this same problem with "pet ownership". In my search results, I need to display each pet a user owns, but I also need to be able to search for pets on their own. I ended up duplicated the data. I'm going to have a pets array property on each user AS WELL AS a pets subcollection. I think that's the best we can do with these kinds of scenarios. 
 
 you could try something like this  
 
 Hope this helps ! 
 