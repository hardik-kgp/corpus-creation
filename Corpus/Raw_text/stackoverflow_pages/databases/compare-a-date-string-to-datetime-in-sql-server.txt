*** compare-a-date-string-to-datetime-in-sql-server ***

 In SQL Server I have a   column which includes a time element. 
 Example:    
 
 What is the  **best**
 method to only select the records for a particular day, ignoring the time part? 
 Example:  (Not safe, as it does not match the time part and returns no rows) 
 
 Note: Given this site is also about jotting down notes and techniques you pick up and then forget, I'm going to post my own answer to this question as DATETIME stuff in MSSQL is probably the topic I lookup most in SQLBOL. 
 
 **Update**
 Clarified example to be more specific. 
 
 **Edit**
 Sorry, But I've had to down-mod WRONG answers (answers that return wrong results). 
 @Jorrit:   will return the 13th and the 14th. 
 @wearejimbo:  Close, but no cigar!  badge awarded to you. You missed out records written at 14/08/2008 23:59:001 to 23:59:999 (i.e. Less than 1 second before midnight.) 
 
 Technique 1: 
 
 The advantage of this is that it will use any index on 'column_datetime' if it exists. 
 
 In SQL Server 2008, you could use the new DATE datatype 
 
 @Guy. I think you will find that this solution scales just fine. Have a look at the  query execution plan  of your original query. 
 And for  mine : 
 
 Just compare the year, month and day values. 
 
 
 Something like this? 
 
 
 Technique 2: 
 
 If the column_datetime field is not indexed, and is unlikely to be (or the index is unlikely to be used) then using DATEDIFF() is shorter. 
 
 Good point about the index in the answer you accepted.  
 Still, if you really search only on specific   or    **often**
, then the best solution I found is to add another persisted computed column to your table which would only contain the  , and add index on this column: 
 
 Add index on that column: 
 
 Then your search will be even faster: 
 
 
 I normally convert date-time to date and compare them, like these: 
 
 or 
 
 
 This function  **Cast(Floor(Cast(GetDate() As Float)) As DateTime)**
 returns a datetime datatype with the time portion removed and could be used as so. 
 
 or 
 
 
 **How to get the DATE portion of a DATETIME field in MS SQL Server:**

 One of the quickest and neatest ways to do this is using 
 
 It avoids the CPU busting "convert the date into a string without the time and then converting it back again" logic. 
 It also does not expose the internal implementation that the "time portion is expressed as a fraction" of the date. 
 **Get the date of the first day of the month**

 
 **Get the date rfom 1 year ago**

 
 
 I know this isn't exactly how you want to do this, but it could be a start: 
 
 
 
 This will convert the datatime and the string into varchars of the format "YYYY-MM-DD". 
 This is very ugly, but should work 
 
 Date can be compared in sqlserver using string comparision:
e.g. 
 
 
 
 
 The best way is to simply extract the date part using the SQL DATE() Function: 
 
 
 
 
 
 
 There are many formats for date in SQL which are being specified. Refer  https://msdn.microsoft.com/en-in/library/ms187928.aspx 
 Converting and comparing varchar column with selected dates. 
 Syntax: 
 
 
 
 In sqlserver 
 
 In C#
Pass the short string of date value using ToShortDateString() function.
sample:
  DateVariable.ToShortDateString(); 
 