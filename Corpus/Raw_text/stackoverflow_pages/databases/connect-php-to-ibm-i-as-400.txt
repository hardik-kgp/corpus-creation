*** connect-php-to-ibm-i-as-400 ***

 I've got an upcoming project wherein I will need to connect our website ( ) to our back-end system running on an iSeries with OS400 V5R3 so that I can access some tables stored there. I've done some checking around but am running into some roadblocks. 
 From what I've seen the DB2 extensions and DB2 software from IBM only run under Linux. I've tried compiling the extensions with all the software from IBM and even tried their precompiled ibm_db2 extension with no luck. IBM only supports Linux so I turned on the Linux emulation in the kernel but that didn't seem to help anything. 
 If anyone has run across getting everything to run natively under OpenBSD that would be great, but what I think I may have to do is setting up a second server running CentOS with DB2 installed (most likely via ZendCore for IBM since it seems to do all this for me) and the driver so that I can set up a small transaction server that I can post against and get a JSON representation of the DB2 data that I need. 
 Does the second option seem overkill or does anyone else have any better ideas? 
 
 Have you looked at connecting to the server using  unixODBC ? If I remember correctly it has support for IBM DB2 and compiles on OpenBSD. Check out  http://www.php.net/odbc  for more information regarding the PHP side. 
 If you can't get that to work, the option to setup a web service on a Linux server may be all you can do. 
 
 Rather than setup a 2nd box, why don't you look into the PHP Connector for iSeries? My mainframe guys said it was very easy to setup on our iSeries here.  
 We wrote a simple server in PHP that loads data models from DB2 data, serializes them, and returns them to the caller. This approach means that only another PHP app can consume the service but it's just so much quicker on both ends to just serialize the object and send it down the pipe. 
 Here is a PDF from IBM on the subject:  http://i-seriesusergroup.org/wp-content/uploads/2006/09/PHP%20for%20i5OS%20NESDND.pdf 
 
 To second @John Downey, I've gotten connectivity to work with PHP on an AS/400 with unixODBC. 
 Check your phpinfo() to see if unixODBC is available in it. I didn't have to compile it in on SLES 10.  
 
 Looks like a web service is going to be the answer for me. On a production box I'd rather not have to go through compiling and maintaining my own special installation of PHP since ODBC support needs to be compiled in, according to the PHP documentation. 
 
 A web service is almost certainly the way to go.  I'm sure you've already thought of this, but since you're doing PHP on both sides, you can shortcut things a little bit by using serialize() to build your response data instead of building a proper XML document.  It's less flexible over the long run, but it will probably get you up and running more quickly. 
 
 Indeed, a webservice seems like a great way to solve the problem.  One way to avoid having a completely separate OS for it would be to write the webservice in Java on top of the AS400 tools for Java (which are quite nice, btw).  That should at least let you run your service layer on the OpenBSD box as well. 
 
 You can connect directly using a standard ODBC driver as well. The IBM version usually gives you more features like being able to call programs and things like that. If you only need SQL and stored procedures, ODBC should work. 
 
 Why not use PDO from PHP? I have to guess here since I could not find a public list of all ports available for OpenBSD, but since there is a port for FreeBSD, NetBSD etc. maybe you get lucky as well. 
 (I guess that even though OpenBSD links to FreeBSD's porter's handbook,  Freshports  is not applicable for your system?) 
 If PDO is not available and since I am hoping you use ports and according to the following link there is php5-ODBC available: 
 
 http://www.openbsd.org/pkg-stable40.html 
 
 So assuming you manage your system through ports, there are your pointers. 
 Hope that helps! 
 