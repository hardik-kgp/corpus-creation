*** consecutive-android-junit-tests-do-not-reflect-the-real-data-in-the-underlying-d ***

 **Additional Information:**

 To clarify, the app under test uses a   to access the database. 
 **Edit:**

 If anyone is willing and able to help me debug this. The full project is available  here . In the   branch,  . 
 **Question:**

 When I run two of my Android JUnit tests separately, they pass just fine. However, when I run them together, the first one passes and the second one fails. The problem appears to be that the first test run adds a row to the underlying database.   correctly deletes the database, but the second test still starts with the dirty data displayed in the   although the database does not contain the extra row. (I confirmed this using  .) Does anyone have any ideas how I can fix this problem? 
 The Activity class being tested can be found  here . 
 Here is my test code: 
 
 
 It appears that a  's lifecycle is tied to that of an   not of the   that acesses it. Also, from what I can tell,   creates a single   for all the tests; only the   is destroyed and restarted for each test. This means that the each test will share the same  . This means that the database file is opened with the first access by the   and closed only after all test methods in the   have finished. Since the database file remains open between test cases, the data can be accessed even after the file is deleted from the underlying file system. My solution was to delete the rows of the database individually rather than deleting the entire database. 
 