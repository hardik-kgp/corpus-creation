*** converting-database-from-mysql-to-mongodb ***

 is there any easy way to change the database from mysql to mongoDB ? 
 or better any one suggest me good tutorial do it  
 
 
 is there any easy way to change the database from mysql to mongoDB ? 
 
 **Method #1**
: export from MySQL in a CSV format and then use the  mongoimport tool . However, this does not always work well in terms of handling dates of binary data. 
 **Method #2**
: script the transfer in your language of choice. Basically you write a program that reads everything from MySQL one element at a time and then inserts it into MongoDB. 
 Method #2 is better than #1, but it is still not adequate. 
 MongoDB uses collections instead of tables. MongoDB does not support joins. In every database I've seen, this means that your data structure in MongoDB is different from the structure in MySQL. 
 Because of this, there is no "universal tool" for porting SQL to MongoDB. Your data will need to be transformed before it reaches MongoDB. 
 
 If you're using Ruby, you can also try:  **Mongify**

 It's a super simple way to transform your data from a RDBS to MongoDB without losing anything. 
 Mongify will read your mysql database, build a translation file for you and all you have to do is map how you want your data transformed. 
 It supports: 
 
 **Auto updating IDs (to BSON ObjectID)**

 **Updating referencing IDs**

 Type Casting values 
 Embedding tables into other documents 
 Before save filters (to allow changes to the data manually) 
 and much much more... 
 
 Read more about it at:  http://mongify.com/getting_started.html 
 There is also a short 5 min video on the homepage that shows you how easy it is. 
 
 MongoVUE 's free version can do this automatically for you. 
 It can connect to both databases and perform the import 
 
 Here's what I did it with Node.js for this purpose: 
 
 
 I am kind of partial to  TalendOpenStudio  for those kind of migration jobs. It is an eclipse based solution to create data migration "scripts" in a visual way. I do not like visual programming, but this is a problem domain I make an exception. 
 Adrien Mogenet has create a  MongoDBConnection  plugin for mongodb. 
 It is probably overkill for a "simple" migration but ut is a cool tool. 
 Mind however, that the suggestion of Nix will probably save you time if it is a one-of migration. 
 
 You can use QCubed ( http://qcu.be ) framework for that. The procedure would be something like this:  
 
 Install QCubed ( http://www.thetrozone.com/qcubed-installation ) 
 Do the codegen on your database. (http://www.thetrozone.com/php-code-generation-qcubed-eliminating-sql-hassle) 
 Take your database offline from the rest of the world so that only one operation runs at a time. 
 Now write a script which will read all rows from all tables of the database and use the getJson on all objects to get the json. You can then use the data to convert to array and push it into the mongoDB! 
 
 
 If anyone's still looking for a solution, i found that the easiest way is to write a PHP script to connect to your SQL DB, retrieve the information you want using the usual Select statement, transform the information into JSON using the PHP JSON Encode functions and simply output your results to file or directly to MongoDB. It's actually pretty simple and straight forward, the only thing to do is to double check your output against a Json validator, you may have to use functions such as explode to replace certain characters and symbols to make it valid. I have done this before however i currently do not have the script at hand but from what i can remember it was literally half a page of code.  
 Oh also remember Mongo is a document store so some data mapping is required to get it to be acceptable with mongo. 
 
 For those coming to this with the same problem, you can check out this  Github project . This is an ongoing development that will help you migrate data from MySQL database to MongoDB by simply running a simple command.  
 It will generate MongoDB Schemas in TypeScript so you can use them later in your project. Each MySQL table will be a MongoDB collection, and datatypes will be efficiently converted to their MongoDB compatibles. 
 The documentation for the same can be found in the project's  README.md . Feel free to come in and contribute. Would like to help if need be. 
 
 If you are looking for a tool to do it for you, good luck.   
 My suggestion is to just pick your language of choice, and read from one and write to another. 
 
 If I could quote Matt Briggs (it solved my roblem one time): 
 
 The driver way is by FAR the most straight forward. The import/export tools are fantastic, but only if you are using them as a pair. You are in for a wild ride if your table includes dates and you try to export from the db and import into mongo. 
 You are lucky too, being in c#. We are using ruby, and have a 32million row table we migrated to mongo. Our ending solution was to craft an insane sql statement in postgres that output json (including some pretty kludgy things to get dates going properly) and piped the output of that query on the command line into mongoimport. It took an incredibly frustrating day to write, and is not the sort of thing that can ever really be changed.  
 So if you can get away with it, use ado.net with the mongo driver. If not, I wish you well :-) 
 (note that this is coming from a total mongo fanboi) 
 
 MySQL is very similar to other SQL databases, so I send You to the topiÄ‡:
 Convert SQL table to mongoDB document 
 
 You can use the  following project.It requires solr like configuration file to be written.Its very simple and straight forward. 
 http://code.google.com/p/sql-to-mongo-importer/ 
 
 Try this:
Automated conversion of MySQL dump to Mongo updates using simple r2n mappings.
 https://github.com/virtimus/mysql2mongo 
 
 I think one of the easiest ways is to export the MySQL database to JSON and then use mongorestore to import it to a MongoDB database. 
 Step 1: Export the MySQL database to JSON 
 Load the mysql dump file into a MySQL database if necessary 
 Open MySQL Workbench and connect to the MySQL database 
 Go to the Schema viewer > Select database > Tables > right-click on the name of the table to export 
 Select 'Table Data Export Wizard' 
 Set the file format to .json and type in a filename such as tablename.json 
 Note: All tables will need to be exported individually 
 Step 2: Import the JSON files to a MongoDB using the mongorestore command 
 The mongorestore command should be run from the server command line (not the mongo shell) 
 Note that you may need to provide the authentication details as well as the --jsonArray option, see the  mongorestore docs  for more information 
 
 Note: This method will not work if the original MySQL database has BLOBs/binary data. 
 