*** copying-data-from-one-sqlite-database-to-another ***

 I have 2 SQLite databases with common data but with different purposes and I wanted to avoid reinserting data, so I was wondering if it was possible to copy a whole table from one database to another? 
 
 You'll have to attach Database X with Database Y using the  ATTACH  command, then run the appropriate Insert Into commands for the tables you want to transfer. 
 
 Or, if the columns are not matched up in order: 
 
 
 Consider a example where I have two databases namely allmsa.db and atlanta.db. Say the database allmsa.db has tables for all msas in US and database atlanta.db is empty.  
 Our target is to copy the table atlanta from allmsa.db to atlanta.db. 
 **Steps**

 
 sqlite3 atlanta.db(to go into atlanta database) 
 Attach allmsa.db. This can be done using the command  
note that we give the entire path of the database to be attached. 
 check the database list using  
you can see the output as 
 
 seq  name             file                                                      
---  ---------------  ----------------------------------------------------------
0    main             /mnt/fastaccessDS/core/csv/atlanta.db                  
2    AM               /mnt/fastaccessDS/core/csv/allmsa.db  
 
 now you come to your actual target. Use the command 
 
 
 This should serve your purpose. 
 
 Easiest and correct way on a single line: 
 
 The primary key and the columns types will be kept. 
 
 For one time action, you can use .dump and .read. 
 Dump the table my_table from old_db.sqlite 
 
 Read the dump into the new_db.sqlite assuming the table there does not exist 
 
 Now you have cloned your table. 
To do this for whole database, simply leave out the table name in the .dump command. 
 Bonus: The databases can have different encodings. 
 
 Objective-C code for copy Table from a Database to another Database 
 
 
 I needed to move data from a sql server compact database to sqlite, so using sql server 2008 you can right click on the table and select 'Script Table To' and then 'Data to Inserts'. Copy the insert statements remove the 'GO' statements and it executed successfully when applied to the sqlite database using the 'DB Browser for Sqlite' app. 
 
 First scenario: DB1.sqlite and DB2.sqlite have the same table(t1), but DB1 is more "up to date" than DB2.  If it's small, drop the table from DB2 and recreate it with the data: 
 
 Second scenario: If it's a large table, you may be better off with an   type solution.  If you have a   column it's more straight forward, otherwise you'd need to use a combination of fields (maybe every field) and at some point it's still faster to just   and re-  the table; it's always more straight forward (less thinking required). 
 
 THE SETUP: open SQLite without a DB which creates a   in memory   database, then   DB1.sqlite and DB2.sqlite 
 
 and use   to see the attached databases and their files. 
 
 