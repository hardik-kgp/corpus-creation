*** could-somebody-explain-solr-requesthandlers-and-responsewriters-in-detail ***

 Firstly, many parts of the solr wiki is not very useful for somebody who just learned how to index and search fields. It seems it is written for experts! It uses terms that is RELATIVE to solr, so it's very difficult to understand it without reading it several times over. 
 **NOTE**
: I have a classifieds website where the most recent ads always shows up first, so sorting is not relevant for me, except for sorting on price and date no other options are available for the users, and also how many results per page. 
 I know a   is a way to "do some stuff to the query" right?
But how to know which handler to use is hard for me. And how to configure one also.
All I know is the handler is specified in the query-string like " ". 
 Also, the same questions apply to  , which to use? How to configure? 
 What else should I know about these handlers? 
 How is a good and effective way to use them? 
 I really should write something up about getting solr implemented into a PHP website after I learned all these things. 
 Thanks for all your help! 
 
 In Solr, a RequestHandler is essentially a plugin (module of logic) that handles incoming requests in a particular way. 
 Rather than "doing" some stuff to the actually search query, request handlers can provide functionality beyond queries, like for example data import. 
 Normally request handlers in Solr are configured to be specific endpoints (i.e. URL's), and not selected through the  **qt**
 parameter. However, search specific handlers may use the query type parameter to handle a query in a specific way (i.e. one handler may be able to deal with various query types). 
 What handler to use, will normally depend on what you want to achieve. I would suggest that you check out the list of provided handlers, and match their descriptions (many have Wiki pages) to what you want to do. 
 For queries, other than the default SearchHandler, the most commonly used request handler is the DisMaxRequestHandler ( qt=dismax ), that will essentially provide a search across several fields using different weighting based on field significance. This is often referred to by people as "Google like" searching.  
 Also, you may be interested in looking at the MoreLikeThisHandler, that was designed to provide hits that are similar to a specific document (for example from a previous search result). 
 Note that as a source of confusion, the DisMaxRequestHandler in newer versions of Solr is actually provided by the default SearchHandler with a query type of  dismax . 
 Handlers are configured in  solrconfig.xml : 
 
 
 In this case,  qf  are the fields and boosts to apply for each field. The above configuration will search across id, keyword, title, region, country and city. Check out the corresponding Wiki page for more info (DisMaxRequestHandler applies). 
 The most effective way to use them is certainly to first know what exactly you want to achieve, then find the best match in terms of the handler, and then subsequently tune the configuration to provide the results you and your community would expect. 
 Response writers are plugins (modules of logic) that will provide the ways and means to write responses in specific formats. Currently this concept applies mainly to searches, where you will be dealing with derivatives of the QueryResponseWriter, which in turn will be selected by the response format parameter  **wt**
 (in the query). 
 If you are working with PHP, then you will certainly be interested in generating PHP friendly responses to your requests, using  wt=php  or  wt=phps . 
 The  php  response can be evaled: 
 
 and the  phps  response can be read with PHP's serialization mechanism: 
 
 There is support for others (like Ruby, Python, Java Binary, etc), which essentially have been build to make it easier for developers to integrate SOLR into their web applications using mechanisms that are faster than parsing XML or JSON. 
 However, there are are also other types of ResponseWriter's that actually  transform  the response based on a template (e.g. Velocity) or a transform (e.g. XSLT). This can be useful in certain situations, where you don't want to depend on another application to process the query results (e.g. XSLT directly into XHTML). 
 Response Writers are also configured in the  solrconfig.xml , normally you will enable those that you are interested in e.g.: 
 
 The most effective way to use them depends on your environment and what you want to achieve. Obviously if you are in PHP, a  phps  may give you better (easy access through the language) and faster (built-in serialization mechanism, less verbose) results. If in Javascript,  json  may just be the way to go etc. 
 You see, SOLR is a powerful and versatile plattform :)
If you want to figure a way through the jungle you may want to resort to some book, like  "Solr 1.4 Enterprise Search Server"  (although I am not sure it really does the best possible job as an introduction). Many things you can best figure out by trial-and-error as well as patience and some online help. 
 Hope this helps to get you going. 
 