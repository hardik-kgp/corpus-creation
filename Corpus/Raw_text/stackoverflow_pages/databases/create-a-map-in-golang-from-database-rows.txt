*** create-a-map-in-golang-from-database-rows ***

 Basically after doing a query I'd like to take the resulting rows and produce a  , but I do not see how to do this with the API since the   function needs a specific number of parameters matching the requested number of columns (and possibly the types as well) to correctly obtain the data. 
 Again, I'd like to generalize this call and take any query and turn it into a  , where the map contains column names mapped to the values for that row. 
 This is likely very inefficient, and I plan on changing the structure later so that   is a struct for a single data point. 
 How would I do this using just the database/sql package, or if necessary the database/sql/driver package? 
 
 Look at using  sqlx , which can do this a little more easily than the standard database/sql library: 
 
 You could obviously replace   with a  , but where possible it is better to use a struct if you know the structure of your database. You won't need to undertake any type assertions as you might on an  . 
 
 I haven't used it (yet), but I believe the "common" way to do what you are asking (more or less) is to use  gorp . 
 
 You can create a struct that maintains the map key to the position of the []interface{} slice. By doing this, you do not need to create a predefined struct. For example: 
 
 **Then, you can use it like this:**

 
 **Sample output:**

 
 Please see the full example below or at  fieldbinding : 
 **main.go**

 
 **fieldbinding package:**

 
 
 If you really wan't a map, which is needed in some cases, have a look at dbr, but you need to use the fork (since the pr got rejected in the original repo). The fork seems more up to date anyway: 
 https://github.com/mailru/dbr 
 For info on how to use it: 
 https://github.com/gocraft/dbr/issues/83 
 
 
 output: 
 &map[col1:abc col2:123] 
 