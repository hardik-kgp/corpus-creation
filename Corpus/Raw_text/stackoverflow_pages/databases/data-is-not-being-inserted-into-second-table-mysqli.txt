*** data-is-not-being-inserted-into-second-table-mysqli ***

 I am using the code below that uploads a file and inserts data into the "Image" table using mysqli: 
 
 So for example if I insert 2 images "cat.png" and "dog.png" into "Image" Database table, it will insert it like this: 
 
 (ImageId is an auto increment) 
 Anyway what I want to do is that when a file is uploaded, not only is the data inserted into the table above, but I want to also be able to retrieve the ImageId that was inserted above and place it in the "Image_Question" table below so it would be like this: 
 
 The problem is that it is not inserting any data into the second table "Image_Question", does anyone know why it is not inserting any data? There is no errors in the php file. 
 To upload a file, the user selects a file for the ajax uploader in the "QandATable.php" page, when the user clicks on upload, using AJAX it will go onto the imageupload.php page and does the uploading there. So the problem I have is that no errors will appear as they are on seperate pages. 
 
 First, save the insert ID gained from your record addition (after the $insert->execute): 
 
 Then reference $lastID later. 
 To pull up my comment from below:  
 
 I think it's to do with swapping the handle names around - $mysqli, $insert etc. 
 Hope I read the question correctly... 
 
 Check for   responses in Firebug -> Net tab/Chrome Developer tools -> Network tab . Even if nothing is returned as text, this will help you debug a syntax/semantic error as opposed to a logical error. 
 
 Firstly, what happens when you echo $lastID? Do you get a value output to the screen? 
 If not, we need to fix that first so that $lastID is returning the correct value. 
 Your insert code appears to be correct.  
 
 You should get the Last inserted ID from first table and insert into your 2nd table (Image_Question) .  
 I Don't know the PHP coding, but this task is simple as well.Because this operation will be executed inside DAO class.So, No matter whether it is PHP or JAVA. 
 
 If the second insertion fails, then  
 
 This should tell you what the Error being thrown from the execution of the statement is. 
 Your PHP code seems fine, the error could be due to a Foreign key constraints or any other constraints on your DB Tables. 
 **PS:**
 I think you should validate the type of files you allow to be uploaded so people can't upload *.php or *.js files, this can lead to catastrophic XSS attacks.
Also try to avoid using the same filename as uploaded by the user, you may want to prefix with some random variable, so you can now have  
 
 
 Bind with mysqli works with references to variables.  I dont think your last argument in the second bind command references the way you expect it to. 
 Assign the the last argument $_POST['numQuestion'][$i] to a variable and use this variable in the bind method call.  I am guessing this is either not defined, evaluating to null, and the bind is failing since you can't bind a null as a string or bind cannot use a multidimensional array since itexpects a variable passed as reference. 
 Try this: 
 
 After doing this, if you see entries in the DB with a '' in the QuestionId column,  $_POST['numQuestion'][$i]  isn't being set and you have something wrong elsewhere in your code having nothing to do with DB access. 
 
 Tried to figure out where could be the failure. 
 There is no problem with second query and you get successfully last insert id. I used static values for the variables for second query it worked fine. Even you can hardcode values n check out. 
 Take care of the foll: 
 
 Does bind params get the all the values? 
 
 
 
 
 
 Make use of the check condition to find where its going wrong. 
 
 
 
 
 Though its an ajax you can use Developer Tool of Chome to debug ajax requests. 
 
 
 Press F12 to open the  **Developer Tool**
 in Chrome 
 Go to Network Tab >> Perform action for ajax requests to be sent on your form >> you can find the ajax requests sent >> click on it >> Click on  the "Response" Tab you will find the error if you have
  echoed or the response. So, echo error and print_r() to help debugging 
 
 
 