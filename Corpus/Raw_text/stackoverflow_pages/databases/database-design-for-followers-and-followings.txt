*** database-design-for-followers-and-followings ***

 Dear database experts/programmers: 
 I have a mysql table with users information, such as 
 
 I want to create a feature like 'follow' other users something like twitter. A userA can follow userB, or userB can follow userA, or both can follow each other.
For that purpose, should I create 1 table, lets say followers 
 
 Now I want to find who is following a userA. I'd so sth like:
Select * from followers where user_id = userA
This will select userB and userC. Thats what I need. 
 Now I want to find, which persons userA is following (for example in above table, userA is following userC and userX. Then I should run something like
Select * from followers where follower_id=userA. 
 My question is that, is this database design correct for this problem (considering in mind database redundancy and optimization?) Or there can be better approach than this? Thanks. 
 
 In general, your design is correct.  
 But, if user_id is unique in the table "users", you don't need the column "id" in "users". (A single table containing a unique "id"  and  a unique "user_id" is pretty unusual.) You also don't need the column "id" in the table "followers". 
 Primary key in "followers" should be (user_id, follower_id), and make sure each of those columns has a foreign key referencing "user_id" in "users". 
 
 General tip.  Use integers for ids rather than strings.  There is a significant performance difference.  So drop users.user_id, and rename users.id to users.user_id.  Secondly your followers table should have indexes on user_id and follower_id.  Again there is a significant performance benefit.  I also like the idea of having a unique index on (user_id, follower_id), calling that your primary key, and dropping your id column. 
 
 Here is my design. 
 
 I assumed  userId  -  followerId  combiation is unique. Dates can be useful. For example I'm thinking about to use if user unfollow and follow again in 5 minutes, it doesn't generate notification. I assume user made it by mistake. And I can analyze following statics by date.  
 
 Yes, your design is the usual way of dealing with many-to-many relationships. Search for "modeling many-to-many database" and you will find lots of resources giving you examples of this. 
 Add foreign keys from your relationship table to the users table. 
 If your relationship involves additional information, you would put that as column in your connecting table. Maybe, for instance, the date when one user started following another.  
 A separate surrogate key in the connecting table, like the ID column you have added, can be useful if you will want to have other tables reference your table. 
 