*** database-on-the-fly-with-scripting-languages ***

 I have a set of .csv files that I want to process. It would be far easier to process it with SQL queries. I wonder if there is some way to load a .csv file and use SQL language to look into it with a scripting language like python or ruby. Loading it with something similar to ActiveRecord would be awesome.  
 The problem is that I don't want to have to run a database somewhere prior to running my script. I souldn't have additionnal installations needed outside of the scripting language and some modules. 
 My question is which language and what modules should I use for this task. I looked around and can't find anything that suits my need. Is it even possible? 
 
 There's  , included into python. With it you can create a database ( **on memory**
) and add rows to it, and perform SQL queries. 
 If you want neat ActiveRecord-like functionality you should add an external ORM, like  sqlalchemy . That's a separate download though 
 Quick example using sqlalchemy: 
 
 Now you can query the database, filtering by any field, etc. 
 Suppose you run the code above on this csv: 
 
 That will create and populate a table in memory with fields  ,  ,  . You can then query the table: 
 
 That will automatically create and run a   query and return the correct rows. 
 Another advantage of using sqlalchemy is that, if you decide to use another, more powerful database in the future, you can do so pratically without changing the code. 
 
 Use a DB in a library like  SQLite . 
There are  Python  and  Ruby  versions . 
 Load your CSV into table, there might be modules/libraries to help you here too. Then SQL away. 
 
 Looked at Perl and and Text::CSV and DBI? There are many modules on CPAN to do exactly this. Here is an example (from  HERE ): 
 
 Just type perldoc DBI   and perldoc Text::CSV at the command prompt for more. 
 
 CSV files are not databases--they have no indices--and any SQL simulation you imposed upon them would amount to little more than searching through the entire thing over and over again.  
 
 You could use either scripting language to parse the CSV file and store the data into  SQLite , which just uses a single file for storage. From there you have it in a database and can run queries against it. 
 Alternatively, on windows you can setup an ODBC data source as a CSV file. But it may be difficult to automate this. 
 
 I used nosklo's solution (thanks!) but I already had a primary key (passed in as pk_col) within the column line (first line of csv). So I thought I'd share my modification. I used a ternary.  
 
 
 PHP FlatfileDB available  here  is a very good option if you are building a web app 
 