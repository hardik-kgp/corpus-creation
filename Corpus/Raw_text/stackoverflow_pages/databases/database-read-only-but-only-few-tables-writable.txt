*** database-read-only-but-only-few-tables-writable ***

 I am trying to set the database as read only mode with the following command and it works. 
 
 However, I need to allow only few tables like UserSession, etc to be writable.
 Is it possible? 
 **We have around 500+ tables in the database and we need to allow only 4 tables to be writable.**

 
 You could deny  , ,  to   role like: 
 
 After that, regular users (not sysadmins) will get an error when trying to insert into tab1: 
 
 If this is something that you're comfortable adding to your database, then you could generate the script to change all tables like: 
 
 Make sure you're not denying writes to those 4 tables that still need to be written to. 
 Not sure about your application, but if you dont want to deny permissions on   role, you may look into creating your own role, denying access on that role, and making users part of that role instead. 
 Hope it makes sense. 
 
 My suggestion would be to store the two types of tables in different schemas -- say   and  . 
 When SQL Server introduced schemas in 2005, the  idea  was that schemas are a unit for security and databases are a unit for backup and recovery: 
 
 Microsoft SQL Server 2005 introduced the concept of database object
  schemas. Schemas are analogous to separate namespaces or containers
  used to store database objects. Security permissions apply to schemas,
  making them an important tool for separating and protecting database
  objects based on access rights. 
 
 This would make two different schemas a strong contender for your data architecture. 
 In other words, set the   schema to  .  And put the other tables in the   schema. 
 
 You can archive this via moving the writable tables to a seperate Filegroup and making the other filegroup readonly. 
 **Step One - Create a Different Filegroup**

 
 **Step Two - Add a Data File to The New Filegroup**

 
 **Step Three - Move the tables that you need to be writable, to the new filegroup**

 For this you need to recreate the clustered index of the table on the new filegroup. 
 
 or if your clustered index is  unique : 
 
 Do this for all four tables that you need to be writable. 
 **Step Four - Make the other filegroup readonly**

 
 Here, it is assumed that the other filegroup is the Primary. 
 
 You can use something like this: 
 
 
 You can create new schema on your database, for example  
Now you can give read & write rights for that schema for particular users that should have ability to modify the data.
After that, you can create updatable/insertable views based on the table that you want to be updated 
 
 Only objects in schema   will be writable for users with rights to   schema. 
 
 You can put the 4 tables on a differnt database, and on you database 
put a synonym to the database with the 4 tables you wish to update. 
 
 