*** date-range-overlapping-check-constraint ***

 I've a simple table in sql server 2005 with 3 columns: DateStart, DateEnd and Value. I tried to set a "table check constraint" to avoid inserting overlapping records. For instance if in such table there is a record with DateStart = 2012-01-01 (first January) and DateEnd 2012-01-15 (15th January) than Check constraint must avoid inserting a record with DateStart=2012-01-10 (no care DateEnd), a record with DateEnd=2012-01-10 (no care DateStart) or a record with DateStart 2011-12-10 and DateEnd 2012-02-01. 
 I defined a UDF in such way: 
 
 Then thought check could be this: 
 
 But even with [myTable] empty EXISTS Operator returns true when i insert first record. Where i'm wrog ? Is it possible to set a constraint like this ? 
 BTW I consider  DateStart includes in range and DateEnd excludes from range. 
 
 The CHECK is being executed  **after**
 the row has been inserted, so the range overlaps with itself. 
 You'll need to amend your WHERE to include something like:  . 
 
 BTW, your WHERE expression can be simplified. 
 Ranges  don't  overlap if: 
 
 end of the one range is before the start of the other 
 **or**
 start of the one range is after the end of the other. 
 
 Which could be written in SQL like: 
 
 Negate that to get the ranges that  **do**
 overlap... 
 
 ...which according to  De Morgan's laws  is the same as... 
 
 ...which is the same as: 
 
 So your final WHERE should be: 
 
 [SQL Fiddle] 
 NOTE: to allow ranges to "touch", use   in the starting expression, which would produce '>' in the final expression. 
 
 I'd just like to add onto the Answer of  Branko Dimitrijevic  the case where the DateEnd is null since I currently have such a scenario. 
 This can occur when you're keeping punch in logs and the user is still logged in. 
 
 I don't know how well this query is performance wise, I'm sure there are ways to optimize it. 
 