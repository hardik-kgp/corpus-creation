*** decomposition-into-third-normal-form-3nf ***

 
 How would I perform a lossless-join decomposition of the schema R into Third Normal Form (3NF)?  
 Any help will be appreciated. 
 
 Since A→CGH and Ax→C for any letter x, we can ignore the second of the functional dependencies (AD→C) because it doesn't tell us anything that A→CGH doesn't also tell us. 
 There is nothing that determines B; there is nothing that determines D. 
 Since G determines H, and A determines both G and H, we can separate G→H into a relation (there is a transitive dependency A→G and G→H). 
 
 That leaves F' = { A→CG, DE→F } and R' = (A, B, C, D, E, F, G). 
 The two functional dependencies left can form two more relations: 
 
 That leaves R'' = { A, B, D, E } 
 
 The join of R1, R2, R3, and R4 should leave you with the R you started with for any starting value of R (that satisfies the constraints of the given functional dependencies). 
 
 Overall you should get the min cover first and then add the key ABDE 
 