*** difference-between-non-repeatable-read-vs-dirty-read ***

 From  this  oracle java tutorial:  
 
 A non-repeatable read occurs when transaction A retrieves a row,
  transaction B subsequently updates the row, and transaction A later
  retrieves the same row again. Transaction A retrieves the same row
  twice but sees different data. 
 
 What's the difference between a dirty read and the non-repeatable read? Is it not the same thing? reading the wrong result due to others' updating? 
 Thanks in advance. 
 
 The exact same page explains what a dirty read is: 
 
 Accessing an updated value that has not been committed is considered a dirty read because it is possible for that value to be rolled back to its previous value. If you read a value that is later rolled back, you will have read an invalid value. 
 
 So, non-repeatable read consists in reading two different committed values, whereas dirty read consists in reading a value that hasn't been committed yet. Quite different. 
 
 From  here :- 
 
 **Dirty Reads**
 occur when one transaction reads data written by another,
  uncommitted, transaction. The danger with dirty reads is that the
  other transaction might never commit, leaving the original transaction
  with "dirty" data. 
 **Non Repeatable Reads**
 occur when one transaction attempts to access the
  same data twice and a second transaction modifies the data between the
  first transaction's read attempts. This may cause the first
  transaction to read two different values for the same data, causing
  the original read to be non-repeatable. 
 
 
 A picture is worth 1000 words. 
 
 As I  explained in this article , in the diagram above, the flow of statements goes like this: 
 
 Alice and Bob start two database transactions. 
 Alice modifies the title of a given post record. 
 Bob reads the uncommitted post record. 
 If Alice commits her transaction, everything is fine. But if Alice rolls back, then Bob will see a record version which no longer exists in the database transaction log. 
 
 This anomaly is only permitted by the Read Uncommitted isolation level, and, because of the impact on data integrity, most database systems offer a higher default isolation level. 
 