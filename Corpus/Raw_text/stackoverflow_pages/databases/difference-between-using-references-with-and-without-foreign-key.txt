*** difference-between-using-references-with-and-without-foreign-key ***

 Basically I'd like to know the difference between using REFERENCES with or without a foreign key. 
 I have these 2 examples: 
 
 Example 2: 
 
 What I'm asking here is why does the second example use the FOREIGN KEY keyword while the first one merely uses REFERENCES. 
 Also, the first one seems to reference itself (I think the s in Employees is a mistake) If so, why does it use REFERENCES if it's referencing itself? 
 
 Congratulations! You've stumbled upon one of the weirder quirks of MySQL.  The first syntax does absolutely nothing.  It's  silently , yes,  silently  ignored. 
 
 Furthermore, InnoDB does not recognize or support “inline REFERENCES specifications” (as defined in the SQL standard) where the references are defined as part of the column specification. InnoDB accepts REFERENCES clauses only when specified as part of a separate FOREIGN KEY specification. For other storage engines, MySQL Server parses and ignores foreign key specifications. 
 
 It's a little under halfway down the   documentation. 
 