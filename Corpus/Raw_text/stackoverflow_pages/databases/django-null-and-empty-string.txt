*** django-null-and-empty-string ***

 I find that when I insert nothing of a string   through a form it captures it as an empty string  .  
 However when I insert nothing of an integer   through a form it captures it as  . 
 Is this good practice? Should the string be   as well in the db? 
 
 It is good practice.  If strings were allowed to be  , there would be two ways to have an empty string:   and  .  This gives you multiple values to check against, which is inefficient and messy.  
 This is a  Django convention , but is good practice in all applications, unless you have the need for   to  mean something different  than  . 
 
 I think the string should be NULL too, but depends on your application see  MySQL, better to insert NULL or empty string? .  
 If you want to store NULLs for an empty field, add   to the Field in question. See  https://docs.djangoproject.com/en/dev/ref/models/fields/#null 
 
 It depends on the   attribute.  
 Some fields have it overridden to  . But   keeps it  , thus making  Field._get_default  return empty string as default — even if  . The only way to get   as default is to have   on a field. 
 So if you have field in db that should never be null and not allow blanks to be never ever put in there by for e.g.  . You need to put   — or other validation — in the model   method. 
 