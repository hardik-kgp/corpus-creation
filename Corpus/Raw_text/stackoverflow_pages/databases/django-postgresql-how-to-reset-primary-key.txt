*** django-postgresql-how-to-reset-primary-key ***

 I have been working on an application in Django.   To begin with, for simplicity, I had been using sqlite3 for the database. 
 However, once I moved to PostgreSQL, I've run into a bit of a problem: the primary key does not reset once I clear out a table. 
 This app is a game that is played over a long time period (weeks).  As such, every time a new game starts, all of the data is cleared out of the database and then new, randomized data is added. 
 I'd like to be able to "start over" with primary keys starting at   each time I clean/rebuild the game.    
 The code still works as-is, but integers are a pretty natural way for describing the objects in my game.   I'd like to have each new game start at 1 rather than wherever the last game left off. 
 How can I reset the primary key counter in PostgreSQL?   Keep in mind that I don't need to preserve the data in the table since I am wiping it out anyway. 
 
 In your app directory try this: 
 
 Pipe it into psql like this to actually run the reset: 
 
 Edit: here's an example of the output from this command on one of my tables: 
 
 
 As suggested by "Van Gale" you can get the commands to solve your problem  running  . 
 or 
 You can execute the SQL query generated by   from within python in this way ( using the default database ): 
 
 I tested this code with  **Python3.6**
,  **Django 2.0**
 and  **PostgreSQL 10**
. 
 
 If you perform a raw sql, can do this: 
 
 docs:
 http://www.postgresql.org/docs/8.2/static/sql-altersequence.html 
 
 I view auto-increment primary keys as purely internal identifiers for database records, and I don't like exposing them to users. Granted, it's a common design to use them as part of URLs, but even there slugs or other identifiers feel more appropriate. 
 
 You need to truncate the table.
See  http://www.postgresql.org/docs/8.1/static/sql-truncate.html 
 