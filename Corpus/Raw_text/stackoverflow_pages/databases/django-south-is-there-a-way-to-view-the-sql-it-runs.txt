*** django-south-is-there-a-way-to-view-the-sql-it-runs ***

 Here's what I want to do. 
 Develop a Django project on a development server with a development database.  Run the south migrations as necessary when I change the model. 
 Save the SQL from each migration, and apply those to the production server when I'm ready to deploy. 
 Is such a thing possible with South?  (I'd also be curious what others do to get your development database changes on production when working with Django) 
 
 You can at least inspect the sql generated by doing  . This will not do anything to the database and will show all the sql. I would still make a backup though, better safe than sorry.  
 
 
 
 You could try logging the SQL queries in db.connection.queries, using a management command that calls the migrate with a dry-run option: 
 
 Assuming that south puts everything through the usual db interface that should work.  There will be a few extra selects in there when it queries the history table. 
 You'd put that in a   inside your app and then run it: 
 
 It could probably be easily extended to run this only for specific apps etc 
 
 When I need to see the SQL that South generates for debugging or verification I just add the following logging settings to my local_settings.LOGGING.loggers: 
 
 This is a complete example of the logging setting for South: 
 
 This will output everything including the query that South runs to decide what migrations to run: 
 
 That and setting verbosity to 2 or 3 is usually more than enough to get a clear picture of what's going on. 
 
 I'd either do what Lutger suggested (and maybe write a log parser to strip out  just  the SQL), or I'd run my migration against a test database with logging enabled on the test DB. 
 Of course, if you can run it against the test database, you're just a few steps away from validating the migration.  If it passes, run it again against production. 
 