*** docker-compose-with-multiple-databases ***

 I'm trying to figure out how to implement docker using docker-compose.yml with 2 databases imported from sql dumps. 
 
 The above returns the following: 
 
 Basically, I'm trying to get my whole stack setup in a single docker compose file, create 2 databases and import the respective sql dumps.
Anyone have any suggestions? 
 
 You're trying to bind both database containers to the same port -  . Which is essentially impossible.
You need to change the port-mapping for one of the databases, for example   keeps  , and   should use  . 
 
 **Multiple databases in a single Docker container**

 The answers elsewhere on this page set up a dedicated container for each database, but a single MySQL server is capable of hosting multiple databases. Whether you should  is a different question , but if you want multiple databases in a single container,  here's an example . 
 docker-compose.yml: 
 
 docker/provision/mysql/init/01-databases.sql: 
 
 **How does this work?**

 This works because the  MySQL Docker project  has an  entrypoint script  that will run through all files in the   folder, if it exists. This is useful for setting up databases and initializing their schema and data. In docker-compose, we're using   to map that virtual folder to a folder on the host system. 
 
 Just as an update to anyone else who may look into this.  
 I solved this by removing: 
 
 from  **docker-compose.yml**
 and adding the relevant create database statements directly to the sql file being passed to  **docker-entrypoint-initdb.d**
.  
 At that stage, sql commands are performed under root, so you'll also need to add a statement to grant relevant permissions to the database user you want to use. 
 
 
 
 After  
 Connect to mysql1 
 
 Connect to mysql2 
 
 
 