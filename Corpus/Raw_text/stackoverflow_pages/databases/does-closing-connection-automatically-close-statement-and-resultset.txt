*** does-closing-connection-automatically-close-statement-and-resultset ***

 
 
 
 
 
 This question already has answers here :
                            
                         
 
 
 
 Must JDBC Resultsets and Statements be closed separately although the Connection is closed afterwards? 
 
                                    (12 answers)
                                 
 
 Closed  6 years ago . 
 
 
 I know the safe pattern in Java is to close your ResultSet, Statement, and Connection in order in a finally block.  
 If you close connection and then try to close statement(doesnt throw exception). But if you try to call any method from statement an exception is thrown.  
 I was wondering does closing connection automatically close all the statement objects created out of that connection? 
 Update: 
I am using DatabaseProductVersion: Oracle Database 11g Release 11.1.0.0.0 
DriverName: Oracle JDBC driver 
DriverVersion: 10.2.0.4.0 
 
 Yes it does, Connection.close API says "Releases this Connection object's database and JDBC resources immediately instead of waiting for them to be automatically released". The problem is that applications typically use database connection pools and these may simply return Connection to pool on Connection.close.  
 In any case, it's a good practice to always close ResultSet and Statement explicitly and not to rely on Connection.close.  
 Besides, it's not the best idea to work with JDBC directly. You can use Spring JDBC instead and forget about releasing resources problem. 
 
 The details are ultimately down to each JDBC driver implementation; however, once a connection to the database is closed, everything related to it is disposed at the DB side, so there is nothing much the client side can do but auto-close the objects representing these resources. 
 You never know in what ways the databeses/drivers could be broken (there may be resource leaks, for example), therefore the best practice recommendation is to close everything explicitly. 
 