*** does-sql-server-top-stop-processing-once-it-finds-enough-rows ***

 When you use the SQL Server   clause in a query, does the SQL Server engine stop searching for rows once it has enough to satisfy the   needed to be returned?  
 Consider the following queries (assume some_text_field is unique and not set for full-text indexing): 
 
 and 
 
 The first query would need to search the entire table and return all of the results it found. The way we have it setup though, that query would ever really return one value. So, would using   prevent SQL server from scanning the rest of the table once it has found a match? 
 
 Yes, the query stops once it has found enough rows, and doesn't query the rest of the table(s). 
 Note however that you would probably want to have an index that the database can use for the query. In that case there isn't really any performance difference between getting the first match and getting all one matches. 
 
 Yes. 
 In this case you would get 1 undefined row (as   without   doesn't guarantee any particular result) then it would stop processing (The   iterator in the plan won't request any more rows from child iterators).  
 If there is a blocking operator (such as  ) in the plan before the   operator or parallel operators before the   it may end up doing a lot of work for rows not returned in the final result anyway though. 
 