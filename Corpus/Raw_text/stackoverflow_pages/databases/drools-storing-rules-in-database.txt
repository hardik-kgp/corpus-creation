*** drools-storing-rules-in-database ***

 Currently I store all rules files on the file system (there are lots of versions of them) and load the different versions of them into memory at startup. I would like to change to storing my drools files in a database and was wondering if there is any solution or addon to Drools which facilitates this or should I craft my own? 
 Thanks. 
 
 Yes, it can be done. All you need is the ability to get  .In my case I use my own JPA class   to persist rule source as byte[], but you could use direct JDBC connection to access BLOB/CLOB fields in your DB schema. Important thing is to save also type of stored rule source, it will be needed when building rule packages: 
 
 You could consider using newInputStreamResource method if more applicable in your case: 
 
 or 
 
 Something like that. 
 
 Yes you can do it by creating rule packages(.pkg files). This is the compiled/binary form of textual rules. 
 you can specify the name of the package file while creating the knowledgeBuilder and also how frequently the rules should be updated (say 30 seconds).  
 Use Guvnor to convert the textual rules to .pkg files. keep this file in a folder where the application can access it. 
 Please revert if you need code samples. 
 
 Well, you might want to look at Guvnor as a way of providing rule management. 
 But in short, no, you'll have to write your own. 
 Keep in mind you don't need a file in between, you can read the string representation of the rule out of the db and just compile that. 
 
 I also faced same scenario.
I stored all Rule files in database. 
 When loading rules at application startup, I got the rules from database and stored them in    temporary folder for compiling and putting them in Rule Base. 
 If your rule changes during running application, update the changed rule in Rule Base with the same way. 
 
 Once you get into the business of storing multiple version of rules in a data store you are really looking for the Business Rule Management (BRMS) features of Guvnor (in Drools 5.x) or the Drools-WB/KIE-WB workbenches in Drools 6.0. 
 Those solutions have solved for versioning, storage, and deployment of multiple rule versions out of the box. In short, they will be more robust than a homegrown solution. 
 