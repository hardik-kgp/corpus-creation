*** drop-all-tables-command ***

 What is the command to drop all tables in SQLite?  
 Similarly I'd like to drop all indexes. 
 
 I don't think you can drop all tables in one hit but you can do the following to get the commands: 
 
 The output of this is a script that will drop the tables for you. For indexes, just replace table with index. 
 You can use other clauses in the   section to limit which tables or indexes are selected (such as " " for those starting with "pax_"). 
 You could combine the creation of this script with the running of it in a simple bash (or cmd.exe) script so there's only one command to run. 
 If you don't care about  **any**
 of the information in the DB, I think you can just delete the file it's stored in off the hard disk - that's probably faster. I've never tested this but I can't see why it wouldn't work. 
 
 While it is true that there is no DROP ALL TABLES command you can use the following set of commands. 
 **Note:**
 These commands have the potential to corrupt your database, so make sure you have a backup 
 
 you then want to recover the deleted space with 
 
 and a good test to make sure everything is ok 
 
 
 
 
 I had the same problem with SQLite and Android. Here is my Solution: 
 
 
 I'd like to add to other answers involving dropping tables and not deleting the file, that you can also execute   to reset auto-increment sequences. 
 
 Using pysqlite:  
 
 
 Once you've dropped all the tables (and the indexes will disappear when the table goes) then there's nothing left in a SQLite database as far as I know, although the file doesn't seem to shrink (from a quick test I just did).  
 So deleting the file would seem to be fastest - it should just be recreated when your app tries to access the db file. 
 
 I had this issue in Android and I wrote a method similar to it-west. 
 Because I used   primary keys in my tables, there was a table called  . SQLite would crash when the routine tried to drop that table. I couldn't catch the exception either.  Looking at  https://www.sqlite.org/fileformat.html#internal_schema_objects , I learned that there could be several of these  internal schema  tables that I didn't want to drop. The documentation says that any of these tables have names beginning with  sqlite_  so I wrote this method 
 
 
 I can't say this is the most bulletproof or portable solution, but it works for my testing scripts: 
 
 This bit of code redirects output to a temporary file, constructs the 'drop table' commands that I want to run (sending the commands to the temp file), sets output back to standard out, then executes the commands from the file, and finally removes the file. 
 
 Or at a shell prompt, in just two lines, without a named temporary file, assuming $db is the SQLite database name: 
 
 