*** executing-non-database-actions-in-a-transaction-in-slick-3 ***

 I'm having trouble understanding the new Slick   API, which does not seem to have a lot of examples in the docs. I am using Slick 3.0.0, and I need to execute some DB actions and also some calculations with the data received from the database, but all of those actions have to be done inside a single transaction. I'm trying to do the following: 
 
 Execute a query to database (the   table). 
 Do some aggregations and filtering of the query results (this calculation can't be done on the database). 
 Execute another query, based on the calculations from step 2 (the   table â€” due to some limitations, this query has to be in raw SQL). 
 Join data from step 2 and 3 in memory. 
 
 I want the queries from step 1 and 3 to be executed inside a transaction, as the data from their result sets has to be consistent. 
 I've tried to do this in a monadic join style. Here's an overly simplified version of my code, but I can't even get it to compile: 
 
 
 The first row of   comprehension selects the data from the   table. 
 The second row of   comprehension is supposed to do some grouping and slicing of the results, resulting in a  
 The third row of   comprehension has to execute a set of queries for every element from the previous step, in particular, it has to execute a single SQL query for each of the values inside  . So in the third row I build a sequence of  s. 
 The   clause  s   from the second step and   from the third step. 
 
 This construction, however, does not work and gives two compile time errors: 
 
 I've tried to wrap the second line in a   by using  , which is supposed to lift a constant value into the   monad: 
 
 But in this code the   variable is inferred to be  , and the code does not compile because of that. 
 
 Try it this way : 
 
 