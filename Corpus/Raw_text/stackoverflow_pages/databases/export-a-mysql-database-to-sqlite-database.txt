*** export-a-mysql-database-to-sqlite-database ***

 Please help me with exporting a MySQL database into a SQLite database. 
 
 There's a  fantastic Linux shell script on Github  that converts Mysql to an Sqlite3 file. You need both mysqldump and sqlite3 installed on your server. Works great. 
 
 The answer by @user2111698 edited by @quassy works as promised. Since I do this frequently I put their instructions into a bash script: 
 
 A gist with detailed comments can be found at  https://gist.github.com/grfiv/b79ace3656113bcfbd9b7c7da8e9ae8d 
 
 mysql2sqlite.sh mentioned in the top post doesn't cope well with PRIMARY KEY lines, it doesn't write the trailing   to complete the CREATE statement. 
 This is what I did.  I ran the mysql dump as: 
 
 I then used grep to remove PRIMARY KEY and KEY: 
 
 I then used an editor to fix the file.  When the keys are removed you end up with a CREATE statement that looks like: 
 
 That trailing   has to be removed.  In vi this expression matches them, ,$\n) 
 Then you need to change all   to  
 Then you can do the import: 
 
 And that's it. I haven't found a single program that worked for me. I hope this helps someone. 
 
 I manualy created the table structure in sqlite database. 
 Than I uploaded the data with teh following command: 
 
 I had to use  sed  to fix a different apex encoding in the two databases 
 
 There is a fantastic, lightweight tool called SQLite Database Browser that allows you to create and edit sqlite databases. I used it to craete databases for Android apps. You can run SQL statements against it to load up the data so if you export the data from a mySQL database you can just import it using this tool. Here's a link:  http://sqlitebrowser.sourceforge.net/ 
 
 Personally I like the simple usage of mysqldump, yet some adjustments are need (depending on your art with Unix and what you want to do). 
 Ex. for just one table (prods) with PK: 
 
 For more complex things, probably better to write a wrapper, or then, use the already mentioned   fantastic awk Linux shell script on Gist  .   
 
 export the data with  
 
 and import the data with  
 
 you may need -u (user) and -p (password) options 
 