*** find-sqlite-column-names-in-empty-table ***

 For kicks I'm writing a "schema documentation" tool that generates a description of the tables and relationships in a database.  I'm currently shimming it to work with SQLite. 
 I've managed to extract the names of all the tables in a SQLite database via a query on the   table.  For each table name, I then fire off a simple 
 
 query, then use the   and   APIs to collect the  column names, which I further feed to   to get additional info.  Simple enough, right? 
 The problem is that it only works for tables that are not empty.  That is, the   APIs are only valid if   has returned  , which is not the case for empty tables. 
 So the question is, how can I discover column names for empty tables?  Or, more generally, is there a better way to get this type of schema info in SQLite? 
 I feel like there must be another hidden   table lurking somewhere containing this info, but so far have not been able to find it.  
 
 
 
 Execute the query: 
 
 Documentation 
 
  doesn't work in HTML5 SQLite. 
 Here is a small HTML5 SQLite JavaScript Snippet which gets the column names from your_table_name even if its empty. Hope its helpful. 
 
 
 Execute this query  
 
 You can try it at  online sqlite engine 
 
 The   statement suggested by @pragmanatu works fine through any programmatic interface, too.  Alternatively, the   column of   has the   statement   that describes the table (but, you'd have to parse that, so I think   is more... pragmatic;-). 
 
 If you are suing SQLite 3.8.3 or later (supports the WITH clause), this recursive query should work for basic tables. On CTAS, YMMV. 
 
 