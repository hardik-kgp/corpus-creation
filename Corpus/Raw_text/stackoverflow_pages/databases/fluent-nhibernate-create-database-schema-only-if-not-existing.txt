*** fluent-nhibernate-create-database-schema-only-if-not-existing ***

 I have an application where I use Fluent Nhibernate to create my database. This far I've been recreating the database schema each time. The code that does this is this:  
 
 Note the " ". This is what I'd like to do. I'd like to create the schema only if it actually doesn't already exist. And in the next step - I'd like to update 
it to be created if it isn't up to date.  
 How do I achieve this? I am expecting a  , but I can't see anything like this. I see some possibilities of a hacky solution, but what is the typical recommended way of handling this?  
 
 You can just use   instead, it will update the schema if it exists and create it if it does not: 
 
 One caveat:   does not do destructive updates (dropping tables, columns, etc.). It will only add them. 
 
 **UPDATED**
 (thanks dotjoe) 
 Hbm2ddl is only capable of doing a schema diff and only updating what has changed with the SchemaUpdate class. However this class is pretty rudimentary in that it only takes a look at the current entities and how the schema differs. If significant changes have been made (ie entities removed or link tables removed) it won't be able to figure that out. 
 On an earlier project we used hbm2ddl, however we've since moved onto use Fluent Migrator. I would say your best bet is to use a migration tool, like Fluent Migrator or Migrator.NET. 
 http://github.com/schambers/fluentmigrator/ 
 http://code.google.com/p/migratordotnet/ 
 