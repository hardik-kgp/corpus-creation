*** get-table-schema-in-redshift ***

 Hello I am trying to retrieve the schema of an existing table. I am mysql developer and am trying to work with amazon redshift. How can I export the schema of an existing table. In mysql we can use the show create table command. 
 
 
 If you want to get the table structure with create statement, constraints and triggers, you can use pg_dump utility 
 
 This will output the create syntax with all the constraints. Hope this will help you. 
 
 This query will give you the complete schema definition including the Redshift specific attributes distribution type/key, sort key, primary key, and column encodings in the form of a create statement as well as providing an alter table statement that sets the owner to the current owner.  The only thing it can't tell you are foreign keys.  I'm working on the latter, but there's a current privilege issue in RS that prevents us from querying the right tables.  This query could use some tuning, but I haven't had time or the need to work it further. 
 
 
 Recently I wrote a python script to clone table schemas between redshift clusters. If you only want the columns and column types of a table, you can do it via: 
 
 But if you need the compression types and distkey/sortkeys, you need to query another table: 
 
 
 I did not find any complete solutions out there.
And wrote a python script: 
 https://github.com/cxmcc/redshift_show_create_table 
 It will work like pg_dump, plus dealing with basic redshift features, SORTKEY/DISTKEY/DISTSTYLES etc. 
 
 In Postgres, you'd query the catalog. 
 From with   use the shorthands to a variety of commands whose list you'll get by using   (for help). Therefor, either of: 
 
 For use in an app, you'll need to learn the relevant queries involved. It's relatively straightforward by running   (for echo hidden queries) instead of plain  . 
 If you need the precise create table statement, see @Anant answer. 
 
 As show table doesn't work on Redshift: 
 
 We can use pg_table_def table to get the schema out: 
 
 NOTE: If the schema is not on the search path, add it to search path using: 
 
 
 One easy way to do this is to use the utility provided by AWS. All you need to do is to create the view in your database and then query that view to get any table ddl. The advantage to use this view is that it will give you the sortkey and distkey as well which was used in original create table command. 
 https://github.com/awslabs/amazon-redshift-utils/blob/master/src/AdminViews/v_generate_tbl_ddl.sql 
 Once the view is created, to get the the ddl of any table. You need to query like this -  
 
 Note: Admin schema might not be already there in your cluster. So you can create this view in public schema. 
 
 Are you needing to retrieve it programatically or from the psql prompt? 
 In psql use :   \d+  tablename 
 Programatically, you can query the ANSI standard INFORMATION_SCHEMA views documented here: 
 
 The INFORMATION_SCHEMA.TABLES and INFORMATION_SCHEMA.COLUMNS views should have what you need. 
 
 You can use admin view provided by AWS Redshift -  https://github.com/awslabs/amazon-redshift-utils/blob/master/src/AdminViews/v_generate_tbl_ddl.sql 
 once you have created the view you can get schema creation script by running: 
 
 
 The below command will work: 
 
 