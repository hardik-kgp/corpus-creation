*** get-the-last-inserted-id-using-laravel-eloquent ***

 I'm currently using the below code to insert data in a table: 
 
 I want to return the last ID inserted but I don't know how to get it. 
 Kind regards! 
 
 After  ,   should be the last id inserted. 
 
 For updated laravel version try this 
 
 
 xdazz  is right in this case, but for the benefit of future visitors who might be using   or  , there is another way: 
 
 
 For anyone who also likes how Jeffrey Way uses   in his Laracasts 5 tutorials, where he just sends the Request straight into the database without explicitly setting each field in the controller, and using the model's   for mass assignment (very important, for anyone new and using this way): I read a lot of people using   but unfortunately this does not respect the   whitelist so you'll get errors with it trying to insert _token and anything that isn't a field in the database, end up setting things you want to filter, etc. That bummed me out, because I want to use mass assignment and overall write less code when possible. Fortunately Eloquent's   method  just wraps the save method (what @xdazz cited above), so you can still pull the last created ID... 
 
 
 If the table has an auto-incrementing id, use the insertGetId method to insert a record and then retrieve the ID: 
 
 Refer:  https://laravel.com/docs/5.1/queries#inserts 
 
 **** For Laravel **** 
 Firstly create an object, Then set attributes value for that object, Then save the object record, and then get the last inserted id. such as 
 
 // Now Getting The Last inserted id 
 
 
 In laravel 5: you can do this:     
 
 
 This worked for me in laravel 4.2 
 
 
 Here's an example: 
 
 
 **Here is how we can get last inserted id in Laravel 4**
  
 
 
 Use   to insert and get inserted   at the same time  
 From  doc 
 
 If the table has an auto-incrementing id, use the insertGetId method
  to insert a record and then retrieve the ID: 
 
 By  
 
 By  
 
 For more details :  https://laravel.com/docs/5.5/queries#inserts 
 
 After saving model, the initialized instance has the id: 
 
 
 For insert() 
 
 
 $data1 = array(
              'company_id'    => $company_id,
              'branch_id'       => $branch_id
          ); 
 
 
 
 In Laravel 5.2 i would make it as clean as possible: 
 
 
 After 
 
  will give you the inserted id, 
 **Note:**
 If your autoincrement column name is  **sno**
 then you should use
  and not  
 
 After  **saving**
 a record in database, you can access  **id**
 by  
 
 
 For Laravel, If you insert a new record and call   this function executes an INSERT query and returns the primary key value (i.e.  id  by default). 
 You can use following code: 
 
 
 
 
 You can do this: 
 
 
 For get last inserted id in database
You can use 
 
 here $lastInsertedId will gives you last inserted auto increment id. 
 
 The shortest way is probably a call of the   on the model: 
 
 
 **Using Eloquent Model**
  
 
 **Using Query Builder**

 
 
 After Saving  . all data is pushed inside  . As this is an object and the current row is just saved recently inside  . so last   will be found inside  .  
 Response code will be: 
 
 
 Although this question is a bit dated. My quick and dirty solution would look like this: 
 
 But I guess it's vulnerable to race conditions on highly frequented databases. 
 
 Optional method will be: 
 
 Source from Laravel 5.8 version 
 
 You can get last inserted id with same object you call save method;  
 
 So you can simply write:  
 
 
 
 
 **Using Eloquent Model**
  
 
 **Using Query Builder**

 
 For more methods to get Last Inserted Row id in Laravel :  http://phpnotebook.com/95-laravel/127-3-methods-to-get-last-inserted-row-id-in-laravel 
 
 You can use   constructor variable to achieve "Last Inserted Id Using Laravel Eloquent" (without adding any extra column) in current function or controller. 
 
 