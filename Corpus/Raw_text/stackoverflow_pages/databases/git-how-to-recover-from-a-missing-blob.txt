*** git-how-to-recover-from-a-missing-blob ***

 I'm running git 1.6.4.2.  Garbage collection is failing saying "error: unable to find  ". 
 I've managed to determine that the missing object is a blob, and there is no way that I can get the blob file back.  It seems that 2 scripts that run "git add" and "git commit" were running at the same time and managed to interfere with each other so that one committed a newer version of a file than the other, and the older version's blob vanished. 
 So what I'm trying to do now is roll back my repository to take out the commit that refers to the tree that refers to the missing blob. 
 I know which branch the commit was on, so I ran "git reset" on it to rewind to the parent of the duff commit.  And I know that the branch was merged somewhere else, so I rewound that branch too.  So as far as I know, the duff commit/tree/blob are not referenced by anything.  But if I run git prune --expire=now followed by git gc then I still get an error about the missing object. 
 So my question is this: how can I query the git database to find every tree object that contains the duff blob id?  And how do I then find out what is causing git prune to retain it? 
 Tricky!! 
 Thanks
Kevin 
 
 After a bit more digging it turns out that my question is answered here:  How to delete a blob from git repo  -   wasn't pruning the stuff I'd wound back because the reflog was still referring to it.  Running 
 
 fixed that.  Also, the referenced post gives a mechanism for running   on every commit to find the referenced blob. 
 
 I had the same problem (missing blob) and the solution with 
 
 didn't do the trick.
I found my solution here :  https://git.wiki.kernel.org/index.php/GitFaq#How_to_fix_a_broken_repository.3F 
 This simple line 
 
 Fixed the missing blob. 
 Hope this helps. 
 