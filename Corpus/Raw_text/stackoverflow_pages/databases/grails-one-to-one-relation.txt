*** grails-one-to-one-relation ***

 I tried to define one to one relation in 2 different way: 
Grails 2.0.3 
 Case 1: 
 
 Case 2: 
 
 looks similar, and both provide one to one bidirectional mapping. Unfortunately DB has different structure in both cases.  
 Case 1:
 
 Case 2:
 
 Why once Car and once Engine keeps link to second table. 
 Where is my problem? When I am looking at the code, from DDD perspective, both cases suggest that Car class is more important and Car aggregates Engine. Unfortunately when I look from DB side on case 2 I would rather said that it is opposite - Engine aggregate Car. Of course I can use first approach, but most of publication I saw about grails, present second way for defining relation. Maybe I misunderstood something and I use hasOne in wrong way?  
 
 The  documentation on   states that using this creates a bi-directional one-to-one relationship where the foreign key is on the child.  
 The   means that actions performed on the parent (eg save and update) will be cascaded by hibernate to the child. 
 So if you want the foreign key to be on   use   on  . 
 If you want the foreign key to be on   then use   on   .  
 In both cases use   on  
 
 I think you should try to make this aproach. 
 
 I think that will make it. You can read it here: 
 
 By default the address association would map to a foreign key column
  called address_id. 
 
 http://grails.org/doc/latest/guide/GORM.html 
 on the  **Many-to-One/One-to-One Mappings**

 
 Hope it helps :) 
 