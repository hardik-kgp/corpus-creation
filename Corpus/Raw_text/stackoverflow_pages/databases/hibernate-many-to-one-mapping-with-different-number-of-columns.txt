*** hibernate-many-to-one-mapping-with-different-number-of-columns ***

 Hi I have 2 tables as below 
 **Table1:**

 

    +-------------------+
    | ID  LOB col1 col2 |
    +-------------------+

 
 Primary Key (ID and LOB) 
 **Table2:**

 

    +-----------------+
    | SK ID col3 col4 |
    +-----------------+

 
 Primary Key (SK) 
 I  **need to give a many to one relation from table 2 to table1**
, since  **table1**
 has  **compositePrimaryKey(ID and LOB)**
 but  **table2**
 does not have  **any column related to LOB**
. I am unable to provide the Mapping.
Please help on this. 
 **EDIT**
 I have tried hibernate mapping for Table2: 
 
 The above is not working. While fetching a record it tries to fetch LOB code from table2 which is not at all exist in Table1 
 
 Assuming   is a FK to   and there are no   entries having the same ID, you could write the mapping as follows: 
 
 If there are more   rows with the same ID, the mapping will fail because a Child would then be matched to multiple Parents. 
 So, for a proper   association you need a FK to a Parent column that's unique. 
 
 Hibernate   does not have to correspond to the real database primary key (although it is desirable that they match, of course). 
 If   is a unique column in  , then map Hibernate id only to it, and leave   as just an ordinary field. 
 If   is not a unique column, then your many-to-one will not work properly anyway, because there would be multiple matching rows in the referenced table. 
 
 
 