*** hibernate-spring-jps-isolation-custom-isolation-not-supported ***

 I have been trying this: 
 
 on my service methods, but spring complains saying: 
 
 How can I resolve this? 
 
 This implementation is not account for the clean up stuff, I have implemented a similar solution but that accounts for the clean up as well.
That solution can be found here:
 http://shahzad-mughal.blogspot.com/2012/04/spring-jpa-hibernate-support-for-custom.html 
 
 No custom isolation levels are supported by JPA. You can extend the   class and override connection-related methods so that you can set custom isolation levels on the  
 Here's something that I've written, but have not tested yet: 
 
 And you define this as a property of your  : 
 
 
 Drawing on Bozho's answer and considering the comments thereon, The following seems to be a complete (Hibernate 4 compatible) solution addressing the need reset the connection. Best I can tell, the spring layer will guarantee call the cleanupTransaction method, but if that isn't actually guaranteed, this may need to be re-thought due to the potential for a permGen memory leak and post request side effects on the connection object. 
 
 
 @Shahzad Mughal I left you two points ;-) Your answer should be accepted as the correct one. The accepted answer will originate the below issue randomly miss leading developers to think there are bugs with mysql driver for example: 
 
 WARN [org.hibernate.util.JDBCExceptionReporter] - SQL Error: 0,
  SQLState: S1009 ERROR [org.hibernate.util.JDBCExceptionReporter] -
  Connection is read-only. Queries leading to data modification are not
  allowed 
 
 You can read more about our adventure with this issue at  http://thinkinginsoftware.blogspot.com/2013/10/connection-is-read-only-queries-leading.html 
 
 When specifying the  JpaTransactionManager  did you specify a JPADialect? By default I think it uses the  DefaultJpaDialect  and you need the  HibernateJpaDialect . 
 
 You can also wrap the "datasource" bean with the "IsolationLevelDataSourceAdapter", by simply doing this: 
 
 where "_dataSource" is a ref to an actual datasource. 
 