*** how-can-i-create-a-sqlite3-database-file-using-a-sql-command-file ***

 I have a file which contains some SQL commands, something that looks like this: 
 
 I'd like to use these commands to create an SQLite3 database file in order to use it easily with Python. 
 How do I do that on Ubuntu? 
 
 That isn't quite an SQL file, that contains a bunch of MySQL-specific stuff some of which SQLite will accept and some it won't. We'll start at the top. 
 You don't need   or   with SQLite. If you want to create a database just name it when you run   from the command line: 
 
 If   exists then it will be used, if it doesn't exist then it will be created. So   and   are implied by how you run  . You might need to use a different extension depending on what Python wants to see. 
 The backticks for quoting are a MySQLism, double quotes are the standard quoting mechanism for identifiers. Lucky for you, SQLite will accept them so you can leave them alone. 
 SQLite won't know what   means, you'll have to remove the   before SQLite will accept it. SQLite also won't know what   means so you'll have to remove that as well. 
 You'll probably run into other things that MySQL is happy with but SQLite is not. You'll have to try it and fix it and try it and fix it until it works. Or try to find a tool that can translate between databases for you, I always do these sorts of things by hand or using one-off scripts so I don't know of any tools that can help you. 
 
 Basically above commands are for mysql or other database (most of these have to be tweaked in order to work with sqlite. Sqlite stores database in the form of file. Basically when you start sqlite it will create a file (if not present). You can create or open a database by typing  
 
 on command line. This statement create or open database named "db" 
 