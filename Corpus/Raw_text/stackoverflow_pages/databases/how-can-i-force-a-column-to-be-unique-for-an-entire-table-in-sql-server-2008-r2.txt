*** how-can-i-force-a-column-to-be-unique-for-an-entire-table-in-sql-server-2008-r2 ***

 I have a table with a   field.  I want to ensure that no two rows have the same "Description," but I can't make Description into my identity column (my ID column is an int).  
 Is it safe to set   as a second primary key (in addition to my ID which is already a primary key)? 
 
 Add a Unique index to the Description column. 
 Using Sql Server Management Studio right click on the table and choose Design. Then right click on a column and choose "Indexes/keys". You will be prompted with the following window 
 
 Click on Add on the bottom left and then specify properties for your index. If you want to use a DDL script then use something like this 
 
 
 There is no such thing as a 'secondary primary key'. There is one primary key per table. 
 Create a  UNIQUE constraint  on the   column (highly unusual thing to do, BTW. For example, It is more usual to create a unique index on   rather than a  ) or if you have null values in the   column create a  Filtered index  (SQL Server 2008 onwards) 
 
 
 There is another way to do this with the SSMS GUI if you prefer: 
 I've replaced the   column with the name   for the sake of the example. 
 
 Right click "Indexes" under your table in the SSMS Solution Explorer and click "New Index..." (I know you are looking to create a contstraint, not an index, but this is exactly what the   SQL script does. 
 
 
 
 Give new index a name (e.g. "UQ_MyUniqueColumn"), check "Unique", and click "Add..." 
 
 
 
 Check your column in the next window 
 
 
 
 Click OK in both windows 
 
 