*** how-can-i-migrate-my-database-with-rails-to-the-first-revision-without-dropping ***

 I have a database set up for my Rails installation and some migrations set up. I would like to be able to reset my database back down to having no tables/constraints/etc., but can't find a reasonable way to do this without knowing the number of migrations or the timestamp of the first migration. Here are my options as I see them: 
 
 
  where 20090701154839 is the timestamp associated with the first migration 
  where there have been 15 migrations 
 
 The problem with   is that it drops the database first (it does  ,  , then  ). 
 The problem with   is that I don't want to encode the VERSION of the beginning. 
 The problem with   is that I don't know the number of steps it is back to the beginning. 
 What are my options? 
 
 
 It works even if you're using the newer timestamped migration files. 
 Update: I just tested this on Rails 3.2.1, and it still works. It runs the "down" part of all the migrations known to  . I have no idea if it worked on 3.1 or not, but the comment below indicates that this feature was broken during that time. 
 
 In addition to jdl's (correct) solution above, another hack-y way to acheive this is to do  , where   is a large number, larger than the number of migrations you'll ever have. It will rollback as far as it can up to   times, or however many times you put as the  . 
 
 It's moderately hackish, but you could do a query to find the first VERSION in schema_migrations and then call rake db:migrate:down to get that VERSION (I'm assuming you want to package up a "reset" script for your app). 
 That will, of course, require that the down methods on all your migrations work properly. 
 