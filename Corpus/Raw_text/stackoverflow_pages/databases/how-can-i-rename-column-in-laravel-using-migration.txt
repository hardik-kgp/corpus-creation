*** how-can-i-rename-column-in-laravel-using-migration ***

 I have columns as mentioned bellow:  
 
 **I have made seeder to stnk table**

 Now I want to rename   to  . 
I've added a  **"doctrine / dbal"**
 in the  **"composer"**
 and do a  . 
 I've made migration  .  
Then I've added new method to rename_column: 
 
 And then I've tried to run command   but I got error as mentioned bellow: 
 
 
 You need to create another migration file - and place it in there: 
 Run 
 
 Then inside the new migration file place: 
 
 
 first thing you want to do is to create your migration file. 
 Type in your command line 
 
 After creating the file. Open the new created migration file in your app folder under database/migrations. 
 In your up method insert this: 
 
 and in your down method: 
 
 then in your  command line just type 
 
 Then wollah! you have just renamed id to id_stnk. 
BTW you can use 
 
 to undo the changes. Goodluck 
 
 Renaming Columns  (Laravel 5.x) 
 To rename a column, you may use the renameColumn method on the Schema builder. *Before renaming a column, be sure to add the  **doctrine/dbal**
 dependency to your composer.json file.* 
 Or you can simply required the package using composer... 
 
 **Source:**
  https://laravel.com/docs/5.0/schema#renaming-columns 
 **Note:**
 Use  **make:migration**
 and not  migrate:make  for Laravel 5.x 
 
 Throwing my $0.02 in here since none of the answers worked, but did send me on the right path. What happened was that a previous foreign constraint was throwing the error. Obvious when you think about it. 
 So in your new migration's   method, first drop that original constraint, rename the column, then add the constraint again with the new column name. In the   method, you do the exact opposite so that it's back to the sold setting. 
 
 Hope this saves someone some time in the future! 
 
 Follow these steps, respectively for rename column migration file. 
 **1-**
 Is there Doctrine/dbal library in your project. If you don't have run the command first 
 
 **2-**
 create update migration file for update old migration file. 
Warning (need to have the same name) 
 
 for example my old migration file name: create_users_table
update file name should : update_users_table 
 **3-**
 update_oldNameFile_table.php 
 
 'from' my old column name and 'to' my new column name  
 **4-**
 Finally run the migrate command 
 
 **Source link:**
  laravel document 
 
 The above answer is great or if it will not hurt you, just rollback the migration and change the name and run migration again.  
 
 