*** how-can-i-stop-redis-server ***

 I apparently have a   instance running because when I try to start a new server by entering  , I'm greeted with the following: 
 
 I can't figure out how to stop this server and start a new one. 
 Is there any command I can append to   when I'm typing in the CLI? 
 My OS is Ubuntu 10.04. 
 
 Either connect to node instance and use  shutdown  command or if you are on ubuntu you can try to restart redis server through init.d: 
 
 or stop/start it: 
 
 On Mac 
 
 
 A cleaner, more reliable way is to go into redis-cli and then type  
 In redis-cli, type   and you will see this near the bottom of the list: 
 
 SHUTDOWN -   summary: Synchronously save the dataset to disk and then
  shut down the server   since: 0.07 
 
 And if you have a redis-server instance running in a terminal, you'll see this: 
 
 
  is most effective. The accepted answer does not work for me (OSX Lion). Thanks, @JesseBuesking. 
 
 For OSX, I created the following aliases for starting and stopping   (installed with Homebrew): 
 
 This has worked great for local development! 
 Homebrew now has   that can be used to start, stop and restart services.  homebrew-services 
  is automatically installed when run.  
 
 If you use  , then it will not start it at login (nor boot).   will start the   service and add it at login and boot. 
 
 Type   in the CLI 
 or 
 if your don't care about your data in memory, you may also type   to force shutdown the server. 
 
 Try  . You may also use   to find the name and pid of your server, and then kill it with  . 
 
 Option 1: go to redis installation directory and navigate to   , in my case :  
 
 where 6379 is the default port. 
 Option 2: find redis process and kill 
 
 And Then initiate kill: 
 
 I'm using Centos 6.7 , x86_64 
 hope it helps 
 
 Another way could be: 
 
 Works on *NIX & OSX 
 
 stop the redis server type in terminal with root user 
 
 the message will be display after stop the redis-server 
 
 if you want to start the redis-server type 
 
 if you want to restart the server type 
 
 
 MacOSX - It Worked :) 
 Step 1 : Find the previously Running Redis Server 
 
 Step 2 : Kill the specific process by finding PID (Process ID) - Redis Sever 
 
 
 If you know on what port it would be running(by default it would be 6379), you can use below command to get the pid of the process using that port and then can execute kill command for the same pid. 
 
 the above command will give you pid. 
 kill  ; 
 This would shutdown your server.   
 
 Usually this problem arises after I shut down my computer ( or leaving running ) an irregular way.. I believe the port gets stuck open, while the process stops but continues to be bound to the previous port. 
 9/10 times the fix can be: 
 
 Good to go.  
 
 systemd, ubuntu 16.04: 
 
 
 In my case it was: 
 
 To find out what is your service name, you can run: 
 
 And it will show you every Redis files in your system. 
 
 Another way could be : 
 
 
 Following worked for me on MAC 
 
 
 If you know on which port(default:6379) your redis server is running you can go with  **option 1**
 or you can check your redis process and you can kill with  **option 2**

 **option 1:**
Kill process on  port: 
 
 **option 2:**

Find the previously Running Redis Server: 
 
 Kill the specific process by finding PID (Process ID) - Redis Sever 
 
 Now start your redis server with  
 
 
 I don't know specifically for redis, but for servers in general: 
 What OS or distribution?  Often there will be a stop or /etc/init.d/... command that will be able to look up the existing pid in a pid file. 
 You can look up what process is already bound to the port with   (linux options; other netstat flavors will vary) and signal it to stop.  I would  not  use   on a running server unless there really is no other signal or method to shut it down. 
 
 The commands below works for me on  **Ubuntu Server**

 
 
 On MacOSX,  
 This is what worked for me 
 
 
 One thing to check if the redis commands are not working for you is if your redis-server.pid is actually being created.  You specify the location of where this file is in  
 
 and it should have a section that looks something like this:  
 
 Check the location and permissions of the PIDFile directory (in my case, '/run/redis').  I was trying to restart the service logged in as deploy but the directory permissions were listed as  
 
 If you need a refresher on linux permissions,  check this out .   But the problem was I was executing the restart as my deploy user which the permissions above are r-x, not allowing my user to write to the PIDFile directory. 
 Once I realized that, I logged in using root, reran the restart command on the redis ( ) and everything worked.  That was a headache but hopefully this saves someone a little time. 
 
 If you are running redis in a docker container, none of the present answers will help. You have to stop redis container. Otherwise, redis process will keep respawning. 
 
 
 if you did  **make install**
 (e.g ubuntu) while installing  redis  then you can do: 
 
 as pointed by  **@yojimbo87**
 :) 
 