*** how-can-upgrade-mysql-5-5-40-to-mysql-5-7 ***

 How can I Upgrade MySQL version 
 Current MySQL Version:  5.5.40  
 Target MySQL Version:  MySQL  5.7  
 OS: CentOS release 6.5 (Final) 
 
 The upgrade path is MySQL 5.5 -> MySQL 5.6 -> MySQL 5.7 
 See  https://dev.mysql.com/doc/refman/5.7/en/upgrading.html 
 
 Probably the quickest way is to dump your older DB version with  **mysqldump**
 and restore it into 5.7 fresh DB. 
 How smooth the process goes, depends on how many dropped features in 5.7 you're using in 5.5. 
 In my case, the only feature, that was dropped in 5.7 was  **timestamp default**
 '0000-00-00 00:00:00'
The fix for that was to run  **sed**
 on dump file and replace ''0000-00-00 00:00:00' with CURRENT_TIMESTAMP 
 sed -i.bu 's/'\''0000-00-00 00:00:00'\''/CURRENT_TIMESTAMP/g' fixed_dumo.sql 
 Afterthat, the  **fixed_dump.sql**
 was imported into fresh 5.7 DB and it worked smoothly.
I hope this helps. 
 
 step 1 : take a backup 
 
 step 2 : remove old mysql 
 
 step 3 : install new version of mysql 5.6 
 
 for 5.7 
 
 step 4 : restore your data 
 mysql -u root -p < dump.sql 
 
 Yes. From a "logical upgrade" you can migrate from 5.5 for 5.7. This way: 5.5 -> 5.6 -> 5.7, is necessary only for "in place" upgrade, with data folder.  
 See:   https://www.percona.com/forums/questions-discussions/mysql-and-percona-server/43956-what-is-the-preferred-mysql-upgrade-path-5-5-to-5-7 
 
 I might be late to the party, but easy and fast solution without or minimal downtime could be AWS Database-Migration-Service, which can be used to upgrade your database to a different version as well as to some other server or RDS.  
 I have tried this and converted MySQL5.5 to MySQL5.7 on production without any downtime.
Here is a demo for the same -  How To Migrate MySQL5.5 to MySQL5.7 
 Steps: 
 
 Set your current MySQL as master 
 Create a new instance/server with MySQL5.7 on it with required users 
 Got to AWS DatabaseMigrationService (DMS) and create a Replication
instance 
 After creating replication instance it will ask to fill up connection
detail to source(MySQL5.5) and target(MySQL5.7) databases. 
 Create task in DMS, which will be the logic on what basis you want to
migrate the data (particular database or particular table) 
 Start the task 
 When task is completed and data is in sync, just switch the DNS entry
pointing to MySQL5.5 to MySQL5.7 
 
 
 Fallow Simple Steps for Upgrade Mysql Version 5.5 to 5.7 . 
 
 wget  http://dev.mysql.com/get/mysql-apt-config_0.8.0-1_all.deb 
 sudo dpkg -i mysql-apt-config_0.8.0-1_all.deb 
 sudo apt-get update 
 sudo apt-get install mysql-server 
 
 
 After a bunch of failed attempts I have concluded it down to: 
 
 To upgrade from 5.5, go to 5.6 first and then to 5.7 
 Save the datafolders and install a fresh installation of 5.7 
 
 Both need the apt-config mentioned in all above comments. 
 The kicker is to run  
 
 in Mysql, 
 **step 1:**
 fetch version, 
 
 **step 2:**
  
 
 **step 3:**

    check available mysql repo,
    yum repolist all | grep mysql 
 will get something like below, 
 
 Its preferred to upgrade one by one,
so first upgrade into  
 **step 4:**
 first enable to mysql 5.6 and disable mysql 5.5 and 5.7 
 
 **step 5:**
 before upgrade stop service, 
 
 **step 6:**
 Lets ready to upgrade, 
 
 you are successfully upgrade into mysql5.6 
 now repeat  **step 4 to 6**
 to upgrade into 5.7 
 
 and then  
 
 successfully upgraded into mysql 5.7 dont forgot restart service, 
 
 
 
 