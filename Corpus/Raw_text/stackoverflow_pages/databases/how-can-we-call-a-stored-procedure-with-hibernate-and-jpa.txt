*** how-can-we-call-a-stored-procedure-with-hibernate-and-jpa ***

 How can we call a stored procedure using Hibernate or JPA? 
 
 You can do the following 
 
 Please add the exception handling wherever required.  
 
 Considering the following stored procedure that simply returns a basic return value: 
 
 You can call this one with standard JPA: 
 
 If the stored procedure returns a SYS_REFCURSOR: 
 
 You can call it like this: 
 
 If you want to call an Oracle database function: 
 
 You can't use the   since it does not work with Hibernate 5, so you can call it like this: 
 
 or with plain JDBC: 
 
 For more details check out the following articles: 
 
 How to call Oracle stored procedures and functions with JPA and Hibernate 
 How to call SQL Server stored procedures and functions with JPA and Hibernate 
 How to call PostgreSQL functions (stored procedures) with JPA and Hibernate 
 How to call MySQL stored procedures and functions with JPA and Hibernate 
 
 
 To execute remote procedure use this construction: 
 **Mapping**

 
 **Java code**

 
 
 
 
 You should have gone to the official hibernate documentation site. Anyways  here is the link  that takes you directly to stored procedure section 
 
 Here is the complete Solution to call a Stored Procedure with Just IN parameters --- 
 1) Create the Stored Procedure to act on a Table or a Set of Tables: 
 
 2) Execute the Stored Procedure from SQL Prompt to check the input. When You call the procedure from Java/Hibernate also You should see the similar result: 
 
 3) In the Java Code: 
 
 4) Now check the result in the Table, that should get updated accordingly: 
 
 Hibernate provides support for queries via stored procedures and functions. Say for example if we have the following stored procedure, 
 
 Which return the list of all employees. The stored procedure/function must return a resultset as the first out-parameter to be able to work with Hibernate.   
 To use the above query in Hibernate you need to map it via a named query. 
 
 **Rules/limitations for using stored procedures:**

 
 Stored procedure queries cannot be paged with setFirstResult()/setMaxResults(). 
 The recommended call form is standard SQL92:   or  . Native call syntax is not supported. 
 
 
 
 A function must return a result set.  
 The first parameter of a procedure must be an OUT that returns a result set. This is done by using a SYS_REFCURSOR type in Oracle 9 or 10. In Oracle you need to define a REF CURSOR type. See Oracle literature for further information. 
 
 
 
 The procedure must return a result set. Note that since these servers can return multiple result sets and update counts, Hibernate will iterate the results and take the first result that is a result set as its return value. Everything else will be discarded. 
 If you can enable SET NOCOUNT ON in your procedure it will probably be more efficient, but this is not a requirement. 
 
 Source Ref.: From the official Hibernate docuementation. 
 
 one approach can be with getNamedQuery(). 
 
 you have to map or use annotations 
 there are others:  source 
 