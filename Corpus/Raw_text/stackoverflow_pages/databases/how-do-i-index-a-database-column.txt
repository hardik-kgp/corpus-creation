*** how-do-i-index-a-database-column ***

 Hopefully, I can get answers for each database server. 
 For an outline of how indexing works check out:  How does database indexing work? 
 
 The following is SQL92 standard so should be supported by the majority of RDMBS that use SQL: 
 
 
  gives you the ability to specify a covering index.  This is an index that includes data from other columns at the leaf level, so you don't have to go back to the table to get columns that aren't included in the index keys. 
 
 This is invaluable for a query that has   in the select list, and   and   in the where clause. 
 
 For python pytables, indexes don't have names and they are bound to single columns: 
 
 
 In SQL Server, you can do the following: ( MSDN Link  to full list of options.) 
 
 (ignoring some more advanced options...) 
 The name of each Index must be unique database wide. 
 All indexes can have multiple columns, and each column can be ordered in whatever order you want. 
 Clustered indexes are unique - one per table. They can't have  d columns. 
 Nonclustered indexes are not unique, and can have up to 999 per table. They can have included columns, and where clauses. 
 
 To create indexes following stuff can be used: 
 
 Creates an index on a table. Duplicate values are allowed:
 
 Creates a unique index on a table. Duplicate values are not allowed:
 
 Clustered Index:  
 Non-clustered index: 
 
 
 Refer:  http://www.codeproject.com/Articles/190263/Indexes-in-MS-SQL-Server  for details. 
 
 
 
 On a multi column:  
 
 
 Since most of the answers are given for SQL databases, I am writing this for NOSQL databases, specifically for MongoDB. 
 Below is the syntax to create an index in the MongoDB using mongo shell. 
 
 example -  
 In the above example an single key descending index is created on the name 
field.  
 Keep in mind MongoDB indexes uses B-tree data structure. 
 There are multiple types of indexes we can create in mongodb, for more information refer to below link -  https://docs.mongodb.com/manual/indexes/ 
 
 An index is not always needed for all the databases. For eg: Kognitio aka WX2 engine doesn't offer a syntax for indexing as the database engine takes care of it implicitly. Data goes on via round-robin partitioning and Kognitio WX2 gets data on and off disk in the simplest possible way. 
 
 We can use following syntax to create index. 
 
 If we do not want duplicate value to be allowed then we can add  **UNIQUE**
 while creating index as follow  
 
 We can create index on multiple column by giving multiple column name separated by ' **,**
' 
 