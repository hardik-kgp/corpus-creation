*** how-do-i-kill-all-the-processes-in-mysql-show-processlist ***

 Because I see a lot of processes there, and the "time" column shows big values for all of them. 
 
 You need to kill them one by one, MySQL does not have any massive kill command. You can script it in any language, for example in PHP you can use something like: 
 
 
 **Mass killing**
 operation saves time. Do it in MySql itself: 
 Run these commands 
 
 Reference 
 
 if you do not want to store in file, store in a  
 Just run in your command prompt 
 
 
 I have also searched how to parse through MySQL the command SHOW PROCESSLIST and ended with a one-liner in a Shell: 
 
 
 mysqladmin processlist  will print a table with the thread ids; 
 awk  will parse from the second column only the numbers (thread ids) and generate MySQL KILL commands; 
 and finally the last call to  mysql  will execute the passed commands. 
 
 You can run  grep  before the  awk  command to filter a particular database name. 
 
 Or... in shell... 
 
 Yeah, I know, I'm lazy, but it can be handy too. 
 
 It doesn't get simpler then this, Just execute this in mysql prompt. 
 
 It will kill all process under provided username. because most of the people use same user for all purpose, it works! 
 I have tested this on MariaDB not sure about mysql. 
 
 I recently needed to do this and I came up with this 
 
 That way, you don't need to store to file and run all queries with a single command. 
 
 The following will create a simple stored procedure that uses a cursor to kill all processes one by one except for the process currently being used: 
 
 It can be run with  s to show the processes before and after as follows: 
 
 
 If you don't have information_schema: 
 
 
 login to Mysql as admin: 
 
 And than run command: 
 
 You will get something like below : 
 
 You will see complete details of different connections. Now you can kill the sleeping connection as below: 
 
 
 KILL ALL SELECT QUERIES  
 
 
 Here is a solution that you can execute without relying on the operating system: 
 STEP 1: Create a stored procedure.   
 
 STEP 2: Call the stored procedure giving it the name of a database user whose processes you want to kill.  You could rewrite the stored procedure to filter on some other criteria if you like. 
 CALL  
 
 This snipped worked for me (MySQL server 5.5) to kill all MySQL processes :  
 
 
 
 
 We can do it by MySQL Workbench. Just execute this: 
 
 Example: 
 
 That will remove it.  
 
 I'd combine bash and mysql: 
 
 
 An easy way would be to restart the mysql server..
Open "services.msc" in windows Run, select Mysql from the list. Right click and stop the service. Then Start again and all the processes would have been killed except the one (the default reserved connection) 
 
 
 
 Sometimes I have some zombies mysql processes that can't be killed (using MAMP Pro).  
 First get a list of all mysql processes: 
 
 Next kill every one of them with (replace processId with the first column in previous command result): 
 
 
 The following worked great for me: 
 
 
 I used the command   to kill all inactive connections which where actually the mass problem. 
 
 for python language, you can do like this 
 
 
 If you are using laravel then this is for you:  
 
 Of-course, you should use this   after your namespace.  
 
 Query 1
select concat('KILL ',id,';') from information_schema.processlist where user='username' into outfile '/tmp/a.txt'; 
 Query 2
source a.txt 
 This will enable you to kill all the queries in show processlist by specific user. 
 