*** how-do-i-make-case-insensitive-queries-on-mongodb ***

 
 How do I query case insensitive? I want to find result even if "andrew"; 
 
 Chris Fulstow's solution will work (+1), however, it may not be efficient, especially if your collection is very large. Non-rooted regular expressions (those not beginning with  , which anchors the regular expression to the start of the string), and those using the   flag for case insensitivity will not use indexes, even if they exist. 
 An alternative option you might consider is to denormalize your data to store a lower-case version of the   field, for instance as  . You can then query that efficiently (especially if it is indexed) for case-insensitive exact matches like: 
 
 Or with a prefix match (a rooted regular expression) as: 
 
 Both of these queries will use an index on  . 
 
 You'd need to use a case-insensitive  regular expression  for this one, e.g. 
 
 To use the regex pattern from your   variable, construct a new  RegExp  object: 
 
 **Update:**
 For exact match, you should use the regex  . Thanks to  Yannick L. 
 
 I have solved it like this. 
 
 If you want to query on 'case-insensitive exact matchcing' then you can go like this. 
 
 
 MongoDB 3.4 now includes the ability to make a true case-insensitive index, which will dramtically increase the speed of case insensitive lookups on large datasets.  It is made by specifying a collation with a strength of 2. 
 Probably the easiest way to do it is to set a collation  on the database.  Then all queries inherit that collation and will use it: 
 
 You can also do it like this: 
 
 And use it like this: 
 
 This will return cities named "new york", "New York", "New york", etc. 
 For more info:  https://jira.mongodb.org/browse/SERVER-90 
 
 
 With Mongoose (and Node), this worked: 
 
 
 `^${emailVariable}$`, 'i') }) 
 
 In MongoDB, this worked: 
 
 
 
 
 Both lines are case-insensitive. The email in the DB could be   and both lines will still find the object in the DB. 
 Likewise, we could use   and it would still find email:   in the DB. 
 
 I just solved this problem a few hours ago. 
 
 
 Case sensitivity and diacritic sensitivity are set to false by default when doing queries this way. 
 
 You can even expand upon this by selecting on the fields you need from Andrew's user object by doing it this way: 
 
 Reference:  https://docs.mongodb.org/manual/reference/operator/query/text/#text 
 
 To find case Insensitive string use this, 
 
 
 The following query will find the documents with required string  **insensitively         and with global occurrence also**

 
 
 To find case-insensitive literals string: 
 **Using regex (recommended)**

 
 **Using lower-case index (faster)**

 
 Regular expressions are slower than literal string matching. However, an additional lowercase field will increase your code complexity. When in doubt, use regular expressions. I would suggest to only use an explicitly lower-case field if it can replace your field, that is, you don't care about the case in the first place. 
 Note that you will need to escape the name prior to regex. If you want user-input wildcards, prefer appending   after escaping so that you can match "a%" to find all names starting with 'a'. 
 
 You can use  **Case Insensitive Indexes**
: 
 The following example creates a collection with no default collation, then adds an index on the name field with a case insensitive collation.  International Components for Unicode 
 
 To use the index, queries must specify the same collation. 
 
 or you can create a collection with default collation: 
 
 
 An easy way would be to use $toLower as below. 
 
 