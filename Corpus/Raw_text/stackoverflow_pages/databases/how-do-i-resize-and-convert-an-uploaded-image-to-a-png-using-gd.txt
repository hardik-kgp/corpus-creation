*** how-do-i-resize-and-convert-an-uploaded-image-to-a-png-using-gd ***

 I want to allow users to upload avatar-type images in a variety of formats ( **GIF, JPEG, and PNG at least**
), but to save them all as  **PNG database BLOBs**
. If the images are oversized, pixelwise, I want to resize them before DB-insertion. 
 **What is the best way to use GD to do the resizing and PNG conversion?**

 Edit: Sadly, only  GD  is available on the server I need to use, no   ImageMagick . 
 
 
 
 Your process steps should look like this: 
 
 Verify  the  filetype 
 Load the image if it is a supported filetype into GD using  imagecreatefrom* 
 Resizing using  imagecopyresize  or  imagecopyresampled 
 Save the image using  imagepng($handle, 'filename.png', $quality, $filters) 
 
 
 ImageMagick is faster, generates better images, is more configurable, and finally is (IMO) much easier to code for. 
 
 @ceejayoz Just wait for the new GD - it's OOP like MySQLi and it's actually not bad :) 
 
 If you want to use gdlib, use gdlib 2 or higher. It has a function called imagecopyresampled(), which will interpolate pixels while resizing and look much better. 
 Also, I've always heard noted around the net that storing images in the database is bad form: 
 
 It's slower to access than the disk 
 Your server will need to run a script to get to the image instead
of simply serving a file 
 Your script now is responsible for a lot of stuff the web server used
to handle:

 
 Setting the proper Content-Type header 
 Setting the proper caching/timeout/E-tag headers, so clients can properly cache the image. If do not do this properly, the image serving script will be hit on every request, increasing the load on the server even more. 
 
 
 The only advantage I can see is that you don't need to keep your database and image files synchronized. I would still recommend against it though. 
 
 Are you sure you have no ImageMagick on server? 
 I guest you use PHP (question is tagged with PHP). Hosting company which I use has no ImageMagick extension turned on according to phpinfo(). 
 But when I asked them about they said  here is the list of ImageMagick programs available from PHP code . So simply -- there are no IM interface in PHP, but I can call IM programs directly from PHP. 
 I hope you have the same option. 
 And I  **strongly**
 agree -- storing images in database is not good idea. 
 
 Something like this, perhaps:  
 
 I haven't tested the code so there might be some syntax errors, however it should give you a fair presentation on how it could be done. Also, I assumed a PNG file. You might want to have some kind of switch statement to determine the file type. 
 
 This article  seems like it would fit what you want.  You'll need to change the saving imagejpeg() function to imagepng() and have it save the file to a string rather than output it to the page, but other than that it should be easy copy/paste into your existing code. 
 
 Is GD absolutely required?  ImageMagick  is faster, generates better images, is more configurable, and finally is (IMO) much easier to code for. 
 
 I think  this page  is a good starting point. It uses imagecreatefrom(jpeg/gif/png) and resize and converts the image and then outputs to the browser. Instead of outputting the browser you could output to a BLOB in a DB without many minuttes of code-rewrite. 
 
 phpThumb  is a high-level abstraction that may be worth looking at. 
 