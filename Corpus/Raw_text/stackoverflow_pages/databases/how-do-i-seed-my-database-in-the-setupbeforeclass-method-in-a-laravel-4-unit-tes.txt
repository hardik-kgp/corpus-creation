*** how-do-i-seed-my-database-in-the-setupbeforeclass-method-in-a-laravel-4-unit-tes ***

 I have a Laravel 4 test class with some tests for which I want to seed my database before running the tests.  Using the setup() function to reseed for each test takes far too long.  However, when I try seeding in the static setupBeforeClass() function or the constructor, I obviously can't use the $this->seed() method.   
 But neither can I use programmatic Artisan commands, because when I do, I get the following error:   
 Here is the code I'd like to use to seed: 
 
 Please let me know how I can seed my database once per test  class  rather than per test  case 
 
 An "improvised" but pretty clean imho way to achieve a similar effect would be to do this in  , but have it run  only once  (similar to what   does) like this: 
 
 ...this is my solution and it seems simple enough and works fine, solving the performance problems of seeding and rebuilding the db structure before every test run. But remember, the  "right" way to do testing , that gives you the greatest confidence your tests methods don't get subtly interdependent in bug-hiding ways, is to re-seed your db before every test method, so just put seeding code in plain   if you can afford the performance penalty (for my test cases, I couldn't afford it, but ymmv...). 
 
 I had the same problem and solved with this 
 
 
 This is so far the best solution I found 
 
 
 You can do now: 
 
 in your   method for your test. 
 The   method accepts as a parameter the seeder class. 
 
 
 This trait is a wonderful way of resetting the database 
 
 