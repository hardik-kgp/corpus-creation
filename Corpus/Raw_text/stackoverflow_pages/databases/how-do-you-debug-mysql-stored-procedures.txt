*** how-do-you-debug-mysql-stored-procedures ***

 My current process for debugging stored procedures is very simple. I create a table called "debug" where I insert variable values from the stored procedure as it runs. This allows me to see the value of any variable at a given point in the script, but is there a better way to debug MySQL stored procedures? 
 
 I do something very similar to you.   
 I'll usually include a DEBUG param that defaults to false and I can set to true at run time.  Then wrap the debug statements into an "If DEBUG"  block. 
 I also use a logging table with many of my jobs so that I can review processes and timing.  My Debug code gets output there as well.  I include the calling param name, a brief description, row counts affected (if appropriate), a comments field and a time stamp. 
 Good debugging tools is one of the sad failings of all SQL platforms. 
 
 The following   procedure can be called to simply output a debug message to the console: 
 
 Then run the test like this: 
 
 It will result in the following output: 
 
 
 Yes, there is a specialized tools for this kind of thing -  MySQL Debugger . 
 
 
 There are  GUI tools for debugging stored procedures  / functions and scripts in MySQL. A decent tool that dbForge Studio for MySQL, has rich functionality and stability. 
 
 **How to debug a MySQL stored procedure.**

 Poor mans debugger: 
 
 Create a table called logtable with two columns,   and  . 
 Make the id column autoincrement.   
 Use this procedure: 
 
 Put this code anywhere you want to log a message to the table. 
 
 
 It's a nice quick and dirty little logger to figure out what is going on. 
 
 Debugger for mysql was good but its not free. This is what i use now: 
 
 Usage in stored procedure: 
 
 usage of stored procedure: 
 
 
 Another way is presented here 
 http://gilfster.blogspot.co.at/2006/03/debugging-stored-procedures-in-mysql.html 
 with custom debug mySql procedures and logging tables. 
 You can also just place a simple select in your code and see if it is executed. 
 
 I got this idea from  
 http://forums.mysql.com/read.php?99,78155,78225#msg-78225 
 Also somebody created a template for custom debug procedures on GitHub. 
 See here 
 http://www.bluegecko.net/mysql/debugging-stored-procedures/ 
 https://github.com/CaptTofu/Stored-procedure-debugging-routines 
 Was mentioned here 
 How to catch any exception in triggers and store procedures for mysql? 
 
 I just simply place select statements in key areas of the stored procedure to check on current status of data sets, and then comment them out (--select...) or remove them before production. 
 
 I'm late to the party, but brought more beer: 
 http://ocelot.ca/blog/blog/2015/03/02/the-ocelotgui-debugger/ 
and
 https://github.com/ocelot-inc/ocelotgui 
 I tried, and it seems pretty stable, supporting Breakpoints and Variable inspection. 
 It's not a complete suite (just 4,1 Mb) but helped me a lot! 
 How it works:
It integrates with your mysql client (I'm using Ubuntu 14.04), and after you execute: 
 
 It installs a new database at your server, that control the debugging process. So: 
 
 will give you a chance to step by step walk your code, and "refreshing" your variables you can better view what is going on inside your code. 
 Important Tip: while debugging, maybe you will change (re-create the procedure). After a re-creation, execute: $exit and $setup before a new $debug 
 This is an alternative to "insert" and "log" methods.
Your code remains free of additional "debug" instructions. 
 Screenshot: 
 
 
 MySQL Connector/Net 6.6 has a feature to  Debug Stored Procedures and Functions 
 
 **Installing the Debugger**

 To enable the stored procedure debugger: 
 
 For Connector/Net 6.6: Install Connector/Net 6.6 and choose the    Complete option. 
 For Connector/Net 6.7 and later: Install the product MySQL for Visual    Studio, to which the stored procedure debugger belongs. 
 
 **Starting the Debugger**

 To start the debugger, follow these steps: 
 
 Choose a connection in the Visual Studio Server Explorer. 
 Expand the Stored Procedures folder. Only stored procedures can be    debugged directly. To debug a user-defined function, create a stored 
  procedure that calls the function. 
 Click on a stored procedure node, then right-click and from the    context menu choose Debug Routine. 
 
 
 
 MySql Connector/NET also includes a stored procedure debugger integrated in visual studio as of version 6.6,
You can get the installer and the source here:
 http://dev.mysql.com/downloads/connector/net/ 
 Some documentation / screenshots: 
 https://dev.mysql.com/doc/visual-studio/en/visual-studio-debugger.html 
 You can follow the annoucements here:
 http://forums.mysql.com/read.php?38,561817,561817#msg-561817 
 UPDATE: The MySql for Visual Studio was split from Connector/NET into a separate product, you can pick it (including the debugger) from here  https://dev.mysql.com/downloads/windows/visualstudio/1.2.html   (still free & open source). 
 DISCLAIMER: I was the developer who authored the Stored procedures debugger engine for MySQL for Visual Studio product. 
 
 The first and stable debugger for MySQL is in dbForge Studio for MySQL 
 
 I had use two different tools to debug procedures and functions: 
 
 dbForge - many functional mysql GUI. 
 MyDebugger - specialized tool for debugging ... handy tool for debugging. vote http://tinyurl.com/voteimg 
 
 
 MySQL user defined variable (shared in session) could be used as logging output: 
 
 
 will output: 
 
 
 Toad mysql.  There is a freeware version
 http://www.quest.com/toad-for-mysql/ 
 
 Answer corresponding to  this  by @Brad Parks
Not sure about the MySQL version, but mine was 5.6, hence a little bit tweaking works: 
 I created a function   which is function (not procedure) and returns text(no character limit) and then call the function as SELECT  (params) AS  , code as below: 
 
 