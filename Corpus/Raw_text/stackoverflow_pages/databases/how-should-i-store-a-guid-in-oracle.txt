*** how-should-i-store-a-guid-in-oracle ***

 I am coming from the SQL server world where we had uniqueidentifier. Is there an equivalent in oracle? This column will be frequently queried so performance is the key. 
 I am generating the GUID in .Net and will be passing it to Oracle. For a couple reasons it cannot be generated by oracle so I cannot use sequence.  
 
 
 This blog  studied the relative performance. 
 
 As others have stated, there is a performance hit using GUIDs compared to numeric sequences. That said, there is a function named " SYS_GUID() " available since Oracle 8i that provides the raw equivalent: 
 
 A function could be created to return a formatted GUID: 
 
 Thus returning an interchangeable string: 
 
 A note of caution should be made that some Oracle platforms return similar but still unique values of GUIDs  as noted  by Steven Feuerstein. 
 
 If I understand the question properly, you want to generate a unique id when you insert a row in the db. 
You could use a  sequence  to do this.   link here 
Once you have created your sequence you can use it like this: 
 
 
 RAW(16) is apparently the preferred equivalent for the uniqueidentifier MS SQL type. 
 
 There is no uniqueidentifier in Oracle. 
 You can implement one yourself by using RAW (kind of a pain) or CHAR.  Performance on queries that JOIN on a CHAR field will suffer (maybe as much as 40%) in comparison with using an integer. 
 If you're doing distributed/replicated databases, the performance hit is worth it.  Otherwise, just use an integer. 
 
 GUIDs are not as used in Oracle as in MSSQL, we tend to have a NUMBER field (not null & primary key) , a sequence, and a trigger on insert to populate it (for every table). 
 
 The general practice using Oracle is to create an artificial key.  This is a column defined as a number.  It is populated via a sequence.  It is indexed/constrained via a primary key definition. 
 