*** how-to-automatically-backup-all-mysql-databases-into-sql-statement ***

 MySQL Administrator> Backup Project. It is a great tool to allow you to select databases, and schedule it. 
 However my issue is: 
 Today got a few new websites (new database created)
Tomorrow got a few more new websites (new databases created) 
 In this case, I have to always go into Backup Project> Select those remaining schema not in the backup list... 
 How to make it auto check for any new databases and include in the backup schedule list? 
 In other word, how to automate the backup of all the mysql databases (so that we don't need to worry when there's new databases created everyday). 
 Any way to make it happen? 
 I'm using Windows 2008 server, which is not sh friendly. 
 
 **MySQL Administrator**

 With MySQL Administrator you need to manually add databases to the backup. 
 **mysqldump and --all-databases**

 If you approach this through a  dump-command , you can use the   option to include all databases into the dump. 
 
 The problem with the three answers posted so far is that they do not enable you to selectively restore the databases.  This can be a real problem in all but a catastrophe.  
 Ideally, you should have a daily backup, with some history.  It should be bulletproof ( ), it should be logged ( ), it should be compressed ( ), it should keep separate copies of each database, and it should automatically pick up any databases that are added. 
 **Consider, rather, a shell script like this:**

 
 Which is assuming that you have a file   (chmod 600), that has: 
 
 Make sure that whatever user you are using for   has this grant statement: 
 
 So simply add this to a nightly cronjob, and you have a daily backup that rotates each 7 days week. 
 
 
 The backup directory then contains: 
 
 
 
 
 I've been using  http://sourceforge.net/projects/automysqlbackup/  to backup my MySQL databases for a couple years now and it's worked very well for me. Here's the description from the sourceforge page: 
 
 A script to take daily, weekly and
  monthly backups of your MySQL
  databases using mysqldump. Features -
  Backup mutiple databases - Single
  backup file or to a seperate file for
  each DB - Compress backup files -
  Backup remote servers - E-mail logs -
  More.. 
 
 You can set the script to backup all databases so you don't have to change the script when new dbs are added. You can also tell it which dbs to exclude if you have a database or two that you don't want to backup for some reason.  
 It's well documented and there are lots of options that you can set that will cover most basic db backup needs. Since it's a single bash script, it's also easy to modify/tweak if something's not quite how you want it to be. 
 
 Try using 
 
 
 Late answer, but as simple as it gets: 
 
 You need to  **change lines 3, 4 and 5**
 to reflect your  
 **user**
,  **password**
 and  **dir**
 where you want to store the dumps. 
 Every time it runs, it’ll  **delete all the previous backups**
 (If you don’t
want this, just  **comment**
  ) 
 
 **MySqlBackup.sh**

 
 
 
 Now you just need to make it executable and run it: 
 
 If needed, add it to the   so it’ll run automagically: 
 
 In this case, it’ll run every day at 2 AM. You can learn more about crontab  here . 
 src 
 
 Just my two cents. Upgrading the excelent script from @gahooa 
 It adds grant save. Usefull if you want to save permissions and a few of improvements and value checking. Also usage of user and pass if provided.  
 Hope it helps. 
 UDATE: Added sha1 sums for each file 
 
 The output of the grant file is like this one: 
 
 
 I made a script , which will take all database backup expect information_schema and performance_schema. 
 Will create date and time wise folder , save database its db folder name wise and gunzip . I created it today and found working 100% ok  
 
 
 To ignore the errors use --force option 
 
 