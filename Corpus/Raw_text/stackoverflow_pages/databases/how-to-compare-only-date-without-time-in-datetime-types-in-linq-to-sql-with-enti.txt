*** how-to-compare-only-date-without-time-in-datetime-types-in-linq-to-sql-with-enti ***

 Is there a way to compare two   variables in   but to disregard the Time part. 
 The app stores items in the DB and adds a published date. I want to keep the exact time but still be able to pull by the date itself. 
 I want to compare   and   and have it disregard the actual time of day so both of these are considered the same. 
 I guess I can set all the times of day to   before I compare but I actually do want to know the time of day I just also want to be able to compare by date only. 
 I found some code that has the same issue and they compare the year, month and day separately. Is there a better way to do this? 
 
 try using the   property on the   Object... 
 
 
 For a true comparison, you can use: 
 
 
 This is how I do this in order to work with LINQ. 
 
 If you only use   it wont work with LINQ (Error: The specified type member 'Date' is not supported in LINQ to Entities) 
 
 If you're using Entity Framework < v6.0, then use  
If you're using Entity Framework >= v6.0, then use    
 Use either (based on your EF version) around any   class property you want to use inside your Linq query 
 Example 
 
 
 
 
 
 You can use this if you are using nullable DateFields. 
 
 
 
 
 The diff value represents the number of days for the age.  If the value is negative the start date falls after the end date.  This is a good check. 
 
 In your join or where clause, use the   property of the column. Behind the scenes, this executes a   operation. This should allow you to compare dates without the time. 
 
 
 