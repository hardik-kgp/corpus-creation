*** how-to-configure-a-spring-beans-with-properties-that-are-stored-in-a-database-ta ***

 In my project we'd like to externalize the properties of our Spring managed beans, that is very easy to do with standard Java .properties files, however we want to be able to read those properties from a DB table that behaves like a Map (key is the property name, value is the value assigned to that property). 
 I found  this post  that suggest the usage of  Commons Configuration  but I don't know if there's a better way to do the same with Spring 3.x. Maybe implementing my own PropertyResource or something. 
 Any clues? 
 
 I'd use a   of type   that I'd implement using  . You can then use the generated   object with the   mechanism. 
 **Sample code:**

 
 **XML Configuration:**

 
 
 In addition to Sean's suggestion, you can extend  . Look at the two current implementations -   and  , and roll out your own, jdbc-based. 
 
 There are ways to create "PropertyPlaceholderConfigurer" Programmatically , please see below. 
 Write a DAO which reads Properties and create a PropertyPlaceholderConfigurer as shown below. 
 
 