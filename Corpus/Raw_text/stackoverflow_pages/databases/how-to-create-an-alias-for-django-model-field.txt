*** how-to-create-an-alias-for-django-model-field ***

 My Django Model has a datetime field named 'updatedOn', I need to use a library function on this model to calculate some statistics, but the function assumes the datetime field name to be 'time', here is how the function uses the datetime: 
 
 Without touching the library code, how can I create an alias 'time' to refer to 'updatedOn' field, so that I can use the function? 
 
 I haven't looked into this very deeply, but intuitively, some of the following ways might get you started. 
 **Custom manager**

 A  custom manager  with a modified   method to look for   when filtering for  . 
 **Custom field type**

 It might be possible to create a  custom field type  which only acts as a reference to another field. 
 **Hacking the model._meta.fields**

 The model object's   seems to contain the list of fields in that object. Maybe you could try adding some kind of dummy field called  , which refers to the   field. 
 
 This old  Django Snippet , worked for me, until Django 1.11. As @Jaberwocky commented   gets removed in  Django 2.0 
 However, the  deprecation warning  reads that this field is deprecated  in favor of  , although this is not mentioned in the features removed of the above link. 
 
 
 Create a property for the field in your model: 
 
 
 following miikkas's suggestion re model.Manager, I came up with the following that works for the much simpler case of retrieving the id field by querying uuid. the database was created with the ID being a varchar field used for a hexadecimal string, and I'm retrofitting a sequential integer ID field so I can use Django's auth module which requires it. and I want to do this in steps, hence the hack. 
 
 now I can: 
 
  could be done the same way. 
 maybe this can help guide someone else looking for a way to use an "alias" or "synonym" for a Django model field. I don't believe it will help the OP though. the custom field type might be the better general approach. 
 