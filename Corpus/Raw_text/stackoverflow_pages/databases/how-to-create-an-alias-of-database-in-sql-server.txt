*** how-to-create-an-alias-of-database-in-sql-server ***

 We have a very old software has been created around 10 years ago and we don't have source code. 
 The software uses two databases,   and   on the same SQL Server 2012 instance. 
 There is SQL statements such as  , but the main issue is our processes don't allow us use   as a name of database. 
 The question is: how we can create an alias of for database? 
 I was trying to use  
 
 but it doesn't work for database names. 
 Please suggest how it can be solved without patching a binary files to correct SQL statements. 
 
 Create a database with the name you want to impersonate. Re-jigg the DDL code generator to create a view for every table in the database that has the tables I need to access via the hardcoded name. Basically, each view will have a statement that looks like this.. 
 
 Example:  
 The target database name that is hardcoded is called   and the Source DB you have is named  , schema is   and table name is  
 
 Create the database called   using SSMS or script. 
 
 
 If you can enumerate each table in your "source" database and then create the DDL as above. If you want I can update this posting with a code example. (using the   procedure if possible) 
 
 I had a similar issue. 
Solved with this  workaround , using synonyms. 
 **Short version:**
 You flood your database with a synonym of every object you'll ever need to reference. Later you re-create every synonym with the other database name. 
 
 Here's a stored proc to do it. Simply add it to your database and call it with the target database. It will create synonyms for all tables in the target database, and create the schemas if they don't exist. I've left a commented out section in case someone knows of a way to get the create schemas working without a cursor. 
 
 Use it as follows : 
 
 
 
 The question is: how we can create an alias of for database? 
 
 I know this is an old post but...  
 This is why I only use the 2 part naming convention for SQL objects.  It allows me to have 2 part synonyms that point to differently named databases depending on what environment I'm in.  There are some places where it doesn't work so well but, for the most part, those places are very rare. 
 As for software that you don't have the source code of and if that software uses the 3 part naming convention, you're probably just out of luck unless you know what the 3 part naming convention is for each object and create a 3 part synonym for each object. 
 
 I found Charles' answer (and the linked workaround in the comment by maxcastaneda) very useful. I followed this approach and it works for me. I have streamlined it a bit and created the following query that brings up all required synonyms to create.  
 As a prerequisite for this snippet both the original DB and the synonym/alias db have to be on the same server otherwise in case you use linked server or so you have to modify it a bit. 
It should be fairly easy to put this into a small sp to update the synonyms automatically. 
 
 Don't forget to enter you Db names at the <...> spots. 
 Just copy the content of the   Column and execute it in the synonym DB - or create a stored procedure for this task. 
 Be aware there is an issue if you have views in place that refer to tables or other db objects without the 2 part naming convention. Those synonyms won't work. You should fix this in the original objects / views. 
 
 
 Go to the Database you wish to create Alias,  
 Create an Alias Folders table with the preferred design, 
 Go to unique IDs's table and check the last code sequence for the table created. 
 For example, if the last code is 10, then update it to 11. 
 Open Cabinets table and go right at the bottom and create the name of the Alias cabinet you want. 
 
 
 You can create an alias from 'SQL Server Configuration Manager' under Configuartion Tool in SQL Server Folder. 
 Detailed source :  http://www.mssqltips.com/sqlservertip/1620/how-to-setup-and-use-a-sql-server-alias/ 
 http://technet.microsoft.com/en-us/library/ms190445.aspx 
 