*** how-to-create-join-table-with-jpa-annotations ***

 I need to create a join table in my database using   annotations so the result will be this: 
 
 So far I just implemented 2 entities: 
 
 
 
 Should i create another entity called    or i can just add some annotations, so the join table will be created automatically when i run create tables from entities(ORM)? 
 How should i annotate my entities to achieve the same as in the image? 
 
 You definitely shouldn't create User_Group entity as it's more the underlying database representation than the object oriented one. 
 You can achieve the join table by defining something like: 
 
 
 
 **Edit:**
 If you want to explicitly set the names of the columns you could use @JoinColumn elements as shown below: 
 
 
 I would implement it this way:   
 
 Solution suggested by @PedroKowalski should work too, but then you'll have to keep a reference to  **Group**
 entity in your  **User**
 entity which is not always possible. 
 
 To have the same annotations like in your diagram you can do this in your   class: 
 
 in your group class 
 
 
 I'm wondering what is the point to create a Join Table in this way, considering that we can't access directly for queries?
JPA doesn't allow to make queries directly to the Join Table, so if the user want to do an operation on  **USER_GROUP**
, he has to creare a normal join query between  **users**
 and  **groups**
; due to this, the join table USER_GROUP is useless. 
 