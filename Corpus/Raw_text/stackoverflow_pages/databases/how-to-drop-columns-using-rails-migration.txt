*** how-to-drop-columns-using-rails-migration ***

 What's the syntax for dropping a database table column through a Rails migration? 
 
 
 For instance: 
 
 would remove the hobby Column from the users table. 
 
 For older versions of Rails  
 
 For Rails 3 and up 
 
 
 Rails 4 has been updated, so the change method can be used in the migration to drop a column and the migration will successfully rollback.  Please read the following warning for Rails 3 applications: 
 **Rails 3 Warning**

 Please note that when you use this command: 
 
 The generated migration will look something like this: 
 
 Make sure to not use the change method when removing columns from a database table (example of what you don't want in the migration file in Rails 3 apps): 
 
 The change method in Rails 3 is not smart when it comes to remove_column, so you will not be able to rollback this migration.  
 
 In a rails4 app it is possible to use the change method also for removing columns. The third param is the data_type and in the optional forth you can give options. It is a bit hidden in the section 'Available transformations' on  the documentation  . 
 
 
 There are two good ways to do this: 
 **remove_column**

 You can simply use remove_column, like so: 
 
 This is fine if you only need to make a single change to your schema. 
 **change_table block**

 You can also do this using a change_table block, like so: 
 
 I prefer this as I find it more legible, and you can make several changes at once. 
 Here's the full list of supported change_table methods: 
 http://apidock.com/rails/ActiveRecord/ConnectionAdapters/SchemaStatements/change_table 
 
 in rails 5 you can use this command in the terminal: 
 
 for example to remove the column access_level(string) from table users: 
 
 and then run: 
 
 
 Generate a migration to remove a column such that if it is migrated ( ), it should  **drop the column**
. And it should  **add column back**
 if this migration is rollbacked ( ). 
 The syntax: 
 **remove_column :table_name, :column_name, :type**

 
 Removes column, also  **adds column back**
 if migration is rollbacked. 
 
 Example:  
 
 **Note**
:  If you skip the data_type , the migration will remove the column successfully but if you rollback the migration it will throw an error. 
 
 **Remove Columns For RAILS 5 App**

 
 Command above generate a migration file inside   directory. Snippet blow is one of remove column from table example generated by Rails generator, 
 
 I also made a quick reference guide for Rails which can be found at  here .  
 
 You can try the following: 
 
 ( Official documentation ) 
 
 **Clear & Simple Instructions for Rails 5.2**

 
 **WARNING: You will lose data if you remove a column from your database**
. To proceed, see below: 
 **Warning: the below instructions are for trivial migrations**
. For complex migrations with e.g. millions and millions of rows, you will have to account for the possibility of failures, you will also have to think about how to optimise your migrations so that they run swiftly, and the possibility that users will use your app while the migration process is occurring. If you have multiple databases, or if anything is remotely complicated, then don't blame me if anything goes wrong!  
 
 
 1. Create a migration 
 **Run**
 the following command in your terminal:  
 
 Note: the table name should be in plural form as per rails convention. 
 **Example:**

 In my case I want to remove the   column (a boolean value) from the   table:  
 
 See the documentation  re: a convention when adding/removing fields to a table:  
 
 There is a special syntactic shortcut to generate migrations that add
  fields to a table. 
 rails generate migration add_fieldname_to_tablename fieldname:fieldtype 
 
 **2. Check the migration**

 
 **3. Run the migration**

 
 ....And then you're off to the races! 
 
 
 X = column name  
Y = table name 
 **EDIT**

 Changed   to   as per comments - provides more clarity for what the migration is actually doing. 
 
 To remove the column from table you have to run following migration: 
 
 Then run command: 
 
 
 Give below command it will add in migration file on its own 
 
 After running above command you can check migration file remove_column code must be added there on its own 
 Then migrate the db 
 
 
  in   method will help you to delete the column from the table. 
 
 Go on this link for complete reference :  http://guides.rubyonrails.org/active_record_migrations.html 
 
 For removing column from table in just easy 3 steps as follows: 
 
 write this command  
 
 
 after running this command in terminal one file created by this name and time stamp (remove_column from_table_name). 
 Then go to this file. 
 
 inside file you have to write 
 
 Finally go to the console and then do 
 
 
 
 Through 
 
in a migration file 
 You can remove a column directly in a rails console by typing: 
 
 
 Do like this; 
 
 I.e.  
 Anyway, Would be better to consider about downtime as well since the ActiveRecord caches database columns at runtime so if you drop a column, it might cause exceptions until your app reboots. 
 Ref:  Strong migration 
 
 Simply, You can remove column 
 
 For Example, 
 
 
 Heres one more from rails console 
 
 