*** how-to-execute-a-sql-file-using-golang ***

 I have .sql file which has lots of database creation , deletion , population stuff. Is it possible to have a go function which can excute a sql file. I am using postgres as my database and using lib/pq driver for all database transactions. But I am open to any library for executing this sql file in my golang project. 
 
 I found dotsql in search of similar demand. You can load named sql statements/prepare statements from a specific file and execute.  
 
 see:  https://github.com/gchaincl/dotsql 
 
 You can just split file into separate requests and execute them one-by-one: 
 
 
 You can use   package of standard library. No database driver is required. Code would look something like this for postgreSQL: 
 
 
 It's too much trouble if you are going to execute it using a command line. You have to deal with issues like setting your passwords, making sure the path variables are properly set, etc. I think the bets way is to use the database driver and just call it using Go.  
 In the following example, I'm using  pgx implementation of sql driver  for Postgres. You can do it with any driver implementation of your choice. 
 
 Explanation: 
 
 Get the path to your sql script in a os agnostic way. 
 Read the content of the file to string. 
 Execute the statements in the file using the sql driver. 
 
 