*** how-to-find-foreign-key-dependencies-pointing-to-one-record-in-oracle ***

 I have a very large Oracle database, with many many tables and millions of rows. I need to delete one of them, but want to make sure that dropping it will not break any other dependent rows that point to it as a foreign key record. Is there a way to get a list of all the other records, or at least table schemas, that point to this row? I know that I could just try to delete it myself, and catch the exception, but I won't be running the script myself and need it to run clean the first time through.  
 I have the tools SQL Developer from Oracle, and PL/SQL Developer from AllRoundAutomations at my disposal. 
 Thanks in advance! 
 
 I always look at the Foreign keys for the starting table and work my way back. The DB tools usually have a dependencies or constraints node. I know PL/SQL Developer has a way to see FK's, but it's been a while since I have used it, so I can't explain it... 
 just replace XXXXXXXXXXXX with a table name... 
 
 
 Here is my solution to list all references to a table: 
 
 With this solution you also have the information of which column of which table is referencing which column of your target table (and you can filter on it). 
 
 I had a similar problem recently, but experienced soon, that finding the direct dependencies is not enough. So I wrote a query to show a tree of multilevel foreign key dependencies: 
 
 It gives a result like this, when using SHIPMENT as MYTABLE in my database: 
 
 
 We can use the data dictionary to identify the tables which reference the primary key of the table in question.  From that we can generate some dynamic SQL to query those tables for the value we want to zap: 
 
 This example cheats a bit.  The name of the target primary key is hardcoded, and the referencing column has the same name on all the dependent tables.  Fixing these issues is left as an exercise for the reader ;) 
 
 Had a similar situation.  In my case I had a couple of records which had ended up with the same ID differing only by case.  Wanted to check what dependent records exists for each to know which was easiest to delete/update 
 The following prints out all child records pointing to the given record, per child table with a count for each table/master record combination 
 
 
 I was surprised at how difficult it was to find the dependency order of tables based on foreign key relationships. I needed it because I wanted to delete the data from all tables and import it again. Here is the query I wrote to list the tables in dependency order. I was able to script the deletes using the query below, and import again using the results of the query in reverse order.  
 
 
 Oracle constraints uses Table Indexes to reference data. 
To find out what tables are referencing one table, just look for index in reverse order. 
 
 **Obs.: Disabling references improves considerably the time of DML commands (update, delete and insert).**

 This can help a lot in bulk operations, where you know that all data is consistent. 
 
 