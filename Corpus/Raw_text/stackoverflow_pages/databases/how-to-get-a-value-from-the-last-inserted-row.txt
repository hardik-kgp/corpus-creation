*** how-to-get-a-value-from-the-last-inserted-row ***

 
 
 
 
 
 This question already has answers here :
                            
                         
 
 
 
 How to get the insert ID in JDBC? 
 
                                    (12 answers)
                                 
 
 Closed  3 years ago . 
 
 
 Is there some way to get a value from the last inserted row? 
 I am inserting a row where the PK will automatically increase, and I would like to get this PK. Only the PK is guaranteed to be unique in the table. 
 I am using Java with a JDBC and PostgreSQL. 
 
 With PostgreSQL you can do it via the RETURNING keyword: 
 PostgresSQL - RETURNING 
 
 It will return the value of "anyfield". "anyfield" may be a sequence or not. 
 To use it with JDBC, do: 
 
 
 See the API docs for  java.sql.Statement . 
 Basically, when you call   or  , use the   constant.  You can then call   to get the auto-generated keys of all rows created by that execution. (Assuming your JDBC driver provides it.) 
 It goes something along the lines of this: 
 
 
 If you're using JDBC 3.0, then you can get the value of the PK as soon as you inserted it.  
 Here's an article that talks about how :  https://www.ibm.com/developerworks/java/library/j-jdbcnew/ 
 
 
 Since PostgreSQL JDBC driver version  8.4-701  the   is finally fully functional. We use it here almost one year in production to our full satisfaction. 
 In "plain JDBC" the   needs to be created as follows to make it to return the keys: 
 
 You can download the current JDBC driver version  here  (which is at the moment still 8.4-701). 
 
 The sequences in postgresql are transaction safe. So you can use the  
 
 Quote: 
 
 currval 
 
 Return the value most recently obtained by nextval for this sequence
    in the current session. (An error is
    reported if nextval has never been
    called for this sequence in this
    session.) Notice that because this is
    returning a session-local value, it
    gives a predictable answer even if
    other sessions are executing nextval
    meanwhile. 
 
 
 
 Here is how I solved it, based on the answers here: 
 
 
 If you are using  , go for the following 
 
 If you are using  , go for the following 
 
 
 Use sequences in postgres for id columns: 
 
 currval will return the current value of the sequence in the same session. 
 (In MS SQL, you would use @@identity or SCOPE_IDENTITY()) 
 
 
 
 Don't use SELECT currval('MySequence') - the value gets incremented on inserts that fail. 
 
 For MyBatis 3.0.4 with Annotations and Postgresql driver 9.0-801.jdbc4 you define an interface method in your Mapper like 
 
 Note that @Select is used instead of @Insert. 
 
 for example: 
 
 Connection conn = null;
            PreparedStatement sth = null;
            ResultSet rs =null;
            try {
                conn = delegate.getConnection();
                sth = conn.prepareStatement(INSERT_SQL);
                sth.setString(1, pais.getNombre());
                sth.executeUpdate();
                rs=sth.getGeneratedKeys();
                if(rs.next()){
                    Integer id = (Integer) rs.getInt(1);
                    pais.setId(id);
                }
            } 
 
 with   no found. 
 
 Use that simple code: 
 
 
 If you are in a transaction you can use   after an insert to get the last generated id. 
 