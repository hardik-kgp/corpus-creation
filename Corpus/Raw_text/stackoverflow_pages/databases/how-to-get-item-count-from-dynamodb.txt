*** how-to-get-item-count-from-dynamodb ***

 I want to know item count with DynamoDB querying. 
 I can querying for DynamoDB, but I only want to know 'total count of item'. 
 For example, 'SELECT COUNT(*) FROM ... WHERE ...' in MySQL 
 
 this code gets the all users data higher than my point. 
 If count of $result is 100,000, $result is too much big.
And it would exceed the limits of the query size. 
 I need help. 
 
 You can use the   parameter and use   in the request. It "returns the number of matching items, rather than the matching items themselves".  **Important**
, as brought up  by Saumitra R. Bhave in a comment ,  "If the size of the Query result set is larger than 1 MB, then ScannedCount and Count will represent only a partial count of the total items. You will need to perform multiple Query operations in order to retrieve all of the results" .  
 I'm Not familiar with PHP but here is how you could use it with Java. And then instead of using   (which I am guessing is a function in PHP) on the   you can use the   value from the response  -  : 
 
 If you don't need to emulate the   clause, you can use a   request and use the  resulting item count to get an estimate. 
 
 The number of items in the specified table. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. 
 
 
 With the  aws dynamodb cli  you can get it via  scan  as follows: 
 
 The response will look similar to this: 
 
 notice that this information is in real time in contrast to the  describe-table  api  
 
 Can be seen from UI as well.
Go to overview tab on table, you will see item count. Hope it helps someone. 
 
 If you happen to reach here, and you are working with C#, here is the code: 
 
 
 Similar to Java in PHP only set Select PARAMETER with value 'COUNT' 
 
 and acces it just like this : 
 echo $result['Count']; 
 but as  Saumitra  mentioned above be careful with resultsets largers than 1 MB, in that case use LastEvaluatedKey til it returns null to get the last updated count value. 
 
 Replace the table name and use the below query to get the data on your local environment: 
 
 Replace the table name and remove the endpoint url to get the data on production environment 
 
 
 You could use dynamodb mapper query. 
 
 it calls   that would lazily load next available result until allResultsLoaded. 
 Ref:  https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/DynamoDBMapper.Methods.html#DynamoDBMapper.Methods.query 
 
 I used scan to get total count of the required tableName.Following is a Java code snippet for same 
 
 
 In Scala: 
 
 
 This is solution for AWS JavaScript SDK users, it is almost same for other languages. 
 Result.data.Count will give you what you are looking for 
 
 