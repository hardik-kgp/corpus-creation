*** how-to-grant-all-privileges-on-views-to-arbitrary-user ***

 How do you grant read/select access on all functions and views to an arbitrary user? 
 I use   to create several functions and views, and then I run: 
 
 Having been granted all privileges, I would expect   to now have access to the functions and views created by the   user. However, when I try and access them with  , I get a "permission denied for relation..." error. Why is this? 
 
 The reason is that you need additional privileges to access a view or table. Privileges on the database do not cover access to all objects in it. 
 It is different with functions:   privilege is granted to   by default.  **But**
 the function is executed with the privileges of the current user. You may be interested in the   modifier for  . But normally it is enough to grant   on involved tables. 
 Per documentation about default privileges: 
 
 Depending on the type of object, the initial default privileges might
  include granting some privileges to  . The default is no public
  access for tables, columns, schemas, and tablespaces;  
  privilege and   table creation privilege for databases;  
  privilege for functions; and   privilege for languages. 
 
 You may be interested in this DDL command (requires Postgres  **9.0**
 or later): 
 
 While connected to the database in question, of course (see  @marcel's comment  below), and as a user with sufficient privileges. You may also be interested in the setting  : 
 
 Grant all on a specific schema in the db to a group role in PostgreSQL 
 
 More detailed answer how to manage privileges: 
 
 **How to manage DEFAULT PRIVILEGES for USERs on a DATABASE vs SCHEMA?**

 
 pgAdmin  has a feature for more sophisticated bulk operations: 
 
 Or you can query the system catalogs to create DDL statements for bulk granting / revoking ... 
 