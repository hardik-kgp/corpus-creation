*** how-to-restore-dropped-table-with-django-south ***

 I wanted to clear out a table in my DB, so I dropped the table. Normally I would do   to re-create it. However, the answer  here  says not to use   anymore. So, what do I do instead? 
 
 It's a pretty late response but for people who will run into the same issue (like I did). 
 Normally to drop the db_tables for the app that is managed by south you should use: 
 
 But if you dropped them manually in the db let south know about it 
 
 And of course to recreate the tables 
 
 
 Had the identical problem. Not sure this works in all circumstances, but here's what I did: 
 
 comment out "south" from INSTALLED_APPS 
 run manage.py syncdb 
 uncomment "south" in INSTALLED_APPS 
 run manage.py migrate 
 
 Voila! 
 Your mileage may vary.... 
 
 Hmm  this exchange  covers my very question: 
 
 If you modify the database by hand, South won't notice - its only way of 
  keeping track of what version the database is is the 
  south_migrationhistory table, so if you fiddle behind its back, it's 
  your responsibility to fix it.  
 
 What I ended up doing was commenting out the model that I dropped in question, doing a  , creating an empty no-column table of the one I dropped (so South has something to drop),  ing, then un-commenting the model,   and  ing again. A bit more annoying than just dropping the table and   but ah well. 
 
 Make sure all your migrations are applied:
 
 Tell Django to create the tables as they are in your models:  
 Tell South that everything is where it should be:  
 This assumes that nothing has changed in  **any of your models**
 since you created your last migration. 
 
 I know this issue is old, but I just ran into this issue and thought I'd post my solution in case this helps anyone. 
 
 Go into your   folder where the database is. 
 Cut the entire class out of the   file. 
 Run ./manage.py schemamigration   --auto (this will create another migration where   will recognize to delete this table). You may need to recreate a blank table in you database so   sees it. 
 Run the   and the table should drop from your database. 
 Re-paste in your table class back to where it was in your   file. 
 Run a ./manage.py schemamigration   --auto. South should pick up the table and allow you to migrate 
 Run ./manage.py migrate   and South should re-add the table back into your databasse... with the columns and such again, but without the data, obviously. :) 
 
 