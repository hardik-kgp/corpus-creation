*** how-to-retrieve-the-last-autoincremented-id-from-a-sqlite-table ***

 I have a table Messages with columns ID (primary key, autoincrement) and Content (text). 
I have a table Users with columns username (primary key, text) and Hash. 
A message is sent by one Sender (user) to many recipients (user) and a recipient (user) can have many messages. 
I created a table Messages_Recipients with two columns: MessageID (referring to the ID column of the Messages table and Recipient (referring to the username column in the Users table). This table represents the many to many relation between recipients and messages. 
So, the question I have is this. The ID of a new message will be created after it has been stored in the database. But how can I hold a reference to the MessageRow I just added in order to retrieve this new MessageID?   I can always search the database for the last row added of course, but that could possibly return a different row in a multithreaded environment? 
 EDIT: As I understand it for SQLite you can use the  . But how do I call this statement from ADO.Net? 
 My Persistence code (messages and messagesRecipients are DataTables): 
 
 
 With SQL Server you'd SELECT SCOPE_IDENTITY() to get the last identity value for the current process. 
 With SQlite, it looks like for an autoincrement you would do  
 
 immediately after your insert. 
 http://www.mail-archive.com/sqlite-users@sqlite.org/msg09429.html 
 In answer to your comment to get this value you would want to use SQL or OleDb code like: 
 
 
 One other option is to look at the system table  . Your sqlite database will have that table automatically if you created any table with autoincrement primary key. This table is for sqlite to keep track of the autoincrement field so that it won't repeat the primary key even after you delete some rows or after some insert failed (read more about this here  http://www.sqlite.org/autoinc.html ). 
 So with this table there is the added benefit that you can find out your newly inserted item's primary key even after you inserted something else (in other tables, of course!). After making sure that your insert is successful (otherwise you will get a false number), you simply need to do: 
 
 
 I've had issues with using   in a multithreaded environment. If another thread inserts into another table that has an autoinc, last_insert_rowid will return the autoinc value from the new table. 
 Here's where they state that in the doco: 
 
 If a separate thread performs a new INSERT on the same database connection while the sqlite3_last_insert_rowid() function is running and thus changes the last insert rowid, then the value returned by sqlite3_last_insert_rowid() is unpredictable and might not equal either the old or the new last insert rowid.  
 
 That's from  sqlite.org doco 
 
 Sample code from @polyglot solution 
 
 
 According to  Android Sqlite get last insert row id  there is another query: 
 
 