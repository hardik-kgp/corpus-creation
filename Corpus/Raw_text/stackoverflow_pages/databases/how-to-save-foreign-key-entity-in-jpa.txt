*** how-to-save-foreign-key-entity-in-jpa ***

 I have 2 tables customer and customerhistory. customhistory has foreign key customerId which is referencing to customer's customerId. In the Entity that is generated by JPA i have a object of customer in customerhistory class whereas i want to save only customerId in consumerhistory table  
 I am getting the correct customerId but when i want to save the attribute customerId i have only the object of customer with me but no customerId in autogenerated entity class of consumerhistory 
 
 As shown above i dont have customerId with me in entity customerHistory . how to save it? 
 
 Use the  getReference  call of the entityManager to load customer object using the id and then set that onto the customer history. In most cases this call would return a proxy with just the id embedded, the customer attributes will not be loaded unless some other method of the customer is invoked. 
 
 
 The association between your tables is managed by JPA you're not supposed to access the customerId in customerHistory. You should use customer.getHistory() (or whatever you called it) to manipulate the associated history entries. The referential integrity will be managed by JPA. 
 
 If you are using eclipseLink as a JPA provider there is an annotation that is implemented to refresh the associated attribute, set it before the class as follows: 
 
 