*** how-to-select-subdocuments-with-mongodb ***

 I have a collection with a subdocument  tags  like : 
 
 I want to select all the tags who start with a pattern, but returning only the matching tags. 
 I already use a regex but it returns all the news containing the matching tag, here is the query : 
 
 My question is : How can I retrieve all the tags (only) who match the pattern ? 
(The final goal is to make an autocomplete field) 
 I also tried using distinct, but I didn't find a way to make a distinct with a find, it always returning me all the tags :( 
 Thanks for your time 
 
 Embedded documents are not collections. Look at your query: db. **news**
.find will return documents from the   collection.   is not a collection, and cannot be filtered. 
 There is a feature request for this "virtual collection feature" ( SERVER-142 ), but don't expect to see this too soon, because it's "planned but not scheduled". 
 You can do the filtering client-side, or move the tags to a separate collection. By  retrieving only a subset of fields  - only the   field - this should be reasonably fast. 
 Hint : Your regex uses the   flag, which makes it impossible to use indexation. Your db strings should be case-normalized (e.g. all upper case) 
 
 A bit late to the party, but hopefully will help others who are hunting for a solution. I've found a way to do this using the aggregation framework and combining $project and $unwind with the $match, by chaining them together. I've done it using PHP but you should get the gist: 
 
 The first match and project are just use to filter out to make it faster, then the unwind on subcollection spits out each subcollection item by item which can then be filtered using the final match. 
 Hope that helps. 
 UPDATE (from Ryan Wheale):  
 You can then   the data back into its original structure.  It's like having an   which returns more than one subdocument: 
 
 I translated this from Node to PHP, so I haven't tested in PHP.  If anybody wants the Node version, leave a comment below and I will oblige. 
 