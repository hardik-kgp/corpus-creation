*** how-to-simplify-this-laravel-php-code-to-one-eloquent-query ***

 I assume that this should all be in one query in order to prevent duplicate data in the database. Is this correct? 
 How do I simplify this code into one Eloquent query? 
 
 
 
 I assume that this should all be in one query in order to prevent
  duplicate data in the database. Is this correct? 
 
 It's not correct. You prevent duplication by placing   constraints on database level. 
 There's literally  **nothing**
 you can do in php or any other language for that matter, that will prevent duplicates,  **if**
 you don't have unique keys on your table(s). That's a simple fact, and if anyone tells you anything different - that person is blatantly wrong. I can explain why, but the explanation would be a lengthy one so I'll skip it. 
 Your code should be quite simple - just insert the data. Since it's not  exactly  clear how uniqueness is handled (it appears to be  , but there's an edge case), without a bit more data form you - it's not possible to suggest a complete solution. 
 You can always disregard what I wrote and try to go with suggested solutions, but they will fail miserably and you'll end up with duplicates. 
 
 I would say if there is a relationship between   and   you can simply employ  Laravel's  model relationship, such as: 
 
 Thats what I would do to ensure that the new data is updated or a new one is created. 
 
 PS: I have used updateOrCreate() on Laravel 5.2.* only. And also it would be nice to actually do some check on user existence before updating else some errors might be thrown for null. 
 
 **UPDATE**

 
 I'm not sure what to do. Could you explain a bit more what I should do? What about $attributes_to_update ? 
 
 Okay. Depending on what fields in the friends table marks the two friends, now using your example   and  . By the example I gave, the   would be (assuming   is the new friend's id): 
 
 If your relationship between   and   is set properly, then the   would already included in the insertion. 
 Furthermore,on this updateOrCreate function: 
 
  would mean those fields you want to check if they already exists before you create/update new one so if I want to ensure, the check is made when   is   then I can pass both say `['user_1' => 1, 'accepted' => 0] 
 Hope this is clearer now. 
 
 I'm assuming "friends" here represents a many-to-many relation between users. Apparently friend requests from one user ( ) to another ( ). 
 You can represent that with Eloquent as: 
 
 That is, no need for   model. 
 Then, I think this is equivalent to what you want to accomplish (if not, please update with clarification): 
 
 (  0 or 1, according to your business logic). 
 This   method prevents duplicate inserts, and updates or creates any row for the given pair of "myId - otherId". You can set any number of additional fields in the pivot table with this method. 
 However, I agree with  @Mjh  about setting unique constraints at database level as well. 
 
 For this kind of issue,  First of all, you have to enjoy the code and database if you are working in laravel.  For this first you create realtionship between both table   and   in database as well as in Models . Also you have to use   in database . 
 
 This is query you can work with this . Also you can pass multiple condition here. Thanks 
 
 You can use  /   methods ( https://laravel.com/docs/5.3/eloquent ) 
 Example (from docs) : 
 
 
 use `firstOrCreate' it will do same as you did manually.  
 Definition of FirstOrCreate copied from the Laravel Manual.  
 The firstOrCreate method will attempt to locate a database record using the given column / value pairs. If the model can not be found in the database, a record will be inserted with the given attributes. 
 So according to that you should try :  
 
 It will check with both IDs if not exists then create record in friends table. 
 