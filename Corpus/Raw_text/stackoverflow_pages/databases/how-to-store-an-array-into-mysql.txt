*** how-to-store-an-array-into-mysql ***

 Is there a way to store an array into mysql field? I'm creating a comment rating system so I want to store the arrays of user ids to prevent multiple votings. I'm going to create new table that holds the comment id and the array of user ids who have voted on this comment. Than I'll join comments table and this table and check whether the current user id exists in the voters array or note. If it does than the voting icons would be disabled. I think I'll prevent to use mysql query in loop in this way. 
 Do you happen to know any better ways? 
 
 You can always serialize the array and store that in the database. 
 PHP Serialize 
 You can then unserialize the array when needed. 
 
 You may want to tackle this as follows: 
 
 The composite  primary key    on the  intersection table    will prevent users from voting multiple times on the same comments. 
 Let's insert some data in the above schema: 
 
 Now let's add some votes for user 1: 
 
 The above means that user 1 gave a vote of type 1 on comments 1 and 2. 
 If the same user tries to vote again on one of those comments, the database will reject it: 
 
 If you will be using the  InnoDB  storage engine, it will also be wise to use  foreign key  constraints on the   and   fields of the intersection table. However note that  MyISAM , the default storage engine in MySQL, does not enforce foreign key constraints: 
 
 These foreign keys guarantee that a row in   will never have a   or   value that doesn't exist in the   and   tables, respectively. Foreign keys aren't required to have a working relational database, but they are definitely essential to avoid broken relationships and orphan rows (ie.  referential integrity ). 
 In fact, referential integrity is something that would have been very difficult to enforce if you were to store serialized arrays into a single database field. 
 
 Consider normalizing the table structure into a comments, and a separate votes table. 
 Table "comments": 
 
 Table "votes": 
 
 this would allow an unlimited number of votes without having to deal with the limits of a database field.  
 Also, you may have future needs for operations like "show all votes a user has cast", removing specific votes or limiting the maximum number of votes per day. These operations are dead easy and fast to implement with a normalized structure, and horribly slow and complex in a serialized array. 
 
 you should have three tables: users, comments and comment_users. 
 comment_users has just two fields: fk_user_id and fk_comment_id 
 That way you can keep your performance up to a maximum :) 
 
 I'd prefer to normalize your table structure more, something like; 
 
 Now it's easier to maintain! And MySQL only accept one vote per user and comment. 
 
 create table like this, 
 
 In this way you can check whether the user posted the comments are not..
Apart from this there should be tables for   and   with respective id's 
 
 If you just store the data in a database as you would if you were manually putting it into an array 
 
 Then when you are pulling from the database, use the explode() function 
 
 Like so! 
 
 Storing with  json  or  serialized  array is the best solution for now.
With some situations (trimming " ' characters) json might be getting trouble but serialize should be great choice. 
 Note: If you change serialized data manually, you need to be careful about character count. 
 
 You can save your array as a json. 
there is documentation for json data type:  https://dev.mysql.com/doc/refman/5.7/en/json.html 
 
 You can use the php serialize function to store array in MySQL. 
 
 Itâ€™s output will be :  
 
 And then you can use the php unserialize function to decode the data. 
 I think you should visit  this page on storing array in mysql . 
 