*** how-to-tell-if-sqlite-database-file-is-valid-or-not ***

 In the code below,   is the path to a simple text file, not a real sqlite database.  I was hoping for   to detect that, but it doesn't (  is not  , and   is  ).  So, how to detect that a file is not a valid sqlite database? 
 
 
 sqlite opens databases lazily. Just do something immediately after opening that requires it to be a database. 
 The best is probably  . 
 
 This will report 0 if the database hasn't been created (for instance, an empty file). In this case, it's safe work with (and run  , etc) 
 If the database has been created, it will return how many revisions the schema has gone through. This value might not be interesting, but that it's not zero is. 
 If the file exists and isn't a database (or empty), you'll get an error. 
 
 If you want a somewhat more thorough check, you can use  . This is a lighter-weight integrity check, which skips checking that the contents of the tables line up with the indexes. It can still be very slow. 
 Avoid  . It not only checks every page, but then verifies the contents of the tables against the indexes. This is positively glacial on a large database. 
 
 For anyone needing to do this in C# with System.Data.SQLite you can start a transaction, and then immediately roll it back as follows:- 
 
 If the file is not a valid database the following   is thrown - file is encrypted or is not a database ( ). If you aren't using encrypted databases then this solution should be sufficient.
(Only the 'db.Open()' was required for version 1.0.81.0 of System.Data.SQLite but when I upgraded to version 1.0.91.0 I had to insert the inner using block to get it to work). 
 
 I think a pragma integrity_check could do it. 
 