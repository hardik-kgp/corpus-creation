*** how-to-test-if-cursor-is-empty-in-a-sqlitedatabase-query ***

 I have an SQL table which is created by the following code: 
 
 I query the table as follows: 
 
 The problem is I have to start an Activity A if the cursor is empty(i.e. the table is storing no values) and Activity B if the cursor is not empty(i.e. table is filled). 
 I am unable to find a method which can tell me if the table is empty or not.
I Have tried to used Log as follows: 
 
 But the LOG shows 1, if the table is empty...and again 1, if table has 1 entry....it shows 2, if table has two entries and so on. 
 Can you suggest some method of solving my problem of starting different activities based on if cursor is empty or not.  
 
 What about testing the cursor like this, and then doing what you've said: 
 
 
 getCount () 
 
 Returns the numbers of rows in the cursor 
 http://developer.android.com/reference/android/database/Cursor.html#getCount() 
 
 The easiest and cleanest way to test for an empty cursor is the following code: 
 
 Per the docs, the method returns false if the cursor is empty: 
 http://developer.android.com/reference/android/database/Cursor.html#moveToFirst%28%29 
 
 public abstract boolean moveToFirst () 
 Added in API level 1 Move the cursor to the first row. 
 **This method will return false if the cursor is empty**
. 
 Returns whether the move succeeded. 
 
 
 Deleted records remain in SQLite as null records, but   counts only not null records. If your table has some records that are null, some of not null records will have   numbers bigger than result of  . To reach them, you can iterate cursor ( using for() loop ) double the number of times than result of   and use the cursor to fill record_Id numbers into an array. Lets say resulting array is  . 
 That means records 3, 4, 10, 13, are null records and your table has 14 record all together, not 10 that you got from  . 
 Remember:  
 
  returns number of not null records , 
 cursor returns   numbers of not null records, 
  numbers "missed" by cursor are   numbers of null records, 
 must reach sufficiently further than   to get them all. 
 
 
 You just need to use getCount().
If your sql is correct but doesn't return any row you will have a NOT null cursor object but without a rows and getCount() will return 0. 
 
 My suggestion would be using a  . 
 Those are Activity's which are meant to display items in a  . You can simply use a   to populate them (also illustrated in the  s JavaDoc page). 
 They also offer a  -method , which can be used to display a   (might be a  ) which informs the user that there are no records yet and how he can create one. 
 An example on how to do that can be found  here . 
 
 I believe your problem is you're not creating a proper query. 
 You should use the SQLiteDatabase query. 
 
 You then can use c.getCount() to determine if the table has anything. 
 