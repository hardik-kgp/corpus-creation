*** how-to-test-run-an-update-statement-in-postgresql ***

 How can I test an UPDATE statement for example to see if it would work, for example if it would actually update rows etc? 
 Is there a way to simulate it easily? 
 
 Use a  transaction  to wrap your update statement and a select query (to test the update) and then always roll it back.  
 Example: 
 
 A transaction typically ends with a commit but since you're just testing and do not want the changes to be permanent you will just roll back. 
 
 Wrap it in a  transaction , test the results with a SELECT and rollback at the end. 
 
 
 You could always build up a sample database on  SQL Fiddle  and try out your update statements there. 
 Full disclosure: I am the author of sqlfiddle.com 
 
 You can use a tool that allows you to take a snapshot of the DB and rollback to it easily. 
I recommend  OffScale  - it's basically git for databases. 
 
 Run the same check with a SELECT statement first: the rows returned by SELECT will be the rows modified by UPDATE 
 
 Given this simple update: 
 
 I would test it using something like this: 
 
 Actually, I'd proably engage brain and do analysis more like this: 
 
 
 With Postgres you can use the UPDATE clause  RETURNING  to show which rows have been modificated. 
 
 