*** how-to-use-redis-within-a-c-program ***

 What would be the best way to use a Redis DB within a C++ program? 
 
 Using a  C bindings  library? There doesn't seem to be a C++ wrapper available anywhere. 
 
 I have forked the fictorial redis-cplusplus-client, made it compatible to redis-server v2.0, added missing api calls and implemented consistent hashing. 
There is also an early state of high level classes that will be useable like stl types in the near future (shared_string, shared_int, shared_set, ...). Nothing is production ready yet but the provided tests are succesfully running :-) 
 http://github.com/mrpi/redis-cplusplus-client 
 
 https://github.com/brianwatling/redispp 
 I've just released my c++ redis client on github. It's main feature right now is pipelining, I'll be adding more features soon, possibly sharding/consistent hashing next. 
 
 **Official list of C++ clients**

 Explore a  **full list**
 of  Redis C++ clients on redis.io . You will find there different clients based on boost, Qt, etc. Note that at this time none of the C++ client implementations are marked as "Recommended."  But there is a recommended C client,  hiredis , which should work just fine in C++. 
 
 http://github.com/fictorial/redis-cplusplus-client 
 This C++ client library is not maintained however as few people actually use C++ to communicate with Redis. 
 
 I wrote a C++ Redis client:  redis-plus-plus . It's based on  hiredis , and written in C++11. It supports the following features: 
 
 Most commands for Redis. 
 Connection pool. 
 Redis scripting. 
 Thread safe unless otherwise stated. 
 Redis publish/subscribe. 
 Redis pipeline. 
 Redis transaction. 
 Redis Cluster. 
 Redis Sentinel. 
 Redis Stream. 
 STL-like interface. 
 Generic command interface. 
 
 It's very fast, and easy to use. If you have any problem with this client, feel free to  let me know . If you like it, also feel free to  star it  :) 
 
 Check the  doc  for details. 
 
 https://github.com/petrohi/hiredispp 
 Also check out hiredispp. It is far from complete, but very simplistic implementation that wraps around C based hiredis. Hiredis takes care of low level protocol and networking stuff while hiredispp wrappers just make it C++ friendly. 
 
 Another C++ client can be found here:  https://github.com/luca3m/redis3m 
 It's a wrapper of hiredis, with nice C++ classes, an high availability connection pooling and a set of patterns already implemented and ready to use. 
 
 If you care about performance, give a try for  bredis . It uses c++ 14 and   and has not other dependencies (i.e. no   nor   etc.). Its usage might be not as convenient as the other C++ libraries, but that was trade off by design in the sake of performance and maximum flexibility.  
 bredis  much more easy to use on Windows, as it has no   dependency. 
 