*** how-to-use-sharedpreferences-to-save-more-than-one-values ***

 I am developing a dictionary app. In my app, I assume that user wants to save favourite words. I have decided to use  **SharedPreferences**
 to save these values (I am aware that SQLite and files are better but I am stuck to "SharedPreferences", so keep on with it). 
 Here below is my code: 
 
 The problem is that it does not retain more than one favourite word. I mean only one favourite word is saved and when a new one is added, the previous is erased. 
 **So, how can the above code be edited so that this problem is solved?**

 Can you guys there help? Thank you very much. 
 
 **You can save multiple favorites**
 in a single preference by adding numerous favorites in a single string, each favorite item separated by comma. Then you can use   method to convert it into String Array. Here is the full source code. 
Use MyUtility Methods to save multiple favorite items. 
 
 get String array of all favorites saved 
 
 Save these methods in separate Utility class 
 
 If you have to  **add extra favorites**
. Then get favorite string from   and append comma+favorite item and save it back into  . 
* You can use any other string for separator instead of comma. 
 
  work via simple key/value so when you provide a new value for the same key, the previous value is overwritten. The only way to do what you're trying to do is to use different keys, which sort of hints towards the fact that you probably shouldn't be using   for what you're trying to do. 
 
 Honeycomb added the   method, so you could use that if you don't have to support anything less than Honeycomb: 
 
 If you need support for pre-Honeycomb devices, you will have to come up with your own scheme. 
 One possibility is to store the words as comma-separated values in one preference. 
 Another is to generate a new key for each new word, "favourite1", "favourite2", "favourite3" and have another preference you use to store the number of words. 
 
 Every time you click the button you save the favorite word with the already present key:   and you override it. To save more than one word you have to save the words with different keys.
So every time you save a favorite word you could do: 
 
 
 Well that's because the actual preference storage is not a List of strings, just a single one, so whenever you say   you overwrite the previous value. A good way to store multiple objects in a single preference string is to use JSON. Simply serialize the value and then write it to them. It also has the benefit of converting directly back into an object of whatever complexity you wish. Look into using  Jackson  if you decide to go on this route. 
 
 You could use a TreeMap (or other type of list which implements Serializable).  Here's how I handled a list of favourites recently.  In the TreeMap, Favourite is a class I use.  In your case, you could just use TreeMap<Integer, String> instead. 
 
 You can also avoid the "::" thing you're doing to separate values. 
 Hope that helps... 
 