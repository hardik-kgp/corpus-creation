*** how-to-use-slicks-mapped-tables-with-foreign-keys ***

 I'm struggling with Slick's lifted embedding and mapped tables. The API feels strange to me, maybe just because it is structured in a way that's unfamiliar to me.  
 I want to build a Task/Todo-List. There are two entities:  
 
 Task: Each task has a an optional reference to the next task. That way a linked list is build. The intention is that the user can order the tasks by his priority. This order is represented by the references from task to task. 
 TaskList: Represents a TaskList with a label and a reference to the first Task of the list. 
 
 
 
 
 Now I tried to write a data access object (DAO) for these two entities. 
 
 Unfortunately it does not compile. The problems are in the   projection of both tables at   respective  .  
 
 
 
 
 I tried to solve that with the following TypeMapper but that does not compile, too. 
 
 
 
 
 
 **Main question: How to use Slick's lifted embedding and mapped tables the right way? How to I get this to work?**

 Thanks in advance. 
 
 The short answer is: Use ids instead of object references and use Slick queries to dereference ids. You can put the queries into methods for re-use. 
 That would make your case classes look like this: 
 
 I'll publish an article about this topic at some point and link it here. 
 