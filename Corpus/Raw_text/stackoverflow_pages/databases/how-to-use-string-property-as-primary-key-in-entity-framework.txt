*** how-to-use-string-property-as-primary-key-in-entity-framework ***

 I'm new in EF and try to do my first steps by code first approach in ETF6.0 and now i have a problem. 
 I have a property  
 
 which is my primary key for the model. 
 But if I run the  
 
 PM> Update-Database 
 
 command in package manager console to update pending migrations to the database i get the following error: 
 
 Identity column 'FooId' must be of data type int, bigint, smallint,
  tinyint, or decimal or numeric with a scale of 0, and constrained to
  be nonnullable. 
 
 If I change the PK in my model to  
 
 everything works fine. 
 But I would need the PK to be of type string because it makes absolutely sens in my case. I know there are disadvantages but for me it is necessary. 
 I saw an older post here  How to make string as primary key in entity framework! . 
 But it seems not to solve my problem or I just don't understand it. 
 Is it really that I can't use a string as PK on a SQL database? 
 Or is there a way to do that? 
 
 This is the proper way of creating a PK without Identity Autoincrement enabled: 
 
 
 If you need your primary key to be a string, then don't make it an identity column.  Identity columns will generate primary key values for you, which you should turn off if you intend to generate the values yourself. 
 
 What is your reason for having a string as a primary key? 
 I would just set the primary key to an auto incrementing integer field, and put an index on the string field. 
 That way if you do searches on the table they should be relatively fast, and all of your joins and normal look ups will be unaffected in their speed. 
 You can also control the amount of the string field that gets indexed. In other words, you can say "only index the first 5 characters" if you think that will be enough. Or if your data can be relatively similar, you can index the whole field. 
 
 Another possible answer for others not wanting to alter their entities is telling the  DbContext : 
 
 This will tell the  DbContext  that the  Food  model has an Id named  FoodId  and it will requires an ID generation. 
 EF Core default values:  MSDN 
 