*** how-to-work-with-liquibase-a-concrete-example ***

 Following the quickstart on  liquibase  i've created a changeset (very dumb :) ) 
 Code: 
 
 I've created a clean schema and i've launched the migrate command. 
 Liquibase created the database, with the support tables databasechangelog and ..lock. 
 Now how i can track the changes?? i've modified the changeset adding a new createTable element but when i try the command "update" liquibase tells me this 
 
 so i don't think to have understood the way to work with liquibase. 
 Someone may point me to the right direction?? 
 Thanks 
 
 You should never modify a   that was already executed. Liquibase calculates checksums for all executed changeSets and stores them in the log. It will then recalculate that checksum, compare it to the stored ones and fail the next time you run it if the checksums differ.     
 What you need to do instead is to add  **another**
   and put your new createTable element in it.     
 QuickStart is good readin' but it is indeed quick :-) Check out the full  manual , particularly its  ChangeSet  section. 
 
 This currently accepted answer is slightly out of date based on changes in Liquibase 2.x. In the 2.x version, Liquibase will still fail if the md5 checksum has changed for a changeset, but you can specify the  **runOnChange**
 attribute if you want to be able modify it.  
 From the  documentation : 
 
 **runOnChange**
 - Executes the change the first time it is seen and each time the change set has been changed 
 
 
 If it's a change to a changeset that basically has already been done, you can manually modify the database so that its md5 for that changeset matches the new one.  Good for minor textual changes.  Or you can delete that changeset row from your table. 
 