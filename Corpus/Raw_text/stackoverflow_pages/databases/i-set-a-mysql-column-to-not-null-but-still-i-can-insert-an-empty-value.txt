*** i-set-a-mysql-column-to-not-null-but-still-i-can-insert-an-empty-value ***

 In MySQL I have a table with Column1 as NOT NULL: 
 
 I can still insert an empty value like this: 
 
 How can I make the MySQL column also disallow blankstring? 
 
 **EMPTY STRINGS**

 In ORACLE an empty string is used to  represent  NULL.  In virtually everything else, however, an empty string is still a string, and so not NULL. 
 
 **INTS**

 In your case you're actually inserting STRINGS into an INT column.  This forces an  implicit  CAST operation. 
 When your RDBMS is converting the string   to an INT it must get the value 0.  As 0 is not NULL, this gets inserted. 
 A more valid test would be: 
 
 
 **EDIT**

 Sorry, I only half read your question.  You also ask how to stop   being inserted. 
 Your first problem is that you're inserting STRINGS and the table is defined as having INT fields.  You can put constraints on the data that gets inserted, but these constraints will apply the the value  after  an conversion to an INT.  Unless you want to prevent the value   from also being inserted, there is nothing you can do to the table to prevent this scenario. 
 Your better bet is to address why you are inserting strings in the first place.  You could use a stored procedure that takes, and checks, the strings before converting them to INTs and then inserting them.  Or, better still, you could make the checks in your client application. 
 A technically available option is to make the fields CHAR fields, then put a constraint on the fields, preventing   from being inserted.  I would  **strongly**
 recommend against this. 
 
 You're inserting an  empty string , not  . The constraint is only against NULL values, and it would appear that your database is not coercing empty strings to NULL when it converts them to INT (which raises the additional question of why you're inserting string literals into INT columns...) 
 
 **MySQL, how to disallow empty string:**

 
 Create your table: 
 
 Create your 'before insert' trigger to check for blankstring and disallow. 
 
 Try to insert null and blankstring into your column: 
 
 
 Finally, Grumble to self and smack the nearest person who was responsible for picking mysql over postgresql. 
 
 As Martin mentions, depends on your RDBMS. Oracle treats empty strings as NULLs while others do not. See this  SO post . 
 
 NULL is not equal to emptiness. In MySQL, there is an additional byte with each column entry to hold the "is null" information. To save space, a column is often defined as "not null" to spare this extra byte if the null status doesn't add any thing to the data model. 
 