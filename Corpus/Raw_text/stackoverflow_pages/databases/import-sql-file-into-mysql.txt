*** import-sql-file-into-mysql ***

 I have a database called  . I haven't created any tables there. But I have a SQL file which contains all the necessary data for the database. The file is   which is in  . This file has size of about 103 MB. I am using wamp server. 
 I have used the following syntax in MySQL console to import the file: 
 
 But this didn't work. 
 
 From the mysql console: 
 mysql>  
 mysql>  
 
 make sure there is no slash before path if you are referring to a relative path... it took me a while to realize that! lol 
 
 Finally, i solved the problem. I placed the `nitm.sql` file in `bin` file of the `mysql` folder and used the following syntax. 
 
 And this worked. 
 
 If you are using wamp you can try this. Just type   first. 
 
 Click your wamp server icon then look for   then run it. 
 If you dont have password, just hit enter and type : 
 
 If you have password, you will promt to enter a password. Enter you password first then type: 
 
 
  should look like  
 so the commend is  **mysql>source C:\mydb.sql;**

 This kind of importing sql dump is very helpful for BIG SQL FILE. 
 I copied my file   to directory   .It should be capital C: in order to run 
 and that's it. 
 
 In windows, if the above suggestion gives you an error (file not found or unknown db) you may want to double the forward slashes: 
 In the mysql console: 
 
 
 Ok so, I'm using Linux but I think this holds true for Windows too.
You can do this either directly from the command prompt 
 
 Or from within the mysql prompt, you can use: 
 
 But both these approaches have their own benefits in the results they display.
In the first approach, the script exits as soon as it encounters an error. And the better part, is that it tells you the exact line number in the source file where the error occurred. However, it ONLY displays errors. If it didn't encounter any errors, the scripts displays NOTHING. Which can be a little unnerving. Because you're most often running a script with a whole pile of commands. 
 Now second approach (from within the mysql prompt) has the benefit that it displays a message for every different MySQL command in the script. If it encounters errors, it displays the mysql error message but continues on through the scripts. This can be good, because you can then go back and fix all the errors before you run the script again. The downside is that it does NOT display the line numbers in the script where the errors were encountered. This can be a bit of a pain. But the error messages are as descriptive so you could probably figure out where the problem is. 
 I, for one, prefer the directly-from-OS-command line approach. 
 
 If you are using xampp 
 
 
 You are almost there
use 
 
 You may also access help by 
 
 
 For localhost on XAMPP. Open a cmd window and type 
 
 **Attention! No semi-colon after -p**

Enter your password and type 
 
 to select the database you need.  
 Check if your table is there 
 
 Import from your sql file 
 
 I have put my file on C:\xampp\mysql\bin location in order to don't mix up with locations of sql file.  
 
 Don't forget to use 
 
 If your sql file is in utf-8 :) 
 So you need to do: 
 
 cmd.exe 
 mysql -u root 
 mysql> charset utf8 
 mysql> use mydbname 
 mysql> source C:\myfolder\myfile.sql 
 
 Good luck )) 
 
 In Linux I navigated to the directory containing the .sql file before starting mysql.   The system cursor is now in the same location as the file and you won't need a path.  Use source myData.sql  where my date is replaced with the name of your file.   
 
 
 connect targetDB 
 
 Done 
 
 Try: 
 
 Check  MySQL Options . 
 Note: It is better to use the full path of the SQL file  . 
 
 from the command line (cmd.exe, not from within mysql shell) try something like: 
 
 
 Does your dump contain features that are not supported in your version of MySQL? You can also try to remove the starting (and ending) MySQL commented SET-statements.  
 I don't know if your dump comes from a Linux version of MySQL (line endings)? 
 
 I have installed my wamp server in D: drive so u have to go to the following path from ur command line->(and if u have installed ur wamp in c: drive then just replace the d: wtih c: here) 
 
 here  **root**
 is user of my phpmyadmin
 **password**
 is the password for phpmyadmin so  **if u haven't set any password for root just nothing type at that place,**

db_name is the database (for which database u r taking the backup)
,backupfile.sql is the file from which u want ur backup of ur database and u can also change the backup file location(d:\backupfile.sql) from to any other place on your computer 
 
 
 That would write the output of the mysql command to 'nitm.sql;' (What's the ';' supposed to do?) Assuming you've got a copy of the original file (before you overwrote it) then: 
 
 
 Export Particular DataBases 
 
 this will export CCR and KIT databases... 
 Import All Exported DB to Particular Mysql Instance  (You have to be where your dump file is) 
 
 
 In Windows OS the following commands works for me. 
 
 No single quotes or double quotes around file name. Path would contain '/' instead of '\'. 
 
 For those of you struggling with getting this done trying every possible answer you can find on SO. Here's what worked for me on a VPS running Windows 2012 R2 : 
 
 Place your sql file wherever the bin is for me it is located at  
 Open windows command prompt (cmd) 
 Run  
 Enter your password 
 Run command  ; 
 Import your file with command source  
 
 It did it for me as everything else had failed. It might help you too. 
 