*** importing-a-csv-file-into-a-sqlite3-database-table-using-python ***

 I have a CSV file and I want to bulk-import this file into my sqlite3 database using Python. the command is ".import .....". but it seems that it cannot work like this. Can anyone give me an example of how to do it in sqlite3? I am using windows just in case.
Thanks 
 
 
 
 Creating an sqlite connection to a file on disk is left as an exercise for the reader ... but there is now a two-liner made possible by the pandas library 
 
 
 The   command is a feature of the sqlite3 command-line tool. To do it in Python, you should simply load the data using whatever facilities Python has, such as the  csv module , and inserting the data as per usual. 
 This way, you also have control over what types are inserted, rather than relying on sqlite3's seemingly undocumented behaviour. 
 
 My 2 cents (more generic): 
 
 
 Many thanks for bernie's  answer !  Had to tweak it a bit - here's what worked for me: 
 
 My text file (PC.txt) looks like this: 
 
 
 
 
 You can do this using   &   efficiently 
 
 Odo will store the csv file to   (sqlite database) under the schema  
 Or you use   directly, without  . Either ways is fine. Read this  documentation 
 
 Based on Guy L solution (Love it) but can handle escaped fields. 
 
 
 
 
 in the interest of simplicity, you could use the sqlite3 command line tool from the Makefile of your project. 
 
  then creates the sqlite database from an existing test.csv file, with a single table "test". you can then   to verify the contents. 
 
 If the CSV file must be imported as part of a python program, then for simplicity and efficiency, you could use   along the lines suggested by the following: 
 
 The point is that by specifying the filename of the database, the data will automatically be saved, assuming there are no errors reading it. 
 