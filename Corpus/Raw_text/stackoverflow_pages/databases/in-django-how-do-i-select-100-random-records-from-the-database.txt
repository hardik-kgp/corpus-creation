*** in-django-how-do-i-select-100-random-records-from-the-database ***

 
 
 
 
 
 This question already has answers here :
                            
                         
 
 
 
 How to get two random records with Django 
 
                                    (6 answers)
                                 
 
 Closed  3 years ago . 
 
 
 
 
 
 See the  order_by docs . Also be aware this approach does not scale well (in fact, it scales really, really badly). See  this SO answer  for a better way to handle random selection when you have large amounts of data. 
 
 If you're going to do this more than once, you need to design this into your database. 
 If you're doing it once, you can afford to pay the hefty penalty.  This gets you exactly 100 with really good random properties.  However, it uses a lot of memory. 
 
 Here's another algorithm that's also kind of slow since it may search the entire table.  It doesn't use very much memory at all and it may not get exactly 100. 
 
 If you want to do this more than once, you need to add an attribute to Content to allow effective filtering for "random" values.  For example, you might do this. 
 
 This will partition your data into 32768 distinct subsets.  Each subset is 1/32768'th of your data.  To get 100 random items, you need 100*32768/total_count subsets of your data. 
 
 This is  **fast**
 and it's reproducible.  The subsets are "arbitrary" not technically "random". 
 
 I do: 
 
 Runs only single-simple MySQL query and is good on performance. 
 