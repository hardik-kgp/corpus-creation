*** in-redis-how-do-i-remove-keys ***

 I want to remove keys that match "user*". 
 how do I do that in redis command line? 
 
 This is not a feature right now to be able to do in one shot (see the comments in the   documentation ). Unfortunately, you are only left with using  , looping through the results, and then using   to remove each one. 
 How about using bash a bit to help? 
 
 To step through it: 
 
  -- get all the keys and strip out the extra text you don't want with awk. 
  -- for each one, create an echo statement to remove it. 
  -- take the DEL statements and pass them back into the cli. 
 
 Not suggesting this is the best approach (you might have some issues if some of your usernames have spaces in them, but hopefully you get the point). 
 
 Another compact one-liner I use to do what you want is: 
 
 
 Now there is a command to remove a key,i.e., DEL key [keys] 
 DEL key... 
 
 Further to orangeoctopus' answer, you don't need the   and pipe, you can pass commands as arguments into  . This means you can do 
 
 
 Using  , find all matching keys from redis using   command and pipe to   command. 
 
 
 I know this is old, but for those of you coming here form Google: 
 I just published a command line interface utility to npm and github that allows you to delete keys that match a given pattern (even  , or as you asked user ) from a Redis database. 
 You can find the utility here: 
 https://www.npmjs.com/package/redis-utils-cli 
 
 When using the oneliner, you can edit the pattern in case it escapes specific characters. For instance, to delete patterns like '\b test \b' use: 
 
 
 Use this to remove redis keys having backslashes, quotes, double quotes or spaces: 
 
 