*** in-which-cases-will-oracle-create-indexes-automatically ***

 As far as I know ( this page ) Oracle automatically creates an index for each UNIQUE or PRIMARY KEY declaration. Is this a complete list of cases when indexes are created automatically in Oracle? 
 
 I'll try to consolidate given answers and make it community wiki. 
So indexes are automatically created by Oracle for such cases:   
 
 APC : For primary key and unique key unless such indexes already exist. 
 APC : For LOB storage and XMLType. 
 Gary : For table with a nested table. 
 Jim Hudson : For materialized view. 
 
 
 Firstly, Oracle does not always create an index when we create a primary or unique key.  If there is already an index on that column it will use it instead... 
 
 ... note that   is not a unique index; it doesn't matter ... 
 
 There is another case when Oracle will automatically create an index: LOB storage.... 
 
 **edit**

 The database treats XMLType same as other LOBs... 
 
 
 No, we're getting closer but that's not quite a complete list yet.  
 There will also be an index automatically created when you create materialized view since Oracle needs to be able to quickly identify the rows when doing a fast refresh. For rowid based materialized views, it uses I_SNAP$_tablename. For primary key materialized views, it uses the original PK name, modified as necessary to make it unique.  
 
 
 And another one, if you create a table with a nested table you get an index created automatically. Object based storage in general can do this as there can be hidden tables created. 
 I think schema-based XMLTypes will also do it. 
 
 Yes, that's the complete list. Oracle automatically creates an index for each UNIQUE or PRIMARY KEY declaration. 
 