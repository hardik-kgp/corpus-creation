*** is-it-possible-to-create-a-column-with-a-unix-timestamp-default-in-mysql ***

 I'm trying to do this, but it seems like MySQL isn't allowing me. Is there a solution to this issue or am I expected to always include the function in my INSERT queries? 
 
 I'm aware of the TIMESTAMP type that accepts a CURRENT_TIMESTAMP default, but my client insisted on using epoch time in the database. 
 
 The way MySQL implements the   data type, it is actually storing the epoch time in the database. So you could just use a   column with a default of   and apply the   to it if you want to display it as an int: 
 
 However, if you really want the datatype of the column to be  , you can use R. Bemrose's suggestion and set it via trigger: 
 
 
 From  the documentation : 
 
 With one exception, the default value
  must be a constant; it cannot be a
  function or an expression. This means,
  for example, that you cannot set the
  default for a date column to be the
  value of a function such as NOW() or
  CURRENT_DATE. The exception is that
  you can specify CURRENT_TIMESTAMP as
  the default for a TIMESTAMP column. 
 
 
 You can create triggers for this. 
 
 **for insertion**

 
 
 query   
 
 
 
 in this case 
 
 
 
 **for update**

 
 
 query   
 
 
 
 in this case 
 
 
 
 **Note :**
 I have no idea about the performance of  **MYSQL  TRIGGER**
  
 Please go through these links  
 
 Identify some of the drawback of implementing sql server triggers 
 Using Triggers 
 
 
 
 Well, if MySQL won't let you do it directly, you can always do it using a   trigger . 
 