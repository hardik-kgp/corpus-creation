*** is-it-possible-to-specify-the-schema-when-connecting-to-postgres-with-jdbc ***

 Is it possible? Can i specify it on the connection URL? How to do that? 
 
 I know this was answered already, but I just ran into the same issue trying to specify the schema to use for the liquibase command line.  
 **Update**

As of JDBC v 9.4  you can specify the url with the new currentSchema parameter like so: 
 
 Appears based on an earlier patch: 
 http://web.archive.org/web/20141025044151/http://postgresql.1045698.n5.nabble.com/Patch-to-allow-setting-schema-search-path-in-the-connectionURL-td2174512.html 
 Which proposed url's like so:
 
 
 
 As of  version 9.4 , you can use the   parameter in your connection string. 
 For example: 
 
 
 If it is possible in your environment, you could also set the user's default schema to your desired schema: 
 
 
 I don't believe there is a way to specify the schema in the connection string.  It appears you have to execute 
 
 after the connection is made to specify the schema. 
 
 I submitted an updated version of a patch to the PostgreSQL JDBC driver to enable this a few years back.  You'll have to build the PostreSQL JDBC driver from source (after adding in the patch) to use it: 
 http://archives.postgresql.org/pgsql-jdbc/2008-07/msg00012.php 
 http://jdbc.postgresql.org/ 
 
  â€“  
 When instantiating a   implementation, look for a method to set the current/default schema.  
 For example, on the   class call  . 
 
 If left unspecified, Postgres attempts to connect to a schema named  .  
 
 Don't forget   which you could use in a separate Statement 
 
 SET SCHEMA 'value' is an alias for SET search_path TO value. Only one
  schema can be specified using this syntax. 
 
 And since 9.4 and possibly earlier versions on the JDBC driver, there is support for the   method. 
 
 In Go with "sql.DB" (note the   with underscore): 
 
 
 This was already answered  : 
 jdbc:postgresql://localhost:5432/mydatabase?currentSchema=myschema 
 As in previous answers , the above connection string just works . 
 I've checked , and it's OK :
 https://youtu.be/m0lBUHSLkNM?t=79 
 ( Although the accepted answer was given 8 years ago , 
it was edited 1 year ago . . . ) 
 