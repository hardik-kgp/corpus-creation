*** is-there-a-good-alternative-to-sqlplus-for-oracle ***

 I am not a fan of using SQL*PLUS as an interface to Oracle.  I usually use  yasql , but it hasn't been updated since 2005 and can do with some improvements.  A quick  Google search  shows yasql and  SQLPal .  I am using linux, so SQLPal is not an option.   
 Are there any alternatives out there, or am I stuck with an interface that I do not like or one that is no longer maintained?   
 
 I presume that you want a low-overhead method of knocking out queries, but want more functions than SQL*Plus provides? Why not use Oracle's  SQL Developer ? It's free. 
 Install, make a new connection to your database, then just start typing a script. Press F5 to run it (or just the part of the script that you've highlighted). 
 
 Take a look at  gqlplus . It wraps sql*plus on linux and makes it more user-friendly by adding things like command history, table name completion and so on.  
 
 Emacs  can provide so much more powerful text editing features and functionality beyond the default SQL*Plus command-line interface.  
 Here are a few links on how to use Emacs as a wrapper for SQL*Plus: 
 
 Emacs and Oracle 
 EmacsWiki:SqlPlus 
 
 
 TOAD is pretty expensive, but you can download a 90-day trial from the Quest site to see if it's got the feature set you want (don't be fooled by the "freeware" title - it's only free for 90 days, and then it expires, which definitely makes it shareware): 
 http://www.toadworld.com/Freeware/ToadforOracleFreeware/tabid/558/Default.aspx 
 Another options is a tool I've seen on CodeProject: 
 http://www.codeproject.com/KB/database/OQuery.aspx 
 It's in .NET, so you'd have to see if it compiled on Mono, but it might be worth a shot. I haven't used either tool (Toad or this one), since I'm a SQL Server guy, but I've heard good things about Toad. 
 
 If it's command-line you want, I'd recommend  rlwrap  to go with sqlplus; it gives you line-editing capabilities and command history, making sqlplus a somewhat usable tool. 
 
 You could try PL/SQL developer from  allroundautomations , there is a trial available and the price is much lower than TOAD. 
 Regards
K 
 
 It depends what you are looking for.
If it is a GUI query tool, then Oracle have their free SQL Developer product (though it has a hefty footprint). There's a few free cross-database ones too. I like SQUirrel SQL client myself. There's also DBVisualiser and a few others.
JEdit is an editor that has a DBConsole plugin for running database queries and DML/DDL.
They are all java based so run most places. 
 If you like a command line, check out sqlpython (the developer has identified a couple of others  too ) 
 
 Take a look at  Senora . This tool is written in Perl and therefore is cross platform. Also Senora is free, extensible and intends to be your primary Oracle shell. You can extend Senora easily by providing you own plugins. Senora attempts to provide a friendlier output formatting than sqlplus. Columns tend to be only as wide a really needed. 
 Another interesting alternative is  SQLcl . It provides in-line editing, statement completion, command recall, DBA stuff (e.g. startup, shutdown) and also supporting your previously written SQL*Plus scripts.  
 
 I like  SQL Developer .  It's free, has an intuitive UI, and runs on Windows, Mac, and Linux.  It also supports many sql*plus commands and supports version control 
 
 open source version of TOAD is TORA:
tora.sourceforge.net 
 
 If you're the  VIM type kind of guy  then I'd look into  Vorax . It is basically a VIM wrapper around SQL*plus. 
 
 Have used both Toad &  **SQL Navigator**
, and I love the stability SQL Navigator has. 
 
 i like sqlsh 
 
 
 toad from quest software if you can pay for a license 
 sql squirrel if you can't. 
 
 I used my own tool  ocimlsh  in conjunction with  rlwrap .  
 
 I just use  socat  to add readline support to sqlplus. History and a working backspace key actually turn sqlplus into a pretty decent tool. 
 In my  .bashrc : 
 
 You might see alternatives that  alias  sqlplus to socat, but you will quickly discover that doing so prevents you from invoking sqlplus with its various command line options. 
 **CAVEAT: Be sure to set **
**$HOME/.sqlplus_history**
** permissions to 0600. Passwords that you type end up in the history file. You might also consider adding **
** to your **
**.bash_logout**
**.**

 