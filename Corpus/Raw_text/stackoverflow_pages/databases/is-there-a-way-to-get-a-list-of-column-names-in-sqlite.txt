*** is-there-a-way-to-get-a-list-of-column-names-in-sqlite ***

 I want to get a list of column names from a table in a database. Using pragma I get a list of tuples with a lot of unneeded information. Is there a way to get only the column names? So I might end up with something like this: 
 
 [Column1, Column2, Column3, Column4] 
 
 The reason why I absolutely need this list is because I want to search for a column name in the list and get the index because the index is used in a lot of my code. 
 Is there a way of getting a list like this? 
 Thanks 
 
 You can use sqlite3 and  pep-249 
 
 cursor.description  is description of columns 
 
 Alternatively you could use a list comprehension: 
 
 
 An alternative to the  **cursor.description**
 solution from  smallredstone  could be to use  **row.keys()**
: 
 
 The drawback: it only works if there is at least a row returned from the query.  
 The benefit: you can access the columns by their name (row['your_column_name']) 
 Read more about the  Row objects in the python documentation . 
 
 As far as I can tell Sqlite doesn't support INFORMATION_SCHEMA. Instead it has sqlite_master. 
 I don't think you can get the list you want in just one command. You can get the information you need using sql or pragma, then use regex to split it into the format you need 
 
 gives you something like 
 
 Or using pragma 
 
 gives you something like 
 
 
 **Quick, interactive way to see column names**

 If you're working interactively in Python and just want to quickly 'see' the column names, I found cursor.description to work. 
 
 Outputs something like this: 
 
 Or, quick way to access and print them out. 
 
 Outputs something like this: 
 
 
 Assuming that you know the table name, and want the names of the data columns you can use the listed code will do it in a simple and elegant way to my taste:  
 
 
 You can get a list of column names by running: 
 
 You can check if a certain column exists by running: 
 
 Reference: 
 https://www.sqlite.org/pragma.html#pragfunc 
 
 I use this: 
 
 
 I like the answer by @thebeancounter, but prefer to parameterize the unknowns, the only problem being a vulnerability to exploits on the table name.  If you're sure it's okay, then this works: 
 
 If it's a problem, you could add code to sanitize the tablename. 
 
 It is very easy. 
First create a connection , lets name it,  .
Then run the following code. 
 
 You will get column name as a list 
 
 Another way of using pragma: 
 
 
 I'm not a sqlite user, so take this with a grain of salt; most RDBM's support the ANSI standard of the INFORMATION_SCHEMA views.  If you run the following query: 
 
 You should get a table which lists all of the columns in your specified table.  IT may take some tweaking to get the output you want, but hopefully its a start. 
 