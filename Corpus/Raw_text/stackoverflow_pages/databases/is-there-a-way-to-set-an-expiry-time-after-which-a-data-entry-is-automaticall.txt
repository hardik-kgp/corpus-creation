*** is-there-a-way-to-set-an-expiry-time-after-which-a-data-entry-is-automaticall ***

 Is there any way to set some sort of "expiry" time on data entries in  PostgreSQL ? I'm thinking about something equivalent to   in Redis . 
 I'm not looking to store a timestamp and then manually code some sort of  cron  job to check what entries have expired. 
 I'm trying to find out if there's any native feature in PostgreSQL that would provide this kind of functionality, or if it would make sense to request such feature for future releases. 
 
 There is no built in expiration feature but if your goal is to automatically expire fields and have the logic contained within your database (and thus no outside dependency like a cron job) then you can always write a trigger. Below is an example of a trigger that deletes rows from a table that have a timestamp of older than 1 minute. It is executed whenever a new row is inserted into that same table. You can obviously set the trigger to execute on other conditions and for various expiration dates as need be. I used the following website as a basis for this:  http://www.the-art-of-web.com/sql/trigger-delete-old/ 
 
 
 No. There is no such feature. 
 I can't see what it does more than either (1) just an "expired" timestamp does or (2) timestamp + cron-job/pgAgent. 
 It doesn't sound like a general feature that would be added to the core. You could quite simply code an  extension  to handle this sort of thing, with either a tick called from a cron-job or perhaps a  background-worker  process. 
 I don't see anything on  pgxn , so presumably there's not been much demand for it yet. 
 