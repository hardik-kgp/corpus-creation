*** is-there-any-alternative-to-stored-procedures ***

 
 
 
 
 
 Closed . This question needs to be more  focused . It is not currently accepting answers.
                            
                         
 
 
 
 
 
 
 
 
 
 
 Want to improve this question?  Update the question so it focuses on one problem only by  editing this post .
                         
 Closed  6 years ago . 
 
 
 
 Is there any alternative to stored procedures, secure and fast as well as stored procs. i know only Hibernate. Is there any other technologies like that? 
 
 Stored procedures are a place to put code (SQL) which executes on the database, so I understand the question to mean  
 **"is there any other way to package up the code which runs on the database?"**

 There are several answers:  
 
 There is nothing else that is  quite  the same as a stored procedure, but there are alternatives which you might consider.  
 You could write all your SQL as strings inside your client code (java or whatever)

 
 This has various problems (loss of encapsulation, tight coupling -> harder maintenance), however, and is not a good idea.   
 
 You could use an ORM such as NHibernate, which inserts a layer between your client logic and the database.  The ORM generates SQL to execute on the database.  With an ORM, it is harder to express complex business logic than in a stored procedure (sweeping generalisation!).   
 A kind of halfway house is to define your own data access layer (DAL) in java (or watever you're using) and keep it separate from the main body of client code (separate classes / namespaces / etc.), so that your client makes calls to the DAL, and the DAL interprets these and sends SQL to the database, returning the results from the database back to the client.   
 
 
 Yes.  you can use dynamic sql, but I personally like stored procedures better. 
 1)  If you're using MS SQL Server, it will generate a query plan which should enable the stored procedure to execute faster than simple dynamic sql. 
 2)  It can be easier an more effective to fix a bug in a stored procedure, expecially if your application calls that procedure in several spots.  
 3)  I find it's nice to encapsulate database logic in the database rather than in embedded sql or application config file. 
 4)  Creating stored procedure into the database will allow sql server to do some syntax, and validation checks at design time. 
 
 Hibernate is an object/relational persistence service. 
 Stored procedure is a subroutine inside a relational database system. 
 Not the same thing. 
 If you want alternative to Hibernate, you can check for  iBatis for Spring 
 
 You can do dynamic SQL as secure and fast as stored procedures can be, it just takes some work.  Of course, it takes some work to make stored procedures secure and fast also. 
 
 
 A  **stored procedure**
 is a subroutine
  available to applications accessing a
  relational database system. Stored
  procedures (sometimes called a proc,
  sproc, StoPro, or SP) are actually
  stored in the database data
  dictionary. 
 Typical uses for stored procedures
  include data validation (integrated
  into the database) or access control
  mechanisms. Furthermore, stored
  procedures are used to consolidate and
  centralize logic that was originally
  implemented in applications. Large or
  complex processing that might require
  the execution of several SQL
  statements is moved into stored
  procedures, and all applications call
  the procedures only. 
 Stored procedures are similar to
  user-defined functions (UDFs). The
  major difference is that UDFs can be
  used like any other expression within
  SQL statements, whereas stored
  procedures must be invoked using the
  CALL statement 
 
 ..from  Wikipedia 
 I think you need to read this article and reframe your question. Hibernate has nothing to do with stored procs. 
 
 It'd help a little more if you said why you are looking for alternatives,
what about stored procs do you not like? 
 Some databases (eg. PostgreSQL) also allow you to write stored procedures in 
different languages. So if you really want to you can write them in Python or
Java or the like, instead of SQL. 
 
 I think the OP means that an alternative  to writing all his database code directly in his application code is either to call stored procedures or to introduce a layer of separation between his application code and database using an ORM such as Hibernate, but yes they are very different things.  
 Using stored procedures let you keep your SQL in one place separate from your application code. Using Hibernate allows you to avoid writing SQL completely and provides an object representation of the relational database. 
 Which way you go depends alot on the application and your own preferences. 
 
 Hmm, seems to me that the obvious alternative to stored procedures is to write application code. Instead of, say, writing a store procedure to post a debit every time a credit is posted, you could write application code that writes both. 
 Maybe I'm being too simplistic here or missing the point of the question. 
 