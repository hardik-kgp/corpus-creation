*** jpa-fastest-way-to-ignore-a-field-during-persistence ***

 I'm essentially looking for a "@Ignore" type annotation with which I can stop a particular field from being persisted. How can this be achieved? 
 
  complies with your needs. 
 
 To ignore a field, annotate it with   so it will not be mapped by hibernate. 
 but then  **jackson will not serialize**
 the field when converting to JSON. 
 **If you need mix JPA with JSON**
(omit by JPA but still include in Jackson) use   : 
 
 **TIP:**

 You can also use  JsonInclude.Include.NON_NULL  and hide fields in JSON during deserialization when  : 
 
 
 To ignore a field, annotate it with   so it will not be mapped by hibernate. 
Source:  Hibernate Annotations . 
 
 This answer comes a little late, but it completes the response. 
 In order to avoid a field from an entity to be persisted in DB one can use one of the two mechanisms: 
 @Transient  - the JPA annotation marking a field as not persistable 
 **transient**
 keyword in java. Beware - using this keyword, will prevent the field to be used with any serialization mechanism from java. So, if the field must be serialized you'd better use just the  **@Transient**
 annotation. 
 
 To complete the above answers, I had the case using an XML mapping file where neither the   nor   worked...
I had to put the transient information in the xml file: 
 
 
 None of the above answers worked for me using Hibernate 5.2.10, Jersey 2.25.1 and Jackson 2.8.9. I finally found the answer (sort of, they reference hibernate4module but it works for 5 too)  here . None of the Json annotations worked at all with  . Apparently Jackson2 is 'smart' enough to kindly ignore stuff marked with   unless you explicitly tell it not to. The key was to add the hibernate5 module (which I was using to deal with other Hibernate annotations) and disable the   feature in my Jersey Application: 
 
 Here is the dependency for the Hibernate5Module: 
 
 