*** jquery-ui-autocomplete-in-remote-modal-ror ***

 I am trying to implement   in my remote modal and it doesn't work whereas   works on regular static pages. 
 For the remote modal, I am using a combination of gems:  modal-responder-rails  and  rails-bootstrap-modal 
 Here is my   code: 
 
 Here is my modal, which I copied from this  article . 
 Modal: 
 
 The idea is to create a remote modal controller where you can add a new book. I have a multi-step registration which means that my modal has to redirect to a new page:   if the information correct but I can't validate the forms since my   doesn't work... 
 I tried to overwrite   and also tried to use   in my CSS and it still doesn't work. Also, if I look into my browser console, I can clearly see that all of the data appears in my   field (note: all of my data comes from the database) as shown below: 
 
 I don't see any problem with the code and I can't figure out the problem. Can someone please help me to solve the problem?
Thank you very much for your help and time. 
 **UPDATE:**

 As long as I understand, my problem comes from the rendered action page. Since I am rendering my modal body,   doesn't work. 
 One of the solutions I found is to add 
 
 somewhere in your   method (or action) which will identify the   in your assets. However, if you want to render a   content (ex. map), I am not sure what to do here because, in order to define a modal, you have to add   inside your controller under the method that you want to use. 
 
 Since there is no working example, I just assume this its a timing issue like @muistooshort pointed out. You properly load your jquery part before the modal is updated. One option to overcome this, is by using Events. You want your code to be executed after your update your modal with the  -function.  
 Please try the following code: 
 
 depending on your application, you might want to change the event to something like  , so it fits a more general purpose. You can name the Event what ever you like. You can read more on the  jQuery article: Introducing Custom Events
 
 