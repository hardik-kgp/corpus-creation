*** laravel-4-get-column-names ***

 How to get column names of a table in an array or object in Laravel 4 , using Schema, DB, or Eloquent. 
 It seems that I can't find a ready to use function, maybe you have some custom implementations. 
 Thx. 
 
 **New Answer**

 At the time I gave this answer  **Laravel hadn't a way to do this directly**
, but now you can just: 
 
 **Old Answer**

 Using attributes won't work because if you do 
 
 You have no attributes set to that model and you'll get nothing. 
 Then there is still no real option for that, so I had to go down to the database level and this is my BaseModel: 
 
 Use it doing: 
 
 
 You may try  : 
 
 Result would be something like this depending on your table: 
 
 
 You can dig down into DB's Doctrine instance. 
 
 **edit:**
 Doctrine is no longer (as of L4.1) installed by default (it's a 'suggested' rather than 'required' package), but can be added to your   as   to retain this functionality. 
 
 I think there's a couple different options, if you are using an Eloquent model, you can look at the   method, which in theory would give you all the columns of a model consider Eloquent seems them as properties. 
 For example, you'd be able to do something like this for your users table on a User Eloquent model. 
 
 Another Eloquent method to look at that's similar, but doesn't have the 'accessibility' requirement is the   method.  The returned array of which should have your columns as a key.  Then you can use the PHP function   to build an array of the keys, which would be your columns. 
 
 
 I know it might not be the answer for everyone, but maybe you can grab one record, and get all keys of the data. Ex. 
 
 
 This may also be of interest: 
 http://laravelsnippets.com/snippets/get-all-columns-names-from-a-eloquent-model-2 
 
 You also can try this: 
 
 
 I use SQL Server and the Schema way worked for me: 
 
 