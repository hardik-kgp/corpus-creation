*** laravel-relationships-in-migrations ***

 I know you can define table relationships fairly easy with  ,   etc, but what i don't understand is how the relationship table is created; the table that binds the two tables together (i forgot what the term is called). 
 Let's say i'm creating a users table. I want that user to belong to a certain "Role". There are multiple roles, and every role can have multiple users. I will need to also create a   table for that. So far, so good. 
 But after reading the documentation, it says i should add the   in the model, not the migration itself. When, and how is the relationship table created? If i create the   and   tables, and add   to the   model, and   to the   model, will the middle table be created automatically? 
 
 As far as I know, no relationship table will be created. What you will need to do is have a   on your   table, so that when you create a user, the ID of the role will be stored there. This will enable you do select all users where   or whatever it may be. 
For example: 
 
 Where on the   table the record with   is admin.
So again to answer your question, no relationship table is created, instead the relationship exists within your two tables in the form of a   column for each user. Out of interest, are you using foreign keys?   
 If you want to have a relationships table you could create one called   or something and store the   and   in there, however I think its easier to use the above method as then you can use all the Laravel/Eloquent goodness. 
 Hope this helps :) 
 
 When creating a migration you can specify foreign keys on your tables,
i.e. 
 
 This will create a foreign key on the user_id column on the roles table.
The benefits of foreign keys is that when an update or delete is made the foreign key table will be automatically updated or "cascaded" great description found  here 
 As described on the Laravel documentation you could also specify your cascading on update using the following syntax 
 
 I would do a bad job of trying to explain it better than the documentation does so please have a read through the  "Relationships"  section of the Eloquent ORM documentation to see how its done. 
 
 It looks like a few of the initial questions were never answered, i.e. "When, and how is the relationship table created" & "will the middle table be created automatically": 
 As far as I am aware, these tables need to be created manually. So create the migration file like so: 
 Laravel 5 
 
 Laravel 4 
 
 Note that the names are singular, and are presented in alphabetical order. 
 Then in the migration something like: 
 
 Hope that helps. I'm not sure if the timestamps are needed in Pivot Tables or not, so please experiment. 
 
 Though its an old Post, I though I can contribute something updated. For Laravel5,  **Jeffrey Way**
 has developed a package  **Laravel5 Generators-extended**
 which enhance the generator capability of   for 
 
 
 
 
 
 For many-to-many relation between users and role, you can just use  
 
 and it will generate the required migration class. You don't need to code manually for this. 
 
 This video helped me.  
 https://laracasts.com/series/laravel-5-fundamentals/episodes/14 
 What was surprising for me was that only one side of the relationship needs pointer_id in migration table, not both. For example, if we have Author with many Articles, we only add  
 
 to article migration and thats it. 
 
 I know this is an old post but as I had the same question in mind. I've found the solution in the  Laravel manual (5.0)  where it is described that for this particular many-to-many relationship you can create the table manually and then declare the type of relationship into Model in this way: 
 
 or if you want to use specific associated keys: 
 
 Hope this can help. 
 