*** light-weight-alternative-to-hibernate ***

 
 
 
 
 
 
 
 
                            As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened,  visit the help center  for guidance.
                            
                         
 
 
 Closed  7 years ago . 
 
 
 I have a single user java program that I would like to have store data in a light weight database such as Derby or Sqlite. I would like to use a data abstraction layer in my program. Hibernate appears to require a lot of configuration and is overkill for what I need. What are light weight alternatives to Hibernate? 
 
 Hibernate requires next to zero configuration if you use annotations. It even can auto-discover mapped beans in the classpath! I don't see any alternative to it from both simplicity  **and**
 power point of view. 
 It can also expose itself as JPA, which is (IMHO) even simpler. 
 
 My  ORMLite  library is one such alternative. It supports MySQL, Postgres, Microsoft SQL Server, H2, Derby, HSQLDB, and Sqlite, and can be easily extended to others.  It uses annotations to configure classes, good Spring support, flexible query builder, etc.. 
 
 It still requires XML configuration, but have a look at  MyBatis (formerly iBatis) . 
 
 jOOQ  ships with a fluent DSL simulating SQL directly in Java as a side-effect for its main goals which are: 
 
 Source code generation 
 Full support for standard SQL including SQL language features such as UNIONs, nested SELECTs, all types of JOINs, aliasing (e.g. for self-joins), etc 
 Wide support for non-standard SQL including UDT's, stored procedures, vendor-specific functions, etc. 
 
 Read about jOOQ in this article:  http://java.dzone.com/announcements/simple-and-intuitive-approach , or visit the website directly:  http://www.jooq.org 
 (Disclaimer, I work for the company behind jOOQ) 
 
 Apache Commons DBUtils  takes much of the repetitive gruntwork out of JDBC programming.  It requires little configuration and is easy to learn.  It is not an ORM framework (in the way that Hibernate and other frameworks mentioned here are) but it does automate mapping of SELECT columns to Java member fields as well as other repetitive JDBC programming tasks.  It's certainly lightweight. 
 
 You can have a look at  Ebean ORM . 
- No sessions
- lazy loading just works
- Simpler API to use and learn.  
 
 Cayenne  has served me well. Relatively easy to understand and to get it up and running. I find the reverse engineering part particularly charming. Configuration can be done with a GUI. 
 
 I can propose apache empire-db.  http://incubator.apache.org/empire-db/ 
 Apache Empire-db is an Open Source relational data persistence component which allows database vendor independent dynamic query definition as well as safe and simple data retrieval and updating. Compared to most other solutions like e.g. Hibernate, TopLink, iBATIS or JPA implementations, Empire-db takes a considerably different approach, with a special focus on  **compile-time safety**
, reduced redundancies and improved developer productivity. 
 An example: 
 
 
 ORMAN framework is also good.  https://github.com/ahmetalpbalkan/orman 
 Documentation:  https://github.com/ahmetalpbalkan/orman/wiki 
 Comparison:  https://github.com/ahmetalpbalkan/orman/wiki/Why-orman-is-better-than-other-orms-for-you%3F 
 
 I might be a bit late to the party, but I released  ActiveJDBC   in 2010, which is an ORM implementation of ActiveRecord pattern, is more than 10 times lighter than Hibernate in dependencies, at least twice as fast at run time, and requires zero configuration or annotations.  
 
 You might want to take a look at prevayler (on sourceforge). A somewhat more lightweight approach to persistence. Or were you thinking about doing reporting against the DB? 
 
 If using a relational database is not mandatory, give db4o a try. 
 
 I created  sormula  as an alternative to heavyweight ORM's. It is CRUD-ready, POJO-friendly, simple to use, configure, and understand. Zero-configuration use is possible.  www.sormula.org 
 
 Kiteframework is also very light orm framework. It provides almost all db operation with minimal configurations. 
 http://deipakgarg.github.com/Kite-ORM/ 
 **Disclosure: I am the author of this project**

 