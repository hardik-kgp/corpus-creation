*** limit-list-length-in-redis ***

 I'm using redis lists and pushing to new items to a list.  The problem is I really only need the most recent 10 items in a list.   
 I'm using   to add items to a list and   to get the most recent 10. 
 Is there anyway to drop items after a certain number? I'll end up with lists that may have 1,000's of items and can cause performance issues with latency. 
 Thank you! 
 
 After every  , call   to trim the list to 10 elements 
 See  http://redis.io/commands/ltrim 
 
 You can use  LTRIM   **intermittently**
 after any LPUSH,  **no need to call LTRIM after every LPUSH as that would add to overall latency in your app**
 ( though redis is really fast, but you can save lots of LPUSH operations ) 
 Here is a pseudo code to achieve an LTRIM on approximately every 5th LPUSH: 
 
 Though your list may grow to be a few elements more than 10 elements at times, but it will surely get truncated at regular intervals.
This approach is good for most practical purposes and saves a lot of LTRIM operations, keeping your pushes fast.  
 
 The following code,  
 
 pushes the item to the list,  
 keep the size fixed to 10, 
 and returns the most recent 10 elements 
 
 in a  **transaction**
. 
 
 
 Just an alternative. According to  official doc  of  , it returns the length of the list after the push operations. You can set a threshold length like   (in your case k > 10) and call   when returned length is bigger than  . Sample pseudo code as follows: 
 
 It's more controllable than random method. Greater   triggers less   but with more memory cost. You can adjust   according to how often you want to call   since calling extra command is more expensive. 
 
 Nobody gives exact solution for  **storing only most 10 recent items**
. 
 Let's create a sample list with 15 items (here just numbers): 
 
 Now indicate offset from the end of the list: 
 
 Show list 
 
 Now you can add new items and run trim: 
 
 