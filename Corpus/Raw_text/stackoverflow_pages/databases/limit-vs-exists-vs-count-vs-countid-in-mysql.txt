*** limit-vs-exists-vs-count-vs-countid-in-mysql ***

 I just want to know which one is the fastest. 
 What I'm trying to do is to just check if the data is existing on the table.
I've been using "LIMIT" most of the time but in your opinion or if you have basis, which one is the fastest to check if data is existing. 
 Example: 
 **limit 1:**
  
 
 **exists:**
  
 
 **count(*):**
  
 
 **count(ID):**
  
 
 Additional: I'm using InnoDB. 
 
 Limit is always the fastest, because it iterate one line of the table. 
 Exists has little difference with Limit because you just add another select statement, we can say it has the same efficiency as the first one. 
 Count will iterate all the table and count the result. When you use count( ), by default, mysql count the primary key of the table. I've done some tests of count(id), count( ), count(field) and count(1) in big table, there is no big difference. In my opinion, 'count' will always try to count the index unless the field you count is not an index, but many people said that we should use count(id) rather than use count(*). 
 In a small table, the four ways all work fine. But if you join with some big table, count will take a very very long time. 
 So in all, the time used is  **count(*) > count(id) >> exists > limit**

 
 I think they are all fine; except I would remove the   clauses. If you ever clear your table and start re-inserting then   1 will not exist. Just   will do the trick. Personally I don't favour the   and   options. I would prefer   then, as you would normally have an index on   so I would expect that to run fairly quickly. To be sure, you would have to time them (on a really big table) - I expect them to come out something like  ,   ,  ,   from fastest to slowest. (I am in doubt about the   though - if it actually evaluates the whole   it may come out worst). 
 