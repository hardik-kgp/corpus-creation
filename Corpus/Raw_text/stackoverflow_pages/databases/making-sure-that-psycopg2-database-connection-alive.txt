*** making-sure-that-psycopg2-database-connection-alive ***

 I have a python application that opens a database connection that can hang online for an hours, but sometimes the database server reboots and while python still have the connection it won't work with   exception. 
 So I'm looking for any reliable method to "ping" the database and know that connection is alive. I've checked a psycopg2 documentation but can't find anything like that. Sure I can issue some simple SQL statement like   and catch the exception, but I hope there is a native method, something like PHP  pg_connection_status 
 Thanks. 
 
  is implemented using PQstatus. psycopg doesn't expose that API, so the check is not available. The only two places psycopg calls PQstatus itself is when a new connection is made, and at the beginning of execute. So yes, you will need to issue a simple SQL statement to find out whether the connection is still there. 
 
 This question is really old, but still pops up on Google searches so I think it's valuable to know that the   instance now has a   attribute  that will be   when the connection is open, and greater than zero when the connection is closed. The following example should demonstrate: 
 
 
  does not reflect a connection closed/severed by the server. It only indicates a connection closed by the client using  
 In order to make sure a connection is still valid, read the property  . This will raise an OperationalError with pgcode == "57P01" in case the connection is dead.  
 This adds a bit of latency for a roundtrip to the database but should be preferable to a   or similar. 
 
 