*** mock-database-driver ***

 Is there some kind of JDBC driver which simply ignores database calls? 
 For the development I am migrating an application to a virtual machine. Here I want to work on the GUI part only. But the application makes several requests to a database which doesn't let the application even start. I don't want to change the application code at this time since the database is pretty much coupled. 
 So I was thinking there could be a JDBC driver which just returns empty results for queries. 
 
 I decided to write an own simple mock driver. This was pretty much straight forward and did what I want. I can switch the database driver of the application by a configuration file so I could let the application use my driver on a simple way. 
 Then I extended the driver to return data which it parses from CSV files. I published the code on google code maybe someone else can get use of it:  dummyjdbc 
 
 There are some "void" JDBC drivers as part of Mocking framewroks, for example   MockDriver  from  Mockrunner . 
 But using it requires some coding. 
 That's because when Java application connects to a database it provides a JDBC URL in form  . The system is searching which driver is registered in it to handle this kind of URL and chooses the right driver. The info about which URL type driver supports is contained in the driver itself, and it's impossible for a mock driver to hold all known URL types in it - there's no such thing as wildcarding there and any list would not be full. 
 So, if you're able to call  JDBCMockObjectFactory.registerMockDriver()  in the application before it connects to the database - it will do the job. If not - I don't think it's possible. However, slight modification of the driver code would do it... but again - coding is required. 
 
 jOOQ  ships with a   that can be provided with a  , which is much easier to implement than the complete JDBC API. This blog post shows how to use the MockConnection:
 http://blog.jooq.org/2013/02/20/easy-mocking-of-your-database/ 
 An example: 
 
 There is also the  , which helps you matching dummy results with SQL strings by writing a text file like this: 
 
 
 My framework Acolyte is a tested JDBC driver designed for such purposes (mock up, testing, ...):  https://github.com/cchantep/acolyte 
 It already used in several open source projects, either in vanilla Java, or using its Scala DSL: 
 
 
 Never heard of such a driver myself. If you don't find one, you could instead use a DB like HSQLDB. You can configure it to use in-memory tables, so nothing else gets written to disk. You would have to use a different connection string, though. 
 
 If you want to do unit tests, not an integration tests, than
you can use a very basic and simple approach, using Mockito only, like this: 
 
 Than you can test various scenarios, like in any other Mockito test e.g. 
 
 
 If you're using Spring, make your own class that implements Datasource and have the methods do nothing. 
 