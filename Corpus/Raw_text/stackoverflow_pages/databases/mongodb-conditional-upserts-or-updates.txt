*** mongodb-conditional-upserts-or-updates ***

 When using MongoDB I'm currently doing a conditional upsert as a part of an aggregation process, on the form (simplified alot):   
 
 But I want to able to keep a maximum (and minimum) value as well, without having to retrieve the document. Something along the lines of: 
 
 Is this possible in an efficient way? 
 My current, extremely inefficient, solution is that I check for a current aggregation document, and if it exists I update the values accordingly, and if it doesn't I create a new document. Example (again, simplified alot, but the essence is there): 
 
 The actual program is written in Java and uses the mongo-API, and the aggregation process is quite complex and uses composition techniques way beyond Javascript to communicate with other servers, ergo mapreduce is not an option. Finally the end result is quite a humongous set of simple values which I want to store in the most effecient way and also store precalculated averages, maximums and minimums of certain combinations.   
 One solution is creating unique function-objects in JS for every single update, which I believe is not an efficient way? 
 The main objective is to decrease the time taken to perform an aggregation of this type, bandwidth usage is secondary. 
 
 This can now be done much more easily in the MongoDB 2.6 release which includes  Insert and Update Improvements . Specifically there are new  $min  and  $max  operators that perform a conditional update depending on the relative size of the specified value and the current value of a field. 
 So for example this update: 
 
 would conditionally update the specified document if 950 is greater than the current value of  . 
 
 
 One solution is creating unique function-objects in JS for every single update, which I believe is not an efficient way? 
 
 May not work as you'd like it to: 
 https://jira.mongodb.org/browse/SERVER-458 
 
 Is this possible in an efficient way? 
 
 The issue you're facing is that you want MongoDB to perform an upsert with some more complex logic. So you want to leverage the document-level locking to effectively "trigger" multiple complex changes all at once. 
 You're not the first one to want this, unfortunately it's not available right now. There are several server bugs tied to this type of "more complex update behavior". You may want to watch / vote on a few of the following to check for progress. 
  only when inserting ,  add only when not existing ,   and   at the same time ,  coordinate a "size" with  . 
 In particular,  SERVER-458  seems closest to what you want. 
 