*** mongodb-difference-between-running-mongo-and-mongod-databases ***

 So, I'm sure I'm missing something simple here, but when I run mongo as a daemon (using mongod --fork or just mongod), I see different database content than if I just run "mongo" on the host machine. 
 My only assumption is that the data is being stored somewhere other than /data/db when it's running just the shell, and switches to /data/db when I boot the mongod. In that case, how do I get at my data when running mongod? 
 
 I think there is some confusion here. 
  is the "Mongo Daemon" it's basically the host process for the database. When you start   you're basically saying  "start the MongoDB process and run it in the background" .   has several default parameters, such as storing data in   and running on port 27017. 
  is the command-line shell that connects to a specific instance of  . When you run   with no parameters it defaults to connecting to the localhost on port 27017. If you run   against an invalid machine:port combination then it will fail to connect (and tell you as much). 
 Ideally, when doing anything other than just "playing around", you'll use the  Command Line Parameters  for starting  . By the same measure you should start the   shell with explicit instructions. 
 Based on your description, I think you may be encountering an issue regarding the use of default databases. Try starting   with the following (where   is your database name) 
 
 
 Yes, this might be a naive answer to this question but I am putting it forward so people can understand it easily! 
 **Mongod:**

 
 mongod 
 
 (Short for Mongo Daemon) is a background process used by MongoDB server to get things done. This process is responsible for managing the whole MongoDB server tasks such as accepting requests, responding to users, managing memory requirement of MongoDB server operations and other things essential for MongoDB Server to run. 
 **TLDR;**
 Basically it is the MongoDB server 
 **Mongo:**

 
 Mongo 
 
 on the other hand, is an interactive JavaScript shell interface to MongoDB, which provides a powerful interface for system administrators as well as a way for developers to test queries and operations directly with the database. mongo also provides a fully functional JavaScript environment for use with a MongoDB 
 **TLDR;**
 Basically I think it as mongodb client which can be used as a shell to get access to MongoDB database server run my mongod instances 
 