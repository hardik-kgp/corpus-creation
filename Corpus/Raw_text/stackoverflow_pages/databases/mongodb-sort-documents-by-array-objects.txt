*** mongodb-sort-documents-by-array-objects ***

 I would like to return the documents in an order sorted by which holds the lowest   value (which are array objects).  
 I can do  , but this only matches the first element in the array - and as you can see in the exampe below would sort item 1 first (foo.0.bar = 5), wheras I am looking to return item 2 first   as it has the object with the lowest value. 
 
 
 It seems mongo  can  do this. 
 For example, if I have the following documents: 
 
 And run the following: 
 
 As you can see, the sort by   takes the  **min**
 of all values in the array and sorts on that, whereas the sort by   takes the  **max**
 of all the values. 
 
 An alternative to using map/reduce, is to store the min value from the array out as a separate field in the document which you could then order on. When you add to the array, you also update this field if the new value is lower than the currently recorded minimum. 
 e.g. your first document would become this (note "minbar added"): 
 
 
 You can do such a sort with aggregate command from mongo version 2.2: 
 
 
 There is no direct way to do this in mongo. You would need to use map/reduce to retrieve the min val in each array and then sort by that min value 
 