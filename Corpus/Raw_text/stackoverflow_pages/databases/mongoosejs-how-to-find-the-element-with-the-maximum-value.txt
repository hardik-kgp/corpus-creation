*** mongoosejs-how-to-find-the-element-with-the-maximum-value ***

 I am using MongoDB , MongooseJS and Nodejs. 
 I have a Collection ( called Member ) with the following Fields -  
 Country_id , Member_id , Name, Score  
 I want to write a query which returns the Member with the max Score where Country id = 10  
 I couldnt find suitable documentation for this in MongooseJS. 
 I found this at StackOVerflow ( this is MongoDB code ) 
 
 But how do I translate the same to MongooseJS ? 
 
 
 Check  the mongoose docs for querying , they are pretty good. 
 If you dont't want to write the same code again you could also add a static method to your Member model like this: 
 
 And call it later via  
 
 You do not need Mongoose documentation to do this.
Plain MongoDb will do the job. 
 Assume you have your   collection: 
 
 The following query will return you a cursor to the document, you are looking for: 
 
 
 It might be  faster  to use   than  .  
 With   an array of the one document is returned. To get the document object, you have to do get the first array element,  . 
 Making Salvador's answer more complete ... 
 
 
 This is quick and easy using the Mongoose Query Helpers.  
 The general form for this could be: 
 
 tldr:
This will give you an array of a single item with the highest value in 'field_to_sort_by'. Don't forget to access it as data[0], like I did for an hour. 
 Long-winded: Step-by-step on what that string of functions is doing... 
  starts the query, no args needed. 
  sorts the everything in descending order. That minus-sign in front of the field name specifies to sort in descending order, you can discard it to sort in ascending order and thus get the document with the minimum value. 
  tells the database to only return the first document, because we only want the top-ranked document. 
  finally passes any error and an array containing your document to into your function. You'll find your document in  
 
 You can also use the   operator: 
 
 