*** more-than-one-table-found-in-namespace-schemaextractionexception ***

 I have been facing this weird exception while trying to persist some values into a  table using Hibernate in a Java application. However this exception occurs only for one particular table/entity for rest of the tables i am able to perform crud operations via Hibernate. 
 Please find below the Stacktrace and let me know if this is anyway related to java code is or its a database design error.  
 
 Thanks in advance for your help 
 
 I have had the same problem and was able to dig down to the code to find out the cause, at least in my case. I don't know whether it will be the same issue for you but this may be helpful. 
 From your stack trace I can see you have the hibernate.hbm2ddl.auto set to upgrade the schema. As part of this, it is trying to look up the metadata for all the tables hibernate knows about and for one of them getting an ambiguous answer because the metadata query is returning more than a single row of table or view metadata.  
 In my case this was caused by our naming convention for tables. We had a table called (say) "AAA_BBB" for which this was going wrong. Now the use of an underscore in the table name is perfectly acceptable as far as I am aware and is quite common practice. However the underscore is also the SQL wildcard for a single character; looking in the code for the database metadata I can see it is doing a "WHERE table_name LIKE ..." in DatabaseMetaData.getTables(...) method, which is what hibernate is using here.  
 Now, in my schema I also had a second table called "AAA1BBB" and hence both of these matched the metadata lookup and so it returned a metadata row for each of these tables. The hibernate method is written to just fall down if the result set from the table metadata lookup returns more than one row. I would guess it should examine the available row(s) and find if there is one which is an exact match with the specified table name. 
 I tested this for both Oracle and MySQL with the same result.  
 
 Seems the property hibernate.hbm2ddl.auto set to update is causing the issue here. Try removing it from your hibernate config xml. 
 
 **This will work:**
  
 Check your database schema/s and your database user privileges;  
 Hibernate update mechanism may fail with this exception if there is a another database schema/user with the same table name, and the db user has the sufficient privileges to view this table.  
 So in your case, the table 'YYYYYYY' may be found in more than one database user/schema, and your db user has 'DBA' privileges. 
 To solve this you can either find and delete the ambiguous table or remove the user's redundant privileges. 
 
 Another situation may be occurred  except whatever dear RichB has been stated. 
in ORACLE every user has separate schema ,
Therefore probably there is tow tables with the same name in two different schemes
then you should specify your default schema in persistence.xml  with below property 
 
 
 Use catalog value with  , i.e.: 
 
 I don't have this error now.
Hope this work. 
 
 We had a Spring Data / JPA application and this error started happening after upgrading to Postgres  **10.6**
 (from 10). 
 Our solution was as follows, in our JPA configuration class: note the new commented line,  
 
 Class: 
 
 
 I have same issue with such configuration 
 
 issue was resolved for me when I moved table name from @Table to @Entity 
 
 
 Simply, if u are using two schemas then u will get this error. To resolve this error u can use these steps : 
 
 
 I also came across this issue. Here is my solution: 
 the error:
 https://gist.github.com/wencheng1994 
 I solve that. It mainly because the db account has a higher authority. I set the "hibernate.hbm2ddl.auto=update", So when hbm2ddl works, it tried to find all exists shcema I defied. But there is two schema exist the table with the same name. then the db account can find that. so it found "more than one table in the namespace" 
 All I need to do is to make the db account lower authority so that it can not find table in other schema. (one shcema relation one db account). 
 