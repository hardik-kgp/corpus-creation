*** ms-access-how-to-compact-current-database-in-vba ***

 Pretty simple question, I know.  
 
 If you want to compact/repair an external mdb file (not the one you are working in just now): 
 
 If you want to compact the database you are working with: 
 
 In this last case, your app will be compacted when closing the file. 
 My opinion: writting a few lines of code in an extra MDB "compacter" file that you can call when you want to compact/repair an mdb file is very usefull: in most situations the file that needs to be compacted cannot be opened normally anymore, so you need to call the method from outside the file. 
 Otherwise, the autocompact shall by default be set to true in each main module of an Access app. 
 In case of a disaster, create a new mdb file and import all objects from the buggy file. You will usually find a faulty object (form, module, etc) that you will not be able to import. 
 
 For Access 2013, you could just do 
 
 This is the same as typing ALT, F, I, C on your keyboard. 
 It's probably a different sequence of letters for different versions, but the "%" symbol means "ALT", so keep that in the code. you may just need to change the letters, depending on what letters appear when you press ALT 
 Letters that appear when pressing ALT in Access 2013 
 
 Try adding this module, pretty simple, just launches Access, opens the database, sets the "Compact on Close" option to "True", then quits. 
 Syntax to auto-compact: 
 
 To return to default*: 
 
 *not necessary, but if your back end database is >1GB this can be rather annoying when you go into it directly and it takes 2 minutes to quit! 
 EDIT: added option to recurse through all folders, I run this nightly to keep databases down to a minimum. 
 
 
 Yes it is simple to do. 
 
 Basically it just finds the "Compact and repair" menuitem and clicks it, programatically. 
 
 When the user exits the FE attempt to rename the backend MDB preferably with todays date in the name in yyyy-mm-dd format.  Ensure you close all bound forms, including hidden forms, and reports before doing this.   If you get an error message, oops, its busy so don't bother.  If it is successful then compact it back.  
 See my  Backup, do you trust the users or sysadmins?  tips page for more info. 
 
 If you have the database with a front end and a back end. You can use the following code on the main form of your front end main navigation form: 
 
 
 Try this. It works on the same database in which the code resides. Just call the CompactDB() function shown below. Make sure that after you add the function, you click the Save button in the VBA Editor window prior to running for the first time. I only tested it in Access 2010. Ba-da-bing, ba-da-boom. 
 
 
 I did this many years back on 2003 or possibly 97, yikes! 
 If I recall you need to use one of the subcommands above tied to a timer.   **You cannot operate on the db with any connections or forms open.**
  
 So you do something about closing all forms, and kick off the timer as the last running method. (which will in turn call the compact operation once everything closes) 
 If you haven't figured this out I could dig through my archives and pull it up.  
 
 DBEngine.CompactDatabase source, dest 
 
 Application.SetOption "Auto compact", False '(mentioned above)
Use this with a button caption: "DB Not Compact On Close" 
 Write code to toggle the caption with "DB Compact On Close"
 along with Application.SetOption "Auto compact", True 
 AutoCompact can be set by means of the button or by code, ex: after importing large temp tables. 
 The start up form can have code that turns off Auto Compact, so that it doesn't run every time. 
 This way, you are not trying to fight Access. 
 
 If you don't wish to use compact on close (eg, because the front-end mdb is a robot program that runs continually), and you don't want to create a separate mdb just for compacting, consider using a cmd file.  
 I let my robot.mdb check its own size: 
 
 If its size exceeds 1 GB, it creates a cmd file like this ... 
 
 ... launches the cmd file ... 
 
 ... and shuts down ... 
 
 Next, the cmd file compacts and restarts robot.mdb. 
 
 Check out this solution  VBA Compact Current Database . 
 Basically it says this should work 
 
 
 There's also Michael Kaplan's  SOON ("Shut One, Open New") add-in . You'd have to chain it, but it's one way to do this. 
 I can't say I've had much reason to ever want to do this programatically, since I'm programming for end users, and they are never using anything but the front end in the Access user interface, and there's no reason to regularly compact a properly-designed front end. 
 