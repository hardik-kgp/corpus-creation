*** multiple-databases-with-play-framework-2-1-x ***

 I have 2 databases that I need to connect to. I can easily connect to them in the application.conf file like so: 
 
 I have my model classes in those packages, and it DDL generates the tables properly. 
 The problem lies in actually working with these entities. Anything not in the "default" package throws this error (using the Users table in the secondary database as an example) 
 If I try to query all the rows of the table: 
 
 It throws this error: 
 
 Even though I am 100% sure that the Users table is there in the backend, it is a registered table the DDL works and makes this table properly, and I am importing the proper classes. 
 Is there a certain way I need to query model classes that aren't in the default package? 
 EDIT: I realize that the stack trace shows that it's trying to use the DefaultServer. How can I make it use the secondary server? 
 
 
 Ok, your   seems to be correct. 
 You may use the secondary server like this: 
 
 Once you've got your secondary server, you may treat it just as you treat the   singleton. 
 
 I had the same problem and I fixed it by specifying the server name at the Model.Finder level. 
 So in your case, in your User class, you should have something like : 
 
 
 You can use both:  
 
 and  
 
 But you have to use the save method with the server declaration on your entity 
 
 Without   ebean uses the default server, even on your user-entity! 
 