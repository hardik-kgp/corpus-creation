*** mysql-complexity-of-select-count-from-mytable ***

 What is the complexity of this MySQL query 
 
 Is the count of number of entries in a table stored somewhere and updated every time a row is inserted or deleted? If that is the case, then the complexity should be O(1). 
 
 It depends on the storage engine. 
 
 For MyISAM the total row count is stored for each table so   is an operation O(1). It just needs to read this value. 
 For InnoDB the total row count is not stored so a full scan is required. This is an O(n) operation. 
 
 From the  manual : 
 
  does not keep an internal count of rows in a table. (In practice, this would be somewhat complicated due to multi-versioning.) To process a   statement,   must scan an index of the table, which takes some time if the index is not entirely in the buffer pool. If your table does not change often, using the MySQL query cache is a good solution. To get a fast count, you have to use a counter table you create yourself and let your application update it according to the inserts and deletes it does.   also can be used if an approximate row count is sufficient. See Section 13.2.13.1, "  Performance Tuning Tips ". 
 
 
 AFAIK in MyISAM rows-count are cached, in InnoDB not, and with every count-all he counts all rows. 
 
 I'm not sure if that value is stored or not, but that isn't important at all for your query. 
Using MySQL with your query it will count all the returned rows the moment you execute it. 
 