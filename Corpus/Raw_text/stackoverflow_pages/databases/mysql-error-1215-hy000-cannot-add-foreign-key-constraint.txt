*** mysql-error-1215-hy000-cannot-add-foreign-key-constraint ***

 I have read  **Database system concepts**
, 6th edition,  Silberschatz . I'm going to implement the university database system shown in chapter 2 on OS X on MySQL. But I have a trouble with creating the table  . the table   looks like 
 
 Creating the table   causes the following error. 
 
 after searching google for foreign key constraint, I have just learned that the word 'foreign key constraint' indicates that data from foreign key column in the table   must exist in primary key column in the table  . But I should have met this error when inserting data.    
 If not, why does author make me execute that SQL statement?  
 If I really execute erroneous SQL statement, Does I have to designate   in course table as foreign key after inserting some data? 
 **EDIT**
 : typing   into   does not fix the error. 
 
 
 The syntax of   for   is structured as follows: 
 
 So your MySQL DDL should be: 
 
 Also, in the   table   should be  
 More information can be found in the  MySQL documentation 
 
 When you get this vague error message, you can find out the more specific error by running  
 
 The most common reasons are that when creating a foreign key, both the referenced field and the foreign key field need to match: 
 
 **Engine**
 should be the same  e.g. InnoDB   
 **Datatype**
 should be the same, and with same length. 
 e.g. VARCHAR(20) or INT(10) UNSIGNED   
 **Collation**
 should be the same.  e.g. utf8   
 **Unique**
 - Foreign key should refer to field that is unique  (usually private)  in the reference table. 
 
 Another cause of this error is: 
 You have defined a SET NULL condition though some of the columns are defined as NOT NULL. 
 
 Maybe your   columns have different charsets. 
 You could try to alter one or both of them: 
 
 
 
 This syntax is not valid for MySQL. It should instead be: 
 
 MySQL requires   to be used twice . Once to define the foreign column, and once to define the primary column. 
 
 13.1.17.2. Using FOREIGN KEY Constraints 
 ... [the] essential syntax for a foreign key constraint definition in a   or   statement looks like this: 
 
 
 
 It is also possible to get this error if the foreign key is not a primary key within its own table. 
 I did an ALTER TABLE and accidentally removed the primary key status of a column, and got this error. 
 
 
 ERROR 1215 (HY000): Cannot add foreign key constraint 
 
 It is also worth noting that you get this error when the  type  of the column that is a foreign key in another able doesn't explicitly match the column in the correct table. 
 For example: 
 
 This was because the   field was defined as: 
 
 while the   field in the   table was defined as: 
 
 The   (generated from Java   by hibernate) is not compatible with   (Java  ). 
 
 
 I don't meet the problem as you. But I get the same ERROR Message. So I mark it down here for others' convience. 
 
 Check the charset of two table if the column type is   or  . I use a  , but I create a new table whose default  . So the charset is not the same. 
 
 To solve it is to use the same charset. For example  . 
 
 Just add 'unsigned' for the FOREIGN constraint 
 
 
 Below code worked for me 
 
 
 It's worth noting that this error can also happen if the target table or column you're using in the REFERENCES portion simply doesn't exist. 
 
 I don't see anyone stating this explicitly and I had this same error message and my problem was that I was trying to add a foreign key to a TEMPORARY table. Which is disallowed as  noted in the manual 
 
 Foreign key relationships involve a parent table that holds the central data values, and a child table with identical values pointing back to its parent. The FOREIGN KEY clause is specified in the child table. The parent and child tables must use the same storage engine.  **They must not be TEMPORARY tables.**

 
 (emphasis mine) 
 
 I came across the same issue as well. Not sure why this is working but it indeed works: 
Try add ENGINE INNODB after your create query. 
 
 
 Even if this is not directly linked precisely to your situation, it may help further readers to note that you can get exactly the same error output when you type   if you do not respect the order of creating the database tables; meaning you must not add a foreign constraint referencing a table that does not exist yet. The reference table must exist prior to the table which points to it.  
 This is also true when the table creation order is respected but not the columns involved in the foreign key constraint. 
 
 In my case charset, datatype every thing was correct. After investigation I found that in parent table there was no index on foreign key column. Once added problem got solved. 
 
 
 
 this is how it could be... look at the referencing column part. (V_code) 
 