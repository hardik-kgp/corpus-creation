*** mysql-index-is-bigger-than-the-data-stored ***

 I have a database with the following stats 
 
 So as you can see the Index is close to 2x bigger. And there is one table with ~7 million rows that takes up at least 99% of this. 
 I also have two indexes that are very similar 
 
 **Update**
: Here is the table definition (at least structurally) of the largest table 
 
 **Update 2**
: 
 
 **My questions are:**

 
 Is there a way to find unused indexes in MySQL? 
 Are there any common mistakes that impact the size of the index? 
 Can indexA safely be removed? 
 How can you measure the size of each index? All I get is the total of all indexes. 
 
 
 You can remove index A, because, as you have noted, it is a subset of another index. And it's possible to do this without disrupting normal processing. 
 The size of the index files is not alarming in itself and it can easily be true that the net benefit is positive. In other words, the usefulness and value of an index shouldn't be discounted because it results in a large file. 
 Index design is a complex and subtle art involving a deep understanding of the query optimizer explanations and extensive testing. But one common mistake is to include too few fields in an index in order to make it smaller. Another is to test indexes with insufficient, or insufficiently representative data. 
 
 I may be wrong, but the first index ( ) is UNIQUE, the second ( ) is not, so you'll probably lose the uniqueness constraint when you remove it. No? 
 
 
 Is there a way to find unused indexes in MySQL? 
 
 The database engine optimizer will select a proper index when attempting to optimize your query. Depending on when you collected statistics on your indexes last, the index which is chosen will vary. Unused indexes could suddenly become used because of new data repartition. 
 
 Can indexA safely be removed? 
 
 I would say yes, if indexA and indexB are B-Tree indexes. This is because an index that starts with the same columns in the same order will have the same structure. 
 
 use  
 
 to define what indexes do you have in a particular table. Cardinality would tell how useful your index is. 
 You can remove your indexes safely (it will not break a table), but beware: some queries might execute slower. First you should analyze your queries to decide whether you need a certain index or not. 
 I don't think you can find out data length of a particular index, though. 
 BUT, I think you probably think that if indexes length is greater than data length twice is something abnormal... Well, you are wrong. All of your indexes might be useful ;) If you have a table that provides a lot of information and you have to search on it upon a large number of column, it can easily be that indexes of this table will 2 times bigger in size that the tables data. 
 
 
 indexA can remove because there's a
indexB include indexA 
 what impact your index length is
your column type and column length 
 use: 
 select index_length from information_schema.tables 
            where table_name='your_table_name' and
table_schema='your_db_name'; 
 get your table index_length 
 
 