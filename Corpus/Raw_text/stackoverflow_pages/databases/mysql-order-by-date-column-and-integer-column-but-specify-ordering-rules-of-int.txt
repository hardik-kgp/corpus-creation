*** mysql-order-by-date-column-and-integer-column-but-specify-ordering-rules-of-int ***

 I have the following table: 
 
 What I want to do is to order by the date column, BUT have the dates with integer 2 higher up the order than the other integers. My output would be like this. 
 
 At the moment I'm totally clueless as to how to achieve this in MySQL, or even if its possible. I haven't tried anything yet as I have no idea where to even start. 
 I should say that the order of integers that aren't 2 is not a concern, so the following table is equally good. 
 
 
 You can order the query by a calculated expression, e.g.,  : 
 
 
 The easiest way to do this is subtract your   by 2 and then get the absolute value of that number.  Then sort on that.  The absolute value of 2 - 2 will always be zero and any other calculation will be greater than zero.  therefor you will be forcing  s of 2 to the top of the list ( **SQL Fiddle**
): 
 
 
 Doing this with a UNION was trickier than I first thought, but you can specify a priority: 
 
 http://sqlfiddle.com/#!2/570be/16 
 
 You want to put the integers in order by their minimum date, if I understand the question correctly. 
 You need to calculate this field, join it in, and then use it for the ordering: 
 
 You can see the results on  SQL Fiddle . 
 
 do it easily by this 
 EDIT: 
 
 **SECOND_DEMO**

 