*** need-liquibase-alternative-for-mongodb-and-or-cassandra-databases ***

 
 
 
 
 
 Closed.  This question is  off-topic . It is not currently accepting answers.
                            
                         
 
 
 
 
 
 
 
 
 
 
 Want to improve this question?   Update the question  so it's  on-topic  for Stack Overflow.
                         
 Closed  2 years ago . 
 
 
 
 We recently face an issue. We want to do versioning as patch management (similar to git for codebase) for both our mongodb and Cassandra db schema changes and update/insert queries.  Liquibase handles it only for mysql. We need an alternative of Liquibase for nosql mongodb and cassandra. 
 
 There is some tools for Mongo, examples: 
 
 **Mongeez:**
  
 
 https://github.com/mongeez/mongeez   
 advantages

 
 keep scripts in .js files. 
 XML file to organize them 
 if you use Java, Mongeez can be integrates with Spring, so you can run scripts at startup the application 
 
 disadvantages: 

 
 dead project 
 use   which is deprecated in MongoDB since version 3.0 
 
 
 **Mongobee:**
  
 
 https://github.com/mongobee/mongobee 
 advantages:

 
 all code in Java 
 easy integrate with Spring 
 good tutorial how to use it 
 
 disadvantages: 

 
 All scripts have to be done in Java, no able to write them in JS 
 
 
 
 
 I have written a very simple application for basic support of scheme updates in cassandra.
Please see:  enter link description here 
 Basic use is:
java -jar cassandra-scheme.jar --cassandra.keyspace=myspace --scheme.dir=/mydir 
 
 There is a branch forked from Flyway which appears to support mongoDB:  https://github.com/risksense/flyway/tree/release-4.0.3-mongodb 
 Haven't tested it yet, but seems promising. 
 
 I don't think you will ever see such a tool for Mongo. The reason is that Mongo has no real schema enforcement and therefore you need to query and transform. In other words, you need to write your own scripts to do this. This is one reason I strongly recommend putting a data structure version number in the data structure and putting a secondary index on it. 
 For Cassandra, the problems are different, and changing data structures there can also be a bit painful. Again such a tool could add or remove columns but it wouldn't be able to address map or list types or the like. I doubt the problems are well enough understood for general tools but certainly have a look at  https://github.com/comeara/pillar . 
 For Mongo, the solution will look much more like a script that pulls old structures out, and saves them again with new information.  For Cassandra, pillar might help with part of it, but for some types, you may need to do more.  Keep in mind that collection types in Cassandra are not really structurally enforced by the schema. 
 