*** neo4j-step-by-step-to-create-an-automatic-index ***

 I am creating a new Neo4j database. I have a type of node called User and I would like an index on the properties of user  **Identifier**
 and  **EmailAddress**
. How does one go setting up an index when the database is new? I have noticed in the neo4j.properties file there looks to be support for creating indexes. However when I set these as so 
 
 And add a node and do a query to find an Identifier that I know exists 
 
 then I get an 
 
 How do I create an index and use it in a start query? I only want to use config files and cypher to achieve this. i.e. at the present time I am only playing in the Power Tool Console. 
 
 Add the following to the neo4j.properties file 
 
 Create the auto index for nodes 
 
 Check if they exist 
 
 Should return 
 
 When querying use the following syntax to specify the index 
 
 As the node is auto indexed the name of the index is  
 This information came from a comment at the bottom of  this page 
 **Update**

 In case you want to index your current data which was there before automatic indexing was turned on (where Property_Name is the name of your index) 
 
 
 In Neo4j 2.0, you should use labels and the new constraints instead 
 
 If email isn't unique per user, just create a plain index instead: 
 
 
 Indexes mainly made on property which is used for where condition. In Neo4j 2.0, indexes are easy to make now.  
 Create index on a label 
 
 Drop index on a label 
 
 Create uniqueness constraint 
 
 Drop uniqueness constraint 
 
 For listing all indexes and constraints in neo4j-browser, following command is useful 
 
 List indices and constraints for specific label with: 
 
 