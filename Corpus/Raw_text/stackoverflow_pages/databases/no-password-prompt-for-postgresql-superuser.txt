*** no-password-prompt-for-postgresql-superuser ***

 After I installed PostgreSQL 9.1 on Ubuntu 12.04 I set the password for the "postgres" superuser account. I want all users to have to enter their password when loging in. This is why I configured pg_hba.conf like so: 
 
 I restarted postgresql after making those changes. When I do this   I get asked for a password, but when I log in with the "postgres" account like so   I get no password prompt and am logged in.
If I force the password prompt with   I can log in by typing the correct password or by typing nothing at all. Typing a wrong password gets rejected. 
 Can anybody please explain to me why this is happening? 
 On a related note: I see a lot of example where people use ident as authentication method for the "postgres" user, arguing that to become the "postgres" user one needs the root password of the machine. I assume that the reasoning is that if an attacker gets root access, your done anyways. I would prefer to log in with a password though, one which is not the same as the root password. I prefere having different passwords for different things. Is this reasonable? 
 Output of  
 
 
 Your   should indeed require a password for unix socket connections, but there are still ways around it that you should verify: 
 
 a   file in the postgres home directory containing the password (also check the  PGPASSFILE  environment variable for a non-standard path). 
 the  PGPASSWORD  environment variable could be set. 
 
 And there's also the possibility that you're editing the wrong pg_hba.conf file.
When connected as postgres, the correct path can be obtained for verification with the   SQL command. 
 Also, you may want to check the log file,   for confirmation that the configuration files are reloaded when you ask for it, and look for any suspect message during the authentication. 
 As for the reason why passwordless connections with the postgres user are common, the debian PG-9.1   has this comment about disallowing them: 
 
 Since Debian and Ubuntu use the same postgres packages, this applies to Ubuntu as well. 
 
 Re your odd behaviour, I think you've missed a line of   that's specific to the   user. Please show the output of: 
 
 As for ident vs md5; personally I prefer ident for interactive use in development, and it's fine for normal users, but I don't think giving access to the   user via   is a great idea. Both   and    grant access to the postgres superuser role and thus file system access as the database user. Neither require a root password, and   can easily be constrained via   to limit the invoking user to just running  . However, with   the  client  code runs as   too, so it's a bigger attack surface, and there's always the chance of the user finding a way to bypass your   limits. 
 I use   in dev,   in production. 
 