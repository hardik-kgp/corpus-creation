*** node-js-mysql-performance ***

 I am comparing node.js versus PHP in terms of write performance to MySQL database. I am using Apache Benchmark, linux Mint in virtual machine, newest mysql-server(5.5.43) and driver for MySQL with node.js  from here .
The code I used is 
 **server.js**

 
 **index.php**

 
 Apache Benchmark to Apache2 server with index.php file 
 
 PHP MySQL write performance 
 
 Apache Benchmark to node.js server in server.js file 
 
 node.js MySQL write performance 
 
 I was under the impression that node.js outperforms PHP in I/O database operations. So it surprises me that no matter which SQL statement I try (also tried SELECT * FROM Persons) node.js turns out worse.  
 Not only that but also when cuncurrency level is 100, node logs a ton of 'Error while performing Query.' messages to the console and only ~500 out of 1000 requests get written to the database. Are mysql node drivers just that bad or I am doing something very wrong here? I would really appreciate your help :) 
 Thank you 
 
 First of all you didn't finish server.js code. There is a bug with too many connections opened to DB. To fix this I used connectionPool. And second of all Apache use workers to run many copies of same script in parallel. 
 Now the result for Apache + PHP + MySQL (XAMP) as a reference point: 
 
 Now to equal the chances I fixed server.js  
 
 And results of Node + MySQL: 
 
 As you can see the results are very close. But this is one node process against 11 Apache workers. What happens if I add clusters to the equation? Here is the modified code: 
 
 Four node workers results: 
 
 For curiosity I add results for node with 10 workers: 
 
 My laptop is Core2Duo T6600, Ubuntu 14.04.3, php 5.5.9, node 0.10.37, mysql 5.5.44 
 