*** ora-00904-invalid-identifier ***

 I tried to write the following inner join query using an Oracle database: 
 
 That gives the below error: 
 
 The DDL of one table is: 
 
 
 Your problem is those pernicious double quotes.   
 
 Oracle SQL allows us to ignore the case of database object names provided we either create them with names all in upper case, or without using double quotes.  If we use mixed case or  lower case in the script and wrapped the identifiers in double quotes we are condemned to using double quotes and the precise case whenever we refer to the object or its attributes: 
 
 
 **tl;dr**

 don't use double quotes in DDL scripts 
 (I know most third party code generators do, but they are disciplined enough to put all their object names in UPPER CASE.) 
 
 The reverse is also true. If we create the table without using double-quotes … 
 
 … we can reference it and its columns in whatever case takes our fancy: 
 
 … or 
 
 … or 
 
 
 In my case, this error occurred, due to lack of existence of column name in the table. 
 When i executed  " " , i was not able to find the column specified in the mapping hbm file. 
 After altering the table, it worked fine. 
 
 DEPARTMENT_CODE is not a column that exists in the table Team. Check the DDL of the table to find the proper column name. 
 
 FYI, in this case the cause was found to be mixed case column name in the DDL for table creation. 
 However, if you are mixing "old style" and ANSI joins you could get the same error message even when the DDL was done properly with uppercase table name. This happened to me, and google sent me to this stackoverflow page so I thought I'd share since I was here. 
 
 The two SQL statements above are equivalent and produce no error. 
 When you try to mix them you can get lucky, or you can get an Oracle has a ORA-00904 error.  
 
 And the unhelpful error message that doesn't really describe the problem at all: 
 
 I was able to find some research on this in the following blog post: 
 
 http://sqlfascination.com/2013/08/17/oracle-ansi-vs-old-style-joins/ 
 
 In my case, I was attempting to manually convert from old style to ANSI style joins, and was doing so incrementally, one table at a time. This appears to have been a bad idea. Instead, it's probably better to convert all tables at once, or comment out a table and its where conditions in the original query in order to compare with the new ANSI query you are writing. 
 
 Are you sure you have a column  **DEPARTEMENT_CODE**
 on your table  **PS_TBL_DEPARTMENT_DETAILS**
  
 More informations  about your ERROR 
 
 ORA-00904:    string: invalid identifier
      Cause:    The column name entered is either missing or invalid.
      Action:   Enter a valid column name. A valid column name must begin with a
  letter,
      be less than or equal to 30 characters, and consist of only
  alphanumeric characters and
      the special characters $, _, and #.
      If it contains other characters, then it must be enclosed in d  double
  quotation marks.
      It may not be a reserved word. 
 
 
 I had the same exception in JPA 2 using eclipse link. I had an @embedded class with one to one relationship with an entity. 
By mistake ,in the embedded class, i had also the annotation @Table("TRADER"). When the DB was created by the JPA from the entities it also created a table TRADER (which was a wrong as the Trader entity was embedded to the main entity) and the existence of that table was causing the above exception every time i was trying to persist my entity. 
After deleting the TRADER table the exception disappered. 
 
 Also make sure the user issuing the query has been granted the necessary permissions. 
 For queries on tables you need to grant SELECT permission. 
For queries on other object types (e.g. stored procedures) you need to grant EXECUTE permission. 
 
 I was passing the values without the quotes. Once I passed the conditions inside the single quotes worked like a charm.  
 
 instead of the above use this:  
 
 
 I had this error when trying to save an entity through JPA. 
 It was because I had a column with   annotation that didn't have   annotation. 
 Adding   fixed the issue. 
 