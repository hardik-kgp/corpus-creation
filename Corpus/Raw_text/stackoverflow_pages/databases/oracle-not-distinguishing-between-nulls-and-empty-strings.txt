*** oracle-not-distinguishing-between-nulls-and-empty-strings ***

 Apparently oracle doesn't seem to distinguish between empty strings and nulls. E.g.  
 
 I can't think of any good reason why Oracle would be built to behave this way (does it do this in sqlplus as well?-I'm accessing through a java interface, the article referenced used a php client).  
 Wouldn't you at least want to distinguish 0 length from undefined length? Is this a known issue? Intentional behavior for some specific purpose?  A long-running dispute in database theory? What gives?  
 (This was prompted by Matt Solnit's answer to  this question .) 
 
  is very very very old. 
 Back in   when it was developed (and before there were any standards) they thought is was a good idea, and given then way   stores its values, it really was. 
 Here's how   stores data (taken from the  **documentation**
): 
 
 No datatype is stored within the data, only the data length and the data itself. 
 If the   occurs between two columns with values, it's stored as a single byte meaning column has length   (actually,  ). Trailing  s are not stored at all. 
 So to store the value  ,   needs to store 5 bytes:  . 
 However, to store both an empty string and a  ,   just needs to set data length to  . 
 Very smart if your data are to be stored on   hard drives that cost   each. 
 Later, when the standards appeared, it wasn't such a good idea anymore, but by that time there already were lots and lots of code relying on   and   being the same thing. 
 Making   to do such a distinction will break  **tons**
 of code. 
 To fix it, they renamed   to   (which is not a part of any standard), stated that   will  **never**
 distinguish between a   and an empty string and urged everybody to use this datatype instead. 
 Now they are probably waiting for the last person who used a   in   database to die. 
 
 You might want to read this lenghty and at times funny discussion about this exact subject more than two years ago on OTN:  http://forums.oracle.com/forums/thread.jspa?threadID=456874&start=0&tstart=0 
 Regards,
Rob. 
 
 Which is why smart people like Date say that you should NEVER use nulls. 
 (No, I have to be precise.  It's in fact only just a single one of the almost hundreds of reasons he has mentioned over this past few decades to support that claim.) 
 EDIT 
 I actually also wanted to respond to this : 
 "Making VARCHAR to do such a distinction will break tons of code." 
 Yeah, and surely, breaking at least the spirit of the standard by replacing the "empty string" by null on every update is a lesser evil ? 
 (Note : null is not equal to anything, not even itself, so after assigning the empty string to a column, oracle will give you a value in that column that is NOT the same as the value that you said you wanted to appear there.  Wow.) 
 
 Looks like Oracle have said that this behaviour may be change in a future release. When and which release it will be is not mentioned. 
 If you have access to metalink look at note: 1011340.6 (unfortunately because of restrictions I am unable to copy the contents of the note here)  
 If you don't have access to metalink then look look at the following from the 10g release 2 documentation  here 
 
 @Ian, a reply to you.  
 Oracle triggers can reference the table they are created on: 
 
 