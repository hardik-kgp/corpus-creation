*** oracle-systimestamp-sysdate-to-milliseconds ***

 Could you provide implementation of stored function to get current   as milliseconds. 
Something I can use like 
 
 and get the difference, measured in milliseconds, between the current time and midnight, January 1, 1970 UTC. 
 Thanks. 
 
 
 DB timezone agnostic 
 with milliseconds 
 works in XE 
 
 
    function current_time_ms
        return number
    is
        out_result number;
    begin
        select extract(day from(sys_extract_utc(systimestamp) - to_timestamp('1970-01-01', 'YYYY-MM-DD'))) * 86400000 
            + to_number(to_char(sys_extract_utc(systimestamp), 'SSSSSFF3'))
        into out_result
        from dual;
        return out_result;
    end current_time_ms;
 
 
 The best thing I know of is: 
 
 I'm not quite sure what requirements you have regarding time zone. You might need to make minor adjustments for that. 
 
 Adding to @Mykhaylo Adamovych answer (which looks correct!) here goes a more straightforward approach using oracle Java support (i.e. not in XE and not in AWS RDS). Less portable (in case you care), but seemed faster in  my  testing. 
 
 
 AFAIK, there is no direct way for achieving this (other than manually writing a long-winded SQL function). 
 Why do you need this specifically? 
 You could use a stored Java function and then use the System.getCurrentMillis() that Java provides to return you a value in Milliseconds from 1.1.1970 to now. 
 
 Below code gives the difference in milliseconds: 
 
 For conversion of milliseconds to Hours, Minutes, seconds, modify and use below query as appropriate: 
 
 
 
 