*** order-sql-by-strongest-like ***

 I have the following query: 
 
 is there a strategy to sort based on the most relevant results? 
 
 When you talk about "relevance", you really want natural language search, which is supported by MySQL  full-text searches .  The syntax is different than normal  like  queries, and you need to add a special index to the table, but ordering by relevance is possible this way. 
 Here's how MySQL computes relevance (from the link): 
 
 When MATCH() is used in a WHERE clause, as in the example shown earlier, the rows returned are automatically sorted with the highest relevance first. Relevance values are nonnegative floating-point numbers. Zero relevance means no similarity. Relevance is computed based on the number of words in the row, the number of unique words in that row, the total number of words in the collection, and the number of documents (rows) that contain a particular word. 
 
 To  create a full-text index on an existing table , use the  FULLTEXT  modifier: 
 
 Then you can perform a query like this to retrieve results in order of relevance: 
 
 
 If you mean that col_1 is more relevant than col_2 and so on, then : 
 
 If you meant with the most column match then : 
 
 
 You can't.  You're asking your RDBMS to sort results by rows with the most "LIKE" column matches descending. 
 MySQL, for instance, does this with what's called a  FULLTEXT  index.  
 