*** orm-dao-datamapper-activerecord-tablegateway-differences ***

 Can you, please, explain me the differences between the following database representatives, say, in PHP.: 
 ORM
DAO
DataMapper
ActiveRecord
TableGateway 
 Any examples would be appreciated. 
 
 That would require a pretty long answer. Instead of repeating what others have said better and in more detail before me, I link you to some relevant pages. I suggest to look through them. Maybe follow a few additional links. Wikipedia is always a good start. If you still have any questions about one or the other pattern after going through the links, feel free to come back to SO and ask again. But if you do, try to narrow it down. It's better to ask multiple questions and focus on particular aspects than expecting people to write an essay for you. 
 **Object Relational Mapper**

 
 Object-relational mapping (ORM, O/RM, and O/R mapping) in computer software is a programming technique for converting data between incompatible type systems in relational databases and object-oriented programming languages. 
 
 **Data Access Object**

 
 Use a Data Access Object (DAO) to abstract and encapsulate all access to the data source. The DAO manages the connection with the data source to obtain and store data. 
 
 **DataMapper**

 
 A layer of Mappers (473) that moves data between objects and a database while keeping them independent of each other and the mapper itself. 
 
 **Active Record**

 
 An object that wraps a row in a database table or view, encapsulates the database access, and adds domain logic on that data. 
 
 **Table Data Gateway**

 
 An object that acts as a Gateway (466) to a database table. One instance handles all the rows in the table. 
 
 