*** ormlite-update-of-the-database ***

 I'm actually developing an app which is using ORMLite library (which is wonderful btw) but I'm a beginner using it. 
 I have a question about the update of the database inside the device. 
 Let's say that someone download my app on the Google Play. Few months later I will certainly populate some tables with new entries.  
 When this person is doing an update of the app, how can I just update the database with my new entries and keep the old ones inside it. 
 To be more clear, imagine that the user answered questions in my app. When I will introduce new questions, how can I insert them in the db when he updates my app  **and keep the questions**
 that have already been answered ? 
 
 
 When this person is doing an update of the app, how can I just update the database with my new entries and keep the old ones inside it. 
 
 The idea is to use the version number that is passed to the   method.  With  ORMLite , the   method takes an   and   number.  You then can write conversion code into your application that is able to convert the data from the old format and update the schema. 
 For more information, see the ORMLite docs on the subject: 
 
 http://ormlite.com/docs/upgrade-schema 
 
 To quote, you could do something like the following: 
 
 If you have existing data that you need to convert then you should do the conversions in SQL if possible. 
 Another alternative would be to have an   entity and an   entity that point to the same table-name.  Then you can read in   entities using the  , convert them to   entities, and then update them using the   back to the same table.  You need to be careful about object caches here. 
 
 I do it this way: 
 
 This will incrementally update the users db independent from which db version he is coming. 
 
 Little information, is not clear whether the changes you have table structure.  
 **a)**
 If you do not change the database structure. 
 1 In the new version of your program when you start checking a previously saved version (eg in preferences) 
with the current (see PackageManager.getPackageInfo) 
 saved = 0 - User just installed the new version 
 saved < current - User updates your program 
 2 Add new data to base 
 3 Save current version on preferences 
 **b)**
 If the table structure has changed (added or remove fields) 
 1 Increase the version number of your database (see your extends OrmLiteSqliteOpenHelper class) 
 2 When the user first runs into your program, method 'onUpgrade' will be called (in your extends OrmLiteSqliteOpenHelper class) which will be transferred to old and new version numbers. 
 
 Read the existing data in the cache (temp)  
 recreate table  
 Add the data from the cache + your new data 
 
 
 I don't like to drop database at every upgrade, or write an update code after I add each field, so ... 
 I'm trying to do it like this: 
 
 I hope this code can be better. 
 Here, i don't delete old tables and columns that were removed from dao's, and I don't create foreign fields (I'm not sure if i need it). 
 