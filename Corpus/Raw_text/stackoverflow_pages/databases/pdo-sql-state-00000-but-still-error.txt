*** pdo-sql-state-00000-but-still-error ***

 
 
 
 
 
 This question already has an answer here :
                            
                         
 
 
 
 My PDO Statement doesn't work 
 
                                    (1 answer)
                                 
 
 Closed  2 years ago . 
 
 
 Can anybody explain why 
 
 returns  , whereas 
 
 both return    , which means according to the documentation success? It is an   and nothing is actually being inserted into the database... so, why do I get a success message from  ? 
 
 In case it helps, this is the code... 
 
 
 It is because   refers to the last statement that was successfully executed. Since   returns false, then it cannot refer to that statement (either to nothing or to the query before). 
 As to why   returns false, I don't know... either there is a problem with your   array or with your database connection. 
 
 PDO::errorCode â€” Fetch the SQLSTATE associated with the last operation on the database handle 
 
 Note: The PHP manual ( http://php.net/manual/en/pdo.errorinfo.php ) does not define exactly what "last operation on the database handle" means, but if there was an issue with binding parameters, that error would have occurred  inside PDO and without any interaction with the database. It is safe to say that if   returns  , that   is valid. If   returns  , the behavior of   is not explicitly clear from the documentation. If I recall correctly from my experience, execute returns  , even if MySQL returned an error, returns   if no operation was done. Since the documentation is not specific, it might be db driver specific. 
 This answer reflects practical experience as of when it was written in September 2012. As a user has pointed out, the documentation does not explicitly reaffirm this interpretation. It also may only reflect the particular database driver implementation, but it should always be true that if   returns  , that   is valid. 
 You might also want to set  PDO::ERRMODE_EXCEPTION  in your connect sequence. Exception handling makes it unnecessary to check and query the error. 
 
 
 I Faced the similar problem ,  
 This occurs manly due to  **error in query**
,  try to  **run your query in php-myadmin**
  or any other query runner and  **confirm**
 that your  **query is working**
 fine. Even if our query syntax is correct other simple errors like leaving null or not mentioan a column that  set as  not null in table structure will cause this error.(This was the errror made by me)  
 As user1122069  explained  the reason for $pdo->errorInfo()  says nothing is wrong may be due to 
 
 $pdo->errorInfo() refers to the last statement that was successfully
  executed.  Since $sql->execute() returns false, then it cannot refer to
  that statement (either to nothing or to the query before) 
 
 Hopes this helps  :) 
 
 From the php manual: 
 PDO::ERR_NONE (string)
Corresponds to SQLSTATE '00000', meaning that the SQL statement was successfully issued with no errors or warnings. This constant is for your convenience when checking PDO::errorCode() or PDOStatement::errorCode() to determine if an error occurred. You will usually know if this is the case by examining the return code from the method that raised the error condition anyway. 
 So it sounds like it did insert the record. Check the last record id in your table... maybe you just missed it? 
 
 I was getting this error at one time. I only got it on one server for all failures. A different server would report the error correctly for the same errors. That led me to believe it was a MySQL client configuration error. I never solved the specific error, but check your configurations. 
 
 Try to check $sql by print_r() and copy your query then try resultant query in phpMyadmin. Hope will get the reason. There would be chance of irrelevant value.  
 