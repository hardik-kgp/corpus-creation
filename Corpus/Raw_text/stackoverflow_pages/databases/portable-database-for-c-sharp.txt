*** portable-database-for-c-sharp ***

 
 
 
 
 
 
 
 
                            As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened,  visit the help center  for guidance.
                            
                         
 
 
 Closed  7 years ago . 
 
 
 I know that this may seem as a question that was already asked, but I tried the solutions out there already. 
 I am building a program with C# and I need to save data in a way that every client has his own fresh (dynamic path) to his db. What can I do so users won't need to install extra things, but just .NET framework? 
 I heard about SQLite, but I didn't really get it working. 
 
 Sql Server CE. It runs in-process and you can deploy all required assemblies with your application. See this article: 
 How to: Deploy a SQL Server Compact 3.5 Database with an Application 
 Update: Adding some other SQL Server CE related links that I have found helpful: 
 
 SQL Server Compact “Private Deployment” on desktop–an overview 
 Using SQL Server Compact 4.0 with Desktop Private Deployment and a Setup project (MSI) (part 2) 
 Privately Deploying SQL Server Compact with the ADO.NET Entity Provider 
 
 
 Download the SQLite .NET data provider  here  and then reference System.Data.SQLite.dll from within your application. The following example should work right off the bat. 
 
 Of course all it does is list the tables in the specified file. If the file does not exist then it will be created automatically and naturally there will not be any tables in it. But, at the very least it  should  work. 
 
 You could try SQL Server Compact Edition - 
 http://weblogs.asp.net/scottgu/archive/2010/06/30/new-embedded-database-support-with-asp-net.aspx 
 
 The official SQLite QuickStart: 
 http://www.sqlite.org/quickstart.html 
 Code samples for System.Data.Sqlite, on the original support forums: 
 http://sqlite.phxsoftware.com/forums/t/76.aspx 
 You can find a few alternatives to SQLite in the answers to this related SO question: 
 Alternatives to SQLite? 
 
 If I'm not mistaken, c#.net can interface with a sql database without separate server software.  You would just import system.data.sqlclient. 
 SQL could work for you, but the reason that there is no simple way to get started with it is that database architecture is not a simple subject.  There are plenty of great books out there to get you started if you choose to go that route.  It deals specifically with the syntax of MSSQL, but "T-SQL Fundamentals" by Itzik Ben-Gan is a helpful one.  Of course, syntax variations between different iterations of sql are extremely common, and not a huge burden once you know the idiosyncrasies of the one you happen to be dealing with. 
 