*** portable-phpass-password-hashes-should-i-use-them ***

 I'm installing a user registration script (Tank Auth) for my website. 
 In the installation guide its says,  
 
 WARNING: By default the library generates strong system-specific
  password hashes that are not portable.
  It means that once created, user
  database cannot be dumped and exported
  to another server. This behavior can
  be changed in config-file as well. 
 
 This put me in a dilemma. In the future I may want to change servers but I don't want weak passwords either. Are portable password hashes a big risk? And more importantly, what do they mean by hashes? Is it the character length? 
 
 Task Auth uses PHPass for password hashing  (an old version, that's not a good sign; you might want to  update that  in your install). PHPass has two modes, portable and bcrypt. 
 Depending on the PHP version, you do not need to have portable hashes on. On PHP 5.3 and above, PHP supplies its own implementation of bcrypt if it isn't available on the system.  **If all your servers have PHP 5.3 and above, I highly recommend to turn portable hashes off.**
 PHPass "portables hashes" exists because, depending of the version of PHP installed, bcrypt might not be available. 
 That said, PHPass portable hashes does store the salt in its hash. That's why every run on the same password is different. 
 Also, PHPass uses   during the generation of those hashes *  to check if the   function available with that version supports the   parameter. If it doesn't,   is use to transform the hexadecimal data into binary (note that this is considerably slower then simply using  , which is why the branch is made). 
 Again, if all your servers are running PHP 5.3 and above, I highly recommend to turn off portable mode and let PHPass use   instead. Since PHP 5.3+ provides its own implementation when the system one isn't available, your hash will be checkable across OSes. Even if you do turn off portable mode, PHPass will still be smart enough to check your old hashes the proper way. 
 * Line 131 
 
 **EDIT:**
 For more explanation, here is how hashes in portable mode are generated (simplified, does not use actual variables found in PHPass, but accurate). Note that PHPass uses their own version of base64 encoding. 
 
   
   (from constructor, minimum is 5 on PHP 5+, 3 other)   
  (Salt is 6 bytes... 8 bytes in "encode64" format).   
   
 For   times, do    
 
 
 So the final hash essentially is this: 
 
 