*** postgres-transpose-rows-to-columns ***

 I have the following table, which gives multiple email addresses for each user. 
 
 I need to flatten this out to columns on a user query. To give me the "newest" 3 email addresses based on the creation date. 
 
 
 Use   from the  tablefunc  module. 
 
 I used dollar-quoting for the first parameter, which has no special meaning. It's just convenient if you have to escape single quotes in the query string which is a common case: 
 
 Insert text with single quotes in PostgreSQL 
 
 Detailed explanation and instructions here: 
 
 PostgreSQL Crosstab Query   
 
 And in particular, for "extra columns": 
 
 Pivot on Multiple Columns using Tablefunc 
 
 The  special difficulties  here are: 
 
 The lack of key names. 
-> We substitute with   in a subquery. 
 The varying number of emails. 
-> We limit to a max. of three in the outer  
 and use   with two parameters, providing a list of possible keys. 
 
 Pay attention to   in the  . 
 
 If anyone else that finds this question and needs a dynamic solution for this where you have an undefined number of columns to transpose to and not exactly 3, you can find a nice solution here:  https://github.com/jumpstarter-io/colpivot 
 