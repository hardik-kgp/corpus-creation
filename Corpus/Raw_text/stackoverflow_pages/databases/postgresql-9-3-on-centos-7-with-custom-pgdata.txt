*** postgresql-9-3-on-centos-7-with-custom-pgdata ***

 I am trying to set up Postgresql 9.3 server on Centos 7 (installation via yum) inside a custom directory, which in my case is an encrypted partition (/custom_container/database) that is mounted on startup. For a certain reason Postgresql does not behave like it should in the manual and makes an error on service startup. 
 Note: It does not want to accept the PGDATA environment variable which I set, and when running  
 
 (given that the PGDATA directory is owned by postgres:postgres) the cluster gets initialized inside the default directory /var/lib/pgsql/9.3/data/
The only way to change that is using  
 
 Which initializes the directory inside the custom container I am using. This is something I could not figure out, as the docs say that PGDATA variable is taken on default.  
 Problem: When running 
 
 I get an error with the log 
 
 Which means that Postgresql, even though the cluster is initialized in the new $PGDATA directory (/custom_container/database) still looks for the cluster in /var/lib/pgsql/9.3/data/ 
 Did anyone experience this Postgresql behavior before? Could it be that I forgot certain configuration options or that the problem comes from Postgresql installation? 
 Thank you in advance! 
 
 It appears the real problem was setting the environment variables, which I got working in the following thread:
 Centos 7 environment variables for Postgres service 
The issue is the PGDATA variable set inside the custom /etc/systemd/system/postgresql-9.3.service which should be created from the contents of /usr/lib/systemd/system/postgresql-9.3.service which uses the default PGDATA var. 
 
 You need to create a custom   file in  , which overrides the default   environment variable. Your custom service file can   the default postgresql service file, so you only need to add what you want to change. That way, upgrades can still modify/improve? stuff in the default service file, while your change is preserved. 
 This is how I just did it in Centos 7: 
 
 Verify : 
 
 **Update:**

 Rather than manually creating the file and adding the .include line, you can also use the systemd built-in way: 
 
 This will open your default editor and save your changes to  
 
 try this: 
 
 
 I think the most "CentOS 7 way" to do it is to copy the service file: 
 
 Then edit the file  /etc/systemd/system/postgresql-9.6.service : 
 
 Then start it   and verify: 
 
 
 Try to edit file /etc/init.d/postgresql-9.3:
PGDATA=/your/custom/path 
 