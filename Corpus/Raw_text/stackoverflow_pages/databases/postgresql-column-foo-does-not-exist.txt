*** postgresql-column-foo-does-not-exist ***

 I have a table that has 20 integer columns and 1 text column named 'foo' 
 If I run query: 
 
 I get error: 
 
 I have checked myself that his column indeed exists. If I do something like: 
 
 The resulting output shows 'foo' as one of the columns....
I am guessing I have to do something special in the query because foo is a text column... 
 Thanks for the help (POSTGRESQL 8.3) 
 
 You accidentally created the column name with a trailing space and presumably phpPGadmin created the column name with double quotes around it: 
 
 That would give you a column that looked like it was called   everywhere but you'd have to double quote it and include the space whenever you use it: 
 
 The best practice is to use lower case unquoted column names with PostgreSQL. There should be a setting in phpPGadmin somewhere that will tell it to not quote identifiers (such as table and column names) but alas, I don't use phpPGadmin so I don't where that setting is (or even if it exists). 
 
 If for some reason you have created a mixed-case or upper-case column name, you need to quote it, or get this error: 
 
 Note how the error message gives the case in quotes. 
 
 PostreSQL apparently converts column names to lower case in a sql query - I've seen issues where mixed case column names will give that error.  You can fix it by putting the column name in quotation marks: 
 
 
 As others suggested in comments, this is probably a matter of upper-case versus lower-case, or some whitespace in the column name.  (I'm using an answer so I can format some code samples.)  To see what the column names really are, try running this query: 
 
 You should probably also check your PostgreSQL server log if you can, to see what it reports for the statement. 
 If you quote an identifier, everything in quotes is part of the identifier, including upper-case characters, line endings, spaces, and special characters.  The only exception is that two adjacent quote characters are taken as an escape sequence for one quote character.  When an identifier is  not  in quotes, all letters are folded to lower-case.  Here's an example of normal behavior: 
 
 The query I showed at the top yields this: 
 
 
 It could be quotes themselves that are the entire problem.  I had a similar problem and it was due to quotes around the column name in the CREATE TABLE statement.  Note there were no whitespace issues, just quotes causing problems.   
 The column looked like it was called   but was really called  .  The quotes don't appear in typical queries so it was hard to detect (for this postgres rookie).  This is on postgres 9.4.1 
 Some more detail: 
 Doing   gave: 
 
 but trying to select just the first column   resulted in an error: 
 
 Just looking at the column names didn't help:
 
 
 but in pgAdmin if you click on the column name and look in the SQL pane it populated with: 
 
 and lo and behold there are the quoutes around the column name. So then ultimately   works fine: 
 
 Same moral, don't use quotes. 
 
 I fixed it by changing the  **quotation mark**
 ( **"**
) with  **apostrophe**
 ( **'**
) inside Values. For instance: 
 
 Becomes this: 
 
 Assuming   column is  VarChar . 
 
 the problem occurs because of the name of column is in camel case
internally it wraps it in " "(double quotes)
to solve this, at the time of inserting values in table use single quotes ('') 
 e.g. 
 insert into schema_name.table_name values('  ','  ','  '); 
 
 We ran into this issue when we created the table using phppgadmin client. With phppgadmin we did not specify any double quotes in column name and still we ran into same issue. 
 It we create column with caMel case then phpPGAdmin implicitly adds double quotes around the column name. If you create column with all lower case then you will not run into this issue. 
 You can alter the column in phppgadmin and change the column name to all lower case this issue will go away. 
 
 I fixed similar issues by qutating column name 
 
 In my case it was just 
 
 without quotes i'v got same error. 
 