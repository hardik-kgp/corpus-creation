*** postgresql-csv-import-from-command-line ***

 I've been using the psql Postgres terminal to import CSV files into tables using the following 
 
 which works fine except that I have to be logged into the psql terminal to run it. 
 I would like to know if anyone knows of a way to do a command similar to this from the Linux shell command line similar to how Postgres allows a shell command like bellow 
 
 This allows the dumping of a database from the Linux shell without being logged into psql terminal. 
 
 As stated in The PostgreSQL Documentation ( II. PostgreSQL Client Applications - psql ) you can pass a command to   with the switch  : 
 
 
 The solution in the accepted answer will only work on the server and when the user executing the query will have permissions to read the file as explained in  this SO answer . 
 Otherwise, a more flexible approach is to replace the SQL's   command with the  's "meta-command" called   which  which takes all the same options as the "real" COPY, but is run inside the client  (with no need for   at the end): 
 
 As per docs , the   command: 
 
 Performs a frontend (client) copy. This is an operation that runs an SQL COPY command, but instead of the server reading or writing the specified file, psql reads or writes the file and routes the data between the server and the local file system. This means that file accessibility and privileges are those of the local user, not the server, and no SQL superuser privileges are required. 
 
 
 In addition, if the   contains the header in the first line, it can be recognized by adding   at the end of the above command: 
 
 
 To complete the previous  answer , I would suggest: 
 
 
 The most flexible way is to use a shell  , which allows you to use shell variables inside your query, even inside (double or single) quotes: 
 
 