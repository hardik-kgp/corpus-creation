*** postgresql-using-json-sub-element-in-where-clause ***

 This might be a very basic question but I am not able to find anything on this online. 
 If I create a sample table : 
 
 Then, if I query the table using the following query: 
 
 Now since there are no records in the table yet and there is no such property as 'x' in any record, it should return zero results. 
 But I get the following error: 
 
 However following query works: 
 
 Am I missing something here or typecasting is the only way I can get an integer value from a json field ? If that's the case, does it not affect the performance when data becomes extremely large ? 
 
 
 Am I missing something here or typecasting is the only way I can get
  an integer value from a json field ?  
 
 You're correct, typecasting is the only way to read an integer value from a json field. 
 
 If that's the case, does it not affect the performance when data
  becomes extremely large ? 
 
 Postgres allows you to index functions including casts, so the index below will allow you to quickly retrieve all rows where data->>x has some integer value 
 
 
 JSON operator   means  Get JSON array element (or object field) as text ,  so type cast is necessary.  
 You could define your own JSON operator, but it would only simplify the code, without consequences for performance. 
 