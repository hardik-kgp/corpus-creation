*** pulling-data-off-of-sql-table-with-php-using-sessions ***

 I'm trying to pull data off my sql table with php unique to the session's ID, however I only get the position that the user is in when I echo anything out! 
 
 displays as:  
 5 5 
 if I log in with the fifth position in the database! 
 
 The reason why you are getting 5 is for this code: 
 
 is that $_SESSION['user_id'] 's value is 5. So after the assignment $user_info's value is 5. Now because the $_SESSION['user_id'] is not set to an array as your intention seems to be. The result is that $user_info is taken as a string and ['firstname'] evaluates to [0]. If you like, you can update the ID 5 to 54, etc. You will always get the first character of your ID. 
 To correct this, try changing the last 2 lines before the return in your user_data function to: 
 
 to: 
 
 
 
 should be 
 
 
 for me it seems like you forgot to update data in session. 
lets say here: 
 
 hope it helps you to resolve your problems. 
 
 What I see that your in this line 
 
 you are using "firstname", whereas in database it is named as "first_name", see underscore 
 
 Let me know if this solves or not as I too want to know its answer 
 
 May help you some changes in your code 
 
 
 
 and 
 
 and 
 
 
 From experience of creating large code bases in PHP and when you expand the application you will find you are using more and more data all over the place from the users table. Also, the table should only really contain the most vital data that is comonly used and you do NOT want to be sending more than 1 or 2 queries to the users table per page hit as it can soon become a bottle neck. For this reason you are better storing all of the data data (move large fields to another table or fields rarely used). Then store the whole user record in a session which means any function, class etc can use it as it becomes a superglobal and you can trust it enough to use it throughout the entire application without needed to re-query the users table again and again. 
 I have written a working example (suing your db table structure) and commented it all throughout explaining why i have done it the way i have and some points you might want to consider. 
 
 P.S. Also you may want to start using LIMIT in your SQL queries as LIMIT 1 in the query above tells mysql that it can stop searching after it finds 1 result - and you should have an index on that column (preferably a primary index or unique index) to keep it lightening fast (or at least in the beginning anyway >< ). 
 