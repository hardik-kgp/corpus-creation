*** query-a-tables-foreign-key-relationships ***

 For a given table 'foo', I need a query to generate a set of tables that have foreign keys that point to foo.  I'm using Oracle 10G. 
 
 This should work (or something close): 
 
 
 The following statement should give the children and all of their descendents. I have tested it on an Oracle 10 database. 
 
 
 Here's how to take Mike's query one step further to get the  **column names**
 from the constraint names: 
 
 
 link to  Oracle Database Online Documentation 
 You may want to explore the  Data Dictionary views .  They have the prefixes: 
 
 User 
 All 
 DBA 
 
 sample: 
 
 
 Continuing Mike's example, you may want to generate scripts to enable/disable the constraints.  I only modified the 'select' in the first row. 
 
 
 I know it's kinda late to answer but let me answer anyway, some of the answers above are quite complicated hence here is a much simpler take. 
 
       `SELECT a.table_name child_table, a.column_name child_column, a.constraint_name, 
       b.table_name parent_table, b.column_name parent_column
       FROM all_cons_columns a
       JOIN all_constraints c ON a.owner = c.owner AND a.constraint_name = c.constraint_name
       join all_cons_columns b on c.owner = b.owner and c.r_constraint_name = b.constraint_name
       WHERE c.constraint_type = 'R'
       AND a.table_name = 'your table name'`
 
 
 
 
 Download the Oracle Reference Guide for 10G which explains the data dictionary tables. 
 The answers above are good but check out the other tables which may relate to constraints. 
 
 Finally, get a tool like Toad or SQL Developer which allows you to browse this stuff in a UI, you need to learn to use the tables but you should use a UI also. 
 
 
 