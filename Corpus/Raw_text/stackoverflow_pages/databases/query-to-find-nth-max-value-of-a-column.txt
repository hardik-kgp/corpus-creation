*** query-to-find-nth-max-value-of-a-column ***

 I want to find 2nd,3rd..nth maximum value of a column 
 
 You could sort the column into descending format and then just obtain the value from the nth row. 
 EDIT:: 
 Updated as per comment request.  **WARNING**
 completely untested! 
 
 Something like the above should work for Oracle ... you might have to get the syntax right first! 
 
 Consider the following Employee table with a single column for salary. 
 
+------+
| Sal  |
+------+
| 3500 | 
| 2500 | 
| 2500 | 
| 5500 |
| 7500 |
+------+
 
 The following query will return the Nth Maximum element. 
 
 For eg. when the second maximum value is required, 
 
 
+------+
| Sal  |
+------+
| 5500 |
+------+
 
 
 You didn't specify which database, on MySQL you can do 
 
 Would skip the first 7, and then get you the next ten highest. 
 
 Again you may need to fix for your database, but if you want the top 2nd value in a dataset that potentially has the value duplicated, you'll want to do a group as well: 
 
 Would skip the first two, and then will get you the next five highest.   
 
 Pure SQL (note: I would recommend using SQL features specific to your DBMS since it will be likely more efficient). This will get you the n+1th largest value (to get smallest, flip the <). If you have duplicates, make it COUNT( DISTINCT VALUE ).. 
 
 
 (Table Name=Student, Column Name= mark) 
 
 
 You can find the nth largest value of column by using the following query: 
 
 
 Here's a method for Oracle.  This example gets the 9th highest value.  Simply replace the 9 with a bind variable containing the position you are looking for. 
 
 If you wanted the nth unique value, you would add DISTINCT on the innermost query block. 
 
 Just dug out this question when looking for the answer myself, and this seems to work for SQL Server 2005 (derived from  Blorgbeard's solution ): 
 
 Effectively, that is a  , with the top n of the table retrieved by the   query. 
 
 
 To find the Nth max sal. 
 
 
 
 This is query for getting  nth Highest from colomn put n=0 for second highest and n= 1 for 3rd highest and so on... 
 
 
 
 where n = 1, 2, 3,....nth max value. 
 
 In SQL Server, just do: 
 
 And then throw away the first value, if you don't need it. 
 
 for SQL 2005: 
 
 
 MySQL: 
 
 
 Answer :
top second: 
 
 
 
 
 I think that the query below will work just perfect on oracle sql...I have tested it myself.. 
 Info related to this query : this query is using two tables named   and   with columns in employee named:   (employee name),   (common to employee and department),  
 And columns in department table:   (common for employee table as well),  
 
 thanks 
 
 Another one for Oracle using analytic functions: 
 
 
 
 Change Number four with N. 
 
 You can simplify like this  
 
 If the Sal contains duplicate values then use this 
 
 the 4 will be nth value it may any highest value such as 5 or 6 etc. 
 
 (TableName=Student, ColumnName=Mark) : 
 
 
 **Simple SQL Query to get the employee detail who has Nth MAX **
** in the table **
**.**

 
 Consider table structure as: 
 
 Employee ( 
        id [int primary key auto_increment], 
        name [varchar(30)], 
        salary [int] ); 
 
 **Example:**

 If you need 3rd   salary in the above table then, query will be: 
 
 **Similarly:**

 If you need 8th   salary in the above table then, query will be: 
 
 
 **NOTE:**

  When you have to get the  Nth    value you should give the   as  (N - 1) . 
 
 Like this you can do same kind of operation in case of salary in ascending order. 
 
 In PostgreSQL, to find N-th largest salary from Employee table. 
 
 
 **mysql query**
:
 suppose i want to find out nth max salary form employee table 
 
 
 Solution to find Nth Maximum value of a particular column in SQL Server: 
 Employee table: 
 
 Sales table: 
 
 Employee table data: 
 
 Sales table data: 
 
 Query to Find out details of an employee who have highest sale/  **N**
th highest salesperson 
 
 In the  **WHERE(0)**
 replace 0 by n-1 
 Result: 
 
 
 Table employee 
 
 You find the second max value by this query 
 
 You find the third max value by this query 
 
 