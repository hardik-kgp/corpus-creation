*** querying-data-by-joining-two-tables-in-two-database-on-different-servers ***

 There are two tables in two different databases on different servers, I need to join them so as to make few queries. What options do I have? What should I do? 
 
 You'll need to use   to create a server link.  See the  reference documentation  for usage.  Once the server link is established, you'll construct the query as normal, just prefixing the database name with the other server.  I.E: 
 
 Once the link is established, you can also use   to execute a SQL statement on the remote server and transfer only the data back to you.  This can be a bit faster, and it will let the remote server optimize your query.  If you cache the data in a temporary (or in-memory) table on   in the example above, then you'll be able to query it just like joining a standard table.  For example: 
 
 Check out the  documentation for OPENQUERY  to see some more examples.  The example above is pretty contrived.  I would definitely use the first method in this specific example, but the second option using   can save some time and performance if you use the query to filter out some data. 
 
 Try this: 
 
 
 If a linked server is not allowed by your dba, you can use OPENROWSET. Books Online will provide the syntax you need. 
 
 From a practical enterprise perspective, the best practice is to make a mirrored copy of the database table in your database, and then just have a task/proc update it with delta's every hour. 
 
 A join of two tables is best done by a DBMS, so it should be done that way. You could mirror the smaller table or subset of it on one of the databases and then join them. One might get tempted of doing this on an ETL server like informatica but I guess its not advisable if the tables are huge. 
 
 If the database link option is not available, another route you could take is to link the tables via ODBC to something such as MS Access or Crystal reports and do the join there. 
 
 Maybe hard-coded database names isn't the best approach always within an SQL-query. Thus, adding synonyms would be a better approach. It's not always the case that databases have the same name across several staging environments. They might consist by postfixes like PROD, UAT, SIT, QA and so forth. So be aware of hard-coded queries and make them more dynamic. 
 Approach #1: Use synonyms to link tables between databases on the same server. 
 Approach #2: Collect data separately from each database and join it in your code. Your database connection strings could be part of your App-server configuration through either a database or a config file. 
 
 I tried this code below and it's working fine 
 
 
 You could try the following: 
 
 
 for this simply follow below query  
 
 Where I wrote databasename, you have to define the name of the database. If you are in same database so you don't need to define the database name but if you are in other database you have to mention database name as path or it will show you error. 
Hope I made your work easy 
 
 While I was having trouble join those two tables, I got away with doing exactly what I wanted by opening both remote databases at the same time. MySQL 5.6 (php 7.1) and the other MySQL 5.1 (php 5.6) 
 
 If you get those two OKs on screen, then both databases are open and ready. Then you can proceed to do your querys. 
 
 I was trying to do some joins but since I got those two DBs open, then I can go back and forth doing querys by just changing the connection   or    
 It worked for me, I hope it helps... Cheers 
 