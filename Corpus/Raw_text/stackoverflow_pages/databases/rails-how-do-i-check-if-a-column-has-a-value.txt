*** rails-how-do-i-check-if-a-column-has-a-value ***

 How can I accomplish this? 
 
 I want to test to see if the agent has a cell number, and if so, display what's inside the conditional.  What I have currently doesn't seem to work; it just displays "Cell: ". 
 Thoughts? 
 
 This is what you asked for: 
 
 The cell? method works whether cell is nil or an empty string.  Rails adds similar functions for all ActiveRecord attributes.  This will look a little nicer: 
 
 The question mark and colon form a quick "if ? then : else" statement.  There are two question marks in the code above because one is part of the method name cell? and the other is a part of the if/then/else construction. 
 
 I am giving a very detailed answer to this Question " **How do I check if a column has a value?**
". 
 First of all, it is important to note that an attribute can have four kinds of values in it. 
 
 **nil**
 value i.e "nil" stored in the database 
 **empty**
 value i.e "" an empty string with  **no spaces**

 **empty**
 string  **with spaces**
 " ". 
 value present in database i.e a  **non-empty string**
. 
 
 Here is the detail behavior of all the present methods(Ruby 2.2.2) that could be used in this case. 
 **First Method:**
  
 
 For  **nil**
 value => Throws an exception 
 
 For  **empty**
 value i.e "" an empty string with  **no spaces**

 
 **empty**
 string  **with spaces**
 " ". 
 
 value present in database i.e a  **non-empty string**
. 
 
 
 **Second Method:**
  
 
 **nil**
 value i.e "nil" stored in the database 
 
 **empty**
 value i.e "" an empty string with  **no spaces**

 
 **empty**
 string  **with spaces**
 " ". 
 
 value present in database i.e a  **non-empty string**
. 
 
 
 **Third Method:**
  
 
 **nil**
 value i.e "nil" stored in the database 
 
 **empty**
 value i.e "" an empty string with  **no spaces**

 
 **empty**
 string  **with spaces**
 " ". 
 
 value present in database i.e a  **non-empty string**
. 
 
 
 **Fourth Method:**
  
 
 **nil**
 value i.e "nil" stored in the database 
 
 **empty**
 value i.e "" an empty string with  **no spaces**

 
 **empty**
 string  **with spaces**
 " ". 
 
 value present in database i.e a  **non-empty string**
. 
 
 
 You can use either of the four depending upon the situation you face. 
 Thanks 
 
 
 It works. 
 
 agent.cell? seems to work the same as agent.cell.blank? in RoR. 
 
 
 I find the use of #each,  , and   to be more readable and easier to understand at first glance. 
 