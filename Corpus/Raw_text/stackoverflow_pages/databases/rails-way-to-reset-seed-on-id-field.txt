*** rails-way-to-reset-seed-on-id-field ***

 I have found the "pure SQL" answers to this question. Is there a way,  **in Rails**
, to reset the id field for a specific table? 
Why do I want to do this? Because I have tables with constantly moving data - rarely more than 100 rows, but always different. It is up to 25k now, and there's just no point in that. I intend on using a scheduler internal to the Rails app (rufus-scheduler) to run the id field reset monthly or so. 
 
 I came out with a solution based on hgimenez's answer and  this other one .  
 Since I usually work with either Sqlite or PostgreSQL, I've only developed for those; but extending it to, say MySQL, shouldn't be too troublesome. 
 Put this inside lib/ and require it on an initializer: 
 
 Usage: 
 
 EDIT: Since the most usual case in which you will want to do this is after clearing a database table, I recommend giving a look to  database_cleaner . It handles the ID resetting automatically. You can tell it to delete just selected tables like this: 
 
 
 You never mentioned what DBMS you're using. If this is postgreSQL, the ActiveRecord postgres adapter has a   method that you could use: 
 
 
 I assume you don't care about the data: 
 
 Or if you do, but not too much (there is a slice of time where the data only exists in memory): 
 
 This will give new records, with the same attributes, but id's starting at 1. 
 Anything  ing this table could get screwy. 
 
 Based on @hgmnz 's answer, I made this method that will set the sequence to any value you like... (Only tested with the Postgres adapter.) 
 
 
 One problem is that these kinds of fields are implemented differently for different databases- sequences, auto-increments, etc.  
 You can always drop and re-add the table. 
 
 No there is no such thing in Rails. If you need a nice ids to show the users then store them in a separate table and reuse them. 
 
 You could only do this  **in rails**
 if the _ids are being set by rails.   As long as the _ids are being set by your database, you won't be able to control them without using SQL.   
 Side note: I guess using rails to regularly call a SQL procedure that resets or drops and recreates a sequence wouldn't be a purely SQL solution, but I don't think that is what you're asking... 
 EDIT: 
 Disclaimer: I don't know much about rails. 
 From the SQL perspective, if you have a table with columns   and you usually   you can just change your queries to    This way, the _id is set by a variable, instead of being automatically set by SQL.  At that point, rails has entire control over what the _ids are (although if it is a PK you need to make sure you don't use the same value while it's still in there).   
 If you are going to leave the assignment up to the database, you have to have rails run (on whatever time schedule) something like:  
 
 to whatever sequence controls the ids for your table.  This will get rid of the current sequence, and create a new one.  This is the simplest way I know of you 'reset' a sequence. 
 
 Rails way for e.g. MySQL, but  **with lost all data in table **
: 
 
 Maybe helps someone ;) 
 
 There are CounterCache methods: 
 https://www.rubydoc.info/docs/rails/4.1.7/ActiveRecord/CounterCache/ClassMethods 
I used   and it seemed to work. 
 