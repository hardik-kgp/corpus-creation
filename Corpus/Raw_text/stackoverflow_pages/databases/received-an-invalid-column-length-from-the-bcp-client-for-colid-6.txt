*** received-an-invalid-column-length-from-the-bcp-client-for-colid-6 ***

 I want to bulk upload csv file data to sql server 2005 from c# code but I am encountering the below error -  
 
 Received an invalid column length from the bcp client for colid 6. 
 
 when bulk copy write to database server 
 
 One of the data columns in the excel (Column Id 6) has one or more cell data that exceed the datacolumn datatype length in the database. 
 Verify the data in excel. Also verify the data in the excel for its format to be in compliance with the database table schema. 
 To avoid this, try exceeding the data-length of the string datatype in the database table. 
 Hope this helps. 
 
 I know this post is old but I ran into this same issue and finally figured out a solution to determine which column was causing the problem and report it back as needed. I determined that   returned in the SqlException is not zero based so you need to subtract 1 from it to get the value.  After that it is used as the index of the   ArrayList of the SqlBulkCopy instance not the index of the column mappings that were added to the SqlBulkCopy instance.  One thing to note is that SqlBulkCopy will stop on the first error received so this may not be the only issue but at least helps to figure it out. 
 
 
 I faced a similar kind of issue while passing a string to Database table using  SQL BulkCopy option. The string i was passing was of 3 characters whereas the destination column length was  . I tried trimming the string before inserting into DB using   function to check if the issue was due to any space (leading and trailing) in the string. After trimming the string, it worked fine. 
 You can try  
 
 Check the size of the columns in the table you are doing bulk insert/copy. the varchar or other string columns might needs to be extended or the value your are inserting needs to be trim. Column order also should be same as in table. 
 e.g, Increase size of varchar column 30 to 50 => 
 ALTER TABLE [dbo].[TableName]
ALTER COLUMN [ColumnName] Varchar(50) 
 
 Great piece of code, thanks for sharing! 
 I ended up using reflection to get the actual DataMemberName to throw back to a client on an error (I'm using bulk save in a WCF service).  Hopefully someone else will find how I did it useful. 
 
 
 
 
 
 
 I got this error message with a much more recent ssis version (vs 2015 enterprise, i think it's ssis 2016).  I will comment here because this is the first reference that comes up when you google this error message.  I think it happens mostly with character columns when the source character size is larger than the target character size.   I got this message when I was using an ado.net input to ms sql from a teradata database.   Funny because the prior oledb writes to ms sql handled all the character conversion perfectly with no coding overrides.  The colid number and the a corresponding Destination Input column # you sometimes get with the colid message are worthless.  It's not the column when you count down from the top of the mapping or anything like that. If I were microsoft, I'd be embarrased to give an error message that looks like it's pointing at the problem column when it isn't.  I found the problem colid by making an educated guess and then changing the input to the mapping to "Ignore" and then rerun and see if the message went away.  In my case and in my environment I fixed it by substr( 'ing the Teradata input to the character size of the ms sql declaration for the output column.   Check and make sure your input substr propagates through all you data conversions and mappings.   In my case it didn't and I had to delete all my Data Conversion's and Mappings and start over again. Again funny that OLEDB just handled it and ADO.net threw the error and had to have all this intervention to make it work.  In general you should use OLEDB when your target is MS Sql. 
 