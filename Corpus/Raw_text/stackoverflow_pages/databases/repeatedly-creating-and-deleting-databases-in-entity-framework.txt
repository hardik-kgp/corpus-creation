*** repeatedly-creating-and-deleting-databases-in-entity-framework ***

 When writing some unit tests for our application, I stumbled upon some weird behaviour in EF6 (tested with 6.1 and 6.1.2): apparently it is impossible to repeatedly create and delete databases (same name/same connection string) within the same application context. 
 Test setup: 
 
 RepeatedCreateDeleteDifferentName completes successfully, the other two fail. According to this, you cannot create a database with the same name, already used once before. When trying to create the database for the second time, the test (and application) throws a SqlException, noting a failed login. Is this a bug in Entity Framework or is this behaviour intentional (with what explanation)? 
 I tested this on a Ms SqlServer 2012 and Express 2014, not yet on Oracle.
By the way: EF seems to have a problem with CompatibleWithModel being the very first call to the database. 
 Update:
Submitted an issue on the EF bug tracker ( link ) 
 
 Database initializers only run once per context per AppDomain. So if you delete the database at some arbitrary point they aren't going to automatically re-run and recreate the database. You can use   to force the initializer to run again. 
 
 A few days ago I wrote integration tests that included DB access through EF6. For this, I had to create and drop a LocalDB database on each test case, and it worked for me. 
 I didn't use EF6 database initializer feature, but rather executed a DROP/CREATE DATABASE script, with the help of  this post  - I copied the example here: 
 
 The following code was responsible for creating database objects according to the model: 
 
 There was no need to change database name between the tests. 
 