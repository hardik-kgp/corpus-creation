*** replacing-sql-database-table-with-transformed-data-in-dplyr ***

 I frequently replace data as I transform it in dplyr, especially when working with large datasets. I'm not sure how to do this elegantly when I am working with SQL-backed datasets, at least not with SQLite.  
 I could not find any discussion of this goal in the dplyr DB vignettes or on SO, which also makes me wonder if there's something wrong with what I'm doing in the first place; however, it seems to be a natural way to work with large datasets. 
 At any rate, the most intuitive approach does not work: 
 
 Another intuitive syntax for in-place copy gives a "table already exists" error: 
 
 One solution is to manually drop the table and rebuild it, which is what I've been doing: 
 
 Another one is to give up on replacement and create a series of temporary tables, which I find unaesthetic but which I suppose might be the recommended paradigm: 
 
 I suspect that "drop and re-copy" is going to wind up being the answer, but out of an abundance of love for beautiful solutions, I thought I would ask if there is a better way. 
 