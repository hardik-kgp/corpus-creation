*** retrieving-full-hierarchy-sorted-by-a-column-under-postgresqls-ltree-module ***

 I'm using PostgreSQL's  Ltree  module for storing hierarchical data. I'm looking to retrieve the full hierarchy sorted by a particular column. 
 Consider the following table: 
 
 In my current implementation, I'd query the database with  , which would return the whole tree: 
 
 However, I want to sort by   (not by  , which is what sorting by   amounts to). Each depth level needs to be independently sorted, with the correct tree structure kept intact. Something that would return the following: 
 
 Postgres'   might be appropriate, but I'm not sure. Any ideas? 
 
 You were on the right track with  . 
 **Solution with recursive CTE**

 
 **Major points**

 
 The crucial part is to replace every level of the path with the value of  . Thereby we assemble one column we can   at the end. This is necessary, because the path has an unknown depth and we cannot order by an unknown number of expressions in static SQL. 
 In order to get a stable sort, I convert   to a string with leading zeroes using  . I use seven digits in the demo, which works for vote values  below 10.000.000 . Adjust according to your maximum vote count. 
 In the final   I exclude all intermediary states to eliminate duplicates. Only the last step with   remains. 
 This works in standard SQL with a recursive CTE, but is not very efficient for large trees. A plpgsql function that recursively updates the sort path in a temporary table without creating temporary dupes might perform better. 
 Only works with the  ltree module  installed. The functions subltree(...) and nlevel(.) as well as the ltree date type are not part of standard PostgreSQL. 
 
 
 My test setup, for your review convenience: 
 
 
 **PL/pgSQL table function doing the same**

 Should be faster with huge trees. 
 
 Call: 
 
 Read in the  manual about setting  . 
 I would be interested which performs faster with your real life data. 
 
 
 
 desc 
 
 results in  
 
 
 asc 
 
 results in 
 
 