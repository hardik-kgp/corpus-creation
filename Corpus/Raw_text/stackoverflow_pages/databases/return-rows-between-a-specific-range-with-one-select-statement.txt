*** return-rows-between-a-specific-range-with-one-select-statement ***

 I'm looking to some expresion like this (using SQL Server 2008) 
 
 But instead of that I need the values between 10 and 20. And I wonder if there is a way of doing it using only one SELECT statement. 
 For example this is useless: 
 
 Because the select inside brackets is already returning all the results, and I'm looking to avoid that, due to performance. 
 
 There is a trick with   that does not involve sorting all the rows. 
 Try this: 
 
 You cannot use a constant in the  .  However, you can use an expression that evaluates to a constant.  SQL Server recognizes this and just returns the rows as encountered, properly enumerated. 
 
 Use SQL Server 2012 to fetch/skip!   
 
 There's nothing better than you're describing for older versions of sql server. Maybe use CTE, but unlikely to make a difference.   
 
 or, you can remove top 10 rows and then get next 10 rows, but I double anyone would want to do that. 
 
 Why do you think SQL Server would evaluate the entire inner query? Assuming your sort column is indexed, it'll just read the first 20 values. If you're really nervous you could do this: 
 
 but I'm pretty sure the query plan is the same either way. 
 (Really) Fixed as per Aaron's comment. 
 http://sqlfiddle.com/#!3/db162/6 
 
 One more option 
 
 
 You could create a temp table that is ordered the way you want like: 
 SELECT ROW_NUMBER() OVER(ORDER BY someId) AS RowNum, * FROM tableName
into ##tempTable
... 
 That way you have an ordered list of rows.
and can just query by row number the subsequent times instead of doing the inner query multiple times. 
 