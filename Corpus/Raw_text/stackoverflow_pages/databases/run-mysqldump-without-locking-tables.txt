*** run-mysqldump-without-locking-tables ***

 I want to copy a live production database into my local development database.  Is there a way to do this without locking the production database? 
 I'm currently using: 
 
 But it's locking each table as it runs. 
 
 Does the   option work? 
 According to the  man page , if you are dumping InnoDB tables you can use the   option: 
 
 For  **innodb DB**
: 
 
 
 This is ages too late, but good for anyone that is searching the topic.  If you're not innoDB, and you're not worried about locking while you dump simply use the option: 
 
 
 The answer varies depending on what storage engine you're using.  The ideal scenario is if you're using InnoDB.  In that case you can use the   flag, which will give you a coherent snapshot of the database at the time that the dump begins. 
 
  helped for me 
 
 To dump large tables, you should combine the --single-transaction option with --quick. 
 http://dev.mysql.com/doc/refman/5.1/en/mysqldump.html#option_mysqldump_single-transaction 
 
 Honestly, I would setup replication for this, as if you don't lock tables you will get inconsistent data out of the dump. 
 If the dump takes longer time, tables which were already dumped might have changed along with some table which is only about to be dumped. 
 So either lock the tables or use replication. 
 
 For InnoDB tables use flag  
 
 it dumps the consistent state of the database at the time when BEGIN
  was issued without blocking any applications 
 
 MySQL DOCS 
 http://dev.mysql.com/doc/refman/5.1/en/mysqldump.html#option_mysqldump_single-transaction 
 
 This is about as late compared to the guy who said he was late as he was to the original answer, but in my case (MySQL via WAMP on Windows 7), I had to use: 
 
 
 
 
 Due to  https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html#option_mysqldump_lock-tables  : 
 
 Some options, such as --opt (which is enabled by default), automatically enable --lock-tables. If you want to override this, use --skip-lock-tables at the end of the option list. 
 
 
 When using MySQL Workbench, at Data Export, click in Advanced Options and uncheck the "lock-tables" options. 
   
 
 Another late answer: 
 If you are trying to make a hot copy of server database (in a linux environment) and the database engine of all tables is MyISAM you  **should**
 use  . 
 Acordingly to documentation: 
 
 It uses FLUSH TABLES, LOCK TABLES, and cp or scp to make a database
  backup. It is a fast way to make a backup of the database or single
  tables, but it can be run only on the same machine where the database
  directories are located.  mysqlhotcopy works only for backing up
  MyISAM and ARCHIVE tables. 
 
 The   time depends of the time the server can copy MySQL files (it doesn't make a dump). 
 
 Today Even i faced same issue but i didn't have access to command line.So i opened sql file in Notepad editor and removed below line from tables  
 
 then i imported to my development environment .Works fine.
hope it Help some one 
 
 As none of these approaches worked for me, I simply did a: 
 
 It will exclude both   and   commands. 
 **Note:**
 Hopefully your data doesn't contain that string in it! 
 