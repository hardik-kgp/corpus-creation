*** save-child-objects-automatically-using-jpa-hibernate ***

 I have a one-to-many relation between Parent and Child table.  In the parent object I have a  
 
 I also have a foreign key in the Child table. This foreign key is an ID that references a Parent row in database.  So in my database configuration this foreign key can not be NULL.
Also this foreign key is the primary key in the Parent table. 
 So my question is how I can automatically save the children objects by doing something like this: 
 
 I tried the above but I'm getting a database error complaining that the foreign key field  in the Child table can not be NULL. Is there a way to tell JPA to automatically set this foreign key into the Child object so it can automatically save children objects? 
 Thanks in advance. 
 
 
 I tried the above but I'm getting a database error complaining that the foreign key field in the Child table can not be NULL. Is there a way to tell JPA to automatically set this foreign key into the Child object so it can automatically save children objects? 
 
 Well, there are two things here.  
 First, you need to cascade the save operation (but my understanding is that you are doing this or you wouldn't get a FK constraint violation during inserts in the "child" table)  
 Second, you probably have a bidirectional association and I think that you're not setting "both sides of the link" correctly. You are supposed to do something like this: 
 
 A common pattern is to use link management methods: 
 
 And the code becomes: 
 
 
 
 Hibernate Core Reference Guide

 
 1.2.6. Working bi-directional links 
 
 
 
 I believe you need to set the cascade option in your mapping via xml/annotation. Refer to  Hibernate reference example here . 
 In case you are using annotation, you need to do something like this, 
 
 
 Following program describe how bidirectional relation work in hibernate.
         When parent will save its list of child object will be auto save. 
 
 
 **Here are the ways to assign parent object in child object of Bi-directional relations ?**

 Suppose you have a relation say One-To-Many,then for each parent object,a set of child object exists.
In bi-directional relations,each child object will have reference to its parent. 
 
 To achieve this,  **one way**
 is to assign parent in child object while persisting parent object 
 
 **Other way**
 is, you can do using hibernate Intercepter,this way helps you not to write above code for all models. 
 Hibernate interceptor provide apis to do your own work before perform any DB operation.Likewise onSave of object, we can assign parent object in child objects using reflection. 
 
 And you can register Intercepter to configuration as 
 
 
 in your setChilds, you might want to try looping thru the list and doing something like 
 
 you also should set up the cascade on the parent to the appropriate values. 
 
 Use   for doing   , if the   and   are used together , its somehow complaining on saving the child objects. 
 
 In short set cascade type to all , will do a job;
For an example in your model.
Add Code like this .
 @OneToMany(mappedBy = "receipt", cascade=CascadeType.ALL)
 private List saleSet; 
 