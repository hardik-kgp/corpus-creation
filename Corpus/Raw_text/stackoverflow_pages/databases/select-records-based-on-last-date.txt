*** select-records-based-on-last-date ***

 Based on the table called   below: 
 
 How can I select records which have course name with latest date? I mean if I have two same course names for one ID, I should only show the latest one as the below result. 
 Simply, I want only to show the latest row per ("ID", "Course Name"). 
 
 And what if I have two date columns in Course table, which are StartDate & EndDate and I want to show the same based on EndDate only.? 
 I am using PostgreSQL. 
 
 In PostgreSQL, to get  unique rows for a defined set of columns , the preferable technique is generally  : 
 
 Assuming you actually use those unfortunate upper case identifiers with spaces. 
 You get  exactly one row  per   this way - the one with the latest known   and the first   (according to sort order) in case of ties on the date. 
 You can drop   if your column is defined  . 
 To get unique rows per  : 
 
 Details in this related answer: 
 
 Select first row in each GROUP BY group? 
 
 
 
 
 
 Here the MAX() OVER(PARTITION BY) allows you to find the highest CourseDate for each Course (the partition) in a derived table.  Then you can just select for the rows where the CourseDate is equal to the maximum Coursedate found for that Course.   
 This approach has the benefit of not using a GROUP BY clause, which would restrict which columns you could return since any non-aggregrate column in the SELECT clause would also have to be in the GROUP BY clause. 
 
 Try this: 
 
 
 
 