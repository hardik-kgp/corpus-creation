*** selecting-a-float-in-mysql ***

 I am trying to do a   match on a table based upon an identifier and a price, such as: 
 
 The above returns zero rows, while if you remove the   bit it returns the correct row.   
 Doing a... 
 
 Returns the same row as above and quite clearly states that  .  Yet select fails to match it.  Changing   to   makes it work - but this is not exactly a solution. 
 Is there a way of casting the MySQL float to 2 digits before the operation is performed on it, thus making the above   work (or some other solution)? 
 Thanks! 
 
 Casting to a decimal worked for me: 
 
 However, you may want to consider just making the   column a DECIMAL in the first place.  DECIMAL is generally considered to be the best type to use when dealing with monetary values. 
 
 It doesn't work because a float is inherently imprecise.  The actual value is probably something like '101.3100000000001'  You could use ROUND() on it first to round it to 2 places, or better yet use a DECIMAL type instead of a float. 
 
 Don't ever use floats for money. 
 
 Today, I also came across the same situation and get resolved just by using FORMAT function of MySQL, It will return the results that exactly match your WHERE clause. 
 
 Explanation:  
 
 **Try this:**
 SELECT * FROM  table  WHERE  price   **like**
  101.31 ; 
 
 I was searching for solution but finally I did it using my previous php number_format() which came in seeing @hmasif's solution. 
 Use this and you'll get your float - mysql match: 
 
 where 5 is five strings from decimal point. e.g. 7.93643 
 
 Perhaps something along these lines: 
 
 
 Does this work? 
 
 