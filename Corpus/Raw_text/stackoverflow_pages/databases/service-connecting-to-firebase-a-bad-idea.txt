*** service-connecting-to-firebase-a-bad-idea ***

 I am building an Android app that requires real time updates. My server is Firebase. Firebase is meant to receive its updated data when the user is connected to the server. I am very impressed with Firebase so far, however my concern is receiving the new data when the app is not active. I really do not want to try these ideas to find out they are a bad idea, for I am short on time. I am looking for suggestions and advice. 
 
 **A **
**service (example)**
**.**
 Worried about battery consumption and going over my  connection  limit if users are always connected. 
 **An AlarmManager to run a sync every X hours**
. Worried about not getting updates quickly enough. 
 **Using GCM push notification to send a **
**tickle**
. Worried about paying for another service.  
 
 Any other suggestions or possible issues I missed? Thanks for your time! 
 **Edit**

 I found  this thread . Still unsure. Maybe a service is not a bad idea, per James Tamplin (Suspect he is Firebase dev) 
 
 You probably want to use GCM in these situations. 
 Firebase works fine from a background service, but it leaves a socket open, so it's going to use quite a bit of power. This power usage is fine when a user is actively engaged with your app (the screen probably uses a lot more), but when it's running in the background, it's going to be hard on battery life.  
 In most cases, when your user isn't actively engaged, they're willing to accept slower response times, and push services like GCM are a better value in watts per user happiness. 
 Also, Firebase is working on adding triggers, as demonstrated in  this video from Google Cloud Platform Live , that will make it a lot easier to integrate with push services like GCM in the future. 
 And I guess you could say James is a Firebase dev. He's one of the co-founders :) 
 
 You could also try zapier.com which has a firebase + pushover integration to send gcm. but it will require some spending.for free you will have to develop this your self on your custom server, using firebase queue. 
 