*** should-i-use-myisam-or-innodb-tables-for-my-mysql-database ***

 I have the following two tables in my database (the indexing is  not  complete as it will be based on which engine I use): 
 **Table 1:**

 
 **Table 2:**

 
 Table 1 will be used to create a thumbnail gallery with links to larger versions of the image.  ,  , and   will refine the thumbnails that are shown.  
 Table 2 contains images  related  to those in Table 1. Hence the use of   to relate a single image in Table 1, with one or more images in Table 2. This is where I was thinking of using the Foreign Key ability of InnoDB, but I'm also familiar with the ability of Indexes in MyISAM to do the same. 
 Without delving too much into the remaining fields,   is used to order the results. 
 Last, but not least, I should mention that this database is  READ ONLY . All data will be entered by me. I have been told that if a database is read only, it should be MyISAM, but I'm hoping you can shed some light on what  you  would do in my situation. 
 
 **Always use InnoDB by default.**

 In MySQL 5.1 later, you should use InnoDB.  In MySQL 5.1, you should  enable the InnoDB plugin .  In MySQL 5.5, the InnoDB plugin is enabled by default so just use it. 
 The advice years ago was that MyISAM was faster in many scenarios.  But that is no longer true if you use a current version of MySQL. 
 There may be some exotic corner cases where MyISAM performs marginally better for certain workloads (e.g. table-scans, or high-volume INSERT-only work), but the default choice should be InnoDB unless you can  prove  you have a case that MyISAM does better. 
 Advantages of InnoDB besides the support for transactions and foreign keys that is usually mentioned include: 
 
 InnoDB is more resistant to table corruption than MyISAM. 
 Row-level locking.  In MyISAM, readers block writers and vice-versa. 
 Support for large buffer pool for both data and indexes.  MyISAM key buffer is only for indexes. 
 MyISAM is stagnant; all future development will be in InnoDB. 
 
 See also my answer to  MyISAM versus InnoDB 
 
 MyISAM won't enable you to do mysql level check. For instance if you want to update the imgId on both tables as a single transaction: 
 
 Another drawback is integrity check, using InnoDB you can do some error check like to avoid duplicated values in the field UNIQUE KEY   ( ). Trust me, this really come at hand and is way less error prone. In my opinion MyISAM is for playing around while some more serious work should rely on InnoDB. 
 Hope it helps 
 
 A few things to consider : 
 
 Do you need transaction support? 
 Will you be using foreign keys? 
 Will there be a lot of writes on a table? 
 
 If answer to any of these questions is "yes", then you should definitely use InnoDB. 
Otherwise, you should answer the following questions : 
 
 How big are your tables? 
 How many rows do they contain? 
 What is the load on your database engine? 
 What kind of queries you expect to run? 
 
 Unless your tables are very large and you expect large load on your database, either one works just fine.  
 I would prefer MyISAM because it scales pretty well for a wide range of data-sizes and loads. 
 
 I would like to add something that people may benefit from:
I've just created  a InnoDB table (leaving everything as the default, except changing the collation to Unicode), and populated it with about 300,000 records (rows).  
 Queries like   - would hang until giving an error message, not returning a result;  
 I've cloned the table with the data into a new MyISAM table - 
and that same query, along with other large  queries - would return fast, and everything worked ok. 
 