*** skip-certain-tables-with-mysqldump ***

 Is there a way to restrict certain tables from the mysqldump command? 
 For example, I'd use the following syntax to dump  only  table1 and table2: 
 
 But is there a similar way to dump all the tables  except  table1 and table2? I haven't found anything in the mysqldump documentation, so is brute-force (specifying all the table names) the only way to go? 
 
 You can use the  --ignore-table  option.  So you could do 
 
 There is no whitespace after   (this is not a typo). 
 If you want to ignore multiple tables you can use a simple script like this 
 
 
 Building on the answer from @Brian-Fisher and answering the comments of some of the people on this post, I have a bunch of huge (and unnecessary) tables in my database so I wanted to skip their contents when copying, but keep the structure: 
 
 The resulting two files are structurally sound but the dumped data is now ~500MB rather than 9GB, much better for me. I can now import these two files into another database for testing purposes without having to worry about manipulating 9GB of data or running out of disk space. 
 
 for multiple databases: 
 
 
 Another example for ignoring multiple tables 
 
 using   and create an array of tables, with syntaxs like  
 
 Links with information that will help you 
 **compress output mysqldump**

 
 mysqldump & gzip 
 mysqldump to a tar.gz 
 
 
 Note: tested in ubuntu server with mysql Ver 14.14 Distrib 5.5.55 
 
 **Import database**

 
 **Simple script to ignore tables**

 
 
 To exclude some table  data , but not the table  structure . Here is how I do it: 
 Dump the database structure of all tables, without any data: 
 
 Then dump the database with data, except the excluded tables, and do not dump the structure: 
 
 Then, to load it into a new database: 
 
 
 You can use the   command with the  
 
 command. It specifies a comma-separated list of tables to exclude. 
 Syntax of mysqlpump is very similar to mysqldump, buts its way more performant.
More information of how to use the exclude option you can read here:  https://dev.mysql.com/doc/refman/5.7/en/mysqlpump.html#mysqlpump-filtering 
 
 Dump all databases with all tables but skip certain tables 
 on github:  https://github.com/rubo77/mysql-backup.sh/blob/master/mysql-backup.sh 
 
 With a little help of  https://stackoverflow.com/a/17016410/1069083 
 It uses lzop which is much faster, see: http://pokecraft.first-world.info/wiki/Quick_Benchmark:_Gzip_vs_Bzip2_vs_LZMA_vs_XZ_vs_LZ4_vs_LZO 
 
 I like Rubo77's solution, I hadn't seen it before I modified Paul's. This one will backup a single database, excluding any tables you don't want. It will then gzip it, and delete any files over 8 days old. I will probably use 2 versions of this that do a full (minus logs table) once a day, and another that just backs up the most important tables that change the most every hour using a couple cron jobs. 
 
 
 For sake of completeness, here is a script which actually could be a one-liner to get a backup from a database, excluding (ignoring) all the views. The db name is assumed to be employees: 
 
 You can update the logic of the query. In general using   and   you can generate almost any desired string or shell command. 
 