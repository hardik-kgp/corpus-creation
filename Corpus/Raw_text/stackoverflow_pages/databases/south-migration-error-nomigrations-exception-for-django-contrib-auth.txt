*** south-migration-error-nomigrations-exception-for-django-contrib-auth ***

 I have been using South on my project for a while, but I recently did a huge amount of development and changed development machine and I think something messed up in the process. The project works fine, but I can't apply migrations. Whenever I try to apply a migration I get the following traceback: 
 
 I am not that experienced with South and I haven't met this error before. The only helpful mention I can find online about this error is for pre-0.7 I think and I am on South 0.7. I ran 'easy_install -U South' just to make sure. 
 
 Leaving this here for future googlers 
 I recently ran into this exceptions with one of my own apps today, not a contrib one. 
 After a bit of head-scratching I noticed that somehow the file ... 
 
 ... had been deleted, which means python cant import the dir as a module etc etc. 
 
 I solved the problem. 
 Obviously, you can't use South to do the migrations for the apps that are part of Django, like 'auth' so I didn't know why it was trying to. 
 I realised that for a while I had another app within my project called auth. I must have tried to migrate this at some point before renaming it and therefore messed it all up.  
 I removed the migration history entries from the database for that app and everything was fine. 
 
 I just ran into this after swithcing branches and app versions, and decided to remove the app that now had no migrations from the south_migrationhistory table 
 
 
 I also had the same problem, and at the end I fixed this by deleting all rows from south_migrationhistory table and run the following command from terminal. 
 
 This  answer  explain about how to reset south migration history. 
 **Edit:**

 From Django 1.5 onwards   command won't work. Instead you have to use  . 
 
 To understand more about what flush will do read this  stackoverflow answer . 
 
 I also had the same issue, however this happened to the root application. I discovered that this was due to an empty   in my project root from earlier development. I suspect this issue may arise for project applications also. 
 
 You can do migrations on built-in modules, and it definitely makes sense for data migrations, for example, truncating all usernames, removing invalid emails, et cetera. 
 In the case of a User from django.contrib.auth.models, simply use: orm['auth.User'] 
 
 I got the same error, but not for a django module, but for a module that was part of my virtualenv. I didn't get how south could have done a migration for that module, since it really didn't have any migrations. Then I remembered I had copied the database from an test env that was supposed to be the same. But it turned out the other env had a slightly different version of the module which  did  have a migration. 
I ended up deleting the offending row from the south migrationhistory (since it was a test env anyway). 
 
 I had a similar problem with django.contrib.admin not letting me run my migrations. I solved it by disabling django.contrib.admin in settings.INSTALLED_APPS 
 