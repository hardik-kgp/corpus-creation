*** spring-batch-job-read-from-multiple-sources ***

 How can I read items from multiples databases? I already know that is possible from files. 
the following example works for read from multiples files 
 
 
 three beans like this. 
 
 
 There isn't a ready-to-use component that perform what you ask; the only solution is to write a custom   that delegates to   (or to   or to any generic   implementation). 
You need to prepare all necessary stuff (datasource, session, real database readers) and bind all delegated readers to your custom reader. 
 EDIT:
You need to simulate a loop using recusion of   and mantain reader and delegates state across job restarts. 
 
 
 
 
 EDIT2: Remember to set property  **name**
; this is NECESSARY to let MyItemReader.read() works correctly 
 
 
 I suggest a simple workaround that may not be suitable to all cases, but will be useful in many: 
 Simply define: 
 
 2 readers, one for each database 
 2 steps 
 one job that contains both 2 steps 
 
 The 2 steps are nearly identical, they reference the same processor and writer, but they have different readers. They will be called consecutively. 
 Whether this setup works will depend on the processor and writer (whether they still work correctly when called in different steps). In my case, it was sufficient to set   to the writer, such that both steps can write to the same file. 
 
 I suggest a tricky way. If we assume that one is your mysql datasource's table is base and every row in that table corresponds other mysql datasource table's row(like a join tables which are in different datasources), you could do it in your batch job itemreader. Ex of this way; 
 Spring DataSource Configuration; 
 
 Your batch-job.xml 
 
 Your RowMapper looks like; 
 
 