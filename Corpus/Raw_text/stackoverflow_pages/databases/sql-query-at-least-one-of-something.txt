*** sql-query-at-least-one-of-something ***

 I have a bunch of Users, each of whom has many Posts.
Schema: 
 
 How do I find all Users who have at least one post with a rating above, say, 10? 
 I'm not sure if I should use a subQuery for this, or if there's an easier way. 
 Thanks! 
 
 To find all users with at least one post with a rating above 10, use: 
 
 EXISTS doesn't care about the SELECT statement within it - you could replace NULL with 1/0, which should result in a math error for dividing by zero... But it won't, because EXISTS is only concerned with the filteration in the WHERE clause.  
 The correlation (the WHERE p.user_id = u.id) is why this is called a correlated subquery, and will only return rows from the USERS table where the id values match, in addition to the rating comparison. 
 EXISTS is also faster, depending on the situation, because it returns true as soon as the criteria is met - duplicates don't matter. 
 
 You can join the tables to find the relevant users, and use DISTINCT so each user is in the result set at most once even if they have multiple posts with rating > 10: 
 
 
 Use an inner join: 
 
 
 
 
 
 Additionally, this will tell you what their highest rating is. 
 
 The correct answer for your question as stated is OMG Ponies's answer, WHERE EXISTS is more descriptive and almost always faster.  But "SELECT NULL" looks really ugly and counterintuitive to me.  I've seen SELECT * or SELECT 1 as a best practice for this. 
 Another way, in case we're collecting answers: 
 
 This could be useful if it's not always 1 you're testing on. 
 