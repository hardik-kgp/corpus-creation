*** sql-query-to-get-the-deadlocks-in-sql-server-2008 ***

 
 
 
 
 
 This question already has answers here :
                            
                         
 
 
 Closed  7 years ago . 
 
 
 
 **Possible Duplicate:**

 Help with deadlock in Sql Server 2008   
 
 SQLServer automatically logs all deadlocks. Can anyone help me to get sql query which will  capture deadlocks data that is being collected, for a recent event. 
 I am using SQL SERVER 2008 R2 for my development activities. 
 Thanks & Regards,
Santosh Kumar Patro 
 
 You can use a   and gather the information you require from the log file. 
 The only other way I could suggest is digging through the information by using   (Soon to be deprecated),   or the   table. 
 
 http://www.sqlmag.com/article/sql-server-profiler/gathering-deadlock-information-with-deadlock-graph 
 http://weblogs.sqlteam.com/mladenp/archive/2008/04/29/SQL-Server-2005-Get-full-information-about-transaction-locks.aspx 
 
 In order to capture deadlock graphs without using a trace (you don't need profiler necessarily), you can enable trace flag 1222. This will write deadlock information to the error log. However, the error log is textual, so you won't get nice deadlock graph pictures - you'll have to read the text of the deadlocks to figure it out. 
 I would set this as a startup trace flag (in which case you'll need to restart the service). However, you can run it only for the current running instance of the service (which won't require a restart, but which won't resume upon the next restart) using the following global trace flag command: 
 
 A quick search yielded this tutorial: 
 http://www.mssqltips.com/sqlservertip/2130/finding-sql-server-deadlocks-using-trace-flag-1222/ 
 Also note that if your system experiences a lot of deadlocks, this can really hammer your error log, and can become quite a lot of noise, drowning out other, important errors. 
 Have you considered third party monitoring tools?  SQL Sentry Performance Advisor , for example, has a much nicer deadlock graph, showing you object / index names as well as the order in which the locks were taken. As a bonus, these are captured for you automatically on monitored servers without having to configure trace flags, run your own traces, etc.: 
 
 Disclaimer: I work for SQL Sentry. 
 