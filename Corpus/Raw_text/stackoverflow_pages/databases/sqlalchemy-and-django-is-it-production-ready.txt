*** sqlalchemy-and-django-is-it-production-ready ***

 Has anyone used   in addition to  's ORM? 
 I'd like to use Django's ORM for object manipulation and SQLalchemy for complex queries (like those that require left outer joins).  
 Is it possible? 
 Note: I'm aware about   but the project doesn't seem to be production ready.  
 
 What I would do, 
 
 Define the schema in Django orm, let it write the db via syncdb. You get the admin interface. 
 In view1 you need a complex join 
 
 
 
 
 
 I don't think it's good practice to use both. You should either: 
 
 Use Django's ORM and use custom SQL where Django's built-in SQL generation doesn't meet your needs, or 
 Use SQLAlchemy (which gives you finer control at the price of added complexity) and, if needed, use a declarative layer such as  Elixir  to make life a little easier. 
 
 Of course, if you need Django's admin, then the first of these approaches is recommended. 
 
 I've done it before and it's fine.  Use the SQLAlchemy feature where it can read in the schema so you don't need to declare your fields twice. 
 You can grab the connection settings from the settings, the only problem is stuff like the different flavours of postgres driver (e.g. with psyco and without). 
 It's worth it as the SQLAlchemy stuff is just so much nicer for stuff like joins. 
 
 Jacob Kaplan-Moss admitted to typing "import sqlalchemy" from time to time.  I may write a queryset adapter for sqlalchemy results in the not too distant future. 
 
 Nowadays you can use  Aldjemy . Consider using this  tutorial . 
 