*** sqlite-insert-on-duplicate-key-update-upsert ***

 MySQL has something like this: 
 
 As far as I know this feature doesn't exist in SQLite, what I want to know is if there is any way to achive the same effect without having to execute two queries. Also, if this is not possible, what do you prefer: 
 
 **SELECT + (INSERT or UPDATE)**
 or 
 **UPDATE (+ INSERT **
**if UPDATE fails**
**)**

 
 
 Since 3.24.0 SQLite also supports upsert , so now you can simply write the following 
 
 
 
 This requires the "ip" column to have a UNIQUE (or PRIMARY KEY) constraint. 
 
 EDIT: Another great solution:  https://stackoverflow.com/a/4330694/89771 . 
 
 I'd prefer  . Less code = fewer bugs. 
 
 The current answer will only work in sqlite OR mysql (depending on if you use OR or not).  So, if you want cross dbms compatibility, the following will do... 
 
 
 You should use memcached for this since it is a single key (the IP address) storing a single value (the number of visits). You can use the atomic increment function to insure there are no "race" conditions. 
 It's faster than MySQL and saves the load so MySQL can focus on other things. 
 