*** store-images-in-a-mongodb-database ***

 How can I store images in a MongoDB database rather than just text? Can I create an array of images in a MongoDB database? Will it be possible to do the same for videos? 
 
 Please see the  GridFS  docs for details on storing such binary data. 
 Support for your specific language should be linked to at the bottom of the screen. 
 
 
 "You should always use GridFS for storing files larger than 16MB" -  When should I use GridFS? 
 
 MongoDB  BSON documents  are capped at 16Â MB. So if the total size of your array of files is less than that, you may store them directly in your document using the  BinData  data type. 
 Videos, images, PDFs, spreadsheets, etc. - it doesn't matter, they are all treated the same. It's up to your application to return an appropriate content type header to display them. 
 Check out the  GridFS documentation  for more details. 
 
 You can try this one: 
 
 
 http://blog.mongodb.org/post/183689081/storing-large-objects-and-files-in-mongodb 
 There is a Mongoose plugin available on NPM called mongoose-file. It lets you add a file field to a Mongoose Schema for file upload. I have never used it but it might prove useful. 
If the images are very small you could Base64 encode them and save the string to the database.  
 Storing some small (under 1MB) files with MongoDB in NodeJS WITHOUT GridFS 
 
 You can use the bin data type if you are using any scripting language to store files/images in MongoDB. Bin data is developed to store small size of files. 
 Refer to your scripting language driver. For PHP, click  here . 
 
 install below libraries 
 
 connect ur mongo db : 
 
 Define database Schema 
 
 using the middleware Multer to upload the photo on the server side. 
 
 post req to our db 
 
 
 
 In your view: 
 
 With this code you can add single as well as multiple images in MongoDB. 
 
 This worked for me, 
 
 Go in This directory In CMD :-  **C:\Program Files\MongoDB\Server\4.0\bin**

 execute following command :-  **mongofiles put image.jpg**

 for select files we use :-  **db.fs.files.find.pretty()**

 
 