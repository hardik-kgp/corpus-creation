*** storing-a-graph-in-mongodb ***

 I have an undirected graph where each node contains an array. Data can be added/deleted from the array. What's the best way to store this in Mongodb and be able to do this query effectively: given node A, select all the data contained in the adjacent nodes of A. 
 In relational DB, you can create a table representing the edges and another table for storing the data in each node this so. 
 
 And then you join the tables when you query for the data in adjacent nodes. But join is not possible in MongoDB, so what's the best way to setup this database and efficiently query for data in adjacent nodes (favoring performance slightly over space). 
 
 I'm picking up mongo, looking into this sort of schema as well (undirected graphs, querying  for information from neighbors)  I think the way that I favor so far looks something like this: 
 Each node contains an array of neighbor keys, like so. 
 
 To find data from neighbors, use the  $in "operator" : 
 
 You can use  field selection  to limit results to the relevant data. 
 
 
 **Specialized Distributed Graph Databases**

 I know this is sounds a little far afield from the OPs question about Mongo, but these days there are more specialized graph databases that excel at this kind of work and may be much easier for you to use, especially on large graphs. 
 There is a comparison of 7 such offerings here:  https://docs.google.com/spreadsheet/ccc?key=0AlHPKx74VyC5dERyMHlLQ2lMY3dFQS1JRExYQUNhdVE#gid=0 
 Of the three most significant open source offerings (Titan, OrientDB, and Neo4J), all of them support the Tinkerpop Blueprints interface.  So for a graph that looks like this... 
 
 ... a query for "all the people that Juno greatly admires who she has known since the year 2011" would look like this: 
 
 This, of course, is just the tip of the iceberg.  Pretty powerful stuff! 
 **If you have to stay with Mongo**

 Think of Tinkerpop Blueprints as the "JDBC of storing graph structures" in various databases.  The Tinkerpop Blueprints API has a specific MongoDB implementation that would work for you I'm sure.  Then using Tinkerpop Gremlin, you have all sorts of advanced traversal and search methods at your disposal. 
 
 See  http://www.mongodb.org/display/DOCS/Trees+in+MongoDB  for inspiration. 
 
 MongoDB  will introduce native graph capabilities in  version 3.4  and it could be used to store graph stuctures and do analytics on them although performance might not be that good compared to native graph databases like  Neo4j  depending on the cases but it is too early to judge. 
 Check those links for more information:  
 
 $graphLookup (aggregation) 
 MongoDB 3.4 Accelerates Digital Transformation for the Modern Enterprise 
 
 
 MongoDB can simulate a graph using a flexible tree hierarchy. You may want to consider neo4j for strict graphing needs.  
 