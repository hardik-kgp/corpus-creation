*** storing-images-in-db-using-django-models ***

 I am using Django for creating one Web service and I want that web service to return Images. I am deciding the basic architecture of my Web service. What I came up to conclusion after stumbling on google is: 
 
 I should store Images in DB after encoding them to Base64 format. 
 Transferring the Images would be easy when directly Bases64 decoded string is transmitted. 
 
 But I have one issue how can I  store bases64 encoded string in DB using Django models? Also, if you see any flaw in my basic architecture please guide me.  
 I am new to Web services and Django 
 Thanks!! 
 
 Some people states that using DB for storing images is not a good idea but that's no true. My advice is to use Django with  AppEngine Blobstore Service  in this way: 
 First, create a  Django Custom Storage  (or pick one from someone else like  this one ): 
 
 This custom storage can receive Django images, convert them to Base64 strings and send them to your AppEngine Blobstore Service application (via xmlrpc for example). 
 Then, create a Django Image model: 
 
 Then, you have to create an AppEngine application for receiving Django requests for storing images, transform Base64 strings to raw and store them in a Blob. For example: 
 
 **Serving a blob**

 The key is the function  get_serving_url . From Google docs: 
 
 If you are serving images, a more efficient and potentially
  less-expensive method is to use get_serving_url using the App Engine
  Images API rather than send_blob. The get_serving_url function lets
  you serve the image directly, without having to go through your App
  Engine instances. 
 
 Finally, by serving images with AppEngine, you can use the awesome feature of resize and crop images (check the documentation of   function), for example: 
 
 // Resize the image to 32 pixels (aspect-ratio preserved)
   http://your_app_id.appspot.com/randomStringImageId=s32 
 
 Hope it helps. Good luck! 
 
 You can store image in  **bytea field**
.  
 The  **bytea data type**
 allows storage of binary strings.  Postgres Documentation Link 
 The earlier version of Django does not support bytea field, so I have been using this library called  djorm-ext-pgbytea :  
 