*** symfony-arraycollection-vs-persistentcollection ***

 As I understood when you query database by repository you get PersistentCollection and when your working with your entities you get ArrayCollection. 
 so consider I have one to many self referencing relation for my user entity. 
 and in my user entity I have a setChildren method which get ArrayCollection of users as argument . 
 
 and this is what I want to do  
 
 and I get error which says : 
 
 Argument 1 passed to
  Proxies__CG__\UserBundle\Entity\User::setChildren() must be an
  instance of Doctrine\Common\Collections\ArrayCollection, instance of
  Doctrine\ORM\PersistentCollection given 
 
 should I change my type hint in setChildren method to PersistentCollection ??
or I need to totally change my approach? 
 
 **Short answer:**

 
 **Explanation:**

 If you look deep into Doctrine Classes you will see the following structure: 
 Array collection is class that implements interface Collection: 
 
 PersistentCollection is class that extentds AbstractLazyCollection: 
 
 but AbstractLazyCollection implements Collection: 
 
 So: 
 Collection is interface, that you should use in method  . 
 This is because of doctrine use lazy loading - mechanism that allow to load not all properties, but only these, that are needed.  
 Similar question: 
 
 Doctrine manyToMany return PersistentCollection instead of ArrayCollection 
 
 