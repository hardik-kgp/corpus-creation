*** the-best-recommended-way-to-translate-django-database-values ***

 I'm trying to figure out the best way to translate actual database values (textual strings, not date formats or anything complicated) when internationalizing my Django application. The most logical ways I could come up with were to either: 
 
 hold a database  **column**
 for every language (e.g.  ,  ,  , ...) or 
 have a different  **database**
 for every language (e.g.  ,  ,  , ...). 
 
 Are these the best options, or is there something else I'm missing? Thanks. 
 
 I was reading up on my django extensions, and found the  django-modeltranslation  plugin. It seems to do exactly what you want it to do. If not, leave a comment and I'll delete this answer :) 
 
 I also found this  small project  which purpose is to synchronize localized strings into standard message files for fields of registered models. 
 Example: 
 
 The standard command 
 
 Would maintain messages for each distinct values found in registered fields. 
 I have not had the occasion to try it yet. 
But this seems for me to be the simplest way to translate data from db. 
 
 You could take a look at the following  thread  which seems to be the same question you're asking here. 
 I wouldn't mind hearing the solution you eventually will be using as sometime in the future I  might have the same question:) 
 