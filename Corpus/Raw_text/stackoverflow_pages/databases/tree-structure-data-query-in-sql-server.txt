*** tree-structure-data-query-in-sql-server ***

 I have a table   that has 3 columns:   where   is the   of the parent row. 
 Currently, to display the entire tree, it would have to loop through all child elements until there's no more child elements. It doesn't seem too efficient. 
 Is there a better and more efficient way to query this data? 
 Also, is there a better way to represent this tree like structure in a SQL Server database? An alternative design for my table/database? 
 
 I don't think there's anything wrong with the design, assuming you have a limited level of parent-child relationships. Here is a quick example of retrieving the relationship using a recursive CTE: 
 
 Don't forget to clean up: 
 
 This might be a useful article.  An alternative is   but I find it overly complex for most scenarios. 
 
 Aaron Bertrands answer is very good for the general case. If you only ever need to display the whole tree at once, you can just query the whole table and perform the tree-building in-memory. This is likely to be more convenient and flexible. Performance also will be slightly better (the whole table needs to be downloaded anyway and C# is faster for such calculations than SQL Server). 
 If you only need a part of the tree this method is not recommended because you'd be downloading more data than needed. 
 