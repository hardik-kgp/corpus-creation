*** truncate-all-tables-in-laravel-using-eloquent ***

 Is there a way I could truncate all the tables in a db using eloquent or fluent in laravel 4? I do not want to specify table names, I just want to truncate all the tables. In other words empty all the tables. 
 
 **1. Get all the table names**

 
 **2. Loop through the array of table names and truncate with Schema Builder**

 
 
 Here is my answer based on @Hao Luo. Moreover, it has these pros: 
 
 You do not need to install any extra package (no need for doctrine) 
 It supports laravel 5 very well 
 It disables foreign key constraint (If you truncate without caring about the orders and enables foreign key constraint, you will likely get an error) 
 
 Here is the code: 
 
 Hope you like it! :) 
 
 In laravel 5, migrate:fresh will drop all the tables in the database (even if tables aren't related to migrate) 
 
 This is how i truncate all tables inside a database (including table exceptions), it works for me.  
 
 
 Based on previous answers, I filter table names directly into the SQL query. I'm agree it's a small optimization but that avoids unnecessary loop. 
 
 
 Use this:  
 
 Remember you import  
 
 use Illuminate\Support\Facades\DB; 
 
 PD: Tables_in_YOUR_DATABASE_NAME 
 