*** updating-many-to-many-navigation-property-in-entity-framework-6-changes-not-bei ***

 I've been pulling my hair out for about 2 days now, as I simply cannot get EF to save changes whenever I add a many-to-many entity to an existing entity. 
 My structure is plain simple:  
 
 I have a table called  , it has an ID (Primary, identity), and a few other string fields  
 A table called   with an ID (Primary, identity) and a string field called  
 and a  , with a  , and a   field 
 
 When I have generated my entities (Database first), I get a class  , with an   - all good, works as expected. 
 The problem arises when I try to save an existing  , with a modified list of keywords. Only the scalar properties (strings) are saved, not my keywords!  
 
 I've tried disabling Lazy Loading, no effect.  
 I tried loading each individual keyword from the database again, no effect. 
 I tried loading all keywords into the context to see if that would help EF detect changes, it didn't. 
 
 I am pretty sure I'm not the only one who have had this problem, (in fact I am entirely sure as I have seen a couple questions on here already, on the same subject, yet I am unable to find a working answer...), mostly for older versions of EF, which is another good reason as to why I started yet another question: Has nothing changed that addresses this issue at all? 
 Here is my code that does the updating (and creation) of persons. You'll notice my attempt on making EF save changes accordingly. 
 
 
 Finally.. Finally I can rest! I found the solution! It's not a pretty one, but it works! 
 Here's the code - sharing is caring. 
 This is definitely the last time I will work with Entity Framework. Causes more pain & agony than good. 
 
 
 Try adding  **.ToList()**
: 
 
 I'm suspecting that your Keywords list is never populated because you clear it before hydrating it. 
 
 So the following is untested but, after  you  fix my bugs ;) it should hopefully do the trick.  i don't know the rest of your code so i've opted for creating clones of the input data and attaching the objects to the context in a specific order. 
 **EDIT:**
 renamed method 
 
 