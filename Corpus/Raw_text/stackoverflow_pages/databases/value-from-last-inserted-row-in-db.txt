*** value-from-last-inserted-row-in-db ***

 
 
 
 
 
 This question already has answers here :
                            
                         
 
 
 
 How to get a value from the last inserted row? [duplicate] 
 
                                    (14 answers)
                                 
 
 Closed  6 years ago . 
 
 
 Is there some way to get a value from the last inserted row? 
 I am inserting a row where the PK will automatically increase due to sequence created, and I would like to get this sequence number. Only the PK is guaranteed to be unique in the table. 
 I am using Java with a JDBC and Oracle. 
 I forgot to add that I would like to retrieve this value using the resultset below. (I have tried this with mysql and it worked successfully, but I had to switch over to Oracle and now I get a string representation of the ID and not the actually sequence number) 
 
 The above snippet would return the column int value stored in a mysql table. But since I have switched over to Oracle, the value returned is now a strange string value. 
 
 What you're trying to do is take advantage of the   clause. Let's setup an example table and sequence: 
 
 Now, your Java code should look like this:   
 
 
 This is not consistent with other databases but, when using Oracle,   returns the ROWID for the inserted row when using  . So you need to use the   proprietary type to "read" it: 
 
 But this won't give you the generated ID of the PK. When working with Oracle, you should either use the method   or   instead of   to get the generated sequence value. Something like this (adapt the value to match the index or the name of your primary key column): 
 
 Or  
 
 While digging a bit more on this, it appears that this approach is shown in the  Spring documentation  (as mentioned  here ) so, well, I guess it can't be totally wrong. But, unfortunately, it is not really portable and it may not work on other platforms. 
 
 You should use   instead. If in vain, try   and eventually cast it to  . If the returned hex string is actually the ID in hexadecimal flavor, then you can try converting it to decimal by   or  . 
 
 That said, Oracle's JDBC driver didn't support   for a long time and is still somewhat troublesome with it. If you can't get that right, then you need to execute a   on the same statement as you did the  , or a new statement inside the same transaction, if it was a  . Basic example: 
 
 Oh, from your code example, the following line 
 
 is entirely superfluous. Remove it.  
 You can find  here  another example which I posted before about getting the generated keys, it uses the normal   approach. 
 