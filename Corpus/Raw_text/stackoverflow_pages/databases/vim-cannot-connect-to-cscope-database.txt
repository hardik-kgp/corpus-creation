*** vim-cannot-connect-to-cscope-database ***

 I have opensuse 11.4 installed. Vim is version 7. Now I normally use it to browse the linux kernel source. So I generated the cscope database inside a directory within my home folder i.e. /home/aijazbaig1/cscope_DB/ and I got 3 files viz. cscope.out, cscope.po.out and cscope.in.out besides the cscope.files file which contains a list of all the relevant files which I want to search. 
 Additionally I have added the following to my .bashrc: 
 
 But when I do a   from within vim it says there are no connections. Can anyone please let me know what is going wrong. 
 Keen to hear from you, 
 
 This is mentioned in the comments above, but I want to make sure it's preserved in an answer. 
 The issue that came up for me was that vim didn't know where to look for the cscope database. When I added 
 
 to my  . Everything came out fine. 
 
 I figure since I've made the visit, I would try responding. 
 I was getting this error when searching using ctrl-space s (or any search for that matter): 
 
 E567: no cscope connections 
 
 I finally found the full solution at  http://cscope.sourceforge.net/cscope_vim_tutorial.html , Step 11. 
 The idea is that you create a list of source files to be included in the view of cscope, generate the cscope.out in the same location, and update the export path accordingly: 
 
 
  (this may take a while depending on the size of your source) 
  (put this in your .bashrc/.zshrc/other-starting-script if you don't want to repeat this every time you log into the terminal) 
 
 
 You need to add a "cscope connection", like this in vim:  
 
 See   for more examples.  
 
 I have the same issue on my PC. For now, to solve the issue: 
 
 On terminal execute:  
 Open .vimrc file to edit:  
 
 
 Here's how I explore linux kernel source using cscope: 
 I use vim as my editor. 
 
 While standing inside the kernel source root directory, run   in interactive mode while recursively going through subdirectories during search for source files: 
 
 
 When run for the first time, it will generate the database file with the name:   inside the current directory. Any subsequent runs will use the already generated database. 
 
 Search for anything or any file and open it. 
 Set cscope tags in vim to make the   and   commands search through cscope first and then ctags' tags: 
 
 
 
 Set cscope database inside current VIM session: 
 
 
 Now you can use   and   as you would do in ctags to navigate around! :) 
 
 I ran into a similar problem with no cscope connections on ubuntu 18.04, then I discovered my .vimrc file does not load the CSCOPE_DB variable. Looked a little around and found a  solution . 
 You can just copy this directly in to your .vimrc file. 
 Part of the code loads your cscope file from your directory. The keybinds are just a nice bonus.
Hope this helps. 
 