*** what-databases-can-be-used-with-java ***

 I am doing an undergrad final project, and need to justify my choice of MySQL for the database element of my project.  Truth is, it's the only one I can really use, and hence I went for it. 
 What other database systems could I have used? Any advantages and disadvantages of these over MySQL? 
 
 In fact, you can use every database which is accessible through a  JDBC driver . Almost all self-respected RDBMS vendors provides a fullworthy JDBC driver for download at their homepage. Just Google "[vendorname] jdbc driver download" to find it. Here's an overview: 
 
 MySQL JDBC driver 
 PostgreSQL JDBC driver  (note: older versions doesn't support generated keys). 
 Oracle JDBC driver  (note: older versions doesn't support generated keys). 
 MSSQL JDBC driver  (or performancewise better, the  jTDS JDBC driver ) 
 DB2 JDBC driver is hard to find in IBM's online forest, but it's usually already included in the   folder of the DB2 installation. 
 
 This way you can use the  JDBC API  transparently to access either of the databases.  
 As to which database to choose, just look at the features, robustness, performance, etc the RDBMS provides and the budget you have -if it isn't freeware. I myself tend to prefer PostgreSQL. 
 Instead of a fullfledged database server, you can also consider an  embedded  Javabased database, such as  Sun  Oracle JavaDB ,  Apache Derby ,  HSQLDB  or  SQLite , each which are of course accessible through the JDBC API the usual way. 
 
 You can use any relational database that has a JDBC driver.  These would include PostgreSQL, Hypersonic SQL, MySQL, SQLLite on the free side and Oracle, MS SQL Server, and others on the paid side. 
 The biggest advantage accrued to MySQL in your case is that it's free and you know it. That's enough to make it suitable for what you want to accomplish. 
 
 You could have used pretty much  **ANY**
 database. MSSQL, SQLite, Postgre, Oracle or [put your choice here] 
 There's a driver for pretty much any database to integrate with Java.  This  is a great place to find out all the DB's java support, as well as how to integrate 
 Hope this helps 
 
 Have a look at the  list of vendors who have endorsed the JDBC API  maintained by Sun. Also see the list of third-party  JDBC technology-enabled drivers  which are currently shipping. 
 
 You mentioned MySQL and database. For the case you are free to usa a non RDBMS you can check  db4o .  
 Advantage: pure OO/Java persistence.  
 