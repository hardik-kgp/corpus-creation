*** what-does-n-stands-for-in-a-sql-script-the-one-used-before-characters-in-ins ***

 I generated an sql script like this, 
 
 I wonder whats that N' exactly mean and whats its purpose here.  
 **NOTE**
: By searching for the answer all i can get is that N' is a prefix for National language standard and its for using unicode data. But honestly i am not able to get a clear idea about the exact operation of N' here. I'd appreciate your help and please make it in more of an  **understandable**
 way. Thanks in advance. 
 
  is used to specify a unicode string. 
 Here's a good discussion:  Why do some SQL strings have an 'N' prefix? 
 In your example   prefix is not required because ASCII characters (with value less than 128) map directly to unicode.  However, if you wanted to insert a name that was not ASCII then the   prefix would be required. 
 
 
 The   prefix stands for National Language in the SQL-92 standard, and is used for representing unicode characters. 
 Any time you pass Unicode data to SQL Server you must prefix the Unicode string with  . 
 It is used when the type is from  ,   or  . 
 For more info refer to this:  Why do some SQL strings have an 'N' prefix? 
 
  is a literal for a   string (or maybe  , but   would be more common now) - occupying 4 bytes memory, and using whatever code-page the SQL server is configured for.   is a literal for a   string (or maybe  , but   would be preferable), occupying 8 bytes of memory using UTF-16. This allows for full international usage, and frankly   should probably be the default in most systems. 
 
 This denotes that the subsequent string is in   ( the N actually stands for National language character set ). 
 Which means that you are passing an  ,   or   value, as opposed to  ,   or  . 
 
 SOURCE 
 
 
 N is to specify that its a string type value.  
 [N]'tsql_string' 
 
 Is a constant string. tsql_string can be any nvarchar or varchar data
  type. If the N is included, the  **string is interpreted as nvarchar**

  data type. 
 
 
 each country has its own specific letters and symbols so a database set up for English US will not recognise the Â£ symbol which a English UK database would, the same goes for Spanish, French, German 
 Also other languages like Chinese, Japanese, Hebrew, Arabic don't use any Latin characters. 
 so anyone trying to enter any data not contained in the local character set will fail or suffer data corruption, if you are using varchar, so if there is even the remotest possibility that your database will need to support more than one local character set then you have to use the nationalised  language character set aka unicode aka NChar, which allows the character sets nationality to be recorded with the character. providing international text support 
 Likewise adding the N Prefix to a string instructs the database to include the Nation code as well as the character code 
 