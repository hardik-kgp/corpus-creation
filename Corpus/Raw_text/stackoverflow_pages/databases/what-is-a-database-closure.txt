*** what-is-a-database-closure ***

 I came across this term called database closure.  
 I tried to look for it and what exactly it means but I have not found any simple explanation.  
 Can someone please explain what the concept of closure is and specifically what is a database closure, if it is good /bad, how it can be used or avoided ? 
 Also seems like there is in general a closure term:  http://en.wikipedia.org/wiki/Closure_%28computer_science%29  which relates to binding of variables to function. Is a database closure related to this ?  
 Thanks! 
 
 Closure is actually a relatively simple concept. When designing databases we want to know that our database tables have as little redundancy as possible. This means making sure that we can have as little relationships between sets (or tables) as possible. 
 An example: 
 If we have two sets X and Y (which you can think of as two tables called X and Y) and they have a relationship with each other as so:
X -> Y (Read this as Y is dependent on X) 
 And we have another set Z which is dependent on Y:
Y -> Z (also read as Y determines Z) 
 To find the closure we find the minimum number of tables that we can reach all relationships with. In this case all we need is X.  
 So now, when we design our database we know that we only have to have a relationship from X, and Z and Y can actually be derived from X. We can therefore make sure there are no extra relationships in our database which cause redundancy. 
 If you want to read more, closure is a part of a topic called normalisation.  
 
 Closure is mentioned in database theory / set theory discussions -- as in, Dr. Codd / design & normalization kind of stuff.  It has to do with finding the minimally representational elements of sets (i.e., without redundancy, etc.).  I tried reading-up on it a long time ago, but my eyes went crossed, and I got a really bad headache. 
 If you want to read a decent summary of closure, here is one:  http://www.cs.sfu.ca/CC/354/jpei/slides/ClosureDecomposition.pdf 
 
 All operations are performed on an entire relation and result in an entire relation, a concept known as closure. And that is one of relational database systems characteristics 
 
 If we are referring to Closure in the Functional Dependency sense (relating to database design), 
 The closure of a set F of functional dependencies is the set of all functional dependencies logically implied by F. 
 The minimal representation of sets is referred to as the  canonical cover : the irreducible set of FD's that describe the closure. 
 
 The closure is essentially the full set of attributes that can be determined from a set of known attributes, for a given database, using its functional dependencies. 
 Formal math definition: 
 
 Given a set of functional dependencies, F, and a set of attributes X. The closure is defined to be the set of attributes Y such that X -> Y follows from F. 
 
 Algorithm definition: 
 
 
 
 It can be shown that the two definition coincide. 
 A database closure might refer to the closure of all of the database attributes. According to the definitions above, this closure would be the set of all attributes of the database itself.  
 The closure (computer science) term that you linked to is not related to closure in databases but the  mathematical closure  is.  
 For a better understanding of functional dependencies and a simple example for closure in databases I suggest reading  this . 
 