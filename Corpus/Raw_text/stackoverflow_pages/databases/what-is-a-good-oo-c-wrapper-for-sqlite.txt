*** what-is-a-good-oo-c-wrapper-for-sqlite ***

 
 
 
 
 
 Closed.  This question is  off-topic . It is not currently accepting answers.
                            
                         
 
 
 
 
 
 
 
 
 
 
 Want to improve this question?   Update the question  so it's  on-topic  for Stack Overflow.
                         
 Closed  5 years ago . 
 
 
 
 I'd like to find a good object oriented C++ (as opposed to C) wrapper for sqlite. What do people recommend? If you have several suggestions please put them in separate replies for voting purposes. Also, please indicate whether you have any experience of the wrapper you are suggesting and how you found it to use. 
 
 This is really inviting down-votes, but here goes... 
 I use sqlite directly from C++, and don't see any value with an added C++ abstraction layer. It's quite good (and efficient) as is. 
 
 Another good wraper for databases in C++ is  SOCI . It's not very OO, but the more Modern C++. 
 It supports Oracle, PostgreSQL and MySQL. A  SQLite backend is in the CVS . 
 
 I read this post and tried some of the libraries mentioned in the answers , 
But none of them was easy enough for me ( i am a lazy programmer ! ).   
 So i wrote my own wrapper :  sqlite modern cpp 
 
 Have fun ! 
 
 Here's one that hasn't been updated in a while, but compiles and runs on Mac OS GCC 4.3.  It's also released under the MIT License, so you can use it in a commercial project, no problems.   http://code.google.com/p/sqlite3pp/ 
 The usage is boost-ified and very clean: 
 
 See:  http://code.google.com/p/sqlite3pp/wiki/UsagePage 
 
 Use Qt - it has great binding for SQLite that fits well into its overall design 
 
 I also wasn't pleased with what I could find. Now you can write: 
 
 The table method is all you need to write as long as you stick to the sqlite3 data types. As everything is a template not much abstraction layer code remains after -O. Natural joins require a result class similar to the Person class. The implementation is a single header with less than 500 lines. License is LGPL.  Source 
 
 I wasn't pleased with any I could find either, so I wrote my own:  sqlite3cc . 
 Here's a code example: 
 
 
 http://www.codeproject.com/KB/database/CppSQLite.aspx  is just fantastic, it is very easy to port, I had it working on bcb5 (omg) in half an hour or so. It is about as thin as you can get and easy to understand. There are a goodly number of examples that cover just about every thing you need to know. It uses exceptions for error handling - I modified it to provide return codes in a mater of minutes. Only tricky issue is to create your own lib file none are provided.     
 
 Could not be much simpler than this..... 
 
 Everyone have given good advice on what to use: I'll tell you what instrument  **NOT**
 use. 
 LiteSQL .  
 My experience is terrible. 
I'm just doing some reasearch on what orm use, and I'm testing a lot of it. 
 Weaknesses: 
 
 no documentation 
 no explanatory README 
 no explanation on prerequisites 
 do not compile due to a lot of  bug  (isn't true, isn't fixed in v0.3.17) 
 
 
 I've used this one  http://www.codeproject.com/KB/database/CppSQLite.aspx  but I've moved to C#, so there may be newer/better ones now 
 
 Perhaps you can take a look at 
 http://pocoproject.org 
 or 
 Platinum C++ Framework 
 
 Another simple one is  NLDatabase . Disclaimer: I'm the author. Basic usage (and to be honest, you won't get much more than "basic" from this one) looks like this: 
 
 And just for fun, open a database, run a query and fetch results all in one line: 
 
 
 I made one because of the need in our company. 
 https://www.github.com/rubdos/libsqlitepp 
It's C++11, and header only. Just put the header in your project, include it and link to the C sqlite libraries. 
 Examples should be somewhere on that git repo too, fairly easy to use. 
 
 Oracle/OCI/ODBC Template Library 
 
 This library is brilliant. 
 http://www.sqlapi.com/ 
 There are Windows and Linux versions of the library available and I was up and running in minutes. 
 
 Do you have successfully ported it for mingw-3.4.5? Will you share the ported version? 
 Thx. 
 http://www.codeproject.com/KB/database/CppSQLite.aspx  is just fantastic, it is very easy to port, I had it working on bcb5 (omg) in half an hour or so. It is about as thin as you can get and easy to understand. There are a goodly number of examples that cover just about every thing you need to know. It uses exceptions for error handling - I modified it to provide return codes in a mater of minutes. Only tricky issue is to create your own lib file none are provided.  
 