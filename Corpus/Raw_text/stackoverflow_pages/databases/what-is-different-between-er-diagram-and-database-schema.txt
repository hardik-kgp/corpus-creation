*** what-is-different-between-er-diagram-and-database-schema ***

 What is the difference between ER Diagrams and Database Schema? MySQL Workbench has facility to draw ER diagrams, but the symbols for ER diagrams different in other drawing tools than MySQL Workbench method. 
 
 **A database schema**
 is usually a relational model/diagram.  it shows the link between tables: primary keys and foreign keys.  
 In database diagram the relation between an apple  and a apple tree would be:
A foreign key "ID__TRE" which cannot be null in the table "APPLE" is linked to a primary key "ID_TRE" in the table "TREE".  
 
 **An entity relationship diagram**
. Shows links between the entities and the kind of relation between them. We are not talking about tables or keys there! Usually the entity relationship diagram follows Merise model. Database manager and developer as myself usually build an entity relationship model before conceiving the relational model/diagram. 
The set of symbol in Merise are:(0-1, 0-n, 1-1, 1-n). The first number 0 or 1 describes whether the other part of the association is required for an object to exist. If it is zero, it means it can exists without being associated. If it is One it means that the object only exist in relation with an other object (e.g an apple need a tree to exist --> 1, a tree needn't apple to exists -->0) 
The second character tell us how many objects are accepted in the other part of the association. If it is 1, then only one object can exists in the relation, if it is n, a infinite number of object can be linked (e.g.: an apple can have one tree --> 1, a tree can have multiples apples --> n)  
 With Entity relationship the relationship will be described as : 
An apple has to belong to at least one tree to exists and can belong to only one tree(1-1). A tree needn't an apple to exist but it can have an infinite number of apples (0-n).    
 
 In fact both description mean the same but one is database oriented while the other is modelling oriented. Some modelling software such as DB-MAIN convert automatically an ER diagram to the relational diagram.  
 
 A  **database schema**
 is a description of the actual construction of the database. It is an all-encompassing term that refers to the collective of tables, columns, triggers, relationships, key constraints, functions and procedures. It can refer to a document that describes all of this (such as an XML Schema) or as an abstraction of database makeup itself ("It would be difficult to change the schema of the database at this point"). It does not refer to rows inserted into the schema, or data itself. You would  **insert**
 data into an existing schema. 
 An  **Entity Relationship Diagram**
 is a visualization of the relationships between tables in a database. At the very least, it includes table names visualized as squares connected by lines that represent primary and foreign key constraints. It often includes the column names and symbols that include information about what kind of relationship exists between the columns (one-to-one, one-to-many, many-to-many). 
 
 ENTITY RELATIONSHIP DIAGRAMS (ERDs) are just that: DIAGRAMS which describe the RELATIONSHIPS between ENTITIES. Now let's look closer...  
 
 ERDs are often created by Business Analysts (NOT DBAs);  
 ERDs are often described in LAYMAN's terms (NOT techno-speak of DBAs or other);  
 ERDs are meant to summarize & clarify understanding for End Users and Business SMEs (again, NOT the DBAs or Developers) 
 ERDs work best when each entity is described in the  SINGULAR, and the lines connecting various entities to other entities in the ERD use verbs (of action or possession, or existence) to describe each relation;  
 ERDs can (and do) include lines which denote n:n relationships, but this is not a requirement.  
 Examples of entities in an ERD for a blog: Member, Post, Comment, Category 
 Examples of relationships described in an ERD: 

 
 Member "posts" 1 to n Posts; (note we AREN'T describe WHAT a post looks like)  
 Post "relevant-to" 1 to n Categories
etc. 
 
 
 DATA SCHEMAS bear some resemblance to ERDs, but they should NOT be considered either equivalent or interchangeable. If you make an ERD which can be used as a data schema... be open to the possibility you DIDN'T make an ERD ! ;-)  
 DATA schemas are diagrams used to describe to a DBA how data will be stored in a database (relational or non-relational).  
 
 Data Schemas almost invariable describe the structure & characteristics of TABLES;  
 Tables are "containers" (cardboard boxes);  
 As such tables in a data schema are BEST named in the PLURAL  
 Examples of the TABLES in a SCHEMA for the same blog: 
 ,  ,  ,       (relational database)
or 
  (keyed by Member-Date and all other columns in 1 table (non-relational database like for a "big data" project);  
 a data schema would then describe the data contained in each table:  
 
 etc. 
 the lines between tables in a data schema would NOT try to represent any 'relation' other than a "KEY" between 2 fields which could be used to "join" the tables, and some additional characteristics of those lines to denote n:n relationships.  
 
 BOTH diagrams serve quite DIFFERENT purposes: 
ERD: to make mere mortal end-users (and business owners) UNDERSTAND the model of a given business solution; and
DATA SCHEMA: a "blueprint" used by DBAs to BUILD databases, and by DEVELOPERS to CONSUME the data in that database.  
 