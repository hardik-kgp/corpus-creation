*** what-is-semi-join-in-database ***

 I am having trouble while trying to understand the concept of semi-join and how it is different from conventional join. I have tried some article already but not satisfied with the explanation, could someone please help me to understand it? 
 
 Simple example. Let's select students with grades using left outer join: 
 
 Now the same with left semi-join: 
 
 The latter is much more efficient. 
 
 As far as I know SQL dialects  that support   are U-SQL/Cloudera Impala. 
 
 SEMIJOIN : 
 **Semijoins are U-SQL’s way filter a rowset based on the inclusion of its rows in another rowset.**
 Other SQL dialects express this with the SELECT * FROM A WHERE A.key IN (SELECT B.key FROM B) pattern.  
 
 More info  Semi Join and Anti Join Should Have Their Own Syntax in SQL : 
 
 **“Semi” means that we don’t really join the right hand side, we only check if a join would yield results for any given tuple.**

 
 
 
 **EDIT:**

 Another dialect that supports SEMI/ANTISEMI join is  **KQL**
: 
 
 **kind=leftsemi**
 (or kind=rightsemi) 
 Returns all the records from the left side that have matches from the right. The result table contains columns from the left side only. 
 
 
 **demo**

 Output: 
 
 
 As I understand, a semi join is a left join or right join: 
 What's the difference between INNER JOIN, LEFT JOIN, RIGHT JOIN and FULL JOIN? 
 So the difference between a left (semi) join and a "conventional" join is that you only retrieve the data of the left table (where you have a match on your join condition). Whereas with a full (outer) join (I think thats what you mean by conventional join), you retrieve the data of both tables where your condition matches. 
 