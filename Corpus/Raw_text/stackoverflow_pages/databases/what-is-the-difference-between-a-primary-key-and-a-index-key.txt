*** what-is-the-difference-between-a-primary-key-and-a-index-key ***

 Can anyone tell me what is the difference between a primary key and index key. And when to use which? 
 
 A primary key is a special kind of index in that: 
 
 there can be only one; 
 it cannot be nullable; and 
 it must be unique. 
 
 You tend to use the primary key as the most natural unique identifier for a row (such as social security number, employee ID and so forth, although there is a school of thought that you should always use an artificial surrogate key for this). 
 Indexes, on the other hand, can be used for fast retrieval based on other columns. For example, an employee database may have your employee number as the primary key but it may also have an index on your last name or your department. 
 Both of these indexes (last name and department) would disallow NULLs (probably) and allow duplicates (almost certainly), and they would be useful to speed up queries looking for anyone with (for example) the last name 'Corleone' or working in the 'HitMan' department. 
 
 A key (minimal superkey) is a set of attributes, the values of which are unique for every tuple (every row in the table at some point in time). 
 An index is a performance optimisation feature that enables data to be accessed faster. 
 Keys are frequently good candidates for indexing and some DBMSs automatically create indexes for keys, but that doesn't have to be so. 
 The phrase "index key" mixes these two quite different words and might be best avoided if you want to avoid any confusion. "Index key" is sometimes used to mean "the set of attributes in an index". However the set of attributes in question are not necessarily a key because they may not be unique. 
 
 Oracle Database enforces a UNIQUE key or PRIMARY KEY integrity constraint on a table by creating a unique index on the unique key or primary key. This index is automatically created by the database when the constraint is enabled.  
 You can create indexes explicitly (outside of integrity constraints) using the SQL statement  . 
 Indexes can be unique or non-unique. Unique indexes guarantee that no two rows of a table have duplicate values in the key column (or columns). Non-unique indexes do not impose this restriction on the column values. 
 Use the   statement to create a unique index. 
 **Specifying the Index Associated with a Constraint**

 If you require more explicit control over the indexes associated with   constraints, the database lets you: 
 
 These options are specified using the   clause.  
 Example: 
 
 http://docs.oracle.com/cd/B28359_01/server.111/b28310/indexes003.htm 
 
 Other responses are defining the Primary Key, but not the Primary Index. 
 A Primary Index isn't an index on the Primary Key.  
 A Primary Index is your table's data structure, but only if your data structure is  ordered  by the Primary Key, thus allowing efficient lookups without a requiring a separate data structure to look up records by the Primary Key.  
 All databases (that I'm aware of) have a Primary Key. 
 Not all databases have a Primary Index. Most of those that don't build a secondary index on the Primary Key by default. 
 