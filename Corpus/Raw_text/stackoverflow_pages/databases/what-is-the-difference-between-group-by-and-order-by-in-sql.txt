*** what-is-the-difference-between-group-by-and-order-by-in-sql ***

 When do you use which in general? Examples are highly encouraged! 
 I am referring so MySql, but can't imagine the concept being different on another DBMS 
 
 ORDER BY alters the order in which items are returned. 
 GROUP BY will aggregate records by the specified columns which allows you to perform aggregation functions on non-grouped columns (such as SUM, COUNT, AVG, etc). 
 
 ORDER BY alters the order in which items are returned. 
 GROUP BY will aggregate records by the specified columns which allows you to perform aggregation functions on non-grouped columns (such as SUM, COUNT, AVG, etc). 
 
 
 **ORDER BY:**
 sort the data in ascending or descending order.   
 Consider the  **CUSTOMERS**
 table: 
 
 Following is an example, which would sort the result in ascending order by NAME: 
 
 This would produce the following result: 
 
 **GROUP BY:**
 arrange identical data into groups. 
 Now,  **CUSTOMERS**
 table has the following records with duplicate names: 
 
 if you want to group identical names into single name, then GROUP BY query would be as follows: 
 
 This would produce the following result:
(for identical names it would pick the last one and finally sort the column in ascending order) 
 
 as you have inferred that it is of no use without SQL functions like sum,avg etc..     
 so go through this definition to understand the proper use of GROUP BY: 
 
 A GROUP BY clause works on the rows returned by a query by summarizing
  identical rows into a single/distinct group and returns a single row
  with the summary for each group, by using appropriate Aggregate
  function in the SELECT list, like COUNT(), SUM(), MIN(), MAX(), AVG(),
  etc. 
 
 Now, if you want to know the total amount of salary on each customer(name), then GROUP BY query would be as follows: 
 
 This would produce the following result: (sum of the salaries of identical names and sort the NAME column after removing identical names) 
 
 
 The difference is exactly what the name implies: a group by performs a grouping operation, and an order by sorts. 
 If you do   then you get the result list sorted by the customers name. 
 If you do   you get a count of active and inactive customers. The group by aggregated the results based on the field you specified. 
 
 They have totally different meaning and aren't really related at all. 
 ORDER BY  allows you to sort the result set according to different criteria, such as first sort by name from a-z, then sort by the price highest to lowest. 
 (ORDER BY name, price DESC) 
 GROUP BY  allows you to take your result set, group it into logical groups and then run aggregate queries on those groups. You could for instance select all employees, group them by their workplace location and calculate the average salary of all employees of each workplace location. 
 
 Simple,   orders the data and   groups, or combines the data. 
  orders the result set as per the mentioned field, by default in ascending order. 
 Suppose you are firing a query as  , it will show you result in ascending order of student's roll numbers. Here,   entry might occur more than once. 
 In   case, we use this with aggregate functions, and it groups the data as per the aggregate function, and we get the result. Here, if our query has   along with   it will show the sum of marks of students belonging to each group (where all members of a group will have the same first name). 
 
 GROUP BY is used to group rows in a select, usually when aggregating rows (e.g. calculating totals, averages, etc. for a set of rows with the same values for some fields). 
 ORDER BY is used to order the rows resulted from a select statement. 
 
 Some good examples there. Just like to add my own from webcheatsheet which gives good clear examples, as well as letting you execute your own SQL. 
 SQL Order By 
 SQL Group By 
 
  shows a field in ascending or descending order. While   shows same fieldnames, id's etc in only one output. 
 
 
 GROUP BY will aggregate records by the specified column which allows you to perform aggregation functions on non-grouped columns (such as SUM, COUNT, AVG, etc.).   ORDER BY alters the order in which items are returned. 
 If you do 
SELECT IsActive, COUNT(*) FROM Customers GROUP BY IsActive 
you get a count of active and inactive customers. The group by aggregated the results based on the field you specified. If you do 
SELECT * FROM Customers ORDER BY Name 
then you get the result list sorted by the customerâ€™s name. 
 If you GROUP, the results are not necessarily sorted; although in many cases they may come out in an intuitive order, that's not guaranteed by the GROUP clause.    If you want your groups sorted, always use an explicitly ORDER BY after the GROUP BY. 
 Grouped  data cannot be filtered by WHERE clause.   Order data can be filtered by WHERE clause. 
 
 
 It should be noted   is not always necessary as (at least in PostgreSQL, and likely in other SQL variants) you can use   with a list  and  you can still use   or    per  column... 
 
 