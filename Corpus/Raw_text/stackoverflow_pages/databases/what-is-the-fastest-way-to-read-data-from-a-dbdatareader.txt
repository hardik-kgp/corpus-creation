*** what-is-the-fastest-way-to-read-data-from-a-dbdatareader ***

 In the following code, command is a DbCommand that has already been set up: 
 
 The bulk of the time for the query I am currently working with is spent doing the GetValue calls. Is it making a round trip to the database for each GetValue call? It seems like it is, and this seems very inefficient. As the code notes, attempting to do it in one shot using GetValues() does not make a difference. Is there a way to get the entire row in one shot? Better yet, is there a way to get the entire result set in one shot? 
 Thanks. 
 
 
 
 I did some benchmarking myself with various approaches: 
 
 1 and 2 returns   while the rest strongly typed result set, so its exactly not apples to apples, but I while time them accordingly. 
 Just the essentials: 
 
 The query returned about 1200 rows and 5 fields (run for 100 times). Apart from   all performed well. Of all I prefer   which returns data lazily, as enumerated. This is great for memory if you only need to enumerate it. To have a copy of the collection in memory, you're better off with   or   as you please. 
 
 I would use something like  dapper-dot-net  to load it into a basic type model; this is a micro-ORM, so you get the benefits of meta-programming (efficiently pre-generated IL etc) - without the overhead of things like EF or DataTable. 
 
 
 
 You could use a   to get all the results and store them in a  .   
 
 Use Untyped DataSet. That is fastest, as far as I know. 
 