*** what-is-the-recommended-way-to-drop-indexes-using-mongoose ***

 I need to create several deployment scripts like data migration and fixtures for a MongoDB database and I couldn't find enough information about how to drop indexes using Mongoose API. This is pretty straight-forward when using the official MongoDB API: 
 
 To delete all indexes on the specified collection: 
 
 
 However, I would like to use Mongoose for this and I tried to use   adapted from  this post , but with no success: 
 
 Should I use the official MongoDB API for Node.js or I just missed something in this approach? 
 
 To do this via the Mongoose model for the collection, you can call   of the native collection: 
 
 **Update**

  is deprecated in the 2.x version of the native driver, so   should be used instead: 
 
 
 It looks like you're attempting to drop all of the indexes on a given collection. 
 According to the MongoDB Docs,  this is the correct command . 
 
 ... I tried to use executeDbCommand adapted from this post, but with no success: 
 
 To really help here, we need more details: 
 
 What failed? How did you measure "no success"? 
 Can you confirm 100% that the command ran? Did you output to the logs in the callback? Did you check the   variable? 
 Where are you creating indexes? Can you confirm that you're not re-creating them after dropping? 
 Have you tried the command while listing specific index names? Honestly, you should not be using  . You should be deleting and creating very specific indexes. 
 
 
 If you want to maintain your indexes in your schema definitions with mongoose (you probably do if you're using mongoose), you can easily drop ones not in use anymore and create indexes that don't exist yet.  You can just run a one off   on any models that you need to sync.  It will create ones in the background with   and drop any that no longer exist in your schema definition.  You can look at the full docs here:
 https://mongoosejs.com/docs/api.html#model_Model.syncIndexes 
 