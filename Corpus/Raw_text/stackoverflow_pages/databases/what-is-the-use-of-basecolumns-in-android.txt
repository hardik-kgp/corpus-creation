*** what-is-the-use-of-basecolumns-in-android ***

 What is the use of implementing a class from   in Android? 
 
 This is a simple interface which adds two fields :  
 
 Internally sqlite databases used in Android, comes with an    column that autoincrements and can function as a primary key. This also maps well with the  
 
 The   interface provides names for the very common   and   columns. 
 Using common names enables the Android platform (and developers as well) to address any data item, regardless of its overall structure (i.e. other, non-ID columns) in a unified way. Defining constants for commonly used strings in an interface/class avoids repetition and typos all over the code. 
 Using a column named   (the constant value of  ) is required by  , implementations of a   and other places where you hand off a   to the Android platform to do things for you. For example, the adapter of a   uses the   column to give you the unique ID of the list item clicked in  , without you having to explicitly specify what your ID column is every time. 
 Whether or not to  **implement**
 interfaces consisting only of constants or  **reference**
 them with their full name, i.e.   is a matter of taste. I  personally  prefer the latter, because it's more obvious where   is coming from and the former feels like an abuse of inheritance. 
 
 The BaseColumn interface only provides the column  names  _ID and _COUNT.  You must still specify columns that use them when constructing tables.  For example, to create a column using the column name _ID you might do the following: 
 
 
 It is an interface, which looks like this 
 
 It contains constants like id and count used for auto-increment in SQL lite DB. 
 We can also create our own constants for id without using this particular interface. But functions like cursor adaptor requires the exact constants like "_id", So it is better to use the provided interface!! 
 Hope this helps you out!! :-) 
 