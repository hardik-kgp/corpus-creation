*** what-kind-of-database-refactoring-tools-are-there ***

 I am looking for something to integrate to my CI workflow. 
I've heard of  dbdeploy  but I'm looking for something else. The reason I don't like dbdeploy is I don't want to install java on my server. 
 I would prefer of course that the solution doesn't involve stringing some shell scripts together. 
 
 **Here**
 is a  **feature comparison**
 between 
 
 Flyway 
 Liquibase 
 c5-db-migration 
 dbdeploy 
 mybatis 
 MIGRATEdb 
 migrate4j 
 dbmaintain 
 AutoPatch 
 
 
 It's not a tool, but Ambler and Sadalage's book,  Refactoring Databases: Evolutionary Database Design  is quite good. 
 
 Redgate  will probably do everything you need.  Expensive though. 
 EDIT - Specifically:  http://www.red-gate.com/products/sql-development/readyroll/ 
 
 You mentioned that you like dbDeploy and the fact that you do not want to install java on your server.  Are you aware of  the .NET port  of this tool?   
 I used this recently with a team and we were very happy with it.  In our case we were targeting SQL 2000, but it could easily be configured to run against other DB platforms, including MySQL.  Of course it will require you to have the .NET Framework installed on the server... if that's an acceptable prerequisite vs. the java runtime. 
 
 for those people who are interested in liquibase, but donâ€™t like xml migrations.
Take a look at  groovy-liquibase , a plugin that supports groovy migrations 
 Liquibase is great in structure, but misses with xml migrations. This plugin solves that problem 
 
 Possible it's not your case, but if you decide to use Java take a look at  liquibase 
 
 Yep, Redgate is magic. And Not that expenssive for what it provides.  
 
 Try  Agile DBRIRE  for Continuous Integration workflow. It's easy to set and allows to generate test db from Dev DB. Also it allows to generate incremental DB updates for Staging and Production. The tool can compare DEV and Staging/Production DB and generate metadata and data update SQL scripts. The tool is free. 
 
 Visual Studio Team system (database edition) does some refactoring. 
 I read the Refactoring databases book.  I think it's helpful. 
 But in software dev, you build tests so that you are safe refactoring.  They don't touch on tests in the Refactoring Databases book, which was my big disappointment with it. 
 
 I think those tools are very good, but for my purpose I have written a custom own. The main reason for this was because of I'm working on a SQL Server Compact 3.5 database, so none of the listed tools worked. 
 Of course it isn't as powerful as the tools from Redgate but you get the most important features very quick. 
 It's able to rename all kinds of database objects and migrating columns to other tables and create a diff script for 2 databases. 
 
 An important part of  Refactoring Databases  is the migrations part.
A .NET migrations solution that does not require EF or Java is Rob Reynold's  Roundhouse 
 Might be worth checking out. 
 