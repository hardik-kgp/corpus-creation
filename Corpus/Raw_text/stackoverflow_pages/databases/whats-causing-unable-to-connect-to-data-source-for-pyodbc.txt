*** whats-causing-unable-to-connect-to-data-source-for-pyodbc ***

 I'm trying to connect to an MSSQL database from python on Linux (SLES). 
 I have installed pyodbc and Free TDS. From the command line: 
 
 Connects to the server without a problem, however, from Python: 
 
 Yields an error: 
 
 I'm finding this error unhelpfully vague. Even a suggestion to narrow down the issue would be helpful right now. 
 Edit:
    Looking at the TDS log dump it looks like this is where the whole thing falls apart: 
 
 
 I try with: 
 
 MS SQL 2008 Datacenter 
 Ubuntu 12.04 TLS (amd64) 
 Python 2.7  
 
 And this works for me: 
 Test connection: 
 
 on /etc/odbcinst.ini add: 
 
 on /etc/odbc.ini add: 
 
 on /etc/freetds/freetds.conf add: 
 
 test with test.py: 
 
 
 I had the same problem and I found out that it was missing the   parameter in the call to  . The following code works for me to connect to an instance of MS SQL Server 2008: 
 
 
 After hours of going in circles it turns out all I was missing was 
 TDS_Version = 8.0
in the DSN in my odbc.ini file. 
 I had specified it elsewhere, but it needed to be here, too, apparently. 
 Hope this helps some other poor soul. 
 
 Just for an extra datapoint, odbc.ini is empty on my host, and odbcinst.ini has the following lines: 
 
 last, the freetds.conf file has these lines: 
 
 While one can certainly specify option settings in odbc.ini, doing it this way allows the configuration options to all be managed where you'd expect them -- the freetds.conf file. 
 
 Adding TDS_Version to the connection string worked for me: 
 
 
 I was also having problems with this after upgrading my version of ubuntu to 12.04. My old freetds config   was no being found so I had to move it to   at which point it started working again. 
 Also my driver location is  
 Hope this helps save someone a day and a half! 
 
 My problem was that on my settings file I was setting HOST to the SQL Server IP, however after hours of pulling my hair off I figured out that HOST has to be set to the Data Source Name [] 
 
 You can also set an environmental variable in your python script: 
 
 
 This worked for me, not sure but thought that it might help someone 
 run below command to find which version of odbcinst and isql you are using 
 
 Then run   to find which   and   is getting used. 
 In   add 
 
 And in   configure your server as 
 
 I found some good description at  https://docs.snowflake.net/manuals/user-guide/odbc-linux.html#unixodbc 
 Also take a look at  https://github.com/lionheart/django-pyodbc/wiki/Mac-setup-to-connect-to-a-MS-SQL-Server 
 
 One setting is enoug,  : 
 
 And next: 
 
 
 The follow worked for me: 
 Modify   
 
 