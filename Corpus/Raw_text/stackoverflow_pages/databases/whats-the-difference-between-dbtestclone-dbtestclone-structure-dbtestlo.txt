*** whats-the-difference-between-dbtestclone-dbtestclone-structure-dbtestlo ***

 You'll have to admit, to a newbie to rails and databases, the official explanation on rubyonrails.org makes all four of these tasks sound exactly the same. Quote: 
 
 I don't even know the difference between structure and schema. And what's  the difference between loading the current environment's schema and just loading schema.rb? 
 Just how similar (or different) are these tasks? 
 
 Very good question. Had me stumped so I dove into the rails source and pulled up  . Now it's more clear: 
 
  is just a combination of   and  : 
 
  uses the   file: 
 
  is the same as  , but invokes it on the test database: 
 
  alerts you if any migrations are pending, and if not, either runs   (using the   file) or   (using the   file), depending on the schema format (this is a little confusing to me, maybe someone else can expand on it): 
 
 
 Hope this clears it up! Again, going through the  database.rake  file is easy and will clear up any other questions you might have. That link goes to the line that is the beginning of the   namespace. 
 
 They are actually not quite the same thing.  Any of those tasks that contain the word 'schema' act on the .../db/schema.rb file. schema.rb is effectively the state of your schema after applying all migrations. It can be executed to restore your schema rather than running all of the db migrations (which can take a long time if you have lots of migrations). 
 Any of the tasks with the word 'structure', act on the {Rails.env}_structure.sql file. This file is used when your schema contains constructs that can't be expressed in the schema.rb file.  For example, if you use features specific to a particular RDBMS. Under the covers, rails produces this file using whatever schema dump utility it appropriate for your RDBMS. To restore the schema, it reads the file in and executes the SQL statements agains using an RDBMS-specific tool. 
 Rails knows whether to go the schema.rb route or the structure.sql route based on whether or not you've set 
 config.active_record.schema_format = :sql 
 in your .../config/application.rb 
 