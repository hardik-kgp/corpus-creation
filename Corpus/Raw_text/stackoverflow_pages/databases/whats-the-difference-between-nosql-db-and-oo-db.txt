*** whats-the-difference-between-nosql-db-and-oo-db ***

 what's the difference between NoSql DB and OO Db? 
 
 An object-oriented database, like db4o, would be considered one of the alternatives presented by NoSQL, which means Not Only SQL.  It's a set of alternatives to relational databases: Voldemort, Hadoop, MongoDB, CouchDB, BigTable, Neo4J, db4o and others. 
 
 NoSQL DB are normally de-normalized (save copy of object data in place of object), where as OODB is normalized database with object relationships. In OODB, data is stored in object at one place and is linked (relation) to other objects. 
 Due t above difference of de-normalized and normalized, both have their own pros and cons. NoSQL DBs like Mongo are fast to read but poor in writing / updating data. Due to de-normalized nature of NoSQL DBs, it hard to maintain integrity of data with that, where as OODB as Wakanda are easy to manage and have data integrity. You delete one object and all its relations are deleted automatically. 
 I tried a lot to figure out some good javascript object oriented DB, but as of now could not find any other than www.wakanda.org. In case you know any, kindly share details. 
 
 NoSQL is a movement, OODB is a technology. Or in other words: NoSQL is a group of people, an OODB is a piece of code. 
 
 There's no strict definition of "NoSQL", so the differences are largely semantic.  Generally an Object Oriented Database is considered a subset (a kind of) NoSQL Database.  However, in general an OO DB will still have ACID-like locking to keep consistency, while NoSQL will generally have some kind of "eventually consistent" or partial locking semantics.  A NoSQL's schema may be object-based or may be key-value based (or something else), making it a more general term. 
 