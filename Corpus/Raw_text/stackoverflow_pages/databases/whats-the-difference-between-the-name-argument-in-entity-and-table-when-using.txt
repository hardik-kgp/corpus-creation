*** whats-the-difference-between-the-name-argument-in-entity-and-table-when-using ***

 I'm using JPA2 and both   and   have a   attribute, e. g.: 
 
 What should I use, which ones are optional?  
 In my specific case I have a class   and a class  , which have additional requirements (as far as I understand) because they are reserved words in SQL. 
 How would a working solution look like and with which name would I refer to the entity when writing queries? 
 Updated. I added   to both annotations in   and did the same for  , but now I get this error:  
 
 and 
 
 
 @Table is optional. @Entity is needed for annotating a POJO class as an entity, but the name attribute is not mandatory. 
 If you have a class  
 
 A table with name " **MyEntity**
" will be created and the Entity name will be  **MyEntity**
. Your JPQL query would be:  
 
 In JPQL you always use the Entity name and by default it is the class name. 
 if you have a class 
 
 then a table with name  **MyEntityTableName**
 is created and the entity name is  **MyEntityName**
.  
 Your JPQL query would be : 
 
 
 The  **name**
 in   is for JPA-QL queries, it defaults to the class name without package (or unqualified class name, in Java lingo), if you change it you have to make sure you use this name when building queries. 
 The  **name**
 in   is the table name where this entity is saved. 
 
  is useful with model classes to denote that this is the entity or table 
  is used to provide any specific name to your table if you want to provide any different name 
 Note: if you don't use   then hibernate consider that   is your table name by default  
 
 