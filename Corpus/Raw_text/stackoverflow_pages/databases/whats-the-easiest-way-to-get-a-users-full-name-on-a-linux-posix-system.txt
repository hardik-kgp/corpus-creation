*** whats-the-easiest-way-to-get-a-users-full-name-on-a-linux-posix-system ***

 I could grep through /etc/passwd but that seems onerous.  'finger' isn't installed and I'd like to avoid that dependency.  This is for a program so it would be nice if there was some command that let you just access user info. 
 
 You don't specify a programming language, so I'll assume you want to use the shell; here's  **an answer for Posix shells**
. 
 Two steps to this: get the appropriate record, then get the field you want from that record. 
 First, getting the account record is done by  **querying the **
** table**
: 
 
 For hysterical raisins, the full name of the user is recorded in a field called the  **“GECOS” field**
; to complicate matters, this field often has its own structure with the  **full name as just one of several optional sub-fields**
. So anything that wants to get the full name from the account record needs to parse both these levels. 
 
 Your  **programming language probably has a library function**
 to do this in fewer steps. In C, you'd use the ‘getpwnam’ function and then parse the GECOS field. 
 
 On a modern glibc system, use this command: 
 
 That'll get you the   entry of the specified user, independent of the underlying NSS module. 
 Read the  manpage of  . 
 
 If you're already programming, you can use the   C-Function: 
 
 The   struct has a   member which should contain the full name of the user. 
 Read the  manpage of  . 
 
 Be aware that many systems use this field for more than the full name of the user. The most common convention is to use a comma ( ) as separator within the field and place the users real name first. 
 
 Just in case you want to do this from C, try something like this: 
 
 
 Combination of other answers, tested on minimal Debian/Ubuntu installations: 
 
 
 Try this: 
 
 
 The top two answers can be combined in one line: 
 
 
 My code works in bash and ksh, but not dash or old Bourne shell. It reads the other fields too, in case you might want them. 
 
 You could also scan the whole /etc/passwd file. This works in plain Bourne shell, in 1 process, but not so much with LDAP or what. 
 
 On the other hand, using tools is good.  And C is good too. 
 
 The way that I figured it on Linux to get the full name into a variable was: 
 
 Then just simple use the variable, ex:  
 
 Take 1: 
 
 However, passwd database supports special character '&' in the gecos, which should replaced with capitalized value of user name: 
 
 Most of answers here (except for finger solution) do not respect &.
If you want to support this case, then you'll need a more complicated script. 
 Take 2: 
 
 
 The good old  finger  may also help :-) 
 
 