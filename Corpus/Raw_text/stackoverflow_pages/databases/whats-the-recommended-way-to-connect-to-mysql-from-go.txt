*** whats-the-recommended-way-to-connect-to-mysql-from-go ***

 I am looking for a reliable solution to connect to a MySQL database from Go. I've seen some libraries around but it is difficult to determine the different states of completeness and current maintenance. I don't have complicated needs, but I'd like to know what people are relying on, or what's the most standard solution to connect to MySQL. 
 
 A few drivers are available but you should only consider those that implement the  database/sql  API as 
 
 it provides a clean and efficient syntax, 
 it ensures you can later change the driver without changing your code, apart the import and connection. 
 
 Two fast and reliable drivers are available for MySQL : 
 
 MyMySQL 
 Go-MySQL-Driver 
 
 I've used both of them in production, programs are running for months with connection numbers in the millions without failure. 
 Other SQL database drivers  are listed on go-wiki . 
 **Import when using MyMySQL :**

 
 **Import when using Go-MySQL-Driver :**

 
 **Connecting and closing using MyMySQL :**

 
 **Connecting and closing using Go-MySQL-Driver :**

 
 **Select one row :**

 
 **Select multiple rows and build an array with results :**

 
 **Insert :**
  
 
 You'll see that working in Go with MySQL is a delightful experience : I  **never**
 had a problem, my servers run for months without errors or leaks. The fact that most functions simply take a variable number of arguments lighten a task which is tedious in many languages. 
 Note that if, in the future, you need to use another MySQL driver, you'll just have to change two lines in one go file : the line doing the import and the line opening the connection.  
 
 few things to take note
the select 1 row example : 
 
 there is a missing   in this example. it need to call the   to grab the first row returned. 
 also there is some inflexibility to the library which in some way try to promote data minimalism. if you try to select columns that is not Scan it will throw errors (not just warnings)  
 