*** when-is-a-database-called-as-an-embedded-database ***

 Does the term 'embedded database' carry different meaning from 'database'? 
 
 There are two definitions of embedded databases I've seen: 
 
 Embedded database as in a database system particularly designed for the "embedded" space (mobile devices and so on.) This means they perform reasonably in tight environments (memory/CPU wise.) 
 Embedded database as in databases that do not need a server, and are embedded in an application (like  SQLite .) This means everything is managed by the application. 
 
 I've personally never seen the term used exactly as  Wikipedia  defines it, but that's probably my fault, although it resembles quite a bit my number 2 above. 
 
 The word 'embedded' does add meaning, basically that the database is dedicated to a specific application rather than shared among multiple applications, to a degree hidden from the user of the application, and completely controlled by the application.   
 An embedded database is conceptually just a part of the application rather than a separate thing. 
 
 Just see the usage of ... for example a H2-embedded database. You don't need a server running on your machine, your whole database ist stored in one (these are originally two) local file. It is opened and locked when you connect to your DB, and it is unlocked when you disconnect.  
 
 When a developer embeds a database library inside an application and there is no need for administrator, it is called embedded database. Database is hidden, but data management via SQL (e.g. ITTIA DB SQL) or no SQL (e.g. Berkeley DB) is accessible through APIs. Embedded databases are common for web development or device applications. 
 