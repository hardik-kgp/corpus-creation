*** when-using-multiple-when-matched-statements-do-they-all-execute-or-does-only-o ***

 If I have multiple WHEN MATCHED statements in a MERGE statement, do they all execute if they're true? 
 My example: 
 
 What is the state of X in each of the 4 possibilities? 
 
 Basically, I'm curious if there's an implicit BREAK after each WHEN MATCHED clause. 
 
 To answer your question, yes, it will only run a single match and then break.  However, if you'd like to have logic to allow for conditional matching in the update, the   statement is rather useful for this. 
 Something like this as an example: 
 
 
 SQL Fiddle Demo 
 
 
 And the results: 
 
 
 I found in the  MSDN documentation : 
 
 WHEN MATCHED THEN  
 Specifies that all rows of target_table that match the rows returned by  ON , and satisfy any additional search condition, are either updated or deleted according to the  clause. 
 The MERGE statement can have at most two WHEN MATCHED clauses. If two clauses are specified, then the first clause must be accompanied by an AND  clause. For any given row, the second WHEN MATCHED clause is only applied if the first is not. If there are two WHEN MATCHED clauses, then one must specify an UPDATE action and one must specify a DELETE action. If UPDATE is specified in the  clause, and more than one row of matches a row in target_table based on , SQL Server returns an error. The MERGE statement cannot update the same row more than once, or update and delete the same row. 
 
 So it looks like only one of the statements are executed, and they require a DELETE in one and an UPDATE in the other. 
 
 well, the answer is, do you really want to because if you do you would change a set based update to a row by agonising slow row update as in a set of rows you really would not know what columns changed on a record by record basis. 
 the question, therefore, is do you want to get performance? if so, make sure you have indexes that covering the  
 
 if not you are going to have to cursor over your updates after the merge using an   trigger... 
 Not good for speed, however, can work if you need to record who did what...  
 Happy Coding 
 Walter 
 