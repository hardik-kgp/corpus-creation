*** where-can-i-find-a-good-sample-asp-net-database-driven-web-application ***

 
 
 
 
 
 Closed.  This question is  off-topic . It is not currently accepting answers.
                            
                         
 
 
 
 
 
 
 
 
 
 
 Want to improve this question?   Update the question  so it's  on-topic  for Stack Overflow.
                         
 Closed  6 years ago . 
 
 
 
 I would like to learn the best practices to employ when creating a database driven web-application.
I prefer to learn from examples. 
What is a good sample application that I can download and run to learn this: 
 I am looking for: 
 
 Should be written in C# (preferably) 
 Should contain a complex database design (parent child relations, etc.) 
 Should implement the best practices for an ASP.net website as well as for database design. 
 Preferably uses Oracle. 
 
 
 If you don't want to worry about writing your  DAL  (Data Access Layer), then I suggest looking at  Nhibernate .  There are samples with it and ASP.NET  here ,  here , and  here .  Here's a  sample with just Oracle  and ASP.NET. 
 If you are looking for just sample ASP.NET Applications without an Object Relational Mapper like NHibernate, try  this . 
 Also, on a higher level, you're looking for an  N-Tier ASP.NET application design .  There are good tutorials on that  here ,  here , and  here . 
 
 There are lots of examples in  ASP.NET Starter  Kits.  I really like the  BlogEngine.NET  application.  For higher-end basics (hmmm..."higher-end basics"...oxymoron?)  the  BeerHouse E-Commerce application  is great. 
 
 For 1 through 3, I would recommend downloading some of the ASP.NET starter kits. I'm not sure if they work with Oracle though. 
 Some of the bigger frameworks are also great starts like DotNetNuke. They make great use of best practices. 
 http://www.asp.net/community/projects/ 
 
 For Oracle, look for samples using the System.Data.OracleClient.  
 
 Writing this from my iPhone so sorry for the brvity. 
 Check out rob conrey's MVC storefront videos & source. 
 
 In my opinion best practice would dictate the following: 
 
 Use an ORM for your data access layer. This should ideally be in a a separate project so it can be changed if need be. 
 Should use MVC. If you use WebForms then you will surely find that your business logic and the display logic gets mixed together. 
 Learn database design separate and apart from learning to write code. 
 Keep reviewing object oriented design fundamentals. 
 Take time to learn design patterns. Not to become a slave to "The Gang of Four" but so that you can take advantage of proven patterns to solve common problems. 
 
 