*** which-database-out-of-couchdb-mongodb-and-redis-is-good-for-starting-out-with-n ***

 I'm getting more into  Node.js  and am enjoying it. I'm moving more into web application development. 
 I have wrapped my head around Node.js and currently using  Backbone  for the front end. I'm making a few applications that uses Backbone to communicate with the server using a RESTful API. In Node.js, I will be using the  Express  framework. 
 I'm reaching a point where I need a simple database on the server. I'm used to  PostgreSQL  and  MySQL  with  Django , but what I'm needing here is some simple data storage etc. I know about  CouchDB ,  MongoDB  and  Redis , but I'm just not sure which one to use? 
 Is any one of them better suited for Node.js? Is any one of them better for beginners, moving from relational databases? I'm just needing some guidance on which to choose, I've come this far, but when it's coming to these sort of databases, I'm just not sure... 
 
 
 Is any one of them better suited for
  Node JS? 
 
 Better suited especially for node.js probably no, but each of them is better suited for certain scenarios based on your application needs or use cases. 
 **Redis**
 is an advanced key-value store and probably the fastest one among the three NoSQL solutions. Besides  basic key  data manipulation it supports rich data structures such as  lists ,  sets ,  hashes  or  pub/sub  functionality which can be really handy, namely in statistics or other real-time madness. It however lacks some sort of querying language. 
 **CouchDB**
 is document oriented store which is very durable, offers  MVCC , REST interface, great  replication  system and  map-reduce  querying. It can be used for wide area of scenarios and substitute your RDBMS, however if you are used to ad hoc SQL queries then you may have certain problems with it's map-reduce views. 
 **MongoDB**
 is also document oriented store like CouchDB and it supports ad hoc querying besides map-reduce which is probably one of the crucial features why people searching for DRBMS substitution choose MongoDB over the other NoSQL solutions. 
 
 Is any one of them better for
  beginners, moving from relational
  databases? 
 
 Since you are coming from the RDBMS world and you are probably used to SQL then, I think, you should go with the Mongodb because, unlike Redis or CouchDB, it supports ad hoc queries and the querying mechanism is similar to SQL. However there may be areas, depending on your application scenarios, where Redis or CouchDB may be better suited to do the job. 
 