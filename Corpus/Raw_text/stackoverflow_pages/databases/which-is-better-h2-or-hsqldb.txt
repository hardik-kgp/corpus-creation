*** which-is-better-h2-or-hsqldb ***

 
 
 
 
 
 
 
 
                            As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened,  visit the help center  for guidance.
                            
                         
 
 
 Closed  7 years ago . 
 
 
 HSQLDB 2.0 is soon to be released. I wonder if it will outperform H2 since, as far as I know, most users prefer H2 than HSQLDB. I am interested in the MVCC support of HSQLDB 2.0. I have learned that MVCC on H2 is still experimental. With regards to support/documentation, concurrency, performance, which is better between the two? 
 
 **Please note I had provided this answer in 2011. It may be outdated**
  
 My company develops a database abstraction library ( jOOQ ), which supports both databases. Our integration tests cover a lot of functionality, including the calling of stored procedures and functions, arrays, nested selects, etc. I experience   to be slightly faster than   for small databases as far as DML is concerned. 
 However, HSQLDB highly outperforms H2 in DDL operations as well as when starting/shutting down the instance, even for a small database (due to H2's compiling stored functions afresh with javac at every database startup!) . This depends on the way you store stored functions. Apparently, that's a rather jOOQ-specific "issue", see also Thomas Mueller's comment. 
 On the other hand, I agree with user trashgod, you should test performance against a reasonable schema and use-case for yourself. 
 
 Both   and   are fairly transparent, so testing may be the best approach to determine which is more suitable for a particular use. Comparisons involving  one  and the  other  are available. They share a common  heritage , and both are  open   source . 
 