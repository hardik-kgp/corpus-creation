*** which-local-database-is-suitable-for-windows-8-store-apps ***

 I'am programming a   (Metro Design) with   and   using  . 
 There is no need for a database server with multi user support etc. 
 I want to store my data in a local database and don't know which database is suitable for my needs.
Maybe  ? Or are there solutions that fits better for Windows Store Apps and integrates better in Visual Studio? 
 The app is kind of a calender and the database should store the user data that consists of the dates, tasks and so on. 
 
 **SQLite**
 is the recommended database to be used for Win 8 Apps.
Links for implementing the same 
 http://timheuer.com/blog/archive/2012/08/07/updated-how-to-using-sqlite-from-windows-store-apps.aspx 
 http://code.msdn.microsoft.com/windowsapps/Using-SQLite-Asynchronously-b8372137 
 https://visualstudiogallery.msdn.microsoft.com/23f6c55a-4909-4b1f-80b1-25792b11639e 
 
 SQLite is supported for WinRT. 
 http://visualstudiogallery.msdn.microsoft.com/23f6c55a-4909-4b1f-80b1-25792b11639e 
 
 Ok, this is a great question that I had to learn the hard way.  By default WinRT applications do NOT have access to, directly at least, to any type of database structure.  This means no Express, Compact, CE, SQLite etc. 
 There are three ways around this.  Do not use a database and instead use a local file structure where you store and retrieve your data.  XML works very nicely with this because you can maintain many of the same features a database would give you.  
 The second option is to use IndexedDB.  It is similar to a cookie style local storage model where files are saved in your apps local apps folder.   
 The third and final option is to use web services.  WinRT does have access to the internet which means you can write API and WebServices that can be called.  This does mean that you need to have a server running which is connected to a master database.  When your app needs data it calls your web service and obtains what it needs.   
 Overall, for the application you are describing the first option may best suite your needs.  Keep a local XML file in your apps folder and read/write from it.   
 
 My  question  was marked as a duplicate of this question (although it was about C++ not C#). I thought I should still post my findings here.  C++ apps have another alternative: 
 Extensible Storage Engine (ESE) 
 The list of all such API available for Store apps can be found on  this link  under the section Jet. 
 
 As one of variant: 
 Devart LinqConnect for Metro â€“ a fully-functional high-performance ORM solution for developing Windows Store applications using either of LINQ or ADO.NET to access data. 
 http://code.msdn.microsoft.com/windowsapps/A-Simple-Windows-Store-85f29843#content 
 or next link can be usefull to 
 http://social.technet.microsoft.com/wiki/contents/articles/18417.windows-store-app-with-a-sqlite-database.aspx   
 