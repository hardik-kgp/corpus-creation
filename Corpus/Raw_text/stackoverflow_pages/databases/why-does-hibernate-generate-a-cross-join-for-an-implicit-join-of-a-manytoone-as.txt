*** why-does-hibernate-generate-a-cross-join-for-an-implicit-join-of-a-manytoone-as ***

 Baur & King said in their book:  
 
 Implicit joins are always directed along many-to-one or one-to-one association, never through a collection-valued association. 
 [P 646, Ch 14] 
 
 But when I am doing that in the code it is generating a CROSS JOIN instead of an INNER JOIN.  
 Mapping is from   (many-to-one) ->  . 
 But   has no information about members and   is having a Foreign Key of Club2. 
 My query is  
 
 And, Hibernate is generating the following SQL query:  
 
 Club2.java 
 
 Member2.java 
 
 hibernate.cfg.xml 
 
 Test.java 
 
 
 Most database engines will optimise the CROSS JOIN with an WHERE clause to a JOIN anyway, but I prefer to always use explicit JOINs instead. 
 The CROSS JOIN is generated by the  implicit JOIN : 
 
 To avoid the second Club query you could write the query as follows: 
 
 This query will remove the CROSS JOIN and the secondary select while using bind parameters instead of hard-coded ones. 
 