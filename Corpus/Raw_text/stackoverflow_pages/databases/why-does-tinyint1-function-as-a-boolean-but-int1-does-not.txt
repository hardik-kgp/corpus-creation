*** why-does-tinyint1-function-as-a-boolean-but-int1-does-not ***

 Why does   work as a boolean? The way I understood the official docs, the (1) should mean it has a display width of 1, so if I store   in it, I thought it should print  . But for some reason it always prints either   or  . 
 And another case is if I store   in an  , then it prints   (at least according to SQLFiddle). What's going on here? 
 
 The (1) in parentheses for a MySQL integer type has nothing to do with the range of values accepted by the data type, or how it is stored.  It's only for display.  
 See also my answer to  Types in MySQL: BigInt(20) vs Int(20) etc . 
 TINYINT is no different from TINYINT(1) or TINYINT(2) or TINYINT(64).  It's an 8-bit signed integer data type, and it accepts any 8-bit integer value from -128 to 127. 
 
 For convenience, MySQL supports an alias for BOOL, which is replaced immediately by TINYINT(1). 
 
 As I said, the use of (1) means almost nothing, it's only a convention so that if you see TINYINT(1) it's reasonable to assume the column is  intended  to be used as a boolean.  But nothing in MySQL prevents you from storing other integer values in it. 
 If you want a column to accept  only  0 or 1, you can use BIT(1): 
 
 This doesn't save any space compared to TINYINT though, because the storage for a given column rounds up to the nearest byte. 
 PS: Despite answer from @samdy1, TINYINT does not store  strings    or   at all, it stores  integers    or  , as well as other integers from -128 to 127.  There is no need to quote integers in SQL, and I am often puzzled why so many developers do. 
 
  columns can store numbers from   to  . 
  is a bit weird though. It is (perhaps because it is supposed to act as a   datatype), returns only   and   in some context, while it still keeps the stored (-128 to 127) values. 
 ( **Correction:**
 I only see this weird behaviour in SQL-Fiddle and not when accessing MySQL locally so it may well be a SQL-Fiddle quirkiness, possibly related to the quivalence with  ) and not a MySQL problem. 
 See the  **SQL-Fiddle**

 
 Where we get (only in SQL-Fiddle, not if we access MySQL otherwise!): 
 
 but: 
 
 
 This is a mysql Jdbc configuration subject. 
 You can config mysql jdbc to convert TinyInt(1) to Boolean or Integer through set jdbc url config property "tinyInt1isBit" to "true" (default) or "false". 
 from:  https://dev.mysql.com/doc/connector-j/en/connector-j-reference-configuration-properties.html 
 Should the driver treat the datatype TINYINT(1) as the BIT type (because the server silently converts BIT -> TINYINT(1) when creating tables)? 
 Default: true 
 
 The engine is smart enough to know that   and   are the same. However   only affects the Display Width instead of the underlying storage size. Display width only comes into play when the value is less width then the display width. Then it gets padded. 
 http://alexander.kirk.at/2007/08/24/what-does-size-in-intsize-of-mysql-mean/ 
 
 As I understand it,   can only hold   or   (from own experience). 
Thus, one can assume that the   or   is translated into   or  . 
 