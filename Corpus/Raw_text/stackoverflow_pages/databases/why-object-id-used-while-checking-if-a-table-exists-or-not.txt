*** why-object-id-used-while-checking-if-a-table-exists-or-not ***

 I need to check if a table in SQL exist or not. 
 If not it must create one automatically. 
 Now I researched and found this code: 
 
 Can anyone explain why it says where   and what should I put in its place? 
 
 I like this syntax: 
 
 Where object_id takes the 2 char type of object as the second parameter. You can find the list of Object types listed below in the  sys.objects documentation : 
 
 AF = Aggregate function (CLR) 
 C = CHECK constraint 
 D = DEFAULT (constraint or stand-alone) 
 F = FOREIGN KEY constraint 
 FN = SQL scalar function 
 FS = Assembly (CLR) scalar-function 
 FT = Assembly (CLR) table-valued function 
 IF = SQL inline table-valued function 
 IT = Internal table 
 P = SQL Stored Procedure 
 PC = Assembly (CLR) stored-procedure 
 PG = Plan guide 
 PK = PRIMARY KEY constraint 
 R = Rule (old-style, stand-alone) 
 RF = Replication-filter-procedure 
 S = System base table 
 SN = Synonym 
 SO = Sequence object 
 SQ = Service queue 
 TA = Assembly (CLR) DML trigger 
 TF = SQL table-valued-function 
 TR = SQL DML trigger  
 TT = Table type 
 U = Table (user-defined) 
 UQ = UNIQUE constraint 
 V = View 
 X = Extended stored procedure 
 
 
 The ISO SQL way to check existence of a table level object is the INFORMATION_SCHEMA.TABLES view 
 There's nothing  wrong  with looking at sys.objects but.... INFORMATION_SCHEMA.TABLES is a bit more declarative -- and it's cross platform (which often doesn't matter at all but meh still nice.) 
 I think this is probably more readable for a new coder though: 
 
 Don't worry about the RAISERROR command -- its just a nice way of printing formatted messages. 
 You can query the INFORMATION_SCHEMA view to get a sense of what's in it. 
 
 As you can see -- you can reference schemas and catalogs by name rather than looking up their ID with OBJECT_ID() 
 
 
  is the column name in  
  is a function that returns the   for the object you specify, i.e.  . 
 You are comparing the object_id of   with the   column in the   table.  You need to replace   with the table name you want to check already exists. 
 
  is a function which returns the Object ID. See the documentation: 
 
 Returns the database object identification number of a schema-scoped
  object. 
 
 http://msdn.microsoft.com/en-us/library/ms190328.aspx 
 
 By passing it certain parameters (ie. your table details), it will return an ID. You can then compare this with the IDs in the   table to check whether it currently exists. 
 