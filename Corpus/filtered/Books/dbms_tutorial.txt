dbms  database chema atabase schema skeleton structure represents logical view entire database defines data organized relation formulates constraints applied data database schema def ines entities relationship descriptive database depicted schema diagrams database designer design schema programmers understand database image database schemas ata base schema divided broadly categories  data schemas dbms  physical database schema schema pertains actual storage data form storage files indices defines data stored secondary storage ogical database schema schema defines logical constraints applied data stored defines tables views integrity constraints database instance distinguish terms individually database schema skeleton database designed database exist nce database operational difficult atabase schema data atabase instance state operational database data time snapshot database database instances tend change time dbms ensures instance tate valid state diligently validation constraints condition database designers imposed dbms  database multi layered difficult database database systems designed multi layers learnt earlier data independence database lot data addition user data stores data data metadata locate retrieve data easily difficult modify update set eta data stored database dbms expands change time satisfy requirements sers entire data dependent tedious highly complex job image data independence meta data layered architecture change data layer affect data level data independent mapped logical data independence logica data data database stores data managed inside table relation stored database constraints applied relation  data independence dbms  logical data independence kind mecha nism liberalizes actual data stored disk table format change data residing disk physical data independence schemas logical actual data stored bit form disk physical data independence power change physical data impacting schema logical data case change upgrade storage suppose replace hard disks ssd impact logical data schemas dbms  model defines conceptual view database works real entit ies association view level model considered good option designing databases entity entity real object animate inanimate easily identifiable exa mple school database student teachers class offered considered entities entities attributes properties identity entity set collection types entities ntity set entities attribute sharing values students set student school likewise teachers set teachers school faculties entit sets disjoint attributes entities represented properties called attributes attributes values student entity class age attributes exist domain range values assi gned attributes student numeric alphabetic student age negative types ttributes simple attribute simple attributes atomic values divided student phone number atomic  digits composite attribute composite attributes simple attribute student complete first_name last_name derived attribute rived attributes attributes exist physical database values derived attributes database average_salary department saved directly dat abase derived age derived data_of_birth  model basic cepts dbms  single attribute single attributes single social_security_number multi attribute multi attribute values person phone number email_address attribute types simple single valued attributes simple multi valued attributes composite single valu attributes composite multi valued attributes entity keys key attribute collection attributes uniquely identifies entity entity set roll_number student identifiable student super key attributes collectively identifies entity entity set candidate key inimal super key called candidate key entity set hav candidate key primary key primary key candidate key chosen database designer uniquely identify entity set relationship association entities called relationship employee works_at department student enrolls works_at enrolls called relationship relationship set set elationship type cal led relationship set entities relationship attributes attributes called descriptive attributes degree elationship number participating entities relationship defines degree relationship dbms  binar degree  ternary degree  ary degree mapping cardinalities cardinality defines number entities entity set number entities set relationship set entity enti ty set entity entity set vice versa image relation entity entity set entities entity set entity entity set entity image relation entities entity set entity entity set entity entity set entity entity set dbms  image relation entity entity vice versa image relation dbms  learn model represented diagram object entities attributes entity relationship set attributes relationship set represented diagram entity entities represented rectangles rectangles named entity set represent image entities school database attributes attributes properties entities attributes represented ellipses ellipse represents attribute directly connected entity rectangle image simple attributes attributes composite divided tree str ucture node connected attribute composite attributes represented ellipses connected ellipse  diagram represent ation dbms  image composite attributes multivalued attributes depicted double ellipse image multivalued attributes derived attributes depicted dashed elli pse dbms  image derived attributes relationship relationships represented diamond shaped box relationship written diamond box entities rectangles participating relationship connected binary elationship ardinality relationship entities participating called binary relationship cardinality number instan entity relation relation instance entity relationship marked   image reflects instance entity relationship depicts relationship image dbms  instance enti ty relationship marked  image reflects instance entity left instance entity relationship depicts relationship image instance entity relationship marked  image reflects instance entity left instance entity relationship depicts relationship image image reflects instance entity left instance entity associa ted relationship depicts relationship image dbms  participation constraints total participation entity involved relationship total participation represented double lines partial participation entities involved relation ship partial participation represented single image participation constraints dbms  model power expressing database entities conceptual hierarchical manner hierarch generalize view entities deep hierarchy entity included structure called generalization entities clubbed represent generalized view student named mira generalized students entity student student person reverse called specialization person student student mira generalization mentioned process generalizing entities generalized entities properties generalized entities called eneralization generalization number entities brought generalized entity based characteristics pigeon house sparrow crow dove generalized birds image generalization specialization specialization opposite generalization specialization group entities divided groups based characteristics group erson person birth gender properties common persons human beings company person identified employee employer customer vendor based role play mpany  generalization specialization dbms  image specialization school database person specialized teacher student staff based role play scho entities inheritance features model order create classes objects object oriented programming etails entitie generally hidden user process abstraction inheritance feature generalization specialization lower level entities inherit attributes higher vel entities dbms  image inheritance attributes erson class age gender herited lower level entities tudent eacher dbms  edgar codd extensive relational model database systems rules database obey order regarded true relational database rules applied database manages stored data relational capabilities foundation rule whi acts base rules rule  ule data stored database user data metadata table cell database stored table format rule  guaranteed access ule single data ele ment guaranteed accessible logically combination table primary key row attribute column pointers access data rule  systematic treatment null alues null values database systematic uniform treatment rule null interpreted data missing data data applicable rule  active nline atalog structure description entire database stored online catalog data dictionary accessed author ized users users query language access catalog access database rule  comprehensive ata ub anguage ule database accessed language linear ntax supports data definition data manipulation transaction management operations language irectly application database access data language considered violation  dbms  rule  view pdating ule views database theoretically updated updatable rule  high evel nsert pdate elete ule database support high level insertion updation deletion limited single row support union intersection minus operations yield sets data records rule  physical ata ndependence data stored database independent applications tha access database change physical structure database impact data accessed ternal application rule  logical ata ndependence logical data database application change logical data affect application tables merged split tables impact change user application difficult rule apply rule  integrity ndependence database independent application integrity constraints independently modified change application rule database independent application interface rule  distribution ndependence user data distributed locations user impression data located rule regarded foundation distributed database systems rule  ubversion ule interface access low level records interface subvert bypass security integrity constraints dbms  relational data model primary data model data storage processing model simple properties capabilities required process data storage efficiency concepts tables relation data model relations saved format tables format stores relation entities table rows col umns rows represent records columns represent attributes tuple single row table single record relation called tuple relation instance finite set tuples relational database repr esents relation instance relation instances duplicate tuples relation schema relation schema describes relation table attributes names relation key row attributes relation key identify row relation table uniquely attribute domain attribute pre defined scope attribute domain constraints relation conditions hold valid relation conditions called relational integrity constraints main integrity constraints key onstraints domain constraints referential integrity constraints key constraints minimal subset attributes relation identify tuple uniquely minimal subset attributes called key relation minimal subsets called candidate keys key constraints force  relation data model dbms  relation key attribute tuples identical key attributes key attribute null values key constrain referred entity constraints domain onstraints attributes specific values real scenario age positive integer constraints ha employ attributes relation attribute bound specific range values age telephone number digit   referential ntegrity onstraints referential integrity constraints work concept foreign key foreign key key attribute relation referred relation referential integrity constraint states relation refers key attribute relation key element exist dbms  relational database ystems expected equipped query language assist user query database instances kinds query languages relational algebra relational calculus relational lgebra relational algebra procedural query language takes instances relations input yields instances relations output operators perform queries operator unary binary accept relations input yield relations output relational algebra performed recursively relation intermediate considered relations undamental operations elational algebra select project union set cartesian product rename discuss operations sections elects tuples satisfy predicate relat ion notation stands selection predicate stands relation prepositional logic formula connectors terms relational operators ject database books output selects tuples books subject database subject database price  books  relational algeb dbms  output selects tuples books subject database price  subject database price  year  books output selects tuples books subject database price  books published  rojects column satisfy predicate notation     attribute names relation duplicate rows automatically eliminated relation set subject author books selects projects columns named subject aut hor relation books union operation performs binary union relations defined notion database relations relation result set tempo rary relation union operation valid conditions hold number attributes attribute domains compatible duplicate tuples automatically eliminated author books author arti cles output projects author written book article dbms  set difference result set difference operation tuples relation relation notatio finds tuples author books author articles output authors written books articles combines relations notation relations output defined author tutorialspoint books articles output ields relation books articles written tutorialspoint rename peration esults relational algebra relations rename operation rename output relation rename operation denoted small reek letter rho notation result expression saved additional operations set intersection assignment natural join relational calculus contrast relational algebra relational calculus procedural query language tells explains relational calculus exists forms dbms  tuple elational alculus trc filtering variable ranges tuples notation condition returns tuples satisfi condition xample author article database output eturns tuples author written article database trc quantified existential universal quantifiers authors article database output query yield result previous domain elational alculus drc drc filtering variable domain attributes entire tuple values trc mentioned notation         attributes stands formulae built attributes article subject tutorialspoint subject database output yields article subject relation tutorialspoint ubject database trc drc written existential universal quantifiers drc involves relat ional operators xpression power tuple elation alculus domain elation alculus equivalent relational algebra dbms  model conceptualized diagrams good overview entity relation ship easier understand diagrams mapped elational schema create relational schema diagram import constraints elational model approximate schema generated processes algorithms convert diagrams relational schema automated manual focus mapping diagram contents relationa basics iagrams comprise entity attributes relationship association entities mapping entity entity real object attributes image mapping entity mapping process algorithm create table entity entity attributes fields tables respective data types declare primary key  model rela tional model dbms  mapping elationship relationship association entities image mapping relationship mapping process create table relat ionship add primary keys participating entities fields table respective data types relationship attribute add attribute field table declare primary key composing primary keys participating entities declare foreign key constraints mapping weak entity sets weak entity set primary key image mapping weak entity sets dbms  mapping process create table weak entity set add attributes table field add primary key identifying entity set declare foreign key constraints mapping ierarchic ntities specialization generalization form hierarchical entity sets image mapping hierarchical entities mappi process create tables higher level entities create tables lower level entities add primary keys higher level entities table lower level entities lower level tables add attributes lower level entities clare primary key higher level table primary key lower level table dbms  declare foreign key constraints dbms  sql programming language relational databases designed relational algebra tuple relational lculus sql package major distributions rdbms sql comprises data definition data manipulation languages data definition properties sql design modify database schema data manipulation prop erties sql store retrieve data database data efinition language sql set commands define database schema create creates databases tables views rdbms create database tutorialspoint create table article create view for_students drop drop commands views tables databases rdbms drop object_type object_name drop database tutorialspoint drop table article drop view for_students alter modifies datab ase schema alter object_type object_name parameters  sql overview dbms  alter table article add subject varchar command adds attribute relation article subject string type data manipulation language sql equipped data anipulation language dml dml modifies database instance inserting updating deleting data dml responsible forms data modification database sql set command dml select wher insert values update set delete basic constructs database programmers users enter data database retrieve efficiently number filter options select select fundamental query command sql projection operation relational algebra selects attributes based condition clause clause takes relation argument attr ibutes selected projected case relation names clause corresponds artesian product clause defines predicate conditions match order qualify attributes projected select author_name book_author age  dbms  command yield names author relation book_author age greater  insert values command inserting values ws table relation syntax insert table column1 column2 column3 values value1 value2 value3 insert table values value1 value2 xample insert tutorialspoint author subject values anon ymous computers update set command updating modifying values columns table relation syntax update table_name set column_name column_name condition update tut orialspoint set author webmaster author anonymous delete command removing rows table relation syntax delete table_name condition dbms  delete tutorialspoint wher author unknown dbms  functional dependency functional dependency fd set constraints attributes relation functional dependency tuples values attributes   tuples values attributes   functional dependency represented arrow sign functionally determines left hand attributes determine values attributes hand armstrong axioms set functional dependencies closure denoted set functional dependencies logically implied armstrong axioms set rules applied repeatedly generates closure functional dependencies reflexive rule alpha set attributes beta is_subset_of alpha alpha holds beta augmentation rule holds attribute set holds adding attributes dependencies change basic dependencies transitivity rule transitive rule algebra holds holds hold called functionally determines trivial functional dependency trivial functional dependency fd holds subset called trivial fd trivial fds hold trivial fd holds subset called trivial fd completely trivial fd holds intersect completely trivial fd  normalization dbms  normalization database design perfect contai anomalies bad dream database administrator managing database anomalies impossible update anomalies data items scattered linked properly lead strange situations update data item copies scattered places instances updated properly left instances leave database inconsistent state deletion anomalies delete record parts left undeleted unawareness data saved insert anomalies insert data record exist normalization method remove anomalies bring database consistent state normal form normal form defined definition relations tables rule defines attributes relation atomic domains alues atomic domain indivisible units image unorganized relation arrange relation table convert normal form dbms  image relation nf attribute single pre defined domain normal form learn normal form understand prime attribute attribute prime key prime attribute prime tribute attribute prime key prime attribute follow econd normal form prime attribute fully functionally dependent prime key attribute holds proper subset holds true image relation nf student_project relation prime key attributes stu_id proj_id rule key attributes stu_name proj_name dependent prime key attribute individually stu_name identified stu _id proj_name identified proj_id independently called partial dependency allowed normal form image relation nf dbms  broke relation depicted picture exists partial dependency normal form relation normal form normal form satisfy prime attribute transitively dependent prime key attribute trivial functional dependency superkey prime attribute image relation nf student_detail relation stu_id key nly prime key attribute city identified stu_id zip zip superkey city prime attribute additionally stu_id zip city exists transitive dependency bring relation normal form break relation relations image relation nf dbms  boyc codd normal form boyce codd normal form bcnf extension normal form strict terms bcnf states trivial functional dependency super key image stu_id super key relation student_detail zip super key relation zipcodes stu_id stu_name zip zip city onfirms relations bcnf dbms  understand benefits cartesian product relation tuples paired feasible cases cartes ian product encounter huge relations thousands tuples considerable large number attributes join combination cartesian product selection process join operation pairs tuples relations join condition satisfied join types sections oin theta join combines tuples relations provided satisfy theta condition join condition denoted symbol notation r1 r1 relations havi attributes     attribute common r1 theta join kinds comparison operators student sid std  alex   maria  table student relation  joins dbms  subjects class subject  math  english  music  sports table subjects relation student_detail student student std subject class subject student_detail sid std class subject  alex   math  alex   english  maria   music  maria   sports table output theta join equi oin theta join equality comparison operator qui oin corresponds equi join natural join natural join comparison operator concatenate cartesian product perform natural join common attribute exists relatio addition attributes domain dbms  natural join acts matching attributes values attributes relation courses cid dept cs01 database me01 mechanics ee01 elec tronics table relation courses hod dept head alex maya mira table relation hod courses hod dept cid head cs01 database alex me01 mechanics maya ee01 electronics mira table relation courses hod dbms  outer joins theta join equi oin natural join called joins join includes tuples matching attributes rest discarded relation fore outer joins include tuples participating relations relation kinds outer joins left outer join outer join outer join left uter oin tuples left relation included relation tuples matching tuple relation attributes relation nul left  database  mechanics  electronics table left relation  alex  maya  mira table relation dbms  courses hod  database  alex  mechanics  electronics  maya table left outer join output uter oin tupl relation included relation tuples matching tuple attributes relation null courses hod  database  alex  electronics  maya  mira table outer join output uter oin tuples participating relations included relation matching tuples relations respective unmatched attributes null dbms  courses hod  database  alex  mechanics  electronics  maya  mira table outer join output dbms  atabases stored file formats records physical level actual data stored electromagnetic format device storage devices broadly categorized thre types image memory types primary storage memory storage directly accessible cpu category cpu internal memory registers fast memory cache main memory ram directly accessible cpu motherboard cpu chipset storage typically small ultra fast volatile primary storage requires ontinuous power supply order maintain state case power failure data lost secondary storage secondary storage devices store data future backup secondary storage includes memory devices cpu chipset motherboard magnetic disks optical disks dvd hard disks flash drives magnetic tapes tertiary storage tertiary storage store huge volumes data storage devices ext ernal computer slowest speed storage devices entire optical disk magnetic tapes tertiary storage memory hierarchy omputer defined hierarchy memory cpu direct access main memory inbuilt registers access time  storage dbms  main memory cpu speed minimize speed mismatch cache memory introduced cache memory fastest access time data frequently accessed cpu memory fastest access costliest larger storage devices offer slow speed expensive store huge volumes data compared cpu registers ache memory magnetic disks hard disk drives common secondary storage devices computer sys tems called magnetic disks concept magnetization store hard disks consist metal disks coated magnetizable material disks vertically spindle read write head moves tween disks magnetize magnetize spot agnetized spot recognized   hard disks formatted defined order store data efficiently hard disk plate concentric circ called tracks track divided sectors sector hard disk typically stores  bytes data raid raid stands edundant rray ndependent isks technology connect multiple secondary storage devices single storage media raid consists array disk multiple disks conne cted achieve goals raid levels define disk arrays raid  level striped array disks implemented data broken blocks blocks distributed disks disk receives block data write read parallel enhances speed performance storage device parity backup level  image raid  raid  raid  mirroring techniques data raid controller sends copy data disks array raid level dbms   called mirroring  redundancy case failure image raid  raid  raid  records error correction code hamming distance data striped disks level  data bit word recorded eparate disk ecc codes data stored set disks complex structure high cost raid  commercially image raid  raid  raid  stripes data multiple disks parity bit generated data word stored disk technique overcome single disk failure image raid  raid  level entire block data written data disks parity generated stored differen disk note level  byte level striping level  block level striping level  level  require disks implement raid dbms  image raid  raid  raid  writes data blocks disks parity bits generated data block stripe distributed data disks storing hem dedicated disk image raid  raid  raid  extension level  level independent parities generated stored distributed fashion ltiple disks parities provide additional fault tolerance level requires disk drives implement raid image raid  dbms  relative data stored collectively file formats file sequence records stored binary format disk drive formatted block store records file records mapped disk blocks file organization file organization defines file records mapped disk blocks types file organization organize file records image file organization heap file organization file created heap file organization operating allocates memory area file accounting details file records memory area responsibility software manage records heap file support ordering sequencing indexing  file structure dbms  sequential file organization file record data field attribute uniquely identify record sequential file organization records file sequential order based unique key field search key practically store records sequen tially physical form hash file organization hash file organization hash function computation field records output hash function determines location disk block records clustered file organization clustered file organization cons idered good large databases mechanism records relations disk block ordering records based primary key search key file operations operations database files broadly classified categories update operations retrie val operations update operations change data values insertion deletion update retrieval operations hand alter data retrieve optional conditional filtering types operations selection plays role creation deletion file operations files open file opened modes read mode write mode read mode operating yone alter data data read files opened read mode shared entities rite mode data modification files opened write mod read shared locate file file pointer tells current position data read written pointer adjusted seek operation moved forward bac kward read default files opened read mode file pointer points file options user operating locate file pointer time openin file data file pointer read dbms  write user select open file write mode enables edit content deletion insertion modification file pointer located time opening dynamically changed operating close operation operating point view request close file generated operating syst removes locks shared mode saves data altered secondary storage media release buffers file handlers file organization data insid file plays major role process ocat file pointer desired record inside file based records arranged sequentially clustered dbms  data stored form records record key field helps recognized uniquely indexing data structure technique effi ciently retrieve records database files based attributes indexing indexing database systems books indexing defined based indexing attributes indexing types primary primary defined ordered data file data file ordered key field key field generally primary key relation secondary econdary generated field candidate key unique record key wit duplicate values clustering clustering defined ordered data file data file ordered key field ordered indexing types dense sparse dense dense record search key database searching faster requires space store records record search key pointer actual record disk image dense  indexing dbms  sparse sparse records created search key record search key actual pointer data disk search record proceed record reach actual location data data directly reach starts sequential search desired data image sparse multilevel records comprise search key data pointers multilevel stored disk actual database files size database grow size indices immense records main memory speed search operations single level large size memory leads multiple disk accesses image multi level dbms  multi level helps breaking smaller indices orde outer level small saved single disk block easily accommodated main memory tree tree balanced binary search tree follo ws multi level format leaf nodes tree denote actual data pointers tree ensures leaf nodes remain height balanced additionally leaf nodes linked link list tree support random access sequential access stru cture ree leaf node equal distance root node tree order fixed tree image tree internal nod internal leaf nodes  pointers root node internal node pointers leaf nodes leaf nodes  record pointers  key values leaf node record pointers key values leaf block pointer point leaf node forms linked list ree nsertion tree filled entry leaf node leaf node overflows split node parts dbms  partition   entries stored node rest entries  onwards moved node key duplicated parent leaf leaf node overflows split node parts partition node   entries node rest entries moved node ree eletion tree entries deleted leaf nodes target entry searched deleted internal node delete replace entry left position deletion underflow tested underflow occurs istribute entries nodes left distribution left distribute entries nodes distribut ion left merge node left dbms  huge database structure impossible search values level reach destination data block retrieve desired data hashing effective technique calculate direct location data record disk structure hashing hash function search keys parameters generate address data record hash organization bucket ash file store data bucket format bucket considered unit storage ucket typically stores complete disk block turn store records hash function hash function mapping function maps set search keys address actual records function search keys bucket addresses static hashing static hashing search key provided hash function computes address mod  hash function generate  values output address function number buckets provided remain unchanged times image static hashing  hashing dbms  operation insertion record required entered static hash hash function computes bucket address search key record stored bucket address search record retrieved hash function retrieve address bucket data stored delete simply search deletion operation bucket overflow condition bucket overflow collision fatal state static hash function case overflow chaining overflow chaining buckets bucket allocated hash result linked previous mechan ism called closed hashing image overflow chaining linear probing hash function generates address data stored free buck allocated mechanism called open hashing dbms  image linear probing dynamic hashing roblem static hashing expand shrink dynamically size database grows shrinks dynamic hashing mechanism data buckets removed dynamically demand dynamic hashing extended hashing hash function dynamic hashing produce large number values nitially image dynamic hashing dbms  organization prefix entire hash hash portion hash computing cket addresses hash depth signify bits computing hash function bits address n buckets bits consumed buckets depth increased linearly buckets allocated operation querying depth hash bits compute bucket address update perform query update data dele tion perform query locate desired data delete insertion ompute address bucket bucket add buckets add additional bit hash compute hash function add dat bucket buckets perform remedies static hashing hashing favorable data organized ordering queries require range data data discrete random hash performs ha shing algorithm high complexity indexing hash operations constant time dbms  dbms  transaction defined group tasks single task minimum processing unit divided suppose bank employee transfers  account account simple small transaction involves low level tasks open_account old_balance balance new_balance old_balance  balance new_balance close_account open_account old_balance balance new_balance old_balance  balance new_balance close_account acid properties transaction small unit program low level tasks transaction database maintain tomicity onsistency solat ion urability commonly acid properties order ensure accuracy completeness data integrity atomicity property states transaction treated atomic unit operations executed state database transaction left partia lly completed states defined execution transaction execution abortion failure transaction consistency database remain consistent state transaction transaction adverse data residing database database onsistent state  transaction dbms  execution transaction remain consistent execution transaction durability database durable hold latest updates fails restarts transaction updates chunk data database commits database hold modified data transaction commits fails data written disk data updated springs action isolation database syst transaction executed simultaneously parallel property isolation states transactions carried executed transaction transaction affect existence transaction serializability multiple transaction executed operating multiprogramming environment possibilities instructions transaction interleaved transaction schedule chronological execution sequence transaction called schedule schedule transactions comprising number instructions tasks serial schedule schedule tra nsactions aligned transaction executed transaction completes cycle transaction executed transactions ordered type schedule called serial schedu transactions executed serial manner multi transaction environment serial schedules considered benchmark execution sequence instruction transaction changed transactions instru ction executed random fashion execution harm transactions mutually independent working segment data case transactions working data vary arying result bring database inconsistent state resolve problem parallel execution transaction schedule transactions serializable equivalence relation equivalence chedules equivalence schedule types dbms  result equivalence schedules produce result execution result equivalent yield result set values equivalence generally considered view equivalence schedules view equivalence transactions schedules perform actions manner reads initial data s1 reads initial data reads written s1 reads written performs final write data s1 performs final write data conflict equivalence schedules conflicting properties belong separate transactions accesses data item write operation schedules multiple transactions conflicting operations conflict equivalent schedules set transactions order conflicting pairs operation maintained schedules note view equivalent schedules view serializable conflict equivalent schedules conflict serializable conf lict serializable schedules view serializable dbms  states transactions transaction database state image trans action states active state transaction executed initial state transaction partially committed transaction executes final operation partially committed state failed transaction failed state checks dat abase recovery fails failed transaction longer proceed aborted checks fails transaction reached ailed state recovery nager rolls write operation database bring database original state prior execution transaction transactions state called aborted atabase recovery module select operations transaction aborts start transaction kill transaction committed transaction executes operations committed effects permanently established database dbms  multiprogramming environment multiple transactions executed simultaneously highly control concurrency transactions concurrency control protocols ensure atomicity isolation serializability concurrent transactions concurrency control protocols broadly divided categories lock based protocols time stamp based protocols lock ased rotocols database systems equipped lock based protocols mechanism transaction read write data acquires lock locks kinds binary locks lock data item states locked unlocked shared exclusive locks type lockin mechanism differentiates lock based lock acquired data item perform write operation exclusive lock llowing transaction write data item lead database inconsistent state read locks shared data changed type lock protocols simplistic lock protocol simplistic lock based protocols transaction lock object write operation performed ransactions unlock data item pre claiming lock protocol pre claiming protocol evaluate oper ations create list data items locks initiating execution transaction requests locks locks granted transaction executes releases locks operations locks granted transaction rolls waits locks granted  concurrency cont rol dbms  image pre claiming phase locking pl locking protocol divides execution phase transaction parts transaction starts executing seeks permission locks requires econd transaction acquires locks transaction releases lock phase starts phase transaction demand lock releases acquired locks image phase locking phase locking phases growing locks acquired transaction phase shrinking locks held transaction released claim exclusive write lock transaction acquire shared read lock upgrade exclusive lock strict phase locking phase trict pl pl acquiring locks phase transaction continues execute contrast pl strict pl releas lock strict pl holds locks commit point releases locks time dbms  image strict phase locking strict pl cascading abort pl time tamp ased rotocols commonly concurrency protocol time stamp based protocol protocol time logical counter time stamp lock based protocols manage order conflicting pairs transaction time execution time stamp based protocols start working transaction created transaction time stamp ordering determined age transaction transaction created  clock time older transaction transaction entering  seconds younger priority older addition data item latest read write timestamp read write operation performed data item time stamp rdering rotocol timestamp ordering protocol ensures serializability transaction conflicting read write operations responsibility protocol conflicting pair tasks executed timestamp values transactions ime stamp ransaction denoted read time stamp data item denoted timestamp write time stamp data item denoted timestamp timestamp ordering protocol works transaction issues read operation timestamp dbms  operation rejected timestamp operation executed data item imestamps updated transaction issues write operation timestamp operation rejected timestamp operation rejected rolled operation executed thomas write ule rule states timestamp operation rejected rolled timestamp ordering rules modified schedule view serializable making rolled write operation ign ored dbms  multi process deadlock unwanted situation arises shared resource environment process indefinitely waits resource held process assume set transactions     resource complete task resource held   waiting resource held   waiting resource held  processes wait release resources situation processes finish task situation deadlock deadlock healthy case stuck deadlock transactions involved deadlock rolled restarted deadlock prevention prevent deadlock situation dbms aggressively inspects operations transactions execute dbms inspects operations analyze create deadlock situation finds dea dlock situation occur transaction allowed executed deadlock prevention schemes time stamp ordering mechanism transactions order predetermine deadlock situation wait die schem scheme transaction request lock resource data item held conflicting lock transaction possibilities occur requesting flicting lock older allowed wait data item younger dies restarted random delay timestamp scheme older transaction wait kills younger wound wait scheme scheme transaction request lock resource data item held conflicting lock transaction possibilities ccur  deadlock dbms  forces rolled wounds restarted random delay timestamp forced wait resource scheme younger transaction wait older transaction request item held younger older transaction forces younger ort release item cases transaction enters stage aborted deadlock avoidance aborting transaction practical approach deadlock avoidance mechanisms sed detect deadlock situation advance methods wait graph suitable transactions light weight fewer instances resource bulky dead lock prevention techniques work wait graph simple method track deadlock situation transaction entering node created transaction requests lock item held transaction directed edge created releases item edge dropped locks data item maintains wait graph transaction waiting som data items held ystem checking cycle graph image wait graph dbms  approac irst request item locked transaction feasible starvation transaction indefinitely waits data item acquire econd option roll transactions feasible roll younger transaction older relative algorithm transaction chosen aborted transaction victim process victim selection dbms  oss volatile torage volatile storage ram stores active logs disk buffers data addition stores transactions executed volatile storage crashes abruptly logs active cop ies database recovery impossible required recover data lost techniques adopted case loss volatile storage checkpoints multiple stages save contents database riodically tate active database volatile memory periodically dumped stable storage ontain logs active transactions buffer blocks dump marked log file database contents dumped volatile memory stable recovery recovers failure restore latest mp maintain redo list undo list checkpoints recover consulting undo redo lists restore state transaction checkpoint database ackup ecovery atastrophic ailure catas trophic failure stable secondary storage device corrupt storage device valuable data stored inside lost strategies recover data catastrophic failure remote backup ere backup copy database stored remote location restored case catastrophe alternatively database backups magnetic tapes stored safer place backup transferred freshly installed database bring point backup grown databases bulky frequently backed cases techniques restore database logs  data backup dbms  backup logs frequent intervals time atabase backed week logs small backed day frequent ly remote backup remote backup sense security case primary location database located destroyed remote backup offline real time online case offline maintained manually image remote ata backup online backup systems real time lifesavers database administrators investors online backup mechanism bit real time data backed simultaneously distant place directly connected remote place backup primary database storage fails backup sense failure switch user remote storage instant tha users realize failure dbms  crash recovery dbms highly complex hundreds transactions executed durability robustness dbms depends complex architecture underlying hardware software fails crashes amid transactions expected follow sort algorithm techniques recover lost data failure classification problem occurred generalize failure categories transaction ailure transaction abort fails execute reaches point called transaction failure transaction process hurt reason transaction failure logical err ors transaction complete code error internal error condition errors database terminates active transaction dbms execute ecause condition case deadlock resource unavailability aborts active transaction rash problems external abruptly crash interruption power supply failure underlying hardware software failure examples include operating errors disk ailure early days technology evolution common problem hard disk drives storage drives fail frequently  data recovery dbms  disk failures include formation bad sectors unreachability disk disk head crash failure destroys disk storage storage structure storage storage structure divided categories volatile storage suggests volatile storage survive crashes volatile storage devices close cpu embedded chipset main memory cache memory examples volatile storage fast store small volatile storage memories survive crashes huge data storage capacity slower accessibility examples include hard disks magnetic tapes flash memory volatile battery backed ram recove atomicity crashes transactions executed files opened modify data items ransactions operations atomic nature accord ing acid properties dbms atomicity transactions maintained operations executed dbms recovers crash maintain check states tra nsactions executed transaction middle operation dbms ensure atomicity transaction case check transaction completed rolled ransactions allowed leave dbms inconsistent state types techniques dbms recovering maintaining atomicity transaction maintaining logs transaction writing stable storage modifying database maintaining shadow paging volatile memory actual database updated dbms  log ased recovery log sequence records mainta ins records actions performed transaction logs written prior actual modification stored stable storage media failsafe log based recovery works log file stabl storage media transaction enters starts execution writes log start transaction modifies item write logs   reads changed v1 v2 transaction finishes logs commit atabase modified approaches deferred database modification logs written stable storage database updated transaction commits database odification log actual database modification database modified operation recovery oncurrent ransactions transaction executed parallel logs interl eaved time recovery hard recovery backtrack logs start recovering ease situation modern dbms concept checkpoints checkpoint keeping maintaining logs real time real environment memory space time passes log file grow big handled checkpoint mechanism previous logs removed stored permanen tly storage disk checkpoint declares point dbms consistent state transactions committed dbms  recovery concurrent transaction crashes recovers behave manner image recovery concurrent transactions recovery reads logs backwards heckpoint maintains lists undo list edo list recovery sees log start commit commit puts transaction redo list recovery sees log start commit abort log puts transaction undo list transactions undo list undone logs removed transaction redo list previous logs removed redone saving logs