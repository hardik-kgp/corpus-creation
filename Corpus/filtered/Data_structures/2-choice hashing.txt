2 choice hashing choice hashing choice chaining variant hash table keys hashing hash functions key array position fewer colliding keys collision resolution scheme needed keys buckets average case cost successful search number keys size array works choice hashing utilizes hash functions h1 work hash functions expected work mapping integers universe range hash functions independent correlation hash functions integer potential locations stored based values respective outputs h1 note hash functions table hash functions map locations table implementation functions hashing implementation case insertion search insertion inserting values hash functions computed inserted object object bucket fewer objects buckets equal size default location h1 search effective searches buckets bucket locations h1 mapped desired performance true hash tables performance based largest bucket instances bucket sizes happen large based values hash functions rare hash functions locations possibility large buckets happen expected bucket size choice hashing Î¸ log log improvement randomized concept power choices hash functions offers substantial benefits single hash function improvement change expected order statistics hash functions additional hash functions decrease maximum constant factor people recommend type choice hashing called skewed associative cache cpu caches left hashing hash tables equal size asymmetrically resolving ties putting key left hash table fewer collisions performance choice hashing large hash table size