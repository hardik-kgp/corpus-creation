array data structure computer science array data structure simply array data structure consisting collection elements values variables identified array key array stored position element computed tuple mathematical formula simplest type data structure linear array called dimensional array array bit bytes integer variables indices stored memory addresses element address memory address element array called address foundation address base address mathematical concept matrix represented dimensional grid dimensional arrays called matrices cases term vector computing refer array tuples vectors mathematically correct equivalent tables implemented form arrays lookup tables word table synonym array arrays oldest data structures program implement data structures lists strings effectively exploit addressing logic computers modern computers external storage devices memory dimensional array indices addresses processors vector processors optimized array operations arrays element indices computed time things feature single iterative statement process arbitrarily elements array reason elements array data structure required size data representation set valid tuples addresses elements element addressing formula fixed array term array array data type kind data type provided high level programming languages consists collection values variables selected indices computed time array types implemented array structures languages implemented hash tables linked lists search trees data structures term description algorithms associative array abstract array theoretical computer science model abstract data type adt intended capture essential properties arrays applications arrays implement mathematical vectors matrices kinds rectangular tables databases small large consist include dimensional arrays elements records arrays implement data structures lists heaps hash tables deques queues stacks strings vlists array based implementations data structures frequently simple space efficient implicit data structures requiring space overhead poor space complexity modified compared tree based data structures compare sorted array search tree large arrays emulate program dynamic memory allocation memory pool allocation historically allocate dynamic memory portably arrays determine partial complete control flow programs compact alternative repetitive multiple statements context control tables conjunction purpose built interpreter control flow altered values contained array array subroutine pointers relative subroutine numbers acted switch statements direct path execution element identifier addressing formulas data objects stored array individual objects selected negative scalar integer indexes called subscripts maps array stored object ways elements array indexed based indexing element array indexed subscript based indexing element array indexed subscript based indexing base array freely chosen programming languages allowing based indexing negative values scalar data types enumerations characters array based indexing design choice influential programming languages including lisp leads simpler implementation subscript refers offset starting position array element offset arrays multiple dimensions uncommon access array multiple indices dimensional array rows columns provide access element nd row th column expression case based indexing indices dimensional array dimensional array dimensional array number indices needed element called dimension dimensionality rank array standard arrays restricted range consecutive integers consecutive values enumerated type address element computed linear formula indices dimensional arrays dimensional array single dimension array type linear array accessing elements involves single subscript represent row column declaration int anarrayname syntax datatype anarrayname sizeofarray array elements int type array element indices inclusive case expressions anarrayname anarrayname elements vector linear addressing element located address fixed base address fixed constant called address increment stride valid element indices constant simply address element array reason programming language specifies array indices programmers element zeroth choose element choice base address array elements indexed base address replaced indices elements numbering start constant address element multidimensional arrays multidimensional array element indices address coefficients row column address increments generally dimensional array address element indices int array rows columns array integer type store elements stored linearly starting row linear continuing row array stored formula requires multiplications additions array fit memory coefficient fixed power multiplication replaced bit shifting coefficients chosen valid tuple maps address distinct element minimum legal address element indices dimensional case element indices changed changing base address dimensional array rows columns indexed replacing renumbered advantage feature languages fortran array indices mathematical tradition languages fortran pascal algol user choose minimum dope vectors addressing formula completely defined dimension base address increments pack parameters record called array descriptor stride vector dope vector size element minimum maximum values allowed included dope vector dope vector complete handle array convenient pass arrays arguments procedures array slicing operations selecting array swapping indices reversing direction indices performed efficiently manipulating dope vector compact layouts coefficients chosen elements occupy contiguous area memory arrays created contiguous elements array slicing operations create contiguous arrays row major order layout adopted statically declared arrays elements row stored consecutive positions elements row lower address elements consecutive row column major order traditionally fortran elements column consecutive memory elements column lower address elements consecutive column arrays indices row major order puts consecutive positions elements tuples differ column major order analogous respect systems processor cache virtual memory scanning array faster successive elements stored consecutive positions memory sparsely scattered algorithms multidimensional arrays scan predictable order programmer sophisticated compiler choose row column major layout array computing product matrices stored row major order column major order resizing static arrays size fixed created elements inserted removed allocating array copying contents array effectively implement dynamic version array dynamic array operation infrequently insertions array require amortized constant time array data structures reallocate storage store count number elements array called count size effectively array dynamic array fixed maximum size capacity pascal strings examples linear formulas complicated linear formulas occasionally compact dimensional triangular array instance addressing formula polynomial degree efficiency store select deterministic worst case constant time arrays linear space number elements hold array element size machine cache size bytes iterating array elements requires minimum ceiling nk cache misses elements occupy contiguous memory locations roughly factor number cache misses needed access elements random memory locations consequence sequential iteration array noticeably faster practice iteration data structures property called locality reference perfect hash trivial hash local array faster achievable constant time libraries provide low level optimized facilities copying ranges memory memcpy contiguous blocks array elements faster achieved individual element access speedup optimized routines varies array element size architecture implementation memory wise arrays compact data structures element overhead array overhead store bounds language dependent happen elements stored array require memory elements stored individual variables array elements stored single word arrays called packed arrays extreme commonly case bit array bit represents single element single octet hold combinations conditions compact form array accesses statically predictable access patterns major source data parallelism comparison data structures dynamic arrays growable arrays arrays add ability insert delete elements adding deleting efficient reserve linear θ additional storage arrays reserve additional storage associative arrays provide mechanism array functionality huge storage overheads values sparse array values indexes billion benefit structure specialized associative arrays integer keys include patricia judy arrays van emde boas trees balanced trees require log time indexed access permit inserting deleting elements log time growable arrays require linear θ time insert delete elements arbitrary position linked lists constant time removal insertion middle linear time indexed access memory typically worse arrays linear iliffe vector alternative multidimensional array structure dimensional array references arrays dimension dimensions alternative structure vector pointers vectors row pointer element row column array accessed double indexing typical notation alternative structure jagged arrays row size general valid range depends values preceding indices saves multiplication column address increment replacing bit shift vector row pointers extra memory access fetching row address worthwhile architectures dimension dimension array number indices needed select element array function set combinations dimension space domain discrete subset dimensional array list data dimensional array rectangle data dimensional array block data confused dimension set matrices domain number elements array array rows columns dimensional matrices form dimensional space dimensional vector represented dimensional array size