tree tree ary tree variable large number children node tree consists root internal nodes leaves root leaf node children tree viewed tree node keys key pairs additional level linked leaves primary tree storing data efficient retrieval block oriented storage context filesystems binary search trees trees high fanout number pointers child nodes node typically order reduces number operations required element tree reiserfs nss xfs jfs bfs filesystems type tree metadata indexing bfs trees storing directories ntfs trees directory security metadata indexing ext4 extent trees modified tree data structure file extent indexing relational database management systems ibm db2 informix microsoft sql server oracle sybase ase sqlite support type tree table indices key database management systems couchdb tokyo cabinet support type tree data access overview order branching factor tree measures capacity nodes number children nodes internal nodes tree actual number children node referred constrained internal nodes displaystyle lceil rceil leq leq root exception allowed children order tree internal node root children root leaf nodes children constrained number keys displaystyle lceil rceil displaystyle situation tree node leaf node root single leaf case node permitted key displaystyle algorithms search root tree represents range values tree internal node subinterval tree starting root leaf node figure internal pointer follow internal tree node displaystyle displaystyle children represents interval select node searching key values node function search return tree_search root function tree_search node node leaf return node switch case k_0 return tree_search p_0 case k_i k_ return tree_search p_ case k_d return tree_search p_ pseudocode assumes duplicates allowed prefix key compression increase fan direct searches leaf level efficiently entries direct traffic compress insertion perform search determine bucket record bucket displaystyle entries insertion add record inserting record split bucket original node items node items key parent insert node parent repeat parent split root splits treat parent split outline trees grow root leaves bulk loading collection data records create tree key field approach insert record tree expensive entry requires start root leaf efficient alternative bulk loading step sort data entries search key ascending order allocate serve root insert pointer entries root split root create root inserting entries leaf level entries indexed note leaf level fills split action turn split step closer root splits occur path root leaf level characteristics order tree levels maximum number records stored max displaystyle n_ max minimum number records stored min displaystyle n_ min left lceil tfrac rceil left lceil tfrac rceil minimum number keys displaystyle n_ mathrm kmin left lceil tfrac rceil maximum number keys displaystyle n_ mathrm kmax space required store tree displaystyle inserting record requires log displaystyle log _ operations finding record requires log displaystyle log _ operations removing located record requires log displaystyle log _ operations performing range query elements occurring range requires log displaystyle log _ operations implementation leaves blocks tree linked linked list range queries ordered iteration blocks simpler efficient aforementioned upper bound achieved addition increase space consumption maintenance tree illustrates advantages tree tree tree keys leaves ordered linked list constructed tree database data typically resides disk tree provide efficient structure housing data structure alternative storage block size bytes keys stored size arguably efficient tree displaystyle tfrac theoretically unnecessary practice extra space blocks linked list references leaf blocks block larger storage actual block represents performance decrease erring caution preferable nodes tree organized arrays elements considerable time insert delete element half array shifted average overcome problem elements inside node organized binary tree tree array trees data stored ram case reasonable choice block size size processor cache space efficiency trees improved compression techniques possibility delta encoding compress keys stored block internal blocks space saving achieved compressing keys pointers string keys space saved technique entry internal block key block displaystyle storing key store shortest prefix key block displaystyle strictly greater lexicographic order key block simple compress pointers suppose consecutive blocks displaystyle stored contiguously suffice store pointer block count consecutive blocks compression techniques drawbacks block decompressed extract single element technique overcome problem divide block blocks compress separately case searching inserting element decompress compress block block drawback compression techniques number stored elements vary considerably block depending elements compressed inside block