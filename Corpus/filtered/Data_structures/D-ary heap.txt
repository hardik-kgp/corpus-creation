ary heap ary heap heap priority queue data structure generalization binary heap nodes children  binary heap  heap ternary heap  heap tarjan jensen ary heaps invented donald johnson  data structure decrease priority operations performed binary heaps expense slower delete minimum operations tradeoff leads running times algorithms dijkstra algorithm decrease priority operations common delete min operations additionally ary heaps memory cache behavior binary heaps allowing practice theoretically larger worst case running time binary heaps ary heaps place data structure additional storage needed store array items heap data structure ary heap consists array items priority items viewed nodes complete ary tree listed breadth traversal order item position  array based numbering forms root tree items positions  children  items grandchildren parent item position  item position  children items positions  heap property min heap item priority large parent max heap item priority larger parent minimum priority item min heap maximum priority item max heap position  array remove item priority queue item array moved place length array decreased item children satisfy heap property item swapped children smallest priority min heap largest priority max heap moving downward tree array eventually heap property satisfied downward swapping procedure increase priority item min heap decrease priority item max heap insert item heap item appended array heap property violated swapped parent moving upward tree earlier array eventually heap property satisfied upward swapping procedure decrease priority item min heap increase priority item max heap create heap array items loop items reverse order starting item position  item position  applying downward swapping procedure item analysis ary heap items upward swapping procedure downward swapping procedure perform log log log swaps upward swapping procedure swap involves single comparison item parent takes constant time time insert item heap decrease priority item min heap increase priority item max heap log log downward swapping procedure swap involves comparisons takes time takes  comparisons determine minimum maximum children comparison parent determine swap needed time delete root item increase priority item min heap decrease priority item max heap log log creating ary heap set items items positions eventually hold leaves ary tree downward swapping performed items  items leaves swapped cost time child swap   nodes swapped downward times incurring additional cost swap cost counted term total time create heap  log  displaystyle sum _  log _ left frac  exact worst case number comparisons construction ary heap equal   mod  displaystyle frac  s_  bmod left e_ left left lfloor frac rfloor  sum digits standard base representation exponent factorization reduces     displaystyle n s_  e_          displaystyle frac   s_  e_  e_    space usage ary heap insert delete min operations linear extra storage array list items heap priorities existing items supported maintain pointers items positions heap linear storage applications operating graph edges vertices dijkstra algorithm shortest paths prim algorithm minimum spanning trees min heap delete min operations decrease priority operations ary heap total times types operations balanced leading total time log algorithm improvement log running time binary heap versions algorithms number edges larger number vertices alternative priority queue data structure fibonacci heap theoretical running time log practice ary heaps generally fast faster fibonacci heaps application  heaps perform binary heaps practice delete min operations additionally ary heap typically runs faster binary heap heap sizes exceed size computer cache memory binary heap typically requires cache misses virtual memory faults ary heap time extra work incurred additional comparisons ary heap compared binary heap