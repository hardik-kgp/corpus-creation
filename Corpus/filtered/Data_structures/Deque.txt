deque computer science double ended queue abbreviated deque pronounced deck abstract data type generalizes queue elements removed head tail called head tail linked list properly refers specific data structure implementation deque naming conventions deque written dequeue generally deprecated technical literature technical writing dequeue verb meaning remove queue libraries writers aho hopcroft ullman textbook data structures algorithms spell dequeue john mitchell author concepts programming languages terminology distinctions types differs queue abstract data type list fifo elements removed general data class types input restricted deque deletion ends insertion output restricted deque insertion ends deletion basic common list types computing queues stacks considered specializations deques implemented deques operations basic operations deque enqueue dequeue generally implemented peek operations return dequeuing names vary languages major implementations include implementations common ways efficiently implement deque modified dynamic array doubly linked list dynamic array approach variant dynamic array grow ends called array deques array deques properties dynamic array constant time random access good locality reference inefficient insertion removal middle addition amortized constant time insertion removal ends common implementations include storing deque contents circular buffer resizing buffer decreases frequency resizings allocating deque contents center underlying array resizing underlying array reached approach require frequent resizings waste space elements inserted storing contents multiple smaller arrays allocating additional arrays needed indexing implemented keeping dynamic array pointers smaller arrays purely functional implementation double ended queues implemented purely functional data structure versions implementation exist called real time deque presented queue persistent operations displaystyle worst case time requires lazy lists memoization lazy lists memoization presented sections amortized time displaystyle persistency worst time complexity operation displaystyle displaystyle number elements double ended queue recall list denotes length nil represents list cons represents list head tail functions drop return list elements elements return list double ended queue represented sextuple lenf lenr linked list queue length lenf linked list represents reverse rear queue length lenr assured intuitively rear list element finally tails schedule moment lazy operations forced note double ended queue elements list elements rear list inequality invariant remains satisfied insertions deletions operations happen rebalancing intuitively inserting element double ended queue lenf lenr leads double ended queue lenf cons drop lenr drop head tail double ended queue lenf cons lenr lenf drop lenr drop head tail lenf nil nil lenr cons nil drop nil nil nil nil function insert element rear drop element double ended queue function deal double ended queue insertion application tail invariant satisfied case required rebalance double ended queue order avoid operation costs algorithm laziness memoization force rebalancing partly operations rebalancing order create scheduling auxiliary lazy functions required function rotaterev returns list list list required function function defined induction rotaterev nil reverse concatenation operation rotaterev cons cons rotaterev drop reverse rotaterev nil returns list list reversed function rotatedrop returns element reversed required defined rotatedrop rotaterev nil rotatedrop rotaterev drop nil rotatedrop cons cons rotatedrop drop balancing function defined note lazy implementation persistent implementation queue amortized time case lists removed representation double ended queue language support ada containers generic packages ada containers vectors ada containers doubly_linked_lists dynamic array linked list implementations standard template library class templates std deque std list multiple array linked list implementations collections framework deque interface functionality insertion removal ends implemented classes arraydeque linkedlist providing dynamic array linked list implementations arraydeque contrary support random access array prototype perl arrays native support removing shift pop adding unshift push elements ends python introduced collections module support deque objects implemented doubly linked list fixed length subarrays spl extension spldoublylinkedlist class implement deque datastructures deque structure array functions array_shift unshift pop push ghc data sequence module implements efficient functional deque structure haskell implementation finger trees annotated sizes fast possibilities implement purely functional persistent double queues heavily lazy evaluation kaplan tarjan implement optimal confluently persistent catenable deques implementation strictly purely functional sense lazy evaluation okasaki simplified data structure lazy evaluation bootstrapped data structure degrading performance bounds worst case amortized kaplan okasaki tarjan produced simpler bootstrapped amortized version implemented lazy evaluation efficiently mutation broader restricted fashion mihaesau tarjan created simpler highly complex strictly purely functional implementation catenable deques simpler implementation strictly purely functional catenable deques optimal worst case bounds rust std collections includes vecdeque implements double ended queue growable ring buffer complexity doubly linked list implementation assuming allocation deallocation overhead time complexity deque operations additionally time complexity insertion deletion middle iterator time complexity random access growing array amortized time complexity deque operations additionally time complexity random access time complexity insertion deletion middle applications deque steal job scheduling algorithm algorithm implements task scheduling processors separate deque threads executed maintained processor execute thread processor element deque remove element deque operation current thread forks deque insert element thread executed processors finishes execution threads deque steal thread processor element deque processor remove element executes steal job scheduling algorithm intel threading building blocks tbb library parallel programming