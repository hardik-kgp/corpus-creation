disjoint set data structure computer science disjoint set data structure called union data structure merge set data structure tracks set elements partitioned number disjoint overlapping subsets constant time operations bounded inverse ackermann function add sets merge existing sets determine elements set addition applications disjoint sets play key role kruskal algorithm finding minimum spanning tree graph representation disjoint set forest consists number elements stores parent pointer efficient algorithms size rank parent pointers elements arranged form trees representing set element parent pointer points element element root tree representative member set set consist single element element parent element set identified chain parents upwards representative element parent reached root tree forests represented compactly memory arrays parents array operations makeset makeset operation set creating element unique rank  parent pointer parent pointer element representative member set makeset operation  displaystyle  time complexity initializing sets displaystyle time complexity pseudocode function makeset add disjoint set tree parent rank  size  chain parent pointers tree reaches root element parent root element representative member set belongs path compression path compression flattens structure tree making node point root valid element visited root set flatter tree speeds future operations elements referencing tarjan van leeuwen developed pass algorithms efficient practice retaining worst case complexity path splitting path halving path halving path halving node path point grandparent path splitting path splitting node path point grandparent pseudocode path compression implemented iteration finding root updating parents function root root parent root root root parent parent root parent parent parent root parent return root path splitting represented multiple assignment hand evaluated function parent parent parent parent return function parent prev parent prev parent parent return union union determine roots trees belong roots distinct trees combined attaching root root naively making child height trees grow displaystyle prevent union rank union size rank union rank attaches shorter tree root taller tree tree taller originals equal height case tree taller node implement union rank element rank initially set element rank sets unioned rank set rank larger sets unioned ranks set rank larger ranks height depth path compression change trees heights time size union size attaches tree fewer elements root tree elements pseudocode time complexity path compression variant union rank union size height trees grow unchecked displaystyle implying union operations displaystyle time path compression worst case running time θ  log  displaystyle theta cdot  log _  sequence makeset operations  displaystyle  union operations operations union rank running time log  displaystyle log _  tight bound operations sort makeset operations path compression splitting halving union rank size ensures amortized time operation α displaystyle alpha optimal α displaystyle alpha inverse ackermann function function α  displaystyle alpha  written physical universe disjoint set operations place essentially constant time applications disjoint set data structures model partitioning set track connected components undirected graph model determine vertices belong component adding edge result cycle union algorithm high performance implementations unification data structure boost graph library implement incremental connected components functionality key component implementing kruskal algorithm minimum spanning tree graph note implementation disjoint set forests deletion edges path compression rank heuristic sharir agarwal report connections worst case behavior disjoint sets length davenport schinzel sequences combinatorial structure computational geometry