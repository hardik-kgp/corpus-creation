extendible hashing extendible hashing type hash treats hash bit string trie bucket lookup hierarchical nature hashing incremental operation bucket time needed time sensitive applications table growth standard table rehashes extendible hashing ronald fagin practically modern filesystems extendible hashing trees global file zfs spadfs filesystem extendible hashing assume hash function displaystyle returns string bits bits string indices figure directory hash table additionally smallest number item table unique keys displaystyle aligned k_ k_ k_ aligned assume bucket size keys inserted distinguished bit inserted table hashed table distinguish keys bit leftmost bit bucket size table overflow comparing bits key unique location directory size doubled unique location distinguished leftmost bits half table point key compare fagin displaystyle k_ inserted bits bit depth directory maps bucket bucket max size split pointer bucket increase directory size needed key size maps directory global depth key size mapped bucket local depth order distinguish action cases doubling directory bucket creating bucket distributing entries bucket examining initial case extendible hash structure directory entry points bucket local depth equal global depth number directory entries equal global depth initial number buckets equal local depth global depth local depth initial directory pointer bucket action cases bucket local depth equal global depth pointer bucket directory pointers map bucket directory doubled local depth global depth exists pointer directory bucket bucket split key points bucket bucket local depth directory global depth keys hashed bucket bit prefix bucket contents split keys bits length general local depth global depth incremented bucket split number bits entry key redistribute entries bucket buckets displaystyle k_ bits key points bucket displaystyle k_ displaystyle k_ displaystyle k_ key problem displaystyle k_ remained bucket bucket case buckets greater size newly split buckets exceedingly overflow entries rehashed bucket emphasize role depth pursued logically bucket split check local depth global depth directory split order hold keys sufficient bits bucket split local depth global depth directory double increase bit keys global depth incremented directory split entry displaystyle k_ rekeyed global depth bits ends local depth incremented split contents split bucket displaystyle k_ keyed bits ends k4 retried ends spare slot displaystyle k_ displaystyle k_ bits points bucket displaystyle k_ local depth global depth directory doubling split bucket contents displaystyle k_ displaystyle k_ retried global depth bitmask displaystyle k_ ends entry displaystyle k_ retried displaystyle k_ bitmasked global depth bit count points bucket displaystyle k_ bucket implementation extendible hashing algorithm python disc block memory association caching consistency issues removed note problem exists depth exceeds bit size integer doubling directory splitting bucket entries rehashed buckets code bits efficient expand table entire directory copied block ramakrishnan gehrke python