linear hashing linear hashing lh dynamic data structure implements hash table grows shrinks bucket time invented witold litwin  analyzed baeza yates soza pollman number schemes dynamic hashing larson linear hashing partial extensions linear hashing priority splitting linear hashing partial expansions priority splitting recursive linear hashing file structure dynamic hashing data structure adapts size file expensive periodic file reorganization avoided linear hashing file expends splitting pre determined bucket contracts merging predetermined buckets trigger reconstruction depends flavor scheme overflow bucket load factor number records number buckets moving predetermined range linear hashing scalable distributed data structure lh lh bucket resides server lh expanded provide data availability presence failed buckets key based operations inserts deletes updates reads lh lh maximum constant time independent number buckets records algorithm details records lh lh consists key content basically attributes record stored buckets ellis implementation bucket linked list records file key based crud operations create insert read update delete scan operations scans records database select operation key attribute records stored buckets numbering starts  hash functions order access record key displaystyle family hash functions called collectively dynamic hash function applied key displaystyle time hash functions displaystyle h_  displaystyle h_  typical division modulo operation original number buckets displaystyle family hash functions mod  displaystyle h_ mapsto pmod cdot  file expansion file grows insertions expands gracefully splitting bucket buckets sequence buckets split predetermined fundamental difference schemes fagin extendible hashing buckets hash function displaystyle h_ replaces  displaystyle h_  number bucket split file state called split pointer displaystyle split control split performed bucket overflows uncontrolled split alternatively file monitor load factor performs split load factor exceeds threshold controlled splitting addressing addressing based file state consisting split pointer displaystyle level displaystyle level displaystyle hash functions displaystyle h_  displaystyle h_  lh algorithm hashing key displaystyle displaystyle h_  displaystyle h_  splitting bucket split split pointer level updated  displaystyle   displaystyle geq times    displaystyle   file contraction controlled splitting load factor sinks threshold merge operation triggered merge operation undoes split resetting file state file state calculation file state consists split pointer displaystyle level displaystyle original file started  displaystyle  buckets number buckets displaystyle file state  displaystyle  lh main contribution lh client lh file bucket record resides client file state clients fact store version file state initially knowledge bucket bucket  based file state client calculates address key sends request bucket bucket request checked record bucket forwarded stable split merge request processed forwards forward final bucket sends image adjustment message client state closer state distributed file forwards rare active clients number reduced additional exchange servers clients adoption language systems griswold townsend discussed adoption linear hashing icon language discussed implementation alternatives dynamic array algorithm linear hashing presented performance comparisons list icon benchmark applications adoption database systems linear hashing berkeley database bdb turn software systems openldap implementation derived cacm article published usenet  esmond pitt