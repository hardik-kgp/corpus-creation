lookup table computer science lookup table array replaces runtime computation simpler array indexing operation savings terms processing time retrieving memory faster undergoing expensive computation input output operation tables precalculated stored static program storage calculated pre fetched program initialization phase memoization stored hardware application specific platforms lookup tables extensively validate input values matching list valid invalid items array programming languages include pointer functions offsets labels process matching input fpgas extensive reconfigurable hardware implemented lookup tables provide programmable hardware functionality examples simple lookup array associative array linked list unsorted list linear search brute force search element checked equality turn result search slowest search method frequently occurring values occur early list dimensional array linked list lookup determine match input data binary search array associative array sorted list divide conquer algorithm binary search involves element determining half table match repeating success failure list sorted good performance list lengthy trivial hash function trivial hash function lookup unsigned raw data directly dimensional table extract result small ranges fastest lookup exceeding binary search speed branches executing constant time counting bits series bytes discrete problem expensive solve computers counting number bits set binary number called population function number binary bits set binary simple code designed count bits int simple algorithm hundreds cycles modern architecture branches loop branching slow ameliorated loop unrolling compiler optimizations simple faster algorithmic solution trivial hash function table lookup simply construct static table bits_set entries number bits set byte x00 x01 x02 table number byte integer trivial hash function lookup byte turn sum requires branches indexed memory accesses considerably faster earlier code source improved easily avoiding ing shifting recasting byte unsigned char array preferably coded single statement function note simple algorithm slow original code faster cache modern processors large lookup tables fit caches slower access memory addition requires computing addresses table perform lookups needed lookup tables image processing data analysis applications image processing lookup table lut transform input data desirable output format grayscale picture planet saturn transformed color image emphasize differences rings classic reducing time computations lookup tables result trigonometry calculation sine calculating trigonometric functions slow computing application application finish sooner precalculates sine number values number degrees table defined static variables compile time reducing repeated time costs program requires sine lookup table retrieve closest sine memory address step interpolating sine desired calculating mathematical formula lookup tables mathematics processors computer systems error lookup table responsible intel infamous floating point divide bug functions single variable sine cosine implemented simple array functions involving variables require multidimensional array indexing techniques case employ dimensional array power replace function calculate limited range values functions result implemented lookup tables arrays structures mentioned intermediate solutions tables combination small computation interpolation pre calculation combined interpolation produce higher accuracy values fall precomputed values technique requires time performed greatly enhance accuracy applications require higher accuracy depending values precomputed pre computation interpolation shrink lookup table size maintaining accuracy image processing lookup tables called lut dlut output range values common lut called colormap palette determine colors intensity values image displayed computed tomography windowing refers concept determining display intensity measured radiation effective employing lookup table result severe penalty computation lut replaces simple memory retrieval time complexity memory requirements increase application operation time complexity relative required straight formula computation possibility polluting cache problem table accesses large tables cache phenomenon increasingly issue processors outpace memory issue appears rematerialization compiler optimization environments programming language table lookups expensive mandatory bounds checking involving additional comparison branch lookup fundamental limitations construct lookup table required operation memory construct lookup table larger space table construct disk based lookup tables expense lookup time time required compute table values instance takes prohibitively long time lookup table inappropriate solution stated tables statically defined cases computing sines computers perform basic arithmetic operations directly calculate sine cordic algorithm complex formula taylor series compute sine high degree precision sin displaystyle operatorname sin approx frac frac frac close expensive compute slow processors applications traditional computer graphics compute thousands sine values common solution initially compute sine evenly distributed values sine choose sine closest close correct sine continuous function bounded rate change real array sine_table sine_table sine function lookup_sine return sine_table round table requires bit space ieee double precision floating point numbers bytes required fewer samples precision worsen good solution linear interpolation draws points table locates answer quick compute accurate smooth functions sine function linear interpolation function lookup_sine floor y1 sine_table sine_table return y1 y1 linear interpolation interpolated function continuous general continuous derivatives smoother interpolation table lookup continuous continuous derivative cubic hermite spline solution quarter space takes bit longer compute account relationships sine cosine symmetry rules case lookup table calculated sine function quadrant sin assign variable angle wrapped quadrant wrap angle quadrants needed values return correct quadrant straight return quadrant read fourth negatives cosine return angle shifted tangent divide sine cosine divide handling needed depending implementation function init_sine sine_table sine function lookup_sine wrap mod return sine_table return sine_table return sine_table return sine_table function lookup_cosine return lookup_sine function lookup_tan return lookup_sine lookup_cosine interpolation size lookup table reduced nonuniform sampling function close straight sample points sample points approximation close real curve interpolation usages lookup tables caches storage caches including disk caches files processor caches code data work lookup table table built fast memory stored slower external memory maintains pieces data range bits composing external memory disk address notably lowest bits external address piece tag remaining bits address bits match memory address read write piece cached address piece maintains data address single fast lookup performed read tag lookup table lowest bits desired external storage address determine memory address hit cache hit access external memory needed write operations cached updated asynchronously slower memory time position cache replaced cache address hardware luts digital logic lookup table implemented multiplexer select lines driven address signal inputs values elements contained array values hard wired asic purpose specific function provided latches configurable values bit lut encode input boolean function storing truth table function lut efficient encoding boolean logic functions luts bits input fact key component modern field programmable gate arrays fpgas provide reconfigurable hardware logic capabilities