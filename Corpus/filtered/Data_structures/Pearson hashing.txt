pearson hashing pearson hashing hash function designed fast execution processors bit registers input consisting number bytes produces output single byte dependent byte input implementation requires instructions byte lookup table permutation values hash function cbc mac bit substitution cipher implemented substitution table bit cipher negligible cryptographic security pearson hash function cryptographically strong implementing hash tables data integrity check code purposes offers benefits extremely simple executes resource limited processors simple class inputs collisions identical outputs small privileged set inputs reserved compiler permutation table adjusted inputs yield distinct hash values producing called perfect hash function input strings differing character collide applying algorithm strings abc aec produce drawbacks compared hashing algorithms designed bit processors suggested byte lookup table prohibitively large small microcontroller program memory size order hundreds bytes workaround simple permutation function table stored program memory simple function partly defeats usability hash function anagrams result hash complex function hand affect speed negatively function table extending block size functions naturally bijective table variants algorithm pseudocode computes hash message permutation table loop xor loop return hash variable initialized differently length data modulo choice python implementation python implementation generate pseudo bit output table parameter requires pseudo randomly shuffled list range easily generated python builtin range function random shuffle permutate implementation generate bit hex chars hash scheme straightforward implementation algorithm simple extension generate hash longer bits extension comprises outer loop statement lines include variable array string chunk data pearson original algorithm produces bit byte integer algorithm extremely easy generate hash length desired pearson change bit string algorithm create completely hash code completion loop byte string effectively incremented modifying string time simple change byte data pearson hash generated function builds hex character hash concatenating series bit pearson hashes collected producing function generates pearson algorithm generate hashes desired length concatenating sequence bit hash values computed simply modifying string time hash function computed core logic generate bit bit hashes