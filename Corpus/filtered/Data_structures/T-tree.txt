tree computer science tree type binary tree data structure main memory databases datablitz extremedb mysql cluster oracle timesten mobilelite tree balanced tree data structure optimized cases actual data fully memory tree structure optimized storage block oriented secondary storage devices hard disks trees seek gain performance benefits memory tree structures avl trees avoiding large storage space overhead common trees copies indexed data fields tree nodes advantage fact actual data main memory pointers actual data fields tree refers shape node data structures original paper type performance trees main memory databases perform trees modern hardware main reason traditional assumption memory references uniform cost longer valid current speed gap cache access main memory access node structures tree node consists pointers parent node left child node ordered array data pointers extra control data nodes subtrees called internal nodes nodes subtrees called leaf nodes nodes subtree named half leaf nodes node called bounding node node current minimum maximum inclusively internal node leaf half leaf nodes exist predecessor smallest data called greatest lower bound successor largest data called upper bound leaf half leaf nodes number data elements maximum size data array internal nodes occupancy predefined minimum maximum numbers elements algorithms search search starts root node current node bounding node search search data array search fails data array search minimum current node continue search left subtree search fails left subtree search greater maximum current node continue search subtree search fails subtree insertion search bounding node node exists check space data array insert finish space remove minimum node data array insert proceed node holding greatest lower bound node inserted removed minimum fits add maximum node create subnode node bounding node insert node searched fits case minimum maximum fit create left subtree node tree rebalanced deletion search bounding node deleted bounding node finish bounding node finish delete node data array distinguish node type internal node node data array minimum number elements greatest lower bound node data proceed steps half leaf leaf node removed leaf node element data array delete node rebalance tree needed half leaf node node data array merged leaf data array overflow remove leaf node rebalance tree needed rotation balancing tree implemented underlying balancing binary search tree lehman carey article describes tree balanced avl tree balance node child trees differ height levels happen insertion deletion node insertion deletion tree scanned leaf root imbalance tree rotation pair rotations performed guaranteed balance tree rotation internal node fewer minimum number items items node child ren moved internal node