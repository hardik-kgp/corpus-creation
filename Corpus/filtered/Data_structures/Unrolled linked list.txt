unrolled linked list computer programming unrolled linked list variation linked list stores multiple elements node dramatically increase cache performance decreasing memory overhead storing list metadata references tree overview typical unrolled linked list node record node node reference node list int numelements number elements node maxelements array elements array numelements elements space allocated maxelements elements node holds maximum number elements typically large node fills single cache small multiple position list reference node position elements array include previous pointer unrolled doubly linked list insert element simply node element insert element elements array incrementing numelements array insert node preceding current half elements current node remove element simply node delete elements array decrementing numelements reduces node half elements node half leaves node half remaining elements current node bypass delete performance primary benefits unrolled linked lists decreased storage requirements nodes half random inserts deletes average node quarters inserts deletes nodes assume maxelements maximum number elements elements array overhead node references element counts size single element space elements varies displaystyle  displaystyle v comparison ordinary linked lists require displaystyle space smaller arrays compact data structures require displaystyle space unrolled linked lists effectively spread overhead number elements list space gain overhead large maxelements large elements small elements small bits overhead  times larger data machines popular memory allocators small metadata node allocated increasing effective overhead unrolled linked lists attractive unrolled linked list nodes store count field retrieving element unrolled linked list indexing  cache misses factor ordinary linked lists additionally size element small compared cache size list traversed order fewer cache misses ordinary linked lists case operation time increases linearly size list