zobrist hashing zobrist hashing referred zobrist keys zobrist signatures hash function construction computer programs play abstract board games chess implement transposition tables special kind hash table indexed board position avoid analyzing position zobrist hashing named inventor albert lindsey zobrist applied method recognizing substitutional alloy configurations simulations crystalline materials calculation hash zobrist hashing starts randomly generating bitstrings element board game combination piece position game chess pieces board positions king castle pawn capture passant treated separately colors board configuration broken independent piece position components mapped random bitstrings generated earlier final zobrist hash computed combining bitstrings bitwise xor pseudocode game chess constant indices white_pawn white_rook black_king function init_zobrist table random numbers bitstrings table array size loop board represented linear array loop pieces table random_bitstring function hash board loop board positions board piece board listed constant indices xor table return hash bitstrings long board positions hash values longer bitstrings require proportionally computer resources manipulate commonly bitstring key length bits game engines store hash values transposition table omitting position reduce memory usage assuming hash collisions occur greatly influence table zobrist hashing instance tabulation hashing result wise independent hash family universal chess squares time game pieces black white square states time generate random bitstrings position obtains zobrist hash finding pieces squares combining relevant bitstrings updating hash computing hash entire board time pseudocode hash board updated simply xoring bitstring positions changed xoring bitstrings positions instance pawn chessboard square replaced rook square position produced xoring existing hash bitstrings pawn square xoring pawn square rook square xoring rook square rook source square xoring rook source square source square xoring source square zobrist hashing efficient traversing game tree computer technique superko detection wider usage method recognize substitutional alloy configurations monte carlo simulations order prevent wasting computational effort states calculated