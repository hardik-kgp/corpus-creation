assignment problem assignment problem fundamental combinatorial optimization problem consists finding weighted bipartite graph matching size sum weights edges minimum common variant consists finding maximum weight matching specialization maximum weight matching problem input graph bipartite general form problem problem instance number agents number tasks agent assigned perform task incurring cost vary depending agent task assignment required perform tasks assigning agent task task agent total cost assignment minimized numbers agents tasks equal problem called balanced assignment called unbalanced assignment total cost assignment tasks equal sum costs agent sum costs task thing case problem called linear assignment commonly speaking assignment problem additional qualification linear balanced assignment problem meant examples suppose taxi firm taxis agents customers tasks wishing picked firm prides speedy pickups taxi cost picking customer depend time taxi reach pickup point balanced assignment problem solution whichever combination taxis customers total cost suppose taxis customers unbalanced assignment problem solve invent fourth dummy task called sitting cost taxi assigned reduces problem balanced assignment problem solved usual solution problem adjustments order tasks agents tasks multiple agents assigned instance group customers fit taxi maximizing profit minimizing cost formal definition formal definition assignment problem linear assignment problem sets equal size weight function bijection cost function displaystyle sum _ minimized weight function viewed square real valued matrix cost function written displaystyle sum _ c_ problem linear cost function optimized constraints linear terms algorithms naive solution assignment problem check assignments calculate cost inefficient agents tasks factorial assignments fortunately algorithms solving problem time polynomial assignment problem special case transportation problem special case minimum cost flow problem turn special case linear program solve problems simplex algorithm specialization efficient algorithms designed advantage special structure balanced assignment balanced assignment problem parts bipartite graph number vertices denoted polynomial time algorithms balanced assignment hungarian algorithm global algorithm based improving matching augmenting paths alternating paths unmatched vertices time complexity fibonacci heaps log displaystyle log fastest time polynomial algorithm problem weights integers time improved log log displaystyle log log algorithm weakly polynomial weights integers weights integer problem solved log displaystyle sqrt log cdot weakly polynomial time method called weight scaling addition global methods local methods based finding local updates augmenting paths methods worse asymptotic runtime guarantees work practice algorithms called auction algorithms push relabel algorithms preflow push algorithms algorithms equivalent local methods assume graph admits perfect matching case methods forever simple technical solve problem extend input graph complete bipartite graph adding artificial edges large weights weights exceed weights existing matchings prevent appearance artificial edges solution mulmuley vazirani vazirani problem minimum weight perfect matching converted finding minors adjacency matrix graph isolation lemma minimum weight perfect matching graph probability Â½ graph vertices requires log displaystyle log time unbalanced assignment unbalanced assignment problem larger bipartite graph vertices smaller vertices constant maximum cardinality matching graph goal minimum cost matching size common case case graph admits sided perfect matching matching size unbalanced assignment reduced balanced assignment naive reduction add displaystyle vertices smaller connect larger edges cost requires displaystyle edges efficient reduction called doubling technique graph built copies original graph forward copy gf backward copy gb backward copy flipped vertices copies add kinds linking edges large large vertex larger gf add cost edge vertex gb small small original graph sided perfect matching vertex smaller gf add high cost edge vertex gb displaystyle edges required graph perfect matching size displaystyle minimum cost perfect matching graph consist minimum cost maximum cardinality matchings gf gb main problem doubling technique speed gain displaystyle reduction unbalanced assignment problem solved directly generalizing existing algorithms balanced assignment hungarian algorithm generalized solve problem log displaystyle log polynomial time runtime log displaystyle log weights integers thorup method runtime log log displaystyle log log solution linear programming assignment problem solved presenting linear program convenience maximization problem edge weight displaystyle w_ edge variable displaystyle x_ variable edge contained matching set domain constraints displaystyle leq x_ leq text displaystyle x_ mathbb text total weight matching displaystyle sum _ times w_ x_ goal maximum weight perfect matching guarantee variables represent perfect matching add constraints vertex adjacent edge matching displaystyle sum _ x_ text sum _ x_ text lp integer linear program solve integrality constraints drop constraint standard methods solving continuous linear programs formulation fractional variable values special case lp optimal solution variables integer values constraint matrix fractional lp totally unimodular satisfies conditions hoffman gale proved directly optimal solution fractional lp total weight number integral variables fractional variable displaystyle x_ i1 j2 sum variables adjacent j2 integer variable adjacent fractional displaystyle x_ j2 considerations variable adjacent fractional displaystyle x_ j4 considerations vertex collecting edges fractional values graph finite point cycle loss generality assume cycle ends vertex fractional variable cycle displaystyle x_ i1 j_ m number edges cycle graph bipartite suppose add constant variables cycle remove constant odd variables cycle sum variables vertex remains vertex constraints satisfied small variables remain domain constraints satisfied easy largest maintains domain constraints smallest difference odd variable smallest difference variable fractional variable decreases objective remains increase selecting positive negative contradiction assumption maximal repeating cycle removal process arrive steps solution variables integral references reading brualdi richard combinatorial matrix classes encyclopedia mathematics applications cambridge cambridge university press isbn zbl burkard rainer dell amico martello assignment problems revised reprint siam isbn bertsekas dimitri network optimization continuous discrete models athena scientific isbn