breadth search breadth search bfs algorithm traversing searching tree graph data structures starts tree root arbitrary node graph referred search key explores neighbor nodes depth prior moving nodes depth level opposite strategy depth search explores node branch forced backtrack expand nodes bfs application finding connected components graphs invented  konrad zuse rejected thesis plankalkül programming language published  reinvented  edward moore shortest path maze developed lee wire routing algorithm published  pseudocode input graph graph starting vertex root graph output goal state parent links trace shortest path root  procedure bfs start_v  queue  label start_v discovered  enqueue start_v   dequeue  goal  return  edges adjacentedges  labeled discovered  label discovered  parent  enqueue details recursive implementation recursive implementation depth search differs ways queue stack checks vertex discovered enqueueing vertex delaying check vertex dequeued queue queue frontier algorithm searching nodes labelled discovered storing set attribute node depending implementation note word node interchangeable word vertex parent attribute node accessing nodes shortest path backtracking destination node starting node bfs predecessors nodes set breadth search produces called breadth tree breadth tree breadth tree running bfs german cities starting frankfurt analysis time space complexity time complexity expressed displaystyle vertex edge explored worst case displaystyle number vertices displaystyle number edges graph note displaystyle vary  displaystyle   displaystyle  depending sparse input graph number vertices graph ahead time additional data structures determine vertices queue space complexity expressed displaystyle displaystyle cardinality set vertices addition space required graph vary depending graph representation implementation algorithm working graphs large store explicitly infinite practical complexity breadth search terms nodes distance start node measured number edge traversals bfs takes  time memory branching factor graph average degree completeness analysis algorithms input breadth search assumed finite graph represented explicitly adjacency list representation application graph traversal methods artificial intelligence input implicit representation infinite graph context search method complete guaranteed goal state exists breadth search complete depth search applied infinite graphs represented implicitly breadth search eventually goal state depth search lost parts graph goal state return bfs ordering enumeration vertices graph bfs ordering output application bfs graph displaystyle graph displaystyle vertices recall displaystyle set neighbors displaystyle σ  displaystyle sigma v_  dots v_ list distinct elements displaystyle  displaystyle setminus v_  dots v_ ν σ displaystyle nu _ sigma displaystyle displaystyle v_ neighbor displaystyle displaystyle exists displaystyle infty σ  displaystyle sigma v_  dots v_ enumeration vertices displaystyle enumeration σ displaystyle sigma bfs ordering source  displaystyle v_   displaystyle  leq displaystyle v_ vertex   displaystyle setminus v_  dots v_  ν   displaystyle nu _ v_  dots v_  minimal equivalently σ displaystyle sigma bfs ordering  displaystyle  leq leq displaystyle v_ v_ setminus v_ exists neighbor displaystyle v_ displaystyle v_ displaystyle applications breadth search solve problems graph theory copying garbage collection cheney algorithm finding shortest path nodes path length measured number edges advantage depth search reverse cuthill mckee mesh numbering ford fulkerson method computing maximum flow flow network serialization deserialization binary tree serialization sorted order tree constructed efficient manner construction failure function aho corasick pattern matcher testing bipartiteness graph