force directed graph drawing force directed graph drawing algorithms class algorithms drawing graphs aesthetically pleasing purpose position nodes graph dimensional dimensional space edges equal length crossing edges assigning forces set edges set nodes based relative positions forces simulate motion edges nodes minimize energy graph drawing difficult problem force directed algorithms physical simulations require special knowledge graph theory planarity forces force directed graph drawing algorithms assign forces set edges set nodes graph drawing typically spring attractive forces based hooke law attract pairs endpoints graph edges simultaneously repulsive forces electrically charged particles based coulomb law separate pairs nodes equilibrium states forces edges tend uniform length spring forces nodes connected edge tend drawn electrical repulsion edge attraction vertex repulsion forces defined functions based physical behavior springs particles instance force directed systems springs attractive force logarithmic linear alternative model considers spring force pair nodes displaystyle ideal length Î´ displaystyle delta _ spring proportional graph theoretic distance nodes separate repulsive force minimizing difference squared difference euclidean ideal distances nodes equivalent metric multidimensional scaling problem force directed graph involve forces mechanical springs electrical repulsion force analogous gravity pull vertices fixed point drawing space pull connected components disconnected graph tend fly repulsive forces draw nodes greater centrality central positions drawing affect vertex spacing single component analogues magnetic fields directed graphs repulsive forces edges nodes order avoid overlap overlap final drawing drawings curved edges circular arcs spline curves forces control points curves instance improve angular resolution methods forces nodes edges graph defined behavior entire graph sources simulated physical simulation forces applied nodes pulling closer pushing repeated iteratively mechanical equilibrium state relative positions change iteration positions nodes equilibrium generate drawing graph forces defined springs ideal length proportional graph theoretic distance stress majorization behaved monotonically convergent mathematically elegant minimise differences good layout graph employ mechanisms search directly energy minima conjunction physical simulation mechanisms examples general global optimization methods include simulated annealing algorithms advantages advantages force directed algorithms good quality graphs medium size   vertices good based criteria uniform edge length uniform vertex distribution showing symmetry criterion hard achieve type algorithm flexibility force directed algorithms easily adapted extended fulfill additional aesthetic criteria versatile class graph drawing algorithms examples existing extensions include directed graphs graph drawing cluster graph drawing constrained graph drawing dynamic graph drawing intuitive based physical analogies common objects springs behavior algorithms easy predict understand case types graph drawing algorithms simplicity typical force directed algorithms simple implemented lines code classes graph drawing algorithms orthogonal layouts involved interactivity advantage class algorithm interactive aspect drawing intermediate stages graph user follow graph evolves unfold tangled mess good configuration interactive graph drawing tools user pull nodes equilibrium state watch migrate position preferred choice dynamic online graph drawing systems strong theoretical foundations simple hoc force directed algorithms literature practice easy understand reasoned approaches starting gain traction statisticians solving problems multidimensional scaling mds s physicists long history working body problems extremely mature approaches exist stress majorization approach metric mds applied graph drawing proven converge monotonically monotonic convergence property algorithm iteration decrease stress cost layout guarantees layout eventually reach local minimum damping schedules algorithm guarantee true local minimum reached disadvantages main disadvantages force directed algorithms include high running time typical force directed algorithms general considered running time equivalent  number nodes input graph number iterations estimated iteration pairs nodes visited mutual repulsive forces computed body problem physics repulsive forces local nature graph partitioned neighboring vertices considered common techniques algorithms determining layout large graphs include high dimensional embedding multi layer drawing methods body simulation barnes hut simulation based method fade improve running time log iteration rough guide seconds expect draw   nodes standard  iteration technique   log iteration technique force directed algorithms combined multilevel approach draw graphs millions nodes poor local minima easy force directed algorithms produce graph minimal energy total energy local minimum local minimum cases considerably worse global minimum translates low quality drawing algorithms hill moves vertices final result influenced initial layout cases randomly generated problem poor local minima number vertices graph increases combined application algorithms helpful solve problem kamada kawai algorithm generate reasonable initial layout fruchterman reingold algorithm improve placement neighbouring nodes technique achieve global minimum multilevel approach