greedy coloring study graph coloring problems mathematics computer science greedy coloring sequential coloring coloring vertices graph formed greedy algorithm considers vertices graph sequence assigns vertex color greedy colorings linear time general minimum number colors choices sequence vertices typically produce colorings graph study greedy colorings concerned good ordering exists ordering produces optimal coloring orderings special classes graphs hard general commonly strategies vertex ordering involve placing higher degree vertices earlier lower degree vertices choosing vertices fewer colors preference vertices constrained variations greedy coloring choose colors online manner knowledge structure uncolored graph choose colors order reduce total number colors greedy coloring algorithms applied scheduling register allocation problems analysis combinatorial games proofs mathematical including brooks theorem relation coloring degree concepts graph theory derived greedy colorings include grundy number graph largest number colors greedy coloring colored graphs graphs greedy colorings number colors algorithm greedy coloring vertex ordering computed algorithm runs linear time algorithm processes vertices ordering assigning color processed colors represented numbers displaystyle dots vertex color smallest number neighbors smallest color array count number neighbors color alternatively represent set colors neighbors scan array python algorithm expressed first_available subroutine takes time proportional length argument list performs loops list list counts length time coloring algorithm dominated calls subroutine edge graph contributes calls endpoint edge vertex ordering sum lengths argument lists first_available total time algorithm proportional number edges graph alternative algorithm producing coloring choose sets vertices color color time method color class displaystyle chosen scanning vertices ordering scan encounters uncolored vertex displaystyle neighbor displaystyle adds displaystyle displaystyle displaystyle maximal independent set vertices assigned smaller colors algorithm repeatedly finds color classes vertices colored involves making multiple scans graph scan color class method outlined single scan choice ordering orderings vertices graph greedy coloring numbers colors ranging optimal number colors cases number colors proportional number vertices graph instance crown graph complete bipartite graph edges perfect matching removed bad case greedy coloring vertex ordering places vertices consecutively belong pairs removed matching greedy coloring colors color pairs vertices optimal number colors graph exist graphs high probability randomly chosen vertex ordering leads number colors larger minimum greedy coloring choose vertex ordering carefully good vertices graph ordered greedy algorithm produces optimal coloring optimal coloring order vertices colors greedy algorithm order coloring automatically optimal optimal graph coloring np complete subproblem problem solved including finding optimal ordering greedy coloring np hard interval graphs chordal graphs vertices ordered reverse perfect elimination ordering earlier neighbors vertex form clique property greedy coloring produce optimal coloring colors required cliques elimination ordering linear time exists perfect elimination ordering hereditarily optimal meaning optimal graph induced subgraphs perfectly orderable graphs include chordal graphs comparability graphs distance hereditary graphs defined graphs hereditarily optimal ordering recognizing perfectly orderable graphs np complete bad number colors produced greedy coloring worst ordering graph called grundy number finding good vertex ordering greedy coloring difficult finding bad vertex ordering np complete determine graph number exists ordering vertices greedy algorithm colors difficult worst ordering indifferent colored graphs graphs vertex colorings produce number colors number colors graphs equals chromatic number grundy number include cographs graphs induced subgraphs colored np complete determine graph colored random graphs drawn erdős rényi model constant probability including edge vertex ordering chosen independently graph edges leads coloring number colors close optimal high probability remains unknown polynomial time method finding colorings graphs degenerate optimal vertex orderings hard heuristics attempt reduce number colors guaranteeing optimal number colors commonly ordering greedy coloring choose vertex minimum degree order subgraph removed recursively place ordering largest number encountered algorithm degree removed vertex called degeneracy graph context greedy coloring ordering strategy called smallest ordering vertex ordering degeneracy computed linear time viewed improved version earlier vertex ordering method largest ordering sorts vertices descending order degrees degeneracy ordering greedy coloring colors colored vertex colored neighbors colors free greedy coloring degeneracy ordering optimal colorings classes graphs including trees pseudoforests crown graphs markossian gasparian reed define graph displaystyle β displaystyle beta perfect displaystyle induced subgraph displaystyle chromatic number equals degeneracy graphs greedy algorithm degeneracy ordering optimal β displaystyle beta perfect hole free graph cycles chromatic number degeneracy matching equality definition β displaystyle beta perfect graphs graph complement graph hole free β displaystyle beta perfect graphs perfect graphs β displaystyle beta perfect graphs chordal graphs hole free graphs generally degeneracy ordering produces approximation optimal coloring unit disk graphs produces approximation triangular prism smallest graph degeneracy orderings leads optimal coloring square antiprism smallest graph optimally colored degeneracy orderings adaptive brélaz proposes strategy called dsatur vertex ordering greedy coloring interleaves construction ordering coloring process version greedy coloring algorithm vertex color step chosen largest number distinct colors neighborhood case ties vertex maximal degree subgraph uncolored vertices chosen tied vertices keeping track sets neighboring colors cardinalities step implement method linear time method optimal colorings bipartite graphs cactus graphs wheel graphs graphs vertices displaystyle colorable graph lévêque maffray originally claimed method finds optimal colorings meyniel graphs counterexample claim alternative color selection schemes define variations greedy coloring algorithm vertices graph colored sequence color chosen vertex color include methods uncolored graph unknown algorithm algorithm freedom coloring choices basic greedy algorithm online alternative color selection strategies studied framework online algorithms online graph coloring problem vertices graph presented time arbitrary order coloring algorithm algorithm choose color vertex based colors adjacencies processed vertices context measures quality color selection strategy competitive ratio ratio number colors optimal number colors graph additional restrictions graph optimal competitive ratio sublinear interval graphs constant competitive ratio bipartite graphs sparse graphs logarithmic ratio achieved sparse graphs standard greedy coloring strategy choosing color achieves competitive ratio prove matching lower bound competitive ratio online coloring algorithm ordered parsimonious coloring graph vertex ordering defined coloring produced greedy algorithm colors vertices order introduces color previous colors adjacent vertex choose color choosing smallest existing color ordered chromatic number smallest number colors ordering ochromatic number largest ordered chromatic number vertex colorings graph definition ochromatic number equals grundy number applications fast cases colors greedy coloring applications good optimal graph coloring needed early applications greedy algorithm problems scheduling collection tasks assigned set time slots avoiding incompatible tasks assigned time slot compilers register allocation applying graph vertices represent values assigned registers edges represent conflicts values assigned register cases interference graphs chordal graphs allowing greedy coloring produce optimal register assignment combinatorial game theory impartial game explicit form directed acyclic graph vertices represent game positions edges represent valid moves position greedy coloring algorithm reverse topological ordering graph calculates nim position values determine optimal play single game disjunctive sum games graph maximum degree δ greedy coloring δ colors brooks theorem states exceptions cliques odd cycles δ colors needed proof brooks theorem involves finding vertex ordering vertices adjacent final vertex adjacent vertex neighbor ordering property greedy coloring algorithm δ colors