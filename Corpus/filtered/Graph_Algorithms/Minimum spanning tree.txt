minimum spanning tree minimum spanning tree mst minimum weight spanning tree subset edges connected edge weighted undirected graph connects vertices cycles minimum total edge weight spanning tree sum edge weights small generally edge weighted undirected graph connected minimum spanning forest union minimum spanning trees connected components cases minimum spanning trees telecommunications company lay cable neighborhood constrained bury cable paths roads graph points houses connected paths paths expensive longer require cable buried deeper paths represented edges larger weights currency acceptable unit edge weight requirement edge lengths obey normal rules geometry triangle inequality spanning tree graph subset paths cycles connects house spanning trees minimum spanning tree lowest total cost representing expensive path laying cable properties multiplicity vertices graph spanning tree  edges minimum spanning trees weight edge weights graph spanning tree graph minimum uniqueness edge distinct weight unique minimum spanning tree true realistic situations telecommunications company paths cost generalizes spanning forests proof assume contrary msts differ nodes edge belongs edges  weight choice unique edge weights distinct loss generality assume  mst  displaystyle cup cycle  tree cycles edge   chosen unique lowest weight edge belonging weight  greater weight    cycle replacing   yields spanning tree smaller weight contradicts assumption mst generally edge weights distinct multi set weights minimum spanning trees unique minimum spanning trees minimum cost subgraph weights positive minimum spanning tree fact minimum cost subgraph connecting vertices subgraphs cycles total weight cycle property cycle graph weight edge larger individual weights edges edge belong mst proof assume contrary belongs mst  deleting break  subtrees ends subtrees remainder reconnects subtrees edge ends subtrees reconnects subtrees tree  weight  weight weight cut property cut graph weight edge cut set strictly smaller weights edges cut set edge belongs msts graph proof assume mst adding produce cycle crosses cut crosses edge deleting spanning tree strictly smaller weight contradicts assumption mst argument edge minimum weight cut edge contained minimum spanning tree minimum cost edge minimum cost edge graph unique edge included mst proof included mst removing larger cost edges cycle formed adding mst yield spanning tree smaller weight contraction tree mst edges contract single vertex maintaining invariant mst contracted graph mst graph contraction algorithms algorithms number edges graph number vertices classic algorithms algorithm finding minimum spanning tree developed czech scientist otakar borůvka  borůvka algorithm purpose efficient electrical coverage moravia algorithm proceeds sequence stages stage called boruvka step identifies forest consisting minimum weight edge incident vertex graph forms graph  displaystyle g_  setminus input step displaystyle setminus denotes graph derived contracting edges cut property edges belong mst boruvka step takes linear time number vertices reduced half step boruvka algorithm takes log time algorithm prim algorithm invented vojtěch jarník  rediscovered prim  dijkstra  basically grows mst edge time initially arbitrary vertex step augmented weight edge cut property edges mst time log log depending data structures algorithm commonly kruskal algorithm takes log time fourth algorithm commonly reverse delete algorithm reverse kruskal algorithm runtime log log log  greedy algorithms polynomial time problem finding trees fp decision problems determining edge mst determining minimum total weight exceeds faster algorithms researchers computationally efficient algorithms comparison model allowed operations edge weights pairwise comparisons karger klein tarjan  linear time randomized algorithm based combination borůvka algorithm reverse delete algorithm fastest randomized comparison based algorithm complexity bernard chazelle based soft heap approximate priority queue running time α α classical functional inverse ackermann function function α grows extremely slowly practical purposes considered constant greater  chazelle algorithm takes close linear time linear time algorithms special cases dense graphs graph dense log log log deterministic algorithm fredman tarjan finds mst time algorithm executes number phases phase executes prim algorithm times limited number steps time phase number vertices phase displaystyle number vertices remaining phase  displaystyle  log displaystyle log phases needed linear time dense graphs algorithms work linear time dense graphs integer weights edge weights integers represented binary deterministic algorithms solve problem integer operations problem solved deterministically general graph linear time comparison based algorithm remains open question decision trees graph nodes edges fixed weights unknown construct binary decision tree calculating mst permutation weights internal node comparison edges weight edge larger weight edge children node correspond answers leaf list edges correspond mst runtime complexity largest number queries required mst depth graph called optimal smallest depth correct dts integer optimal decision trees graphs vertices brute force search search proceeds steps generating potential dts   displaystyle  choose  graphs vertices graph mst  comparisons prim algorithm depth optimal  displaystyle  number internal nodes optimal   displaystyle   internal node compares edges number edges  displaystyle  number comparisons  displaystyle  number potential dts       displaystyle       identifying correct dts check correct checked permutations edge weights number permutations  displaystyle  permutation solve mst problem graph existing algorithm compare result answer running time mst algorithm  displaystyle  total time required check permutations   displaystyle   total time required finding optimal graphs vertices        displaystyle  choose  cdot    cdot      displaystyle    optimal algorithm seth pettie vijaya ramachandran provably optimal deterministic comparison based minimum spanning tree algorithm simplified description algorithm log log log displaystyle log log log number vertices optimal decision trees vertices time decision trees partition graph components vertices component partition soft heap corrupts small number edges graph optimal decision trees mst uncorrupted subgraph component contract connected component spanned msts single vertex apply algorithm works dense graphs time contraction uncorrupted subgraph add corrupted edges forest form subgraph guaranteed minimum spanning tree smaller constant factor starting graph apply optimal algorithm recursively graph runtime steps algorithm step decision trees runtime step optimal algorithm optimal decision tree algorithm peculiar property provably optimal runtime complexity unknown parallel distributed algorithms considered parallel algorithms minimum spanning tree problem linear number processors solve problem log displaystyle log time bader cong  demonstrate algorithm compute msts  times faster  processors optimized sequential algorithm specialized algorithms designed computing minimum spanning trees graph large stored disk times external storage algorithms engineering external memory minimum spanning tree algorithm roman dementiev operate authors claims   times slower traditional memory algorithm rely efficient external storage sorting algorithms graph contraction techniques reducing graph size efficiently problem approached distributed manner node considered computer node connected links calculate distributed minimum spanning tree mst complete graphs alan frieze complete graph vertices edge weights independent identically distributed random variables distribution function displaystyle satisfying   displaystyle   approaches expected weight mst approaches ζ   displaystyle zeta   ζ displaystyle zeta riemann zeta function frieze steele proved convergence probability svante janson proved central limit theorem weight mst uniform random weights   displaystyle   exact expected size minimum spanning tree computed small complete graphs applications minimum spanning trees direct applications design networks including computer networks telecommunications networks transportation networks water supply networks electrical grids invented mentioned invoked subroutines algorithms problems including christofides algorithm approximating traveling salesman problem approximating multi terminal minimum cut problem equivalent single terminal case maximum flow problem approximating minimum cost weighted perfect matching practical applications based minimal spanning trees include taxonomy cluster analysis clustering points plane single linkage clustering method hierarchical clustering graph theoretic clustering clustering gene expression data constructing trees broadcasting computer networks image registration segmentation minimum spanning tree based segmentation curvilinear feature extraction computer vision handwriting recognition mathematical expressions circuit design implementing efficient multiple constant multiplications finite impulse response filters regionalisation socio geographic areas grouping areas homogeneous contiguous regions comparing ecotoxicology data topological observability power systems measuring homogeneity dimensional materials minimax process control minimum spanning trees financial markets correlation matrix created calculating coefficient correlation stocks matrix represented topologically complex network minimum spanning tree constructed visualize relationships problems problem finding steiner tree subset vertices minimum tree spans subset np complete problem minimum spanning tree mst tree spans subset vertices graph minimum weight set smallest spanning trees subset spanning trees spanning trees spanning tree subset smaller weight note problem unrelated minimum spanning tree euclidean minimum spanning tree spanning tree graph edge weights euclidean distance vertices points plane space rectilinear minimum spanning tree spanning tree graph edge weights rectilinear distance vertices points plane space distributed model node considered computer node connected links distributed minimum spanning tree mathematical definition problem approaches solution capacitated minimum spanning tree tree marked node origin root subtrees attached node nodes called tree capacity solving cmst optimally np hard good heuristics esau williams sharma produce solutions close optimal polynomial time degree constrained minimum spanning tree minimum spanning tree vertex connected vertices number case  special case traveling salesman problem degree constrained minimum spanning tree np hard general directed graphs minimum spanning tree problem called arborescence problem solved quadratic time chu liu edmonds algorithm maximum spanning tree spanning tree weight greater equal weight spanning tree tree algorithms prim kruskal multiplying edge weights  solving mst problem graph path maximum spanning tree widest path graph endpoints paths maximizes weight minimum weight edge maximum spanning trees applications parsing algorithms natural languages training algorithms conditional random fields dynamic mst problem concerns update computed mst edge weight change original graph insertion deletion vertex minimum labeling spanning tree problem spanning tree types labels edge graph label finite label set weight bottleneck edge highest weighted edge spanning tree spanning tree minimum bottleneck spanning tree mbst graph spanning tree smaller bottleneck edge weight mst mbst provable cut property mbst mst