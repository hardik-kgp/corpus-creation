prim algorithm computer science prim jarník algorithm greedy algorithm finds minimum spanning tree weighted undirected graph finds subset edges forms tree includes vertex total weight edges tree minimized algorithm operates building tree vertex time arbitrary starting vertex step adding cheapest connection tree vertex algorithm developed czech mathematician vojtěch jarník rediscovered republished computer scientists robert prim edsger dijkstra called jarník algorithm prim jarník algorithm prim dijkstra algorithm djp algorithm algorithms problem include kruskal algorithm borůvka algorithm algorithms minimum spanning forest disconnected graph contrast basic form prim algorithm finds minimum spanning trees connected graphs running prim algorithm separately connected component graph minimum spanning forest terms asymptotic time complexity algorithms equally fast sparse graphs slower sophisticated algorithms graphs dense prim algorithm linear time meeting improving time bounds algorithms description algorithm informally performing steps implemented pseudocode starting vertex algorithm chosen arbitrarily iteration main loop algorithm set vertices equal weights algorithm automatically start tree completes spanning tree connected component input graph algorithm modified start vertex setting number smaller values instance modified single spanning tree entire spanning forest matching closely informal description stopping encounters vertex flagged edge variations algorithm differ set implemented simple linked list array vertices complicated priority queue data structure choice leads differences time complexity algorithm general priority queue quicker finding vertex minimum cost entail expensive updates time complexity time complexity prim algorithm depends data structures graph ordering edges weight priority queue table typical choices simple implementation prim adjacency matrix adjacency list graph representation linearly searching array weights minimum weight edge add requires running time running time greatly improved heaps implement finding minimum weight edges algorithm loop improved version heap store edges input graph ordered weight leads log worst case running time storing vertices edges improve heap order vertices smallest edge weight connects vertex partially constructed minimum spanning tree mst infinity edge exists time vertex chosen mst decrease key operation performed vertices partial mst connected setting key minimum previous edge cost simple binary heap data structure prim algorithm time log number edges number vertices sophisticated fibonacci heap brought log asymptotically faster graph dense ω linear time log graphs greater density edges prim algorithm linear time simply ary heap place fibonacci heap proof correctness connected weighted graph iteration prim algorithm edge connects vertex subgraph vertex subgraph connected path vertex output prim algorithm tree edge vertex tree connected minimum spanning tree graph minimum spanning tree edge construction tree tree set vertices connected edges edge endpoint edge set tree spanning tree graph path tree joining endpoints travels path encounter edge joining vertex set set iteration edge tree edge edge weight edge conclude displaystyle geq tree graph removing edge adding edge tree easy tree connected number edges tree total weights edges larger tree minimum spanning tree graph edge edges construction set repeat steps eventually minimum spanning tree graph identical tree minimum spanning tree minimum spanning tree subset region expanded smaller subset assume minimum parallel algorithm main loop prim algorithm inherently sequential parallelizable loop determines edge minimum weight form cycle parallelized dividing vertices edges processors pseudocode demonstrates algorithm generally implemented distributed machines shared memory machines implemented graphical processing units gpus running time log displaystyle tfrac log assuming reduce broadcast operations performed log displaystyle log variant prim algorithm shared memory machines prim sequential algorithm parallel starting vertices explored sophisticated algorithms exist solve distributed minimum spanning tree problem efficient manner