topological sorting computer science topological sort topological ordering directed graph linear ordering vertices directed edge uv vertex vertex ordering instance vertices graph represent tasks performed edges represent constraints task performed application topological ordering valid sequence tasks topological ordering graph directed cycles directed acyclic graph dag dag topological ordering algorithms constructing topological ordering dag linear time examples canonical application topological sorting scheduling sequence jobs tasks based dependencies jobs represented vertices edge job completed job started washing clothes washing machine finish clothes dryer topological sort order perform jobs closely application topological sorting algorithms studied early s context pert technique scheduling project management jarnagin  application vertices graph represent milestones project edges represent tasks performed milestone topological sorting forms basis linear time algorithms finding critical path project sequence milestones tasks controls length project schedule computer science applications type instruction scheduling ordering formula cell evaluation recomputing formula values spreadsheets logic synthesis determining order compilation tasks perform makefiles data serialization resolving symbol dependencies linkers decide order load tables foreign keys databases algorithms usual algorithms topological sorting running time linear number nodes number edges asymptotically displaystyle left left kahn algorithm algorithms kahn  works choosing vertices order eventual topological sort list start nodes incoming edges insert set node exist acyclic graph list sorted elements set nodes incoming edge remove node add tail node edge remove edge graph incoming edges insert graph edges return error graph cycle return topologically sorted order graph dag solution contained list solution unique graph cycle topological sort impossible reflecting uniqueness sort structure simply set queue stack depending order nodes removed set solution created variation kahn algorithm breaks ties lexicographically forms key component coffman graham algorithm parallel scheduling layered graph drawing depth search alternative algorithm topological sorting based depth search algorithm loops node graph arbitrary order initiating depth search terminates hits node visited topological sort node outgoing edges leaf node list sorted nodes exists nodes permanent mark select unmarked node visit function visit node permanent mark return temporary mark dag mark temporary mark node edge visit remove temporary mark mark permanent mark add head node prepended output list nodes depend descendants graph algorithm adds node guaranteed nodes depend output list recursive visit ended visit visit started visit edge node visited algorithm runs linear time depth search based algorithm cormen  print tarjan  parallel algorithms parallel random access machine topological ordering constructed log  time polynomial number processors putting problem complexity class  cook  method repeatedly square adjacency matrix graph logarithmically times min matrix multiplication maximization place minimization matrix describes longest path distances graph sorting vertices lengths longest incoming paths produces topological ordering dekel nassimi sahni  application shortest path finding topological ordering compute shortest paths weighted directed acyclic graph list vertices graph topological order algorithm computes shortest path source vertex vertices graph vertices edges algorithm takes Î¸ linear time uniqueness topological sort property pairs consecutive vertices sorted order connected edges edges form directed hamiltonian path dag hamiltonian path exists topological sort order unique order respects edges path conversely topological sort form hamiltonian path dag valid topological orderings case form valid ordering swapping consecutive vertices connected edge test linear time unique ordering exists hamiltonian path exists np hardness hamiltonian path problem general directed graphs vernet markenzon  relation partial orders topological orderings closely concept linear extension partial order mathematics high level terms adjunction directed graphs partial orders partially ordered set set objects definition inequality relation satisfying axioms reflexivity antisymmetry transitivity total order partial order objects set total orders familiar computer science comparison operators needed perform comparison sorting algorithms finite sets total orders identified linear sequences objects relation true object precedes object order comparison sorting algorithm convert total order sequence linear extension partial order total order compatible sense partial order total order define partial ordering dag letting set objects vertices dag defining true vertices exists directed path reachable definitions topological ordering dag thing linear extension partial order conversely partial ordering finite set defined reachability relation dag define dag vertex object partially ordered set edge xy pair objects alternative transitive reduction partial ordering general produces dags fewer edges reachability relation dags partial order constructions topological ordering algorithms linear extensions partial orders