widest path problem graph algorithms widest path problem problem finding path designated vertices weighted graph maximizing weight minimum weight edge path widest path problem bottleneck shortest path problem maximum capacity path problem adapt shortest path algorithms compute widest paths modifying bottleneck distance path length cases faster algorithms instance graph represents connections routers internet weight edge represents bandwidth connection routers widest path problem problem finding path internet nodes maximum bandwidth smallest edge weight path capacity bandwidth path applications network routing widest path problem component schulze method deciding winner multiway election applied digital compositing metabolic pathway analysis computation maximum flows closely problem minimax path problem asks path minimizes maximum weight edges applications include transportation planning algorithm widest path problem transformed algorithm minimax path problem vice versa reversing sense weight comparisons performed algorithm equivalently replacing edge weight negation undirected graphs undirected graph widest path path vertices maximum spanning tree graph minimax path path vertices minimum spanning tree graph directed undirected straightforward algorithm finding widest path weight minimum weight edge simply delete smaller edges search path remaining edges breadth search depth search based test exists linear time algorithm finding widest path undirected graph maximum spanning tree main idea algorithm apply linear time path finding algorithm median edge weight graph delete smaller edges contract larger edges path exist recurse smaller graph fernandez garfinkel arbiol  undirected bottleneck shortest paths order form composite aerial photographs combine multiple images overlapping areas subproblem widest path problem applies images transformed common coordinate remaining task select seam curve passes region overlap divides images pixels seam copied images pixels seam copied image compositing methods average pixels images produces valid photographic image region photographed weight edges grid graph numeric estimate visually apparent seam edge bottleneck shortest path weights path seam conventional shortest path seam difficult discern points allowing trade greater visibility image lesser visibility solution minimax path problem opposite corners grid graph weak fréchet distance polygonal chains grid graph vertex represents pair segments chain weight edge represents fréchet distance needed pass pair segments edge weights undirected graph positive minimax distances pairs points maximum edge weights minimax paths form ultrametric conversely finite ultrametric space minimax distances data structure constructed minimum spanning tree minimax distance pair vertices queried constant time query lowest common ancestor queries cartesian tree root cartesian tree represents heaviest minimum spanning tree edge children root cartesian trees recursively constructed subtrees minimum spanning tree formed removing heaviest edge leaves cartesian tree represent vertices input graph minimax distance vertices equals weight cartesian tree node lowest common ancestor minimum spanning tree edges sorted cartesian tree constructed linear time directed graphs directed graphs maximum spanning tree solution algorithms choice algorithm depends start destination vertex path fixed paths start destination vertices simultaneously pairs pairs widest path problem applications schulze method choosing winner multiway elections voters rank candidates preference order schulze method constructs complete directed graph vertices represent candidates vertices connected edge edge directed winner loser pairwise contest candidates connects labeled margin victory contest method computes widest paths pairs vertices winner candidate vertex wider paths opponent vice versa election method consistent condorcet method candidate wins pairwise contests automatically wins election generally winner selected situations concorcet method fails schulze method organizations including wikimedia foundation compute widest path widths pairs nodes dense directed graph voting application asymptotically fastest approach takes time  ω  ω exponent fast matrix multiplication algorithms matrix multiplication time bound   reference implementation schulze method modified version simpler floyd warshall algorithm takes  time sparse graphs efficient repeatedly apply single source widest path algorithm single source edges sorted weights modified version dijkstra algorithm compute bottlenecks designated start vertex vertex graph linear time key idea speedup conventional version dijkstra algorithm sequence bottleneck distances vertex order vertices considered algorithm monotonic subsequence sorted sequence edge weights priority queue dijkstra algorithm implemented bucket queue array indexed numbers  number edges graph array cell vertices bottleneck distance weight edge position sorted order method widest path problem solved sorting instance edge weights represented integers time bounds integer sorting list integers apply problem single source single destination berman handler  service vehicles emergency vehicles minimax paths returning service base application time return response time service occurs vehicle process returning minimax path weight edge maximum travel time point edge farthest service plan route minimizes maximum delay receipt service arrival responding vehicle ullah lee hassoun  maximin paths model dominant reaction chains metabolic networks model weight edge free energy metabolic reaction represented edge application widest paths arises ford fulkerson algorithm maximum flow problem repeatedly augmenting flow maximum capacity path residual network flow leads small bound log number augmentations needed maximum flow edge capacities assumed integers analysis depend finding path exact maximum capacity path capacity constant factor maximum suffices combining approximation idea shortest path augmentation method edmonds karp algorithm leads maximum flow algorithm running time log maximum capacity paths minimax paths single source single destination efficiently models computation comparisons input graph edge weights arithmetic algorithm maintains set edges bottleneck edge optimal path initially set edges graph iteration algorithm splits ordered sequence subsets   equal size number subsets partition chosen split points subsets repeated median finding time algorithm reweights edge graph subset edge modified dijkstra algorithm reweighted graph based computation determine linear time subsets bottleneck edge weight replaces subset determined bottleneck weight starts iteration set number subsets split increases exponentially step number iterations proportional iterated logarithm function log total time log model computation edge weight machine integer repeated bisection algorithm replaced list splitting technique han thorup  allowing split smaller sets single step leading linear time bound euclidean point sets variant minimax path problem considered sets points euclidean plane undirected graph problem euclidean minimax path problem solved efficiently finding euclidean minimum spanning tree path tree minimax path problem complicated path desired minimizes hop length paths hop length minimizes minimizes total length path solution approximated geometric spanners number theory unsolved gaussian moat problem asks minimax paths gaussian prime numbers bounded unbounded minimax length exist constant pair points infinite euclidean point set defined gaussian primes minimax path gaussian primes minimax edge length