bucket sort bucket sort bin sort sorting algorithm works distributing elements array number buckets bucket sorted individually sorting algorithm recursively applying bucket sorting algorithm distribution sort generalization pigeonhole sort cousin radix sort digit flavor bucket sort implemented comparisons considered comparison sort algorithm computational complexity depends algorithm sort bucket number buckets input uniformly distributed bucket sort works set array initially buckets scatter original array putting object bucket sort bucket gather visit buckets order elements original array optimizations common optimization unsorted elements buckets original array insertion sort complete array insertion sort runtime based element final position number comparisons remains small memory hierarchy exploited storing list contiguously memory variants generic bucket sort common variant bucket sort operates list numeric inputs maximum divides range buckets size bucket sorted insertion sort sort expected linear time average inputs performance sort degrades clustering values occur close fall single bucket sorted slowly performance degradation avoided original bucket sort algorithm assuming input generated random process distributes elements uniformly interval   proxmapsort generic bucket sort proxmapsort works dividing array keys subarrays map key function preserves partial ordering keys key subarray insertion sort subarray sorted entire array sorted order proxmapsort completes proxmapsort differs bucket sorts map key place data belongs sorted order producing proxmap proximity mapping keys histogram sort variant bucket sort histogram sort counting sort adds initial pass counts number elements fall bucket count array array values arranged sequence buckets place sequence exchanges leaving space overhead bucket storage postman sort postman sort variant bucket sort takes advantage hierarchical structure elements typically set attributes algorithm letter sorting machines post offices mail sorted domestic international state province territory destination post office routes keys compared sorting time depends size key number buckets radix sort works digit shuffle sort shuffle sort variant bucket sort removing   items sorted sorts recursively puts array creates  buckets remaining   items distributed bucket sorted buckets concatenated sorted array comparison sorting algorithms bucket sort generalization counting sort fact bucket size  bucket sort degenerates counting sort variable bucket size bucket sort memory memory number distinct values exchange counting sort worst case behavior bucket sort buckets effectively version quicksort pivot selected middle range choice effective uniformly distributed inputs choosing pivot quicksort randomly selected pivots resistant clustering input distribution mergesort algorithm distributing list sublists sorting sublists created mergesort overlapping ranges recombined simple concatenation bucket sort interleaved merge algorithm expense counterbalanced simpler scatter phase ability ensure sublist size providing good worst case time bound radix sort special case bucket sort range values number buckets constrained power bucket size power procedure applied recursively approach accelerate scatter phase examine prefix bit representation element determine bucket