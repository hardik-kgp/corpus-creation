shell sort shellsort shell sort shell method place comparison sort generalization sorting exchange bubble sort sorting insertion insertion sort method starts sorting pairs elements progressively reducing gap elements compared starting elements place elements position faster simple nearest neighbor exchange donald shell published version sort  running time shellsort heavily dependent gap sequence practical variants determining time complexity remains open problem description shellsort generalization insertion sort exchange items idea arrange list elements starting element sorted list list sorted equivalently thought interleaved lists individually sorted large values rearrangement elements long distances original list reducing large amounts disorder leaving work smaller sort steps list sorted smaller integer list remains sorted idea decreasing sequence values  guaranteed leave sorted list shellsort gaps    pass  sorting performs insertion sort separate subarrays             instance subarray          pass  sorting performs insertion sort subarrays             pass  sorting ordinary insertion sort entire array   illustrates subarrays shellsort operates initially short longer ordered cases insertion sort works efficiently shellsort stable change relative order elements equal values adaptive sorting algorithm executes faster input partially sorted gap sequences question deciding gap sequence difficult gap sequence  yields correct sort final pass ordinary insertion sort properties versions shellsort gaps slows passes gaps produces overhead table compares proposed gap sequences published decreasing elements depend size sorted array increasing infinite sequences elements reverse order binary representation consecutive zeroes shellsort shell original gap sequence Î¸  comparisons worst case instance case occurs equal power elements greater smaller median occupy odd positions compared pass higher complexity log optimal comparison sorts pratt version lends sorting networks asymptotic gate complexity batcher bitonic sorter gonnet baeza yates observed shellsort fewest comparisons average ratios successive gaps roughly equal   sequence ratio   tokuda sequence ratio   prove efficient sedgewick recommends gaps low greatest common divisors pairwise coprime respect average number comparisons ciura sequence performance gaps  determined sequence extended recursive formula applications shellsort performs operations higher cache ratio quicksort implemented code stack implementations qsort function standard library targeted embedded systems quicksort shellsort uclibc library reasons shellsort linux kernel shellsort serve algorithm introspective sort sort short subarrays prevent slowdown recursion depth exceeds limit principle employed instance bzip2 compressor