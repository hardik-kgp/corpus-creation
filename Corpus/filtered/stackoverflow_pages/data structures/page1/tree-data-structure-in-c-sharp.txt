tree data structure sharp tree data structure sharp tree graph data structure guess provided extensive examination data structures explains bit convenient library commonly provide functionality strategy pattern solve issues presented article feel bit silly implementing tree implementing arraylist generic tree unbalanced directory tree c5 nifty tree structures implemented balanced red black trees suited search representing hierarchy nodes advice standard tree data structure ways implement impossible cover bases solution specific solution applicable problem annoyed linkedlist circular linked list basic structure implement collection nodes options started assume class node base class entire solution navigate tree node class list children navigate tree node class link parent node build addchild method takes care minutia points business logic implemented child limits sorting children simple recursive implementation lines code reference root tree class wrap class rename treenode aaron gage conventional opinion purposes performance issues easy switch linkedlist needed tree structure sample usage bonus fully fledged tree iterator searching github gt4dev tree structure generally excellent c5 generic collection library tree based data structures including sets bags dictionaries source code study implementation details c5 collections production code good tree structures quickgraph codeplex quickgraph generic directed undirected graph datastructures algorithms net quickgraph algorithms depth seach breath search search shortest path shortest path maximum flow minimum spanning tree common ancestors quickgraph supports glee graphviz render graphs serialization graphml write start document detailing effective usage data structures analyzing implementation data structures article examples installer samples follow extensive examination data structures scott mitchell extension solutions recursive generic declaration deriving subclass concentrate actual target notice generic implementation cast node nodeworker simple sample create node class helpfull people class properties children ancestors descendants siblings level node parent root possibility convert flat list items parentid tree nodes holds reference children parent iterating nodes fast mentioned draw attention released net code base code implements red black tree github microsoft referencesource blob master compmod collections generic sortedset balanced tree structure answer reference native tree structure net core library completed code berezh shared tree initializers output trees formed data processing class includes details tree structure domain class separate tree class contained links person objects simple operation code class user class separate tree class parse tree compiler examples concept tree domain data separate general purpose tree doubles number objects created making api harder program reuse standard tree operations implement trees time standard tree class boost solve type problem net adapted complete solution ntree class addchild method display tree gui treeview treenode suppose technically create treenode putting gui overhead simple homegrown treenode implementation implementation bst case rooted tree data structure implementation memory write node class implementation