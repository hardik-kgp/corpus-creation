differences arraylist vector differences data structures arraylist vector differences vectors synchronized arraylists data growth methods arraylists specific requirement vectors synchronization multiple threads access arraylist concurrently externally synchronize block code modifies list structurally simply modifies element structural modification addition deletion element list setting existing element structural modification time creation list avoid accidental unsynchronized access list reference data growth internally arraylist vector hold contents array element inserted arraylist vector object expand internal array runs room vector defaults doubling size array arraylist increases array size  percent reference documentation equivalent difference access synchronized access thread methods time slight overhead acquiring lock case generally single threaded case choice multi threaded case control locking concurrent reads fine perform synchronization batch writes fine require care note arraylist function create synchronized list equivalent broken class threadsafe synchronized students inexperienced programmers list implementation professionals experienced programmers professionals wanting threadsafe list implementation newer   faster explitly apparent  major differentiation vector arraylist vector synchronized default arraylist note arraylist synchronized passing arraylist object collections synchronizedlist method synchronized multiple threads arraylists grow  previous size space sufficient element vector grow  previous size space incoming element practical differences terms programming effort element location vector elementat int function function lengthy place arraylist int easy remember replace existing element element vector setelementat method lengthy irritate programmer repeatedly place arraylist add int object method easy remember programmer friendly easy function names arraylist avoid vectors completely arraylists vector arraylists default synchronized synchronize collections util class arraylist easy remember function names note arraylist grows  avoid ensurecapacity method allocating sufficient memory initial stages hope helps implements list interface maintains insertion order differences classes arraylist synchronized increments  current array size number element exceeds capacity legacy class introduced jdk   fast synchronized iterator interface traverse elements vector synchronized increments  doubles array size total number element exceeds capacity legacy class slow synchronized multithreading environment hold threads runnable runnable state current thread releases lock object enumeration interface traverse elements iterator https javatpoint difference arraylist vector basically arraylist vector internal object array arraylist arraylist class extends abstractlist implements list interface randomaccess marker interface arraylist supports dynamic arrays grow needed iteration elements arraylist internal object array created default initial size  size exceeded collection automatically increases half default size  vector vector arraylist differences synchronized default initial size  size exceeds size increases double original size size  vector class arraylist implement randomaccess vector constructors takes parameters vector int initialcapacity int capacityincrement capacityincrement capacity increased vector overflows control load factor differences version development kit jdk introduced version   collections framework data structure internally classes insertion order duplicate null values differences store process data synchronization synchronized multiple threads work time synchronized thread time access code performance performance synchronized operations poor performance thread safe traversal arraylist iterator interface traverse elements vector iterator interface enumeration interface traverse elements data growth grow shrink dynamically maintain optimal storage resize increments  current array size number elements exceeds capacity increments  essentially doubling current array size legacy earlier versions include collections framework original classes engineered support collection interface classes legacy classes legacy class introduced jdk   legacy class set increment size define increment size defines increment size perform thread safe operation bet ensures thread access collection time thread safe operation choice performance improved concurrent processes